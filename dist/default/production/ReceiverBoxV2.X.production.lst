

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Dec 16 15:41:38 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F688 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   100                           PORTC equ 07h ;# 
   101  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   116                           BAUDCTL equ 011h ;# 
   117  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   118                           SPBRGH equ 012h ;# 
   119  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   120                           SPBRG equ 013h ;# 
   121  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   122                           RCREG equ 014h ;# 
   123  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   124                           TXREG equ 015h ;# 
   125  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   126                           TXSTA equ 016h ;# 
   127  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   128                           RCSTA equ 017h ;# 
   129  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   130                           WDTCON equ 018h ;# 
   131  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   132                           CMCON0 equ 019h ;# 
   133  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   134                           CMCON1 equ 01Ah ;# 
   135  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   136                           ADRESH equ 01Eh ;# 
   137  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   138                           ADCON0 equ 01Fh ;# 
   139  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   140                           OPTION_REG equ 081h ;# 
   141  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   142                           TRISA equ 085h ;# 
   143  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   144                           TRISC equ 087h ;# 
   145  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   146                           PIE1 equ 08Ch ;# 
   147  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   148                           PCON equ 08Eh ;# 
   149  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   150                           OSCCON equ 08Fh ;# 
   151  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   152                           OSCTUNE equ 090h ;# 
   153  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   154                           ANSEL equ 091h ;# 
   155  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   156                           WPUA equ 095h ;# 
   157  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   158                           WPU equ 095h ;# 
   159  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   160                           IOCA equ 096h ;# 
   161  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   162                           IOC equ 096h ;# 
   163  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   164                           EEDATH equ 097h ;# 
   165  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   166                           EEADRH equ 098h ;# 
   167  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   168                           VRCON equ 099h ;# 
   169  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   170                           EEDAT equ 09Ah ;# 
   171  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   172                           EEDATA equ 09Ah ;# 
   173  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   174                           EEADR equ 09Bh ;# 
   175  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   176                           EECON1 equ 09Ch ;# 
   177  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   178                           EECON2 equ 09Dh ;# 
   179  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   180                           ADRESL equ 09Eh ;# 
   181  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   182                           ADCON1 equ 09Fh ;# 
   183  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   184                           INDF equ 00h ;# 
   185  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   186                           TMR0 equ 01h ;# 
   187  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   188                           PCL equ 02h ;# 
   189  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   190                           STATUS equ 03h ;# 
   191  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   192                           FSR equ 04h ;# 
   193  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   194                           PORTA equ 05h ;# 
   195  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   196                           PORTC equ 07h ;# 
   197  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   198                           PCLATH equ 0Ah ;# 
   199  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   200                           INTCON equ 0Bh ;# 
   201  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   202                           PIR1 equ 0Ch ;# 
   203  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   204                           TMR1 equ 0Eh ;# 
   205  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   206                           TMR1L equ 0Eh ;# 
   207  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   208                           TMR1H equ 0Fh ;# 
   209  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   210                           T1CON equ 010h ;# 
   211  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   212                           BAUDCTL equ 011h ;# 
   213  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   214                           SPBRGH equ 012h ;# 
   215  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   216                           SPBRG equ 013h ;# 
   217  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   218                           RCREG equ 014h ;# 
   219  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   220                           TXREG equ 015h ;# 
   221  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   222                           TXSTA equ 016h ;# 
   223  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   224                           RCSTA equ 017h ;# 
   225  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   226                           WDTCON equ 018h ;# 
   227  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   228                           CMCON0 equ 019h ;# 
   229  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   230                           CMCON1 equ 01Ah ;# 
   231  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   232                           ADRESH equ 01Eh ;# 
   233  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   234                           ADCON0 equ 01Fh ;# 
   235  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   236                           OPTION_REG equ 081h ;# 
   237  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   238                           TRISA equ 085h ;# 
   239  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   240                           TRISC equ 087h ;# 
   241  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   242                           PIE1 equ 08Ch ;# 
   243  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   244                           PCON equ 08Eh ;# 
   245  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   246                           OSCCON equ 08Fh ;# 
   247  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   248                           OSCTUNE equ 090h ;# 
   249  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   250                           ANSEL equ 091h ;# 
   251  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   252                           WPUA equ 095h ;# 
   253  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   254                           WPU equ 095h ;# 
   255  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   256                           IOCA equ 096h ;# 
   257  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   258                           IOC equ 096h ;# 
   259  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   260                           EEDATH equ 097h ;# 
   261  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   262                           EEADRH equ 098h ;# 
   263  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   264                           VRCON equ 099h ;# 
   265  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   266                           EEDAT equ 09Ah ;# 
   267  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   268                           EEDATA equ 09Ah ;# 
   269  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   270                           EEADR equ 09Bh ;# 
   271  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   272                           EECON1 equ 09Ch ;# 
   273  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   274                           EECON2 equ 09Dh ;# 
   275  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   276                           ADRESL equ 09Eh ;# 
   277  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   278                           ADCON1 equ 09Fh ;# 
   279  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   280                           INDF equ 00h ;# 
   281  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   282                           TMR0 equ 01h ;# 
   283  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   284                           PCL equ 02h ;# 
   285  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   286                           STATUS equ 03h ;# 
   287  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   288                           FSR equ 04h ;# 
   289  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   290                           PORTA equ 05h ;# 
   291  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   292                           PORTC equ 07h ;# 
   293  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   294                           PCLATH equ 0Ah ;# 
   295  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   296                           INTCON equ 0Bh ;# 
   297  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   298                           PIR1 equ 0Ch ;# 
   299  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   300                           TMR1 equ 0Eh ;# 
   301  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   302                           TMR1L equ 0Eh ;# 
   303  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   304                           TMR1H equ 0Fh ;# 
   305  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   306                           T1CON equ 010h ;# 
   307  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   308                           BAUDCTL equ 011h ;# 
   309  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   310                           SPBRGH equ 012h ;# 
   311  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   312                           SPBRG equ 013h ;# 
   313  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   314                           RCREG equ 014h ;# 
   315  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   316                           TXREG equ 015h ;# 
   317  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   318                           TXSTA equ 016h ;# 
   319  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   320                           RCSTA equ 017h ;# 
   321  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   322                           WDTCON equ 018h ;# 
   323  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   324                           CMCON0 equ 019h ;# 
   325  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   326                           CMCON1 equ 01Ah ;# 
   327  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   328                           ADRESH equ 01Eh ;# 
   329  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   330                           ADCON0 equ 01Fh ;# 
   331  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   332                           OPTION_REG equ 081h ;# 
   333  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   334                           TRISA equ 085h ;# 
   335  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   336                           TRISC equ 087h ;# 
   337  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   338                           PIE1 equ 08Ch ;# 
   339  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   340                           PCON equ 08Eh ;# 
   341  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   342                           OSCCON equ 08Fh ;# 
   343  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   344                           OSCTUNE equ 090h ;# 
   345  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   346                           ANSEL equ 091h ;# 
   347  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   348                           WPUA equ 095h ;# 
   349  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   350                           WPU equ 095h ;# 
   351  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   352                           IOCA equ 096h ;# 
   353  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   354                           IOC equ 096h ;# 
   355  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   356                           EEDATH equ 097h ;# 
   357  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   358                           EEADRH equ 098h ;# 
   359  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   360                           VRCON equ 099h ;# 
   361  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   362                           EEDAT equ 09Ah ;# 
   363  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   364                           EEDATA equ 09Ah ;# 
   365  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   366                           EEADR equ 09Bh ;# 
   367  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   368                           EECON1 equ 09Ch ;# 
   369  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   370                           EECON2 equ 09Dh ;# 
   371  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   372                           ADRESL equ 09Eh ;# 
   373  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   374                           ADCON1 equ 09Fh ;# 
   375  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   376                           INDF equ 00h ;# 
   377  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   378                           TMR0 equ 01h ;# 
   379  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   380                           PCL equ 02h ;# 
   381  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   382                           STATUS equ 03h ;# 
   383  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   384                           FSR equ 04h ;# 
   385  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   386                           PORTA equ 05h ;# 
   387  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   388                           PORTC equ 07h ;# 
   389  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   390                           PCLATH equ 0Ah ;# 
   391  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   392                           INTCON equ 0Bh ;# 
   393  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   394                           PIR1 equ 0Ch ;# 
   395  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   396                           TMR1 equ 0Eh ;# 
   397  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   398                           TMR1L equ 0Eh ;# 
   399  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   400                           TMR1H equ 0Fh ;# 
   401  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   402                           T1CON equ 010h ;# 
   403  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   404                           BAUDCTL equ 011h ;# 
   405  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   406                           SPBRGH equ 012h ;# 
   407  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   408                           SPBRG equ 013h ;# 
   409  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   410                           RCREG equ 014h ;# 
   411  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   412                           TXREG equ 015h ;# 
   413  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   414                           TXSTA equ 016h ;# 
   415  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   416                           RCSTA equ 017h ;# 
   417  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   418                           WDTCON equ 018h ;# 
   419  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   420                           CMCON0 equ 019h ;# 
   421  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   422                           CMCON1 equ 01Ah ;# 
   423  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   424                           ADRESH equ 01Eh ;# 
   425  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   426                           ADCON0 equ 01Fh ;# 
   427  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   428                           OPTION_REG equ 081h ;# 
   429  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   430                           TRISA equ 085h ;# 
   431  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   432                           TRISC equ 087h ;# 
   433  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   434                           PIE1 equ 08Ch ;# 
   435  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   436                           PCON equ 08Eh ;# 
   437  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   438                           OSCCON equ 08Fh ;# 
   439  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   440                           OSCTUNE equ 090h ;# 
   441  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   442                           ANSEL equ 091h ;# 
   443  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   444                           WPUA equ 095h ;# 
   445  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   446                           WPU equ 095h ;# 
   447  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   448                           IOCA equ 096h ;# 
   449  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   450                           IOC equ 096h ;# 
   451  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   452                           EEDATH equ 097h ;# 
   453  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   454                           EEADRH equ 098h ;# 
   455  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   456                           VRCON equ 099h ;# 
   457  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   458                           EEDAT equ 09Ah ;# 
   459  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   460                           EEDATA equ 09Ah ;# 
   461  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   462                           EEADR equ 09Bh ;# 
   463  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   464                           EECON1 equ 09Ch ;# 
   465  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   466                           EECON2 equ 09Dh ;# 
   467  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   468                           ADRESL equ 09Eh ;# 
   469  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   470                           ADCON1 equ 09Fh ;# 
   471  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   472                           INDF equ 00h ;# 
   473  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   474                           TMR0 equ 01h ;# 
   475  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   476                           PCL equ 02h ;# 
   477  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   478                           STATUS equ 03h ;# 
   479  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   480                           FSR equ 04h ;# 
   481  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   482                           PORTA equ 05h ;# 
   483  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   484                           PORTC equ 07h ;# 
   485  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   486                           PCLATH equ 0Ah ;# 
   487  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   488                           INTCON equ 0Bh ;# 
   489  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   490                           PIR1 equ 0Ch ;# 
   491  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   492                           TMR1 equ 0Eh ;# 
   493  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   494                           TMR1L equ 0Eh ;# 
   495  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   496                           TMR1H equ 0Fh ;# 
   497  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   498                           T1CON equ 010h ;# 
   499  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   500                           BAUDCTL equ 011h ;# 
   501  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   502                           SPBRGH equ 012h ;# 
   503  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   504                           SPBRG equ 013h ;# 
   505  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   506                           RCREG equ 014h ;# 
   507  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   508                           TXREG equ 015h ;# 
   509  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   510                           TXSTA equ 016h ;# 
   511  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   512                           RCSTA equ 017h ;# 
   513  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   514                           WDTCON equ 018h ;# 
   515  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   516                           CMCON0 equ 019h ;# 
   517  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   518                           CMCON1 equ 01Ah ;# 
   519  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   520                           ADRESH equ 01Eh ;# 
   521  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   522                           ADCON0 equ 01Fh ;# 
   523  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   524                           OPTION_REG equ 081h ;# 
   525  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   526                           TRISA equ 085h ;# 
   527  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   528                           TRISC equ 087h ;# 
   529  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   530                           PIE1 equ 08Ch ;# 
   531  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   532                           PCON equ 08Eh ;# 
   533  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   534                           OSCCON equ 08Fh ;# 
   535  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   536                           OSCTUNE equ 090h ;# 
   537  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   538                           ANSEL equ 091h ;# 
   539  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   540                           WPUA equ 095h ;# 
   541  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   542                           WPU equ 095h ;# 
   543  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   544                           IOCA equ 096h ;# 
   545  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   546                           IOC equ 096h ;# 
   547  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   548                           EEDATH equ 097h ;# 
   549  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   550                           EEADRH equ 098h ;# 
   551  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   552                           VRCON equ 099h ;# 
   553  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   554                           EEDAT equ 09Ah ;# 
   555  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   556                           EEDATA equ 09Ah ;# 
   557  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   558                           EEADR equ 09Bh ;# 
   559  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   560                           EECON1 equ 09Ch ;# 
   561  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   562                           EECON2 equ 09Dh ;# 
   563  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   564                           ADRESL equ 09Eh ;# 
   565  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   566                           ADCON1 equ 09Fh ;# 
   567  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   568                           INDF equ 00h ;# 
   569  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   570                           TMR0 equ 01h ;# 
   571  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   572                           PCL equ 02h ;# 
   573  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   574                           STATUS equ 03h ;# 
   575  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   576                           FSR equ 04h ;# 
   577  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   578                           PORTA equ 05h ;# 
   579  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   580                           PORTC equ 07h ;# 
   581  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   582                           PCLATH equ 0Ah ;# 
   583  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   584                           INTCON equ 0Bh ;# 
   585  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   586                           PIR1 equ 0Ch ;# 
   587  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   588                           TMR1 equ 0Eh ;# 
   589  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   590                           TMR1L equ 0Eh ;# 
   591  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   592                           TMR1H equ 0Fh ;# 
   593  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   594                           T1CON equ 010h ;# 
   595  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   596                           BAUDCTL equ 011h ;# 
   597  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   598                           SPBRGH equ 012h ;# 
   599  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   600                           SPBRG equ 013h ;# 
   601  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   602                           RCREG equ 014h ;# 
   603  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   604                           TXREG equ 015h ;# 
   605  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   606                           TXSTA equ 016h ;# 
   607  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   608                           RCSTA equ 017h ;# 
   609  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   610                           WDTCON equ 018h ;# 
   611  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   612                           CMCON0 equ 019h ;# 
   613  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   614                           CMCON1 equ 01Ah ;# 
   615  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   616                           ADRESH equ 01Eh ;# 
   617  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   618                           ADCON0 equ 01Fh ;# 
   619  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   620                           OPTION_REG equ 081h ;# 
   621  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   622                           TRISA equ 085h ;# 
   623  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   624                           TRISC equ 087h ;# 
   625  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   626                           PIE1 equ 08Ch ;# 
   627  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   628                           PCON equ 08Eh ;# 
   629  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   630                           OSCCON equ 08Fh ;# 
   631  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   632                           OSCTUNE equ 090h ;# 
   633  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   634                           ANSEL equ 091h ;# 
   635  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   636                           WPUA equ 095h ;# 
   637  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   638                           WPU equ 095h ;# 
   639  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   640                           IOCA equ 096h ;# 
   641  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   642                           IOC equ 096h ;# 
   643  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   644                           EEDATH equ 097h ;# 
   645  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   646                           EEADRH equ 098h ;# 
   647  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   648                           VRCON equ 099h ;# 
   649  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   650                           EEDAT equ 09Ah ;# 
   651  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   652                           EEDATA equ 09Ah ;# 
   653  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   654                           EEADR equ 09Bh ;# 
   655  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   656                           EECON1 equ 09Ch ;# 
   657  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   658                           EECON2 equ 09Dh ;# 
   659  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   660                           ADRESL equ 09Eh ;# 
   661  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   662                           ADCON1 equ 09Fh ;# 
   663  009F                     	FNCALL	_main,_AddByteToBuffer
   664                           	FNCALL	_main,_CheckStopTime
   665                           	FNCALL	_main,_Handle_Telegram
   666                           	FNCALL	_main,_Init_Ports
   667                           	FNCALL	_main,_Init_Receiver
   668                           	FNCALL	_main,_Init_Relays
   669                           	FNCALL	_main,_Init_Timer
   670                           	FNCALL	_main,_Init_Transmitter
   671                           	FNCALL	_main,_Start_Timer
   672                           	FNCALL	_Handle_Telegram,_Read_Relay
   673                           	FNCALL	_Handle_Telegram,_SendTelegram
   674                           	FNCALL	_Handle_Telegram,_SetStopTime
   675                           	FNCALL	_Handle_Telegram,_Set_Relay
   676                           	FNCALL	_SendTelegram,_AddByteToBuffer
   677                           	FNCALL	_CheckStopTime,_Set_Relay
   678                           	FNROOT	_main
   679                           	FNCALL	_Handle_Interrupts,_HandleConfigByte
   680                           	FNCALL	_Handle_Interrupts,_HandleTelegramByte
   681                           	FNCALL	_Handle_Interrupts,_Timer_Interrupt
   682                           	FNCALL	_Handle_Interrupts,_WriteByteFromBuffer
   683                           	FNCALL	_WriteByteFromBuffer,_Write_Byte
   684                           	FNCALL	_HandleTelegramByte,_Read_Byte
   685                           	FNCALL	_HandleConfigByte,_Read_Byte
   686                           	FNCALL	_HandleConfigByte,i1_AddByteToBuffer
   687                           	FNCALL	_HandleConfigByte,i1_Set_Relay
   688                           	FNCALL	intlevel1,_Handle_Interrupts
   689                           	global	intlevel1
   690                           	FNROOT	intlevel1
   691                           	global	_BufferHead
   692                           	global	_Counter_10sec
   693                           	global	_Counter_1sec
   694                           	global	_Counter_100ms
   695                           	global	_TelegramReadyFlag
   696                           	global	HandleTelegramByte@CommandCounter
   697                           	global	HandleTelegramByte@ByteCounter
   698                           	global	_BufferTail
   699                           	global	HandleConfigByte@ByteCounter
   700                           	global	_CurrentMode
   701                           	global	_StopRelay6OnTime
   702                           	global	_StopRelay5OnTime
   703                           	global	_StopRelay4OnTime
   704                           	global	_StopRelay3OnTime
   705                           	global	_StopRelay2OnTime
   706                           	global	_StopRelay1OnTime
   707                           	global	_Relay1StopTime
   708                           	global	_SendBuffer
   709                           	global	_Telegram
   710                           	global	_Relay6StopTime
   711                           	global	_Relay5StopTime
   712                           	global	_Relay4StopTime
   713                           	global	_Relay3StopTime
   714                           	global	_Relay2StopTime
   715                           	global	_PORTCbits
   716                           _PORTCbits	set	0x7
   717  0007                     	global	_RCREG
   718                           _RCREG	set	0x14
   719  0014                     	global	_TXREG
   720                           _TXREG	set	0x15
   721  0015                     	global	_SPBRG
   722                           _SPBRG	set	0x13
   723  0013                     	global	_BAUDCTLbits
   724                           _BAUDCTLbits	set	0x11
   725  0011                     	global	_RCSTAbits
   726                           _RCSTAbits	set	0x17
   727  0017                     	global	_TXSTAbits
   728                           _TXSTAbits	set	0x16
   729  0016                     	global	_PORTA
   730                           _PORTA	set	0x5
   731  0005                     	global	_PORTAbits
   732                           _PORTAbits	set	0x5
   733  0005                     	global	_CMCON0bits
   734                           _CMCON0bits	set	0x19
   735  0019                     	global	_TMR1L
   736                           _TMR1L	set	0xE
   737  000E                     	global	_TMR1H
   738                           _TMR1H	set	0xF
   739  000F                     	global	_PIR1bits
   740                           _PIR1bits	set	0xC
   741  000C                     	global	_INTCONbits
   742                           _INTCONbits	set	0xB
   743  000B                     	global	_T1CONbits
   744                           _T1CONbits	set	0x10
   745  0010                     	global	_OSCCONbits
   746                           _OSCCONbits	set	0x8F
   747  008F                     	global	_IOCAbits
   748                           _IOCAbits	set	0x96
   749  0096                     	global	_ANSEL
   750                           _ANSEL	set	0x91
   751  0091                     	global	_TRISCbits
   752                           _TRISCbits	set	0x87
   753  0087                     	global	_TRISAbits
   754                           _TRISAbits	set	0x85
   755  0085                     	global	_PIE1bits
   756                           _PIE1bits	set	0x8C
   757  008C                     ; #config settings
   758                           global __CFG_FOSC$INTOSCIO
   759                           __CFG_FOSC$INTOSCIO equ 0x0
   760  0000                     global __CFG_WDTE$OFF
   761                           __CFG_WDTE$OFF equ 0x0
   762  0000                     global __CFG_MCLRE$OFF
   763                           __CFG_MCLRE$OFF equ 0x0
   764  0000                     	file	"C:\Users\Bendixen\AppData\Local\Temp\s2sc."
   765                           	line	#
   766                           psect cinit,class=CODE,delta=2
   767                           global start_initialization
   768                           start_initialization:
   769  000F                     
   770                           global __initialization
   771                           __initialization:
   772  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   773                           global __pbssCOMMON
   774                           __pbssCOMMON:
   775  007D                     _BufferHead:
   776  007D                            ds      1
   777  007D                     
   778                           psect	bssBANK0,class=BANK0,space=1,noexec
   779                           global __pbssBANK0
   780                           __pbssBANK0:
   781  0058                     _Counter_10sec:
   782  0058                            ds      2
   783  0058                     
   784                           _Counter_1sec:
   785  005A                            ds      2
   786  005A                     
   787                           _Counter_100ms:
   788  005C                            ds      2
   789  005C                     
   790                           _TelegramReadyFlag:
   791  005E                            ds      2
   792  005E                     
   793                           HandleTelegramByte@Lenght:
   794  0060                            ds      1
   795  0060                     
   796                           HandleTelegramByte@CommandCounter:
   797  0061                            ds      1
   798  0061                     
   799                           HandleTelegramByte@ByteCounter:
   800  0062                            ds      1
   801  0062                     
   802                           _BufferTail:
   803  0063                            ds      1
   804  0063                     
   805                           HandleConfigByte@ByteCounter:
   806  0064                            ds      1
   807  0064                     
   808                           _CurrentMode:
   809  0065                            ds      1
   810  0065                     
   811                           _StopRelay6OnTime:
   812  0066                            ds      1
   813  0066                     
   814                           _StopRelay5OnTime:
   815  0067                            ds      1
   816  0067                     
   817                           _StopRelay4OnTime:
   818  0068                            ds      1
   819  0068                     
   820                           _StopRelay3OnTime:
   821  0069                            ds      1
   822  0069                     
   823                           _StopRelay2OnTime:
   824  006A                            ds      1
   825  006A                     
   826                           _StopRelay1OnTime:
   827  006B                            ds      1
   828  006B                     
   829                           _Relay1StopTime:
   830  006C                            ds      3
   831  006C                     
   832                           psect	bssBANK1,class=BANK1,space=1,noexec
   833                           global __pbssBANK1
   834                           __pbssBANK1:
   835  00A0                     _SendBuffer:
   836  00A0                            ds      40
   837  00A0                     
   838                           _Telegram:
   839  00C8                            ds      21
   840  00C8                     
   841                           _Stop_Ignition_Flag:
   842  00DD                            ds      2
   843  00DD                     
   844                           _Relay6StopTime:
   845  00DF                            ds      3
   846  00DF                     
   847                           _Relay5StopTime:
   848  00E2                            ds      3
   849  00E2                     
   850                           _Relay4StopTime:
   851  00E5                            ds      3
   852  00E5                     
   853                           _Relay3StopTime:
   854  00E8                            ds      3
   855  00E8                     
   856                           _Relay2StopTime:
   857  00EB                            ds      3
   858  00EB                     
   859                           	file	"C:\Users\Bendixen\AppData\Local\Temp\s2sc."
   860                           	line	#
   861                           psect clrtext,class=CODE,delta=2
   862                           global clear_ram0
   863                           ;	Called with FSR containing the base address, and
   864                           ;	W with the last address+1
   865                           clear_ram0:
   866  0F82                     	clrwdt			;clear the watchdog before getting into this loop
   867  0F82  0064               clrloop0:
   868  0F83                     	clrf	indf		;clear RAM location pointed to by FSR
   869  0F83  0180               	incf	fsr,f		;increment pointer
   870  0F84  0A84               	xorwf	fsr,w		;XOR with final address
   871  0F85  0604               	btfsc	status,2	;have we reached the end yet?
   872  0F86  1903               	retlw	0		;all done for this memory range, return
   873  0F87  3400               	xorwf	fsr,w		;XOR again to restore value
   874  0F88  0604               	goto	clrloop0		;do the next byte
   875  0F89  2F83               
   876                           ; Clear objects allocated to COMMON
   877                           psect cinit,class=CODE,delta=2,merge=1
   878                           	clrf	((__pbssCOMMON)+0)&07Fh
   879  000F  01FD               ; Clear objects allocated to BANK0
   880                           psect cinit,class=CODE,delta=2,merge=1
   881                           	bcf	status, 7	;select IRP bank0
   882  0010  1383               	movlw	low(__pbssBANK0)
   883  0011  3058               	movwf	fsr
   884  0012  0084               	movlw	low((__pbssBANK0)+017h)
   885  0013  306F               	fcall	clear_ram0
   886  0014  158A  2782  118A   ; Clear objects allocated to BANK1
   887                           psect cinit,class=CODE,delta=2,merge=1
   888                           	movlw	low(__pbssBANK1)
   889  0017  30A0               	movwf	fsr
   890  0018  0084               	movlw	low((__pbssBANK1)+04Eh)
   891  0019  30EE               	fcall	clear_ram0
   892  001A  158A  2782  118A   psect cinit,class=CODE,delta=2,merge=1
   893                           global end_of_initialization,__end_of__initialization
   894                           
   895                           ;End of C runtime variable initialization code
   896                           
   897                           end_of_initialization:
   898  001D                     __end_of__initialization:
   899  001D                     clrf status
   900  001D  0183               ljmp _main	;jump to C main() function
   901  001E  118A  2E3C         psect	cstackCOMMON,class=COMMON,space=1,noexec
   902                           global __pcstackCOMMON
   903                           __pcstackCOMMON:
   904  0070                     ?_Init_Ports:	; 1 bytes @ 0x0
   905  0070                     ?_Init_Relays:	; 1 bytes @ 0x0
   906  0070                     ?_Init_Transmitter:	; 1 bytes @ 0x0
   907  0070                     ?_Init_Receiver:	; 1 bytes @ 0x0
   908  0070                     ?_AddByteToBuffer:	; 1 bytes @ 0x0
   909  0070                     ?_CheckStopTime:	; 1 bytes @ 0x0
   910  0070                     ?_Read_Relay:	; 1 bytes @ 0x0
   911  0070                     ?_Read_Byte:	; 1 bytes @ 0x0
   912  0070                     ??_Read_Byte:	; 1 bytes @ 0x0
   913  0070                     ?_WriteByteFromBuffer:	; 1 bytes @ 0x0
   914  0070                     ?_HandleTelegramByte:	; 1 bytes @ 0x0
   915  0070                     ?_Init_Timer:	; 1 bytes @ 0x0
   916  0070                     ?_Start_Timer:	; 1 bytes @ 0x0
   917  0070                     ?_Timer_Interrupt:	; 1 bytes @ 0x0
   918  0070                     ??_Timer_Interrupt:	; 1 bytes @ 0x0
   919  0070                     ?_main:	; 1 bytes @ 0x0
   920  0070                     ?_HandleConfigByte:	; 1 bytes @ 0x0
   921  0070                     ?_Handle_Interrupts:	; 1 bytes @ 0x0
   922  0070                     ?_Write_Byte:	; 1 bytes @ 0x0
   923  0070                     ??_Write_Byte:	; 1 bytes @ 0x0
   924  0070                     ?i1_AddByteToBuffer:	; 1 bytes @ 0x0
   925  0070                     ??i1_AddByteToBuffer:	; 1 bytes @ 0x0
   926  0070                     ?i1_Set_Relay:	; 1 bytes @ 0x0
   927  0070                     	global	Write_Byte@Data
   928                           Write_Byte@Data:	; 1 bytes @ 0x0
   929  0070                     	global	i1Set_Relay@State
   930                           i1Set_Relay@State:	; 1 bytes @ 0x0
   931  0070                     	ds	1
   932  0070                     ??_WriteByteFromBuffer:	; 1 bytes @ 0x1
   933  0071                     ??i1_Set_Relay:	; 1 bytes @ 0x1
   934  0071                     	global	Read_Byte@Data
   935                           Read_Byte@Data:	; 1 bytes @ 0x1
   936  0071                     	global	i1AddByteToBuffer@Byte
   937                           i1AddByteToBuffer@Byte:	; 1 bytes @ 0x1
   938  0071                     	ds	1
   939  0071                     ??_HandleTelegramByte:	; 1 bytes @ 0x2
   940  0072                     	ds	1
   941  0072                     	global	i1Set_Relay@Relay
   942                           i1Set_Relay@Relay:	; 1 bytes @ 0x3
   943  0073                     	ds	1
   944  0073                     ??_HandleConfigByte:	; 1 bytes @ 0x4
   945  0074                     	global	HandleTelegramByte@Byte
   946                           HandleTelegramByte@Byte:	; 1 bytes @ 0x4
   947  0074                     	ds	2
   948  0074                     	global	HandleConfigByte@Byte
   949                           HandleConfigByte@Byte:	; 1 bytes @ 0x6
   950  0076                     	ds	1
   951  0076                     ??_Handle_Interrupts:	; 1 bytes @ 0x7
   952  0077                     	ds	5
   953  0077                     	global	Handle_Interrupts@dummy
   954                           Handle_Interrupts@dummy:	; 1 bytes @ 0xC
   955  007C                     	ds	1
   956  007C                     psect	cstackBANK0,class=BANK0,space=1,noexec
   957                           global __pcstackBANK0
   958                           __pcstackBANK0:
   959  0020                     ??_Init_Ports:	; 1 bytes @ 0x0
   960  0020                     ??_Init_Relays:	; 1 bytes @ 0x0
   961  0020                     ??_Init_Transmitter:	; 1 bytes @ 0x0
   962  0020                     ??_Init_Receiver:	; 1 bytes @ 0x0
   963  0020                     ??_AddByteToBuffer:	; 1 bytes @ 0x0
   964  0020                     ?_Set_Relay:	; 1 bytes @ 0x0
   965  0020                     ??_Read_Relay:	; 1 bytes @ 0x0
   966  0020                     ??_Init_Timer:	; 1 bytes @ 0x0
   967  0020                     ??_Start_Timer:	; 1 bytes @ 0x0
   968  0020                     ?_SetStopTime:	; 1 bytes @ 0x0
   969  0020                     	global	SetStopTime@Time10sec
   970                           SetStopTime@Time10sec:	; 1 bytes @ 0x0
   971  0020                     	global	Set_Relay@State
   972                           Set_Relay@State:	; 1 bytes @ 0x0
   973  0020                     	ds	1
   974  0020                     ??_Set_Relay:	; 1 bytes @ 0x1
   975  0021                     	global	SetStopTime@Time1sec
   976                           SetStopTime@Time1sec:	; 1 bytes @ 0x1
   977  0021                     	global	AddByteToBuffer@Byte
   978                           AddByteToBuffer@Byte:	; 1 bytes @ 0x1
   979  0021                     	ds	1
   980  0021                     ?_SendTelegram:	; 1 bytes @ 0x2
   981  0022                     	global	SetStopTime@Time100ms
   982                           SetStopTime@Time100ms:	; 1 bytes @ 0x2
   983  0022                     	global	Read_Relay@Relay
   984                           Read_Relay@Relay:	; 1 bytes @ 0x2
   985  0022                     	global	SendTelegram@MyTelegram
   986                           SendTelegram@MyTelegram:	; 21 bytes @ 0x2
   987  0022                     	ds	1
   988  0022                     ??_SetStopTime:	; 1 bytes @ 0x3
   989  0023                     	global	Set_Relay@Relay
   990                           Set_Relay@Relay:	; 1 bytes @ 0x3
   991  0023                     	ds	1
   992  0023                     ??_CheckStopTime:	; 1 bytes @ 0x4
   993  0024                     	ds	1
   994  0024                     	global	SetStopTime@RelayStopTime
   995                           SetStopTime@RelayStopTime:	; 1 bytes @ 0x5
   996  0025                     	ds	18
   997  0025                     ??_SendTelegram:	; 1 bytes @ 0x17
   998  0037                     	ds	1
   999  0037                     	global	SendTelegram@CommandCounter
  1000                           SendTelegram@CommandCounter:	; 1 bytes @ 0x18
  1001  0038                     	ds	1
  1002  0038                     ?_Handle_Telegram:	; 1 bytes @ 0x19
  1003  0039                     	global	Handle_Telegram@ThisTelegram
  1004                           Handle_Telegram@ThisTelegram:	; 21 bytes @ 0x19
  1005  0039                     	ds	21
  1006  0039                     ??_Handle_Telegram:	; 1 bytes @ 0x2E
  1007  004E                     	ds	4
  1008  004E                     	global	Handle_Telegram@error
  1009                           Handle_Telegram@error:	; 1 bytes @ 0x32
  1010  0052                     	ds	1
  1011  0052                     	global	Handle_Telegram@state
  1012                           Handle_Telegram@state:	; 1 bytes @ 0x33
  1013  0053                     	ds	1
  1014  0053                     ??_main:	; 1 bytes @ 0x34
  1015  0054                     	ds	4
  1016  0054                     ;!
  1017                           ;!Data Sizes:
  1018                           ;!    Strings     0
  1019                           ;!    Constant    0
  1020                           ;!    Data        0
  1021                           ;!    BSS         102
  1022                           ;!    Persistent  0
  1023                           ;!    Stack       0
  1024                           ;!
  1025                           ;!Auto Spaces:
  1026                           ;!    Space          Size  Autos    Used
  1027                           ;!    COMMON           14     13      14
  1028                           ;!    BANK0            80     56      79
  1029                           ;!    BANK1            80      0      78
  1030                           ;!    BANK2            80      0       0
  1031                           
  1032                           ;!
  1033                           ;!Pointer List with Targets:
  1034                           ;!
  1035                           ;!    SetStopTime@RelayStopTime	PTR unsigned char  size(1) Largest target is 3
  1036                           ;!		 -> Relay6StopTime(BANK1[3]), Relay5StopTime(BANK1[3]), Relay4StopTime(BANK1[3]), Re
                                 lay3StopTime(BANK1[3]), 
  1037                           ;!		 -> Relay2StopTime(BANK1[3]), Relay1StopTime(BANK0[3]), 
  1038                           ;!
  1039                           
  1040                           
  1041                           ;!
  1042                           ;!Critical Paths under _main in COMMON
  1043                           ;!
  1044                           ;!    None.
  1045                           ;!
  1046                           ;!Critical Paths under _Handle_Interrupts in COMMON
  1047                           ;!
  1048                           ;!    _Handle_Interrupts->_HandleConfigByte
  1049                           ;!    _WriteByteFromBuffer->_Write_Byte
  1050                           ;!    _HandleTelegramByte->_Read_Byte
  1051                           ;!    _HandleConfigByte->i1_Set_Relay
  1052                           ;!
  1053                           ;!Critical Paths under _main in BANK0
  1054                           ;!
  1055                           ;!    _main->_Handle_Telegram
  1056                           ;!    _Handle_Telegram->_SendTelegram
  1057                           ;!    _SendTelegram->_AddByteToBuffer
  1058                           ;!    _CheckStopTime->_Set_Relay
  1059                           ;!
  1060                           ;!Critical Paths under _Handle_Interrupts in BANK0
  1061                           ;!
  1062                           ;!    None.
  1063                           ;!
  1064                           ;!Critical Paths under _main in BANK1
  1065                           ;!
  1066                           ;!    None.
  1067                           ;!
  1068                           ;!Critical Paths under _Handle_Interrupts in BANK1
  1069                           ;!
  1070                           ;!    None.
  1071                           ;!
  1072                           ;!Critical Paths under _main in BANK2
  1073                           ;!
  1074                           ;!    None.
  1075                           ;!
  1076                           ;!Critical Paths under _Handle_Interrupts in BANK2
  1077                           ;!
  1078                           ;!    None.
  1079                           
  1080 ;;
  1081 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1082 ;;
  1083                           
  1084                           ;!
  1085                           ;!Call Graph Tables:
  1086                           ;!
  1087                           ;! ---------------------------------------------------------------------------------
  1088                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1089                           ;! ---------------------------------------------------------------------------------
  1090                           ;! (0) _main                                                 4     4      0    7476
  1091                           ;!                                             52 BANK0      4     4      0
  1092                           ;!                    _AddByteToBuffer
  1093                           ;!                      _CheckStopTime
  1094                           ;!                    _Handle_Telegram
  1095                           ;!                         _Init_Ports
  1096                           ;!                      _Init_Receiver
  1097                           ;!                        _Init_Relays
  1098                           ;!                         _Init_Timer
  1099                           ;!                   _Init_Transmitter
  1100                           ;!                        _Start_Timer
  1101                           ;! ---------------------------------------------------------------------------------
  1102                           ;! (1) _Start_Timer                                          0     0      0       0
  1103                           ;! ---------------------------------------------------------------------------------
  1104                           ;! (1) _Init_Transmitter                                     0     0      0       0
  1105                           ;! ---------------------------------------------------------------------------------
  1106                           ;! (1) _Init_Timer                                           0     0      0       0
  1107                           ;! ---------------------------------------------------------------------------------
  1108                           ;! (1) _Init_Relays                                          0     0      0       0
  1109                           ;! ---------------------------------------------------------------------------------
  1110                           ;! (1) _Init_Receiver                                        0     0      0       0
  1111                           ;! ---------------------------------------------------------------------------------
  1112                           ;! (1) _Init_Ports                                           0     0      0       0
  1113                           ;! ---------------------------------------------------------------------------------
  1114                           ;! (1) _Handle_Telegram                                     27     6     21    5500
  1115                           ;!                                             25 BANK0     27     6     21
  1116                           ;!                         _Read_Relay
  1117                           ;!                       _SendTelegram
  1118                           ;!                        _SetStopTime
  1119                           ;!                          _Set_Relay
  1120                           ;! ---------------------------------------------------------------------------------
  1121                           ;! (2) _SetStopTime                                          6     3      3    1942
  1122                           ;!                                              0 BANK0      6     3      3
  1123                           ;! ---------------------------------------------------------------------------------
  1124                           ;! (2) _SendTelegram                                        24     3     21     380
  1125                           ;!                                              2 BANK0     23     2     21
  1126                           ;!                    _AddByteToBuffer
  1127                           ;! ---------------------------------------------------------------------------------
  1128                           ;! (3) _AddByteToBuffer                                      2     2      0      22
  1129                           ;!                                              0 BANK0      2     2      0
  1130                           ;! ---------------------------------------------------------------------------------
  1131                           ;! (2) _Read_Relay                                           3     3      0      22
  1132                           ;!                                              0 BANK0      3     3      0
  1133                           ;! ---------------------------------------------------------------------------------
  1134                           ;! (1) _CheckStopTime                                        2     2      0    1954
  1135                           ;!                                              4 BANK0      2     2      0
  1136                           ;!                          _Set_Relay
  1137                           ;! ---------------------------------------------------------------------------------
  1138                           ;! (2) _Set_Relay                                            4     3      1    1954
  1139                           ;!                                              0 BANK0      4     3      1
  1140                           ;! ---------------------------------------------------------------------------------
  1141                           ;! Estimated maximum stack depth 3
  1142                           ;! ---------------------------------------------------------------------------------
  1143                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1144                           ;! ---------------------------------------------------------------------------------
  1145                           ;! (4) _Handle_Interrupts                                    6     6      0     711
  1146                           ;!                                              7 COMMON     6     6      0
  1147                           ;!                   _HandleConfigByte
  1148                           ;!                 _HandleTelegramByte
  1149                           ;!                    _Timer_Interrupt
  1150                           ;!                _WriteByteFromBuffer
  1151                           ;! ---------------------------------------------------------------------------------
  1152                           ;! (5) _WriteByteFromBuffer                                  1     1      0      22
  1153                           ;!                                              1 COMMON     1     1      0
  1154                           ;!                         _Write_Byte
  1155                           ;! ---------------------------------------------------------------------------------
  1156                           ;! (6) _Write_Byte                                           1     1      0      22
  1157                           ;!                                              0 COMMON     1     1      0
  1158                           ;! ---------------------------------------------------------------------------------
  1159                           ;! (5) _Timer_Interrupt                                      0     0      0       0
  1160                           ;! ---------------------------------------------------------------------------------
  1161                           ;! (5) _HandleTelegramByte                                   3     3      0     178
  1162                           ;!                                              2 COMMON     3     3      0
  1163                           ;!                          _Read_Byte
  1164                           ;! ---------------------------------------------------------------------------------
  1165                           ;! (5) _HandleConfigByte                                     3     3      0     510
  1166                           ;!                                              4 COMMON     3     3      0
  1167                           ;!                          _Read_Byte
  1168                           ;!                  i1_AddByteToBuffer
  1169                           ;!                        i1_Set_Relay
  1170                           ;! ---------------------------------------------------------------------------------
  1171                           ;! (6) i1_Set_Relay                                          4     3      1     442
  1172                           ;!                                              0 COMMON     4     3      1
  1173                           ;! ---------------------------------------------------------------------------------
  1174                           ;! (6) i1_AddByteToBuffer                                    2     2      0      22
  1175                           ;!                                              0 COMMON     2     2      0
  1176                           ;! ---------------------------------------------------------------------------------
  1177                           ;! (6) _Read_Byte                                            2     2      0      23
  1178                           ;!                                              0 COMMON     2     2      0
  1179                           ;! ---------------------------------------------------------------------------------
  1180                           ;! Estimated maximum stack depth 6
  1181                           ;! ---------------------------------------------------------------------------------
  1182                           ;!
  1183                           ;! Call Graph Graphs:
  1184                           ;!
  1185                           ;! _main (ROOT)
  1186                           ;!   _AddByteToBuffer
  1187                           ;!   _CheckStopTime
  1188                           ;!     _Set_Relay
  1189                           ;!   _Handle_Telegram
  1190                           ;!     _Read_Relay
  1191                           ;!     _SendTelegram
  1192                           ;!       _AddByteToBuffer
  1193                           ;!     _SetStopTime
  1194                           ;!     _Set_Relay
  1195                           ;!   _Init_Ports
  1196                           ;!   _Init_Receiver
  1197                           ;!   _Init_Relays
  1198                           ;!   _Init_Timer
  1199                           ;!   _Init_Transmitter
  1200                           ;!   _Start_Timer
  1201                           ;!
  1202                           ;! _Handle_Interrupts (ROOT)
  1203                           ;!   _HandleConfigByte
  1204                           ;!     _Read_Byte
  1205                           ;!     i1_AddByteToBuffer
  1206                           ;!     i1_Set_Relay
  1207                           ;!   _HandleTelegramByte
  1208                           ;!     _Read_Byte
  1209                           ;!   _Timer_Interrupt
  1210                           ;!   _WriteByteFromBuffer
  1211                           ;!     _Write_Byte
  1212                           ;!
  1213                           
  1214                           ;! Address spaces:
  1215                           
  1216                           ;!Name               Size   Autos  Total    Cost      Usage
  1217                           ;!BITCOMMON            E      0       0       0        0.0%
  1218                           ;!EEDATA             100      0       0       0        0.0%
  1219                           ;!NULL                 0      0       0       0        0.0%
  1220                           ;!CODE                 0      0       0       0        0.0%
  1221                           ;!COMMON               E      D       E       1      100.0%
  1222                           ;!BITSFR0              0      0       0       1        0.0%
  1223                           ;!SFR0                 0      0       0       1        0.0%
  1224                           ;!BITSFR1              0      0       0       2        0.0%
  1225                           ;!SFR1                 0      0       0       2        0.0%
  1226                           ;!STACK                0      0       0       2        0.0%
  1227                           ;!BANK0               50     38      4F       3       98.8%
  1228                           ;!BITBANK1            50      0       0       4        0.0%
  1229                           ;!BITSFR3              0      0       0       4        0.0%
  1230                           ;!SFR3                 0      0       0       4        0.0%
  1231                           ;!BANK1               50      0      4E       5       97.5%
  1232                           ;!BITSFR2              0      0       0       5        0.0%
  1233                           ;!SFR2                 0      0       0       5        0.0%
  1234                           ;!BITBANK2            50      0       0       6        0.0%
  1235                           ;!BANK2               50      0       0       7        0.0%
  1236                           ;!ABS                  0      0      AB       8        0.0%
  1237                           ;!BITBANK0            50      0       0       9        0.0%
  1238                           ;!DATA                 0      0      AB      10        0.0%
  1239                           
  1240                           	global	_main
  1241                           
  1242 ;; *************** function _main *****************
  1243 ;; Defined at:
  1244 ;;		line 59 in file "Main.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;		None
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : B00/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1258 ;;      Params:         0       0       0       0
  1259 ;;      Locals:         0       0       0       0
  1260 ;;      Temps:          0       4       0       0
  1261 ;;      Totals:         0       4       0       0
  1262 ;;Total ram usage:        4 bytes
  1263 ;; Hardware stack levels required when called:    6
  1264 ;; This function calls:
  1265 ;;		_AddByteToBuffer
  1266 ;;		_CheckStopTime
  1267 ;;		_Handle_Telegram
  1268 ;;		_Init_Ports
  1269 ;;		_Init_Receiver
  1270 ;;		_Init_Relays
  1271 ;;		_Init_Timer
  1272 ;;		_Init_Transmitter
  1273 ;;		_Start_Timer
  1274 ;; This function is called by:
  1275 ;;		Startup code after reset
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1279                           	file	"Main.c"
  1280                           	line	59
  1281                           global __pmaintext
  1282                           __pmaintext:	;psect for function _main
  1283  063C                     psect	maintext
  1284                           	file	"Main.c"
  1285                           	line	59
  1286                           	global	__size_of_main
  1287                           	__size_of_main	equ	__end_of_main-_main
  1288  0066                     	
  1289                           _main:	
  1290  063C                     ;incstack = 0
  1291                           	opt	stack 2
  1292                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1293                           	line	62
  1294                           	
  1295                           l2549:	
  1296  063C                     ;Main.c: 62:     Init_Ports();
  1297                           	fcall	_Init_Ports
  1298  063C  158A  27B6  118A   	line	63
  1299                           ;Main.c: 63:     Init_Timer();
  1300                           	fcall	_Init_Timer
  1301  063F  158A  279E  118A   	line	64
  1302                           	
  1303                           l2551:	
  1304  0642                     ;Main.c: 64:     Init_Relays();
  1305                           	fcall	_Init_Relays
  1306  0642  118A  27CB  118A   	line	65
  1307                           	
  1308                           l2553:	
  1309  0645                     ;Main.c: 65:     Init_Transmitter();
  1310                           	fcall	_Init_Transmitter
  1311  0645  158A  27AA  118A   	line	66
  1312                           ;Main.c: 66:     Init_Receiver();
  1313                           	fcall	_Init_Receiver
  1314  0648  118A  27F0  118A   	line	67
  1315                           	
  1316                           l2555:	
  1317  064B                     ;Main.c: 67:     Start_Timer();
  1318                           	fcall	_Start_Timer
  1319  064B  158A  2793  118A   	line	69
  1320                           	
  1321                           l2557:	
  1322  064E                     ;Main.c: 69:     AddByteToBuffer('X');
  1323                           	movlw	low(058h)
  1324  064E  3058               	fcall	_AddByteToBuffer
  1325  064F  158A  27E4  118A   	line	72
  1326                           	
  1327                           l2559:	
  1328  0652                     ;Main.c: 72:     CurrentMode = Running;
  1329                           	bcf	status, 5	;RP0=0, select bank0
  1330  0652  1283               	bcf	status, 6	;RP1=0, select bank0
  1331  0653  1303               	clrf	(_CurrentMode)
  1332  0654  01E5               	goto	l2561
  1333  0655  2E56               	line	74
  1334                           ;Main.c: 74:     while (1)
  1335                           	
  1336                           l158:	
  1337  0656                     	line	78
  1338                           	
  1339                           l2561:	
  1340  0656                     ;Main.c: 75:     {;Main.c: 78:         if (StopRelay1OnTime == 1 || StopRelay2OnTime == 
                                 1 || StopRelay3OnTime == 1 || StopRelay4OnTime == 1 || StopRelay5OnTime == 1 || StopRela
                                 y6OnTime == 1)
  1341                           	bcf	status, 5	;RP0=0, select bank0
  1342  0656  1283               	bcf	status, 6	;RP1=0, select bank0
  1343  0657  1303               		decf	((_StopRelay1OnTime)),w
  1344  0658  036B               	btfsc	status,2
  1345  0659  1903               	goto	u1601
  1346  065A  2E5C               	goto	u1600
  1347  065B  2E5D               u1601:
  1348  065C                     	goto	l2573
  1349  065C  2E77               u1600:
  1350  065D                     	
  1351                           l2563:	
  1352  065D                     		decf	((_StopRelay2OnTime)),w
  1353  065D  036A               	btfsc	status,2
  1354  065E  1903               	goto	u1611
  1355  065F  2E61               	goto	u1610
  1356  0660  2E62               u1611:
  1357  0661                     	goto	l2573
  1358  0661  2E77               u1610:
  1359  0662                     	
  1360                           l2565:	
  1361  0662                     		decf	((_StopRelay3OnTime)),w
  1362  0662  0369               	btfsc	status,2
  1363  0663  1903               	goto	u1621
  1364  0664  2E66               	goto	u1620
  1365  0665  2E67               u1621:
  1366  0666                     	goto	l2573
  1367  0666  2E77               u1620:
  1368  0667                     	
  1369                           l2567:	
  1370  0667                     		decf	((_StopRelay4OnTime)),w
  1371  0667  0368               	btfsc	status,2
  1372  0668  1903               	goto	u1631
  1373  0669  2E6B               	goto	u1630
  1374  066A  2E6C               u1631:
  1375  066B                     	goto	l2573
  1376  066B  2E77               u1630:
  1377  066C                     	
  1378                           l2569:	
  1379  066C                     		decf	((_StopRelay5OnTime)),w
  1380  066C  0367               	btfsc	status,2
  1381  066D  1903               	goto	u1641
  1382  066E  2E70               	goto	u1640
  1383  066F  2E71               u1641:
  1384  0670                     	goto	l2573
  1385  0670  2E77               u1640:
  1386  0671                     	
  1387                           l2571:	
  1388  0671                     		decf	((_StopRelay6OnTime)),w
  1389  0671  0366               	btfss	status,2
  1390  0672  1D03               	goto	u1651
  1391  0673  2E75               	goto	u1650
  1392  0674  2E76               u1651:
  1393  0675                     	goto	l2575
  1394  0675  2E7B               u1650:
  1395  0676                     	goto	l2573
  1396  0676  2E77               	
  1397                           l161:	
  1398  0677                     	line	80
  1399                           	
  1400                           l2573:	
  1401  0677                     ;Main.c: 79:         {;Main.c: 80:             CheckStopTime();
  1402                           	fcall	_CheckStopTime
  1403  0677  118A  2217  118A   	goto	l2575
  1404  067A  2E7B               	line	81
  1405                           ;Main.c: 81:         }
  1406                           	
  1407                           l159:	
  1408  067B                     	line	83
  1409                           	
  1410                           l2575:	
  1411  067B                     ;Main.c: 83:         if (TelegramReadyFlag == 1)
  1412                           	bcf	status, 5	;RP0=0, select bank0
  1413  067B  1283               	bcf	status, 6	;RP1=0, select bank0
  1414  067C  1303               		decf	((_TelegramReadyFlag)),w
  1415  067D  035E               iorwf	((_TelegramReadyFlag+1)),w
  1416  067E  045F               	btfss	status,2
  1417  067F  1D03               	goto	u1661
  1418  0680  2E82               	goto	u1660
  1419  0681  2E83               u1661:
  1420  0682                     	goto	l2561
  1421  0682  2E56               u1660:
  1422  0683                     	line	85
  1423                           	
  1424                           l2577:	
  1425  0683                     ;Main.c: 84:         {;Main.c: 85:             TelegramReadyFlag = 0;
  1426                           	clrf	(_TelegramReadyFlag)
  1427  0683  01DE               	clrf	(_TelegramReadyFlag+1)
  1428  0684  01DF               	line	86
  1429                           	
  1430                           l2579:	
  1431  0685                     ;Main.c: 86:             Handle_Telegram(Telegram);
  1432                           	movlw	(Handle_Telegram@ThisTelegram)&0ffh
  1433  0685  3039               	movwf	fsr0
  1434  0686  0084               	movlw	low(_Telegram)
  1435  0687  30C8               	movwf	(??_main+0)+0
  1436  0688  00D4               	movf	fsr0,w
  1437  0689  0804               	movwf	((??_main+0)+0+1)
  1438  068A  00D5               	movlw	21
  1439  068B  3015               	movwf	((??_main+0)+0+2)
  1440  068C  00D6               u1670:
  1441  068D                     	movf	(??_main+0)+0,w
  1442  068D  0854               	movwf	fsr0
  1443  068E  0084               	bcf	status, 7	;select IRP bank1
  1444  068F  1383               	
  1445                           	movf	indf,w
  1446  0690  0800               	movwf	((??_main+0)+0+3)
  1447  0691  00D7               	incf	(??_main+0)+0,f
  1448  0692  0AD4               	movf	((??_main+0)+0+1),w
  1449  0693  0855               	movwf	fsr0
  1450  0694  0084               	
  1451                           	movf	((??_main+0)+0+3),w
  1452  0695  0857               	movwf	indf
  1453  0696  0080               	incf	((??_main+0)+0+1),f
  1454  0697  0AD5               	decfsz	((??_main+0)+0+2),f
  1455  0698  0BD6               	goto	u1670
  1456  0699  2E8D               	
  1457                           	fcall	_Handle_Telegram
  1458  069A  118A  2020  118A   	goto	l2561
  1459  069D  2E56               	line	87
  1460                           ;Main.c: 87:         }
  1461                           	
  1462                           l162:	
  1463  069E                     	goto	l2561
  1464  069E  2E56               	line	89
  1465                           ;Main.c: 89:     }
  1466                           	
  1467                           l163:	
  1468  069F                     	goto	l2561
  1469  069F  2E56               	
  1470                           l164:	
  1471  06A0                     	line	90
  1472                           	
  1473                           l165:	
  1474  06A0                     	global	start
  1475                           	ljmp	start
  1476  06A0  118A  280D         	opt stack 0
  1477                           GLOBAL	__end_of_main
  1478                           	__end_of_main:
  1479  06A2                     	signat	_main,89
  1480                           	global	_Start_Timer
  1481                           
  1482 ;; *************** function _Start_Timer *****************
  1483 ;; Defined at:
  1484 ;;		line 53 in file "Timer.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1498 ;;      Params:         0       0       0       0
  1499 ;;      Locals:         0       0       0       0
  1500 ;;      Temps:          0       0       0       0
  1501 ;;      Totals:         0       0       0       0
  1502 ;;Total ram usage:        0 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    3
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1512                           	file	"Timer.c"
  1513                           	line	53
  1514                           global __ptext1
  1515                           __ptext1:	;psect for function _Start_Timer
  1516  0F93                     psect	text1
  1517                           	file	"Timer.c"
  1518                           	line	53
  1519                           	global	__size_of_Start_Timer
  1520                           	__size_of_Start_Timer	equ	__end_of_Start_Timer-_Start_Timer
  1521  000B                     	
  1522                           _Start_Timer:	
  1523  0F93                     ;incstack = 0
  1524                           	opt	stack 4
  1525                           ; Regs used in _Start_Timer: [wreg+status,2]
  1526                           	line	56
  1527                           	
  1528                           l2193:	
  1529  0F93                     ;Timer.c: 56:     PIR1bits.TMR1IF = 0;
  1530                           	bcf	status, 5	;RP0=0, select bank0
  1531  0F93  1283               	bcf	status, 6	;RP1=0, select bank0
  1532  0F94  1303               	bcf	(12),0	;volatile
  1533  0F95  100C               	line	59
  1534                           	
  1535                           l2195:	
  1536  0F96                     ;Timer.c: 59:     Counter_100ms = 0;
  1537                           	clrf	(_Counter_100ms)
  1538  0F96  01DC               	clrf	(_Counter_100ms+1)
  1539  0F97  01DD               	line	61
  1540                           	
  1541                           l2197:	
  1542  0F98                     ;Timer.c: 61:     TMR1H = 160;
  1543                           	movlw	low(0A0h)
  1544  0F98  30A0               	movwf	(15)	;volatile
  1545  0F99  008F               	line	62
  1546                           	
  1547                           l2199:	
  1548  0F9A                     ;Timer.c: 62:     TMR1L = 138;
  1549                           	movlw	low(08Ah)
  1550  0F9A  308A               	movwf	(14)	;volatile
  1551  0F9B  008E               	line	65
  1552                           	
  1553                           l2201:	
  1554  0F9C                     ;Timer.c: 65:     T1CONbits.TMR1ON = 1;
  1555                           	bsf	(16),0	;volatile
  1556  0F9C  1410               	line	66
  1557                           	
  1558                           l54:	
  1559  0F9D                     	return
  1560  0F9D  0008               	opt stack 0
  1561                           GLOBAL	__end_of_Start_Timer
  1562                           	__end_of_Start_Timer:
  1563  0F9E                     	signat	_Start_Timer,89
  1564                           	global	_Init_Transmitter
  1565                           
  1566 ;; *************** function _Init_Transmitter *****************
  1567 ;; Defined at:
  1568 ;;		line 35 in file "Eusart.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1582 ;;      Params:         0       0       0       0
  1583 ;;      Locals:         0       0       0       0
  1584 ;;      Temps:          0       0       0       0
  1585 ;;      Totals:         0       0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    3
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1596                           	file	"Eusart.c"
  1597                           	line	35
  1598                           global __ptext2
  1599                           __ptext2:	;psect for function _Init_Transmitter
  1600  0FAA                     psect	text2
  1601                           	file	"Eusart.c"
  1602                           	line	35
  1603                           	global	__size_of_Init_Transmitter
  1604                           	__size_of_Init_Transmitter	equ	__end_of_Init_Transmitter-_Init_Transmitter
  1605  000C                     	
  1606                           _Init_Transmitter:	
  1607  0FAA                     ;incstack = 0
  1608                           	opt	stack 4
  1609                           ; Regs used in _Init_Transmitter: [wreg+status,2]
  1610                           	line	38
  1611                           	
  1612                           l2241:	
  1613  0FAA                     ;Eusart.c: 38:     TXSTAbits.SYNC = 0;
  1614                           	bcf	status, 5	;RP0=0, select bank0
  1615  0FAA  1283               	bcf	status, 6	;RP1=0, select bank0
  1616  0FAB  1303               	bcf	(22),4	;volatile
  1617  0FAC  1216               	line	41
  1618                           ;Eusart.c: 41:     RCSTAbits.SPEN = 1;
  1619                           	bsf	(23),7	;volatile
  1620  0FAD  1797               	line	44
  1621                           ;Eusart.c: 44:     TXSTAbits.TX9 = 0;
  1622                           	bcf	(22),6	;volatile
  1623  0FAE  1316               	line	47
  1624                           ;Eusart.c: 47:     TXSTAbits.BRGH = 1;
  1625                           	bsf	(22),2	;volatile
  1626  0FAF  1516               	line	50
  1627                           ;Eusart.c: 50:     BAUDCTLbits.BRG16 = 1;
  1628                           	bsf	(17),3	;volatile
  1629  0FB0  1591               	line	53
  1630                           	
  1631                           l2243:	
  1632  0FB1                     ;Eusart.c: 53:     SPBRG = 103;
  1633                           	movlw	low(067h)
  1634  0FB1  3067               	movwf	(19)	;volatile
  1635  0FB2  0093               	line	63
  1636                           	
  1637                           l2245:	
  1638  0FB3                     ;Eusart.c: 63:     TXREG = 0;
  1639                           	clrf	(21)	;volatile
  1640  0FB3  0195               	line	66
  1641                           	
  1642                           l2247:	
  1643  0FB4                     ;Eusart.c: 66:     TXSTAbits.TXEN = 1;
  1644                           	bsf	(22),5	;volatile
  1645  0FB4  1696               	line	67
  1646                           	
  1647                           l304:	
  1648  0FB5                     	return
  1649  0FB5  0008               	opt stack 0
  1650                           GLOBAL	__end_of_Init_Transmitter
  1651                           	__end_of_Init_Transmitter:
  1652  0FB6                     	signat	_Init_Transmitter,89
  1653                           	global	_Init_Timer
  1654                           
  1655 ;; *************** function _Init_Timer *****************
  1656 ;; Defined at:
  1657 ;;		line 31 in file "Timer.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1671 ;;      Params:         0       0       0       0
  1672 ;;      Locals:         0       0       0       0
  1673 ;;      Temps:          0       0       0       0
  1674 ;;      Totals:         0       0       0       0
  1675 ;;Total ram usage:        0 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    3
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_main
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1685                           	file	"Timer.c"
  1686                           	line	31
  1687                           global __ptext3
  1688                           __ptext3:	;psect for function _Init_Timer
  1689  0F9E                     psect	text3
  1690                           	file	"Timer.c"
  1691                           	line	31
  1692                           	global	__size_of_Init_Timer
  1693                           	__size_of_Init_Timer	equ	__end_of_Init_Timer-_Init_Timer
  1694  000C                     	
  1695                           _Init_Timer:	
  1696  0F9E                     ;incstack = 0
  1697                           	opt	stack 4
  1698                           ; Regs used in _Init_Timer: [wreg+status,2+status,0]
  1699                           	line	34
  1700                           	
  1701                           l2181:	
  1702  0F9E                     ;Timer.c: 34:     T1CONbits.T1CKPS = 3;
  1703                           	movlw	(03h & ((1<<2)-1))<<4
  1704  0F9E  3030               	bcf	status, 5	;RP0=0, select bank0
  1705  0F9F  1283               	bcf	status, 6	;RP1=0, select bank0
  1706  0FA0  1303               	iorwf	(16),f	;volatile
  1707  0FA1  0490               	line	37
  1708                           	
  1709                           l2183:	
  1710  0FA2                     ;Timer.c: 37:     T1CONbits.T1OSCEN = 0;
  1711                           	bcf	(16),3	;volatile
  1712  0FA2  1190               	line	40
  1713                           	
  1714                           l2185:	
  1715  0FA3                     ;Timer.c: 40:     T1CONbits.TMR1CS = 0;
  1716                           	bcf	(16),1	;volatile
  1717  0FA3  1090               	line	43
  1718                           	
  1719                           l2187:	
  1720  0FA4                     ;Timer.c: 43:     INTCONbits.GIE = 1;
  1721                           	bsf	(11),7	;volatile
  1722  0FA4  178B               	line	46
  1723                           	
  1724                           l2189:	
  1725  0FA5                     ;Timer.c: 46:     INTCONbits.PEIE = 1;
  1726                           	bsf	(11),6	;volatile
  1727  0FA5  170B               	line	49
  1728                           	
  1729                           l2191:	
  1730  0FA6                     ;Timer.c: 49:     PIE1bits.TMR1IE = 1;
  1731                           	bsf	status, 5	;RP0=1, select bank1
  1732  0FA6  1683               	bcf	status, 6	;RP1=0, select bank1
  1733  0FA7  1303               	bsf	(140)^080h,0	;volatile
  1734  0FA8  140C               	line	51
  1735                           	
  1736                           l51:	
  1737  0FA9                     	return
  1738  0FA9  0008               	opt stack 0
  1739                           GLOBAL	__end_of_Init_Timer
  1740                           	__end_of_Init_Timer:
  1741  0FAA                     	signat	_Init_Timer,89
  1742                           	global	_Init_Relays
  1743                           
  1744 ;; *************** function _Init_Relays *****************
  1745 ;; Defined at:
  1746 ;;		line 47 in file "RelayControl.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		None
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1760 ;;      Params:         0       0       0       0
  1761 ;;      Locals:         0       0       0       0
  1762 ;;      Temps:          0       0       0       0
  1763 ;;      Totals:         0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    3
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1774                           	file	"RelayControl.c"
  1775                           	line	47
  1776                           global __ptext4
  1777                           __ptext4:	;psect for function _Init_Relays
  1778  07CB                     psect	text4
  1779                           	file	"RelayControl.c"
  1780                           	line	47
  1781                           	global	__size_of_Init_Relays
  1782                           	__size_of_Init_Relays	equ	__end_of_Init_Relays-_Init_Relays
  1783  0025                     	
  1784                           _Init_Relays:	
  1785  07CB                     ;incstack = 0
  1786                           	opt	stack 4
  1787                           ; Regs used in _Init_Relays: []
  1788                           	line	49
  1789                           	
  1790                           l2239:	
  1791  07CB                     ;RelayControl.c: 49:     TRISAbits.TRISA0 = 0;
  1792                           	bsf	status, 5	;RP0=1, select bank1
  1793  07CB  1683               	bcf	status, 6	;RP1=0, select bank1
  1794  07CC  1303               	bcf	(133)^080h,0	;volatile
  1795  07CD  1005               	line	50
  1796                           ;RelayControl.c: 50:     PORTAbits.RA0 = 0;
  1797                           	bcf	status, 5	;RP0=0, select bank0
  1798  07CE  1283               	bcf	status, 6	;RP1=0, select bank0
  1799  07CF  1303               	bcf	(5),0	;volatile
  1800  07D0  1005               	line	51
  1801                           ;RelayControl.c: 51:     TRISAbits.TRISA1 = 0;
  1802                           	bsf	status, 5	;RP0=1, select bank1
  1803  07D1  1683               	bcf	status, 6	;RP1=0, select bank1
  1804  07D2  1303               	bcf	(133)^080h,1	;volatile
  1805  07D3  1085               	line	52
  1806                           ;RelayControl.c: 52:     PORTAbits.RA1 = 0;
  1807                           	bcf	status, 5	;RP0=0, select bank0
  1808  07D4  1283               	bcf	status, 6	;RP1=0, select bank0
  1809  07D5  1303               	bcf	(5),1	;volatile
  1810  07D6  1085               	line	53
  1811                           ;RelayControl.c: 53:     TRISAbits.TRISA2 = 0;
  1812                           	bsf	status, 5	;RP0=1, select bank1
  1813  07D7  1683               	bcf	status, 6	;RP1=0, select bank1
  1814  07D8  1303               	bcf	(133)^080h,2	;volatile
  1815  07D9  1105               	line	54
  1816                           ;RelayControl.c: 54:     PORTAbits.RA2 = 0;
  1817                           	bcf	status, 5	;RP0=0, select bank0
  1818  07DA  1283               	bcf	status, 6	;RP1=0, select bank0
  1819  07DB  1303               	bcf	(5),2	;volatile
  1820  07DC  1105               	line	55
  1821                           ;RelayControl.c: 55:     TRISCbits.TRISC0 = 0;
  1822                           	bsf	status, 5	;RP0=1, select bank1
  1823  07DD  1683               	bcf	status, 6	;RP1=0, select bank1
  1824  07DE  1303               	bcf	(135)^080h,0	;volatile
  1825  07DF  1007               	line	56
  1826                           ;RelayControl.c: 56:     PORTCbits.RC0 = 0;
  1827                           	bcf	status, 5	;RP0=0, select bank0
  1828  07E0  1283               	bcf	status, 6	;RP1=0, select bank0
  1829  07E1  1303               	bcf	(7),0	;volatile
  1830  07E2  1007               	line	57
  1831                           ;RelayControl.c: 57:     TRISCbits.TRISC1 = 0;
  1832                           	bsf	status, 5	;RP0=1, select bank1
  1833  07E3  1683               	bcf	status, 6	;RP1=0, select bank1
  1834  07E4  1303               	bcf	(135)^080h,1	;volatile
  1835  07E5  1087               	line	58
  1836                           ;RelayControl.c: 58:     PORTCbits.RC1 = 0;
  1837                           	bcf	status, 5	;RP0=0, select bank0
  1838  07E6  1283               	bcf	status, 6	;RP1=0, select bank0
  1839  07E7  1303               	bcf	(7),1	;volatile
  1840  07E8  1087               	line	59
  1841                           ;RelayControl.c: 59:     TRISCbits.TRISC2 = 0;
  1842                           	bsf	status, 5	;RP0=1, select bank1
  1843  07E9  1683               	bcf	status, 6	;RP1=0, select bank1
  1844  07EA  1303               	bcf	(135)^080h,2	;volatile
  1845  07EB  1107               	line	60
  1846                           ;RelayControl.c: 60:     PORTCbits.RC2 = 0;
  1847                           	bcf	status, 5	;RP0=0, select bank0
  1848  07EC  1283               	bcf	status, 6	;RP1=0, select bank0
  1849  07ED  1303               	bcf	(7),2	;volatile
  1850  07EE  1107               	line	62
  1851                           	
  1852                           l372:	
  1853  07EF                     	return
  1854  07EF  0008               	opt stack 0
  1855                           GLOBAL	__end_of_Init_Relays
  1856                           	__end_of_Init_Relays:
  1857  07F0                     	signat	_Init_Relays,89
  1858                           	global	_Init_Receiver
  1859                           
  1860 ;; *************** function _Init_Receiver *****************
  1861 ;; Defined at:
  1862 ;;		line 69 in file "Eusart.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		status,2
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1876 ;;      Params:         0       0       0       0
  1877 ;;      Locals:         0       0       0       0
  1878 ;;      Temps:          0       0       0       0
  1879 ;;      Totals:         0       0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    3
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1890                           	file	"Eusart.c"
  1891                           	line	69
  1892                           global __ptext5
  1893                           __ptext5:	;psect for function _Init_Receiver
  1894  07F0                     psect	text5
  1895                           	file	"Eusart.c"
  1896                           	line	69
  1897                           	global	__size_of_Init_Receiver
  1898                           	__size_of_Init_Receiver	equ	__end_of_Init_Receiver-_Init_Receiver
  1899  000D                     	
  1900                           _Init_Receiver:	
  1901  07F0                     ;incstack = 0
  1902                           	opt	stack 4
  1903                           ; Regs used in _Init_Receiver: [status,2]
  1904                           	line	75
  1905                           	
  1906                           l2249:	
  1907  07F0                     ;Eusart.c: 75:     RCSTAbits.RX9 = 0;
  1908                           	bcf	status, 5	;RP0=0, select bank0
  1909  07F0  1283               	bcf	status, 6	;RP1=0, select bank0
  1910  07F1  1303               	bcf	(23),6	;volatile
  1911  07F2  1317               	line	91
  1912                           ;Eusart.c: 91:     PIE1bits.RCIE = 1;
  1913                           	bsf	status, 5	;RP0=1, select bank1
  1914  07F3  1683               	bcf	status, 6	;RP1=0, select bank1
  1915  07F4  1303               	bsf	(140)^080h,5	;volatile
  1916  07F5  168C               	line	94
  1917                           ;Eusart.c: 94:     INTCONbits.PEIE = 1;
  1918                           	bsf	(11),6	;volatile
  1919  07F6  170B               	line	97
  1920                           ;Eusart.c: 97:     INTCONbits.GIE = 1;
  1921                           	bsf	(11),7	;volatile
  1922  07F7  178B               	line	100
  1923                           	
  1924                           l2251:	
  1925  07F8                     ;Eusart.c: 100:     RCREG = 0;
  1926                           	bcf	status, 5	;RP0=0, select bank0
  1927  07F8  1283               	bcf	status, 6	;RP1=0, select bank0
  1928  07F9  1303               	clrf	(20)	;volatile
  1929  07FA  0194               	line	103
  1930                           	
  1931                           l2253:	
  1932  07FB                     ;Eusart.c: 103:     RCSTAbits.CREN = 1;
  1933                           	bsf	(23),4	;volatile
  1934  07FB  1617               	line	104
  1935                           	
  1936                           l307:	
  1937  07FC                     	return
  1938  07FC  0008               	opt stack 0
  1939                           GLOBAL	__end_of_Init_Receiver
  1940                           	__end_of_Init_Receiver:
  1941  07FD                     	signat	_Init_Receiver,89
  1942                           	global	_Init_Ports
  1943                           
  1944 ;; *************** function _Init_Ports *****************
  1945 ;; Defined at:
  1946 ;;		line 109 in file "Main.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1960 ;;      Params:         0       0       0       0
  1961 ;;      Locals:         0       0       0       0
  1962 ;;      Temps:          0       0       0       0
  1963 ;;      Totals:         0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    3
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  1974                           	file	"Main.c"
  1975                           	line	109
  1976                           global __ptext6
  1977                           __ptext6:	;psect for function _Init_Ports
  1978  0FB6                     psect	text6
  1979                           	file	"Main.c"
  1980                           	line	109
  1981                           	global	__size_of_Init_Ports
  1982                           	__size_of_Init_Ports	equ	__end_of_Init_Ports-_Init_Ports
  1983  0014                     	
  1984                           _Init_Ports:	
  1985  0FB6                     ;incstack = 0
  1986                           	opt	stack 4
  1987                           ; Regs used in _Init_Ports: [wreg+status,2+status,0]
  1988                           	line	113
  1989                           	
  1990                           l2221:	
  1991  0FB6                     ;Main.c: 113:     TRISAbits.TRISA4 = 1;
  1992                           	bsf	status, 5	;RP0=1, select bank1
  1993  0FB6  1683               	bcf	status, 6	;RP1=0, select bank1
  1994  0FB7  1303               	bsf	(133)^080h,4	;volatile
  1995  0FB8  1605               	line	117
  1996                           ;Main.c: 117:     TRISAbits.TRISA5 = 1;
  1997                           	bsf	(133)^080h,5	;volatile
  1998  0FB9  1685               	line	120
  1999                           ;Main.c: 120:     TRISCbits.TRISC4 = 1;
  2000                           	bsf	(135)^080h,4	;volatile
  2001  0FBA  1607               	line	123
  2002                           ;Main.c: 123:     TRISCbits.TRISC5 = 1;
  2003                           	bsf	(135)^080h,5	;volatile
  2004  0FBB  1687               	line	127
  2005                           	
  2006                           l2223:	
  2007  0FBC                     ;Main.c: 127:     CMCON0bits.CM = 7;
  2008                           	movlw	(07h & ((1<<3)-1))<<0
  2009  0FBC  3007               	bcf	status, 5	;RP0=0, select bank0
  2010  0FBD  1283               	bcf	status, 6	;RP1=0, select bank0
  2011  0FBE  1303               	iorwf	(25),f	;volatile
  2012  0FBF  0499               	line	130
  2013                           	
  2014                           l2225:	
  2015  0FC0                     ;Main.c: 130:     ANSEL = 0;
  2016                           	bsf	status, 5	;RP0=1, select bank1
  2017  0FC0  1683               	bcf	status, 6	;RP1=0, select bank1
  2018  0FC1  1303               	clrf	(145)^080h	;volatile
  2019  0FC2  0191               	line	133
  2020                           	
  2021                           l2227:	
  2022  0FC3                     ;Main.c: 133:     INTCONbits.RAIE = 1;
  2023                           	bsf	(11),3	;volatile
  2024  0FC3  158B               	line	136
  2025                           	
  2026                           l2229:	
  2027  0FC4                     ;Main.c: 136:     IOCAbits.IOC4 = 1;
  2028                           	bsf	(150)^080h,4	;volatile
  2029  0FC4  1616               	line	139
  2030                           	
  2031                           l2231:	
  2032  0FC5                     ;Main.c: 139:     INTCONbits.RAIF = 0;
  2033                           	bcf	(11),0	;volatile
  2034  0FC5  100B               	line	142
  2035                           	
  2036                           l2233:	
  2037  0FC6                     ;Main.c: 142:     OSCCONbits.IRCF2 = 1;
  2038                           	bsf	(143)^080h,6	;volatile
  2039  0FC6  170F               	line	143
  2040                           	
  2041                           l2235:	
  2042  0FC7                     ;Main.c: 143:     OSCCONbits.IRCF1 = 1;
  2043                           	bsf	(143)^080h,5	;volatile
  2044  0FC7  168F               	line	144
  2045                           	
  2046                           l2237:	
  2047  0FC8                     ;Main.c: 144:     OSCCONbits.IRCF0 = 1;
  2048                           	bsf	(143)^080h,4	;volatile
  2049  0FC8  160F               	line	145
  2050                           	
  2051                           l171:	
  2052  0FC9                     	return
  2053  0FC9  0008               	opt stack 0
  2054                           GLOBAL	__end_of_Init_Ports
  2055                           	__end_of_Init_Ports:
  2056  0FCA                     	signat	_Init_Ports,89
  2057                           	global	_Handle_Telegram
  2058                           
  2059 ;; *************** function _Handle_Telegram *****************
  2060 ;; Defined at:
  2061 ;;		line 244 in file "Main.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  ThisTelegram   21   25[BANK0 ] struct .
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  state           1   51[BANK0 ] unsigned char 
  2066 ;;  error           1   50[BANK0 ] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2076 ;;      Params:         0      21       0       0
  2077 ;;      Locals:         0       2       0       0
  2078 ;;      Temps:          0       4       0       0
  2079 ;;      Totals:         0      27       0       0
  2080 ;;Total ram usage:       27 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    5
  2083 ;; This function calls:
  2084 ;;		_Read_Relay
  2085 ;;		_SendTelegram
  2086 ;;		_SetStopTime
  2087 ;;		_Set_Relay
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2093                           	line	244
  2094                           global __ptext7
  2095                           __ptext7:	;psect for function _Handle_Telegram
  2096  0020                     psect	text7
  2097                           	file	"Main.c"
  2098                           	line	244
  2099                           	global	__size_of_Handle_Telegram
  2100                           	__size_of_Handle_Telegram	equ	__end_of_Handle_Telegram-_Handle_Telegram
  2101  01F7                     	
  2102                           _Handle_Telegram:	
  2103  0020                     ;incstack = 0
  2104                           	opt	stack 2
  2105                           ; Regs used in _Handle_Telegram: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2106                           	line	246
  2107                           	
  2108                           l2327:	
  2109  0020                     ;Main.c: 244: void Handle_Telegram (TelegramType ThisTelegram);Main.c: 245: {;Main.c: 24
                                 6:     unsigned char state = 255;
  2110                           	movlw	low(0FFh)
  2111  0020  30FF               	bcf	status, 5	;RP0=0, select bank0
  2112  0021  1283               	bcf	status, 6	;RP1=0, select bank0
  2113  0022  1303               	movwf	(??_Handle_Telegram+0)+0
  2114  0023  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2115  0024  084E               	movwf	(Handle_Telegram@state)
  2116  0025  00D3               	line	247
  2117                           	
  2118                           l2329:	
  2119  0026                     ;Main.c: 247:     unsigned char error = 0;
  2120                           	clrf	(Handle_Telegram@error)
  2121  0026  01D2               	line	249
  2122                           	
  2123                           l2331:	
  2124  0027                     ;Main.c: 249:     if (ThisTelegram.Command[0] == 'A')
  2125                           		movlw	65
  2126  0027  3041               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2127  0028  063C               	btfss	status,2
  2128  0029  1D03               	goto	u1441
  2129  002A  282C               	goto	u1440
  2130  002B  282D               u1441:
  2131  002C                     	goto	l2335
  2132  002C  2830               u1440:
  2133  002D                     	line	251
  2134                           	
  2135                           l2333:	
  2136  002D                     ;Main.c: 250:     {;Main.c: 251:         state = On;
  2137                           	clrf	(Handle_Telegram@state)
  2138  002D  01D3               	incf	(Handle_Telegram@state),f
  2139  002E  0AD3               	line	252
  2140                           ;Main.c: 252:     }
  2141                           	goto	l2359
  2142  002F  288C               	line	253
  2143                           ;Main.c: 253:     else if (ThisTelegram.Command[0] == 'B')
  2144                           	
  2145                           l192:	
  2146  0030                     	
  2147                           l2335:	
  2148  0030                     		movlw	66
  2149  0030  3042               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2150  0031  063C               	btfss	status,2
  2151  0032  1D03               	goto	u1451
  2152  0033  2835               	goto	u1450
  2153  0034  2836               u1451:
  2154  0035                     	goto	l2339
  2155  0035  2838               u1450:
  2156  0036                     	line	255
  2157                           	
  2158                           l2337:	
  2159  0036                     ;Main.c: 254:     {;Main.c: 255:         state = Off;
  2160                           	clrf	(Handle_Telegram@state)
  2161  0036  01D3               	line	256
  2162                           ;Main.c: 256:     }
  2163                           	goto	l2359
  2164  0037  288C               	line	257
  2165                           ;Main.c: 257:     else if (ThisTelegram.Command[0] == 'S')
  2166                           	
  2167                           l194:	
  2168  0038                     	
  2169                           l2339:	
  2170  0038                     		movlw	83
  2171  0038  3053               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2172  0039  063C               	btfss	status,2
  2173  003A  1D03               	goto	u1461
  2174  003B  283D               	goto	u1460
  2175  003C  283E               u1461:
  2176  003D                     	goto	l2357
  2177  003D  2885               u1460:
  2178  003E                     	line	259
  2179                           	
  2180                           l2341:	
  2181  003E                     ;Main.c: 258:     {;Main.c: 259:         ThisTelegram.Commandlength = 7;
  2182                           	movlw	low(07h)
  2183  003E  3007               	movwf	(??_Handle_Telegram+0)+0
  2184  003F  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2185  0040  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+02h
  2186  0041  00BB               	line	260
  2187                           ;Main.c: 260:         ThisTelegram.Command[0] = 'S';
  2188                           	movlw	low(053h)
  2189  0042  3053               	movwf	(??_Handle_Telegram+0)+0
  2190  0043  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2191  0044  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+03h
  2192  0045  00BC               	line	261
  2193                           	
  2194                           l2343:	
  2195  0046                     ;Main.c: 261:         ThisTelegram.Command[1] = (Read_Relay(Relay1) + 48);
  2196                           	movlw	low(0)
  2197  0046  3000               	fcall	_Read_Relay
  2198  0047  118A  2731  118A   	addlw	030h
  2199  004A  3E30               	bcf	status, 5	;RP0=0, select bank0
  2200  004B  1283               	bcf	status, 6	;RP1=0, select bank0
  2201  004C  1303               	movwf	(??_Handle_Telegram+0)+0
  2202  004D  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2203  004E  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+04h
  2204  004F  00BD               	line	262
  2205                           	
  2206                           l2345:	
  2207  0050                     ;Main.c: 262:         ThisTelegram.Command[2] = (Read_Relay(Relay2) + 48);
  2208                           	movlw	low(01h)
  2209  0050  3001               	fcall	_Read_Relay
  2210  0051  118A  2731  118A   	addlw	030h
  2211  0054  3E30               	bcf	status, 5	;RP0=0, select bank0
  2212  0055  1283               	bcf	status, 6	;RP1=0, select bank0
  2213  0056  1303               	movwf	(??_Handle_Telegram+0)+0
  2214  0057  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2215  0058  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+05h
  2216  0059  00BE               	line	263
  2217                           	
  2218                           l2347:	
  2219  005A                     ;Main.c: 263:         ThisTelegram.Command[3] = (Read_Relay(Relay3) + 48);
  2220                           	movlw	low(02h)
  2221  005A  3002               	fcall	_Read_Relay
  2222  005B  118A  2731  118A   	addlw	030h
  2223  005E  3E30               	bcf	status, 5	;RP0=0, select bank0
  2224  005F  1283               	bcf	status, 6	;RP1=0, select bank0
  2225  0060  1303               	movwf	(??_Handle_Telegram+0)+0
  2226  0061  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2227  0062  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+06h
  2228  0063  00BF               	line	264
  2229                           	
  2230                           l2349:	
  2231  0064                     ;Main.c: 264:         ThisTelegram.Command[4] = (Read_Relay(Relay4) + 48);
  2232                           	movlw	low(03h)
  2233  0064  3003               	fcall	_Read_Relay
  2234  0065  118A  2731  118A   	addlw	030h
  2235  0068  3E30               	bcf	status, 5	;RP0=0, select bank0
  2236  0069  1283               	bcf	status, 6	;RP1=0, select bank0
  2237  006A  1303               	movwf	(??_Handle_Telegram+0)+0
  2238  006B  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2239  006C  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+07h
  2240  006D  00C0               	line	265
  2241                           	
  2242                           l2351:	
  2243  006E                     ;Main.c: 265:         ThisTelegram.Command[5] = (Read_Relay(Relay5) + 48);
  2244                           	movlw	low(04h)
  2245  006E  3004               	fcall	_Read_Relay
  2246  006F  118A  2731  118A   	addlw	030h
  2247  0072  3E30               	bcf	status, 5	;RP0=0, select bank0
  2248  0073  1283               	bcf	status, 6	;RP1=0, select bank0
  2249  0074  1303               	movwf	(??_Handle_Telegram+0)+0
  2250  0075  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2251  0076  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+08h
  2252  0077  00C1               	line	266
  2253                           	
  2254                           l2353:	
  2255  0078                     ;Main.c: 266:         ThisTelegram.Command[6] = (Read_Relay(Relay6) + 48);
  2256                           	movlw	low(05h)
  2257  0078  3005               	fcall	_Read_Relay
  2258  0079  118A  2731  118A   	addlw	030h
  2259  007C  3E30               	bcf	status, 5	;RP0=0, select bank0
  2260  007D  1283               	bcf	status, 6	;RP1=0, select bank0
  2261  007E  1303               	movwf	(??_Handle_Telegram+0)+0
  2262  007F  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2263  0080  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+09h
  2264  0081  00C2               	line	268
  2265                           	
  2266                           l2355:	
  2267  0082                     ;Main.c: 268:         error = 1;
  2268                           	clrf	(Handle_Telegram@error)
  2269  0082  01D2               	incf	(Handle_Telegram@error),f
  2270  0083  0AD2               	line	269
  2271                           ;Main.c: 269:     }
  2272                           	goto	l2359
  2273  0084  288C               	line	270
  2274                           ;Main.c: 270:     else
  2275                           	
  2276                           l196:	
  2277  0085                     	line	272
  2278                           	
  2279                           l2357:	
  2280  0085                     ;Main.c: 271:     {;Main.c: 272:         error = 4;
  2281                           	movlw	low(04h)
  2282  0085  3004               	movwf	(??_Handle_Telegram+0)+0
  2283  0086  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2284  0087  084E               	movwf	(Handle_Telegram@error)
  2285  0088  00D2               	goto	l2359
  2286  0089  288C               	line	273
  2287                           ;Main.c: 273:     }
  2288                           	
  2289                           l197:	
  2290  008A                     	goto	l2359
  2291  008A  288C               	
  2292                           l195:	
  2293  008B                     	goto	l2359
  2294  008B  288C               	
  2295                           l193:	
  2296  008C                     	line	275
  2297                           	
  2298                           l2359:	
  2299  008C                     ;Main.c: 275:     SendTelegram(ThisTelegram);
  2300                           	movlw	(SendTelegram@MyTelegram)&0ffh
  2301  008C  3022               	movwf	fsr0
  2302  008D  0084               	movlw	low(Handle_Telegram@ThisTelegram)
  2303  008E  3039               	movwf	(??_Handle_Telegram+0)+0
  2304  008F  00CE               	movf	fsr0,w
  2305  0090  0804               	movwf	((??_Handle_Telegram+0)+0+1)
  2306  0091  00CF               	movlw	21
  2307  0092  3015               	movwf	((??_Handle_Telegram+0)+0+2)
  2308  0093  00D0               u1470:
  2309  0094                     	movf	(??_Handle_Telegram+0)+0,w
  2310  0094  084E               	movwf	fsr0
  2311  0095  0084               	bcf	status, 7	;select IRP bank0
  2312  0096  1383               	
  2313                           	movf	indf,w
  2314  0097  0800               	movwf	((??_Handle_Telegram+0)+0+3)
  2315  0098  00D1               	incf	(??_Handle_Telegram+0)+0,f
  2316  0099  0ACE               	movf	((??_Handle_Telegram+0)+0+1),w
  2317  009A  084F               	movwf	fsr0
  2318  009B  0084               	
  2319                           	movf	((??_Handle_Telegram+0)+0+3),w
  2320  009C  0851               	movwf	indf
  2321  009D  0080               	incf	((??_Handle_Telegram+0)+0+1),f
  2322  009E  0ACF               	decfsz	((??_Handle_Telegram+0)+0+2),f
  2323  009F  0BD0               	goto	u1470
  2324  00A0  2894               	
  2325                           	fcall	_SendTelegram
  2326  00A1  118A  26F8  118A   	line	277
  2327                           	
  2328                           l2361:	
  2329  00A4                     ;Main.c: 277:     if (error == 0)
  2330                           	bcf	status, 5	;RP0=0, select bank0
  2331  00A4  1283               	bcf	status, 6	;RP1=0, select bank0
  2332  00A5  1303               	movf	((Handle_Telegram@error)),w
  2333  00A6  0852               	btfss	status,2
  2334  00A7  1D03               	goto	u1481
  2335  00A8  28AA               	goto	u1480
  2336  00A9  28AB               u1481:
  2337  00AA                     	goto	l219
  2338  00AA  2A16               u1480:
  2339  00AB                     	line	279
  2340                           	
  2341                           l2363:	
  2342  00AB                     ;Main.c: 278:     {;Main.c: 279:         if (state == On && (ThisTelegram.Command[1] !='
                                 0' || ThisTelegram.Command[2] !='0' || ThisTelegram.Command[3] !='0'))
  2343                           		decf	((Handle_Telegram@state)),w
  2344  00AB  0353               	btfss	status,2
  2345  00AC  1D03               	goto	u1491
  2346  00AD  28AF               	goto	u1490
  2347  00AE  28B0               u1491:
  2348  00AF                     	goto	l2425
  2349  00AF  29F8               u1490:
  2350  00B0                     	
  2351                           l2365:	
  2352  00B0                     		movlw	48
  2353  00B0  3030               	xorwf	(0+(Handle_Telegram@ThisTelegram)+04h),w
  2354  00B1  063D               	btfss	status,2
  2355  00B2  1D03               	goto	u1501
  2356  00B3  28B5               	goto	u1500
  2357  00B4  28B6               u1501:
  2358  00B5                     	goto	l2397
  2359  00B5  298F               u1500:
  2360  00B6                     	
  2361                           l2367:	
  2362  00B6                     		movlw	48
  2363  00B6  3030               	xorwf	(0+(Handle_Telegram@ThisTelegram)+05h),w
  2364  00B7  063E               	btfss	status,2
  2365  00B8  1D03               	goto	u1511
  2366  00B9  28BB               	goto	u1510
  2367  00BA  28BC               u1511:
  2368  00BB                     	goto	l2397
  2369  00BB  298F               u1510:
  2370  00BC                     	
  2371                           l2369:	
  2372  00BC                     		movlw	48
  2373  00BC  3030               	xorwf	(0+(Handle_Telegram@ThisTelegram)+06h),w
  2374  00BD  063F               	btfsc	status,2
  2375  00BE  1903               	goto	u1521
  2376  00BF  28C1               	goto	u1520
  2377  00C0  28C2               u1521:
  2378  00C1                     	goto	l2425
  2379  00C1  29F8               u1520:
  2380  00C2                     	goto	l2397
  2381  00C2  298F               	
  2382                           l201:	
  2383  00C3                     	line	281
  2384                           ;Main.c: 280:         {;Main.c: 281:             switch (ThisTelegram.Address)
  2385                           	goto	l2397
  2386  00C3  298F               	line	283
  2387                           ;Main.c: 282:             {;Main.c: 283:                 case '1':
  2388                           	
  2389                           l203:	
  2390  00C4                     	line	284
  2391                           	
  2392                           l2371:	
  2393  00C4                     ;Main.c: 284:                     Set_Relay(Relay1, state);
  2394                           	movf	(Handle_Telegram@state),w
  2395  00C4  0853               	movwf	(??_Handle_Telegram+0)+0
  2396  00C5  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2397  00C6  084E               	movwf	(Set_Relay@State)
  2398  00C7  00A0               	movlw	low(0)
  2399  00C8  3000               	fcall	_Set_Relay
  2400  00C9  118A  2547  118A   	line	285
  2401                           	
  2402                           l2373:	
  2403  00CC                     ;Main.c: 285:                     StopRelay1OnTime = 1;
  2404                           	bcf	status, 5	;RP0=0, select bank0
  2405  00CC  1283               	bcf	status, 6	;RP1=0, select bank0
  2406  00CD  1303               	clrf	(_StopRelay1OnTime)
  2407  00CE  01EB               	incf	(_StopRelay1OnTime),f
  2408  00CF  0AEB               	line	286
  2409                           ;Main.c: 286:                     SetStopTime(Relay1StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2410                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2411  00D0  083D               	addlw	0D0h
  2412  00D1  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2413  00D2  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2414  00D3  084E               	movwf	(SetStopTime@Time10sec)
  2415  00D4  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2416  00D5  083E               	addlw	0D0h
  2417  00D6  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2418  00D7  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2419  00D8  084F               	movwf	(SetStopTime@Time1sec)
  2420  00D9  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2421  00DA  083F               	addlw	0D0h
  2422  00DB  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2423  00DC  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2424  00DD  0850               	movwf	(SetStopTime@Time100ms)
  2425  00DE  00A2               	movlw	(low(_Relay1StopTime|((0x0)<<8)))&0ffh
  2426  00DF  306C               	fcall	_SetStopTime
  2427  00E0  118A  25C7  118A   	line	287
  2428                           ;Main.c: 287:                     break;
  2429                           	goto	l219
  2430  00E3  2A16               	line	289
  2431                           ;Main.c: 289:                 case '2':
  2432                           	
  2433                           l205:	
  2434  00E4                     	line	290
  2435                           	
  2436                           l2375:	
  2437  00E4                     ;Main.c: 290:                     Set_Relay(Relay2, state);
  2438                           	bcf	status, 5	;RP0=0, select bank0
  2439  00E4  1283               	bcf	status, 6	;RP1=0, select bank0
  2440  00E5  1303               	movf	(Handle_Telegram@state),w
  2441  00E6  0853               	movwf	(??_Handle_Telegram+0)+0
  2442  00E7  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2443  00E8  084E               	movwf	(Set_Relay@State)
  2444  00E9  00A0               	movlw	low(01h)
  2445  00EA  3001               	fcall	_Set_Relay
  2446  00EB  118A  2547  118A   	line	291
  2447                           	
  2448                           l2377:	
  2449  00EE                     ;Main.c: 291:                     StopRelay2OnTime = 1;
  2450                           	bcf	status, 5	;RP0=0, select bank0
  2451  00EE  1283               	bcf	status, 6	;RP1=0, select bank0
  2452  00EF  1303               	clrf	(_StopRelay2OnTime)
  2453  00F0  01EA               	incf	(_StopRelay2OnTime),f
  2454  00F1  0AEA               	line	292
  2455                           ;Main.c: 292:                     SetStopTime(Relay2StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2456                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2457  00F2  083D               	addlw	0D0h
  2458  00F3  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2459  00F4  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2460  00F5  084E               	movwf	(SetStopTime@Time10sec)
  2461  00F6  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2462  00F7  083E               	addlw	0D0h
  2463  00F8  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2464  00F9  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2465  00FA  084F               	movwf	(SetStopTime@Time1sec)
  2466  00FB  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2467  00FC  083F               	addlw	0D0h
  2468  00FD  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2469  00FE  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2470  00FF  0850               	movwf	(SetStopTime@Time100ms)
  2471  0100  00A2               	movlw	(low(_Relay2StopTime|((0x0)<<8)))&0ffh
  2472  0101  30EB               	fcall	_SetStopTime
  2473  0102  118A  25C7  118A   	line	293
  2474                           ;Main.c: 293:                     break;
  2475                           	goto	l219
  2476  0105  2A16               	line	295
  2477                           ;Main.c: 295:                 case '3':
  2478                           	
  2479                           l206:	
  2480  0106                     	line	296
  2481                           	
  2482                           l2379:	
  2483  0106                     ;Main.c: 296:                     Set_Relay(Relay3, state);
  2484                           	bcf	status, 5	;RP0=0, select bank0
  2485  0106  1283               	bcf	status, 6	;RP1=0, select bank0
  2486  0107  1303               	movf	(Handle_Telegram@state),w
  2487  0108  0853               	movwf	(??_Handle_Telegram+0)+0
  2488  0109  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2489  010A  084E               	movwf	(Set_Relay@State)
  2490  010B  00A0               	movlw	low(02h)
  2491  010C  3002               	fcall	_Set_Relay
  2492  010D  118A  2547  118A   	line	297
  2493                           	
  2494                           l2381:	
  2495  0110                     ;Main.c: 297:                     StopRelay3OnTime = 1;
  2496                           	bcf	status, 5	;RP0=0, select bank0
  2497  0110  1283               	bcf	status, 6	;RP1=0, select bank0
  2498  0111  1303               	clrf	(_StopRelay3OnTime)
  2499  0112  01E9               	incf	(_StopRelay3OnTime),f
  2500  0113  0AE9               	line	298
  2501                           ;Main.c: 298:                     SetStopTime(Relay3StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2502                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2503  0114  083D               	addlw	0D0h
  2504  0115  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2505  0116  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2506  0117  084E               	movwf	(SetStopTime@Time10sec)
  2507  0118  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2508  0119  083E               	addlw	0D0h
  2509  011A  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2510  011B  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2511  011C  084F               	movwf	(SetStopTime@Time1sec)
  2512  011D  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2513  011E  083F               	addlw	0D0h
  2514  011F  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2515  0120  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2516  0121  0850               	movwf	(SetStopTime@Time100ms)
  2517  0122  00A2               	movlw	(low(_Relay3StopTime|((0x0)<<8)))&0ffh
  2518  0123  30E8               	fcall	_SetStopTime
  2519  0124  118A  25C7  118A   	line	299
  2520                           ;Main.c: 299:                     break;
  2521                           	goto	l219
  2522  0127  2A16               	line	301
  2523                           ;Main.c: 301:                 case '4':
  2524                           	
  2525                           l207:	
  2526  0128                     	line	302
  2527                           	
  2528                           l2383:	
  2529  0128                     ;Main.c: 302:                     Set_Relay(Relay4, state);
  2530                           	bcf	status, 5	;RP0=0, select bank0
  2531  0128  1283               	bcf	status, 6	;RP1=0, select bank0
  2532  0129  1303               	movf	(Handle_Telegram@state),w
  2533  012A  0853               	movwf	(??_Handle_Telegram+0)+0
  2534  012B  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2535  012C  084E               	movwf	(Set_Relay@State)
  2536  012D  00A0               	movlw	low(03h)
  2537  012E  3003               	fcall	_Set_Relay
  2538  012F  118A  2547  118A   	line	303
  2539                           	
  2540                           l2385:	
  2541  0132                     ;Main.c: 303:                     StopRelay4OnTime = 1;
  2542                           	bcf	status, 5	;RP0=0, select bank0
  2543  0132  1283               	bcf	status, 6	;RP1=0, select bank0
  2544  0133  1303               	clrf	(_StopRelay4OnTime)
  2545  0134  01E8               	incf	(_StopRelay4OnTime),f
  2546  0135  0AE8               	line	304
  2547                           ;Main.c: 304:                     SetStopTime(Relay4StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2548                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2549  0136  083D               	addlw	0D0h
  2550  0137  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2551  0138  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2552  0139  084E               	movwf	(SetStopTime@Time10sec)
  2553  013A  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2554  013B  083E               	addlw	0D0h
  2555  013C  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2556  013D  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2557  013E  084F               	movwf	(SetStopTime@Time1sec)
  2558  013F  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2559  0140  083F               	addlw	0D0h
  2560  0141  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2561  0142  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2562  0143  0850               	movwf	(SetStopTime@Time100ms)
  2563  0144  00A2               	movlw	(low(_Relay4StopTime|((0x0)<<8)))&0ffh
  2564  0145  30E5               	fcall	_SetStopTime
  2565  0146  118A  25C7  118A   	line	305
  2566                           ;Main.c: 305:                     break;
  2567                           	goto	l219
  2568  0149  2A16               	line	307
  2569                           ;Main.c: 307:                 case '5':
  2570                           	
  2571                           l208:	
  2572  014A                     	line	308
  2573                           	
  2574                           l2387:	
  2575  014A                     ;Main.c: 308:                     Set_Relay(Relay5, state);
  2576                           	bcf	status, 5	;RP0=0, select bank0
  2577  014A  1283               	bcf	status, 6	;RP1=0, select bank0
  2578  014B  1303               	movf	(Handle_Telegram@state),w
  2579  014C  0853               	movwf	(??_Handle_Telegram+0)+0
  2580  014D  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2581  014E  084E               	movwf	(Set_Relay@State)
  2582  014F  00A0               	movlw	low(04h)
  2583  0150  3004               	fcall	_Set_Relay
  2584  0151  118A  2547  118A   	line	309
  2585                           	
  2586                           l2389:	
  2587  0154                     ;Main.c: 309:                     StopRelay5OnTime = 1;
  2588                           	bcf	status, 5	;RP0=0, select bank0
  2589  0154  1283               	bcf	status, 6	;RP1=0, select bank0
  2590  0155  1303               	clrf	(_StopRelay5OnTime)
  2591  0156  01E7               	incf	(_StopRelay5OnTime),f
  2592  0157  0AE7               	line	310
  2593                           ;Main.c: 310:                     SetStopTime(Relay5StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2594                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2595  0158  083D               	addlw	0D0h
  2596  0159  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2597  015A  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2598  015B  084E               	movwf	(SetStopTime@Time10sec)
  2599  015C  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2600  015D  083E               	addlw	0D0h
  2601  015E  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2602  015F  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2603  0160  084F               	movwf	(SetStopTime@Time1sec)
  2604  0161  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2605  0162  083F               	addlw	0D0h
  2606  0163  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2607  0164  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2608  0165  0850               	movwf	(SetStopTime@Time100ms)
  2609  0166  00A2               	movlw	(low(_Relay5StopTime|((0x0)<<8)))&0ffh
  2610  0167  30E2               	fcall	_SetStopTime
  2611  0168  118A  25C7  118A   	line	311
  2612                           ;Main.c: 311:                     break;
  2613                           	goto	l219
  2614  016B  2A16               	line	313
  2615                           ;Main.c: 313:                 case '6':
  2616                           	
  2617                           l209:	
  2618  016C                     	line	314
  2619                           	
  2620                           l2391:	
  2621  016C                     ;Main.c: 314:                     Set_Relay(Relay6, state);
  2622                           	bcf	status, 5	;RP0=0, select bank0
  2623  016C  1283               	bcf	status, 6	;RP1=0, select bank0
  2624  016D  1303               	movf	(Handle_Telegram@state),w
  2625  016E  0853               	movwf	(??_Handle_Telegram+0)+0
  2626  016F  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2627  0170  084E               	movwf	(Set_Relay@State)
  2628  0171  00A0               	movlw	low(05h)
  2629  0172  3005               	fcall	_Set_Relay
  2630  0173  118A  2547  118A   	line	315
  2631                           	
  2632                           l2393:	
  2633  0176                     ;Main.c: 315:                     StopRelay6OnTime = 1;
  2634                           	bcf	status, 5	;RP0=0, select bank0
  2635  0176  1283               	bcf	status, 6	;RP1=0, select bank0
  2636  0177  1303               	clrf	(_StopRelay6OnTime)
  2637  0178  01E6               	incf	(_StopRelay6OnTime),f
  2638  0179  0AE6               	line	316
  2639                           ;Main.c: 316:                     SetStopTime(Relay6StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2640                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2641  017A  083D               	addlw	0D0h
  2642  017B  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2643  017C  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2644  017D  084E               	movwf	(SetStopTime@Time10sec)
  2645  017E  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2646  017F  083E               	addlw	0D0h
  2647  0180  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2648  0181  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2649  0182  084F               	movwf	(SetStopTime@Time1sec)
  2650  0183  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2651  0184  083F               	addlw	0D0h
  2652  0185  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2653  0186  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2654  0187  0850               	movwf	(SetStopTime@Time100ms)
  2655  0188  00A2               	movlw	(low(_Relay6StopTime|((0x0)<<8)))&0ffh
  2656  0189  30DF               	fcall	_SetStopTime
  2657  018A  118A  25C7  118A   	line	317
  2658                           ;Main.c: 317:                     break;
  2659                           	goto	l219
  2660  018D  2A16               	line	318
  2661                           	
  2662                           l2395:	
  2663  018E                     ;Main.c: 318:             }
  2664                           	goto	l219
  2665  018E  2A16               	
  2666                           l202:	
  2667  018F                     	
  2668                           l2397:	
  2669  018F                     	bcf	status, 5	;RP0=0, select bank0
  2670  018F  1283               	bcf	status, 6	;RP1=0, select bank0
  2671  0190  1303               	movf	0+(Handle_Telegram@ThisTelegram)+01h,w
  2672  0191  083A               	movwf	(??_Handle_Telegram+0)+0
  2673  0192  00CE               	clrf	(??_Handle_Telegram+0)+0+1
  2674  0193  01CF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2675                           ; Switch size 1, requested type "space"
  2676                           ; Number of cases is 1, Range of values is 0 to 0
  2677                           ; switch strategies available:
  2678                           ; Name         Instructions Cycles
  2679                           ; simple_byte            4     3 (average)
  2680                           ; direct_byte            9     7 (fixed)
  2681                           ; jumptable            260     6 (fixed)
  2682                           ;	Chosen strategy is simple_byte
  2683                           
  2684                           	movf 1+(??_Handle_Telegram+0)+0,w
  2685  0194  084F               	opt asmopt_push
  2686                           	opt asmopt_off
  2687                           	xorlw	0^0	; case 0
  2688  0195  3A00               	skipnz
  2689  0196  1903               	goto	l2883
  2690  0197  2999               	goto	l219
  2691  0198  2A16               	opt asmopt_pop
  2692                           	
  2693                           l2883:	
  2694  0199                     ; Switch size 1, requested type "space"
  2695                           ; Number of cases is 6, Range of values is 49 to 54
  2696                           ; switch strategies available:
  2697                           ; Name         Instructions Cycles
  2698                           ; simple_byte           19    10 (average)
  2699                           ; direct_byte           22    10 (fixed)
  2700                           ; jumptable            263     9 (fixed)
  2701                           ;	Chosen strategy is simple_byte
  2702                           
  2703                           	movf 0+(??_Handle_Telegram+0)+0,w
  2704  0199  084E               	opt asmopt_push
  2705                           	opt asmopt_off
  2706                           	xorlw	49^0	; case 49
  2707  019A  3A31               	skipnz
  2708  019B  1903               	goto	l2371
  2709  019C  28C4               	xorlw	50^49	; case 50
  2710  019D  3A03               	skipnz
  2711  019E  1903               	goto	l2375
  2712  019F  28E4               	xorlw	51^50	; case 51
  2713  01A0  3A01               	skipnz
  2714  01A1  1903               	goto	l2379
  2715  01A2  2906               	xorlw	52^51	; case 52
  2716  01A3  3A07               	skipnz
  2717  01A4  1903               	goto	l2383
  2718  01A5  2928               	xorlw	53^52	; case 53
  2719  01A6  3A01               	skipnz
  2720  01A7  1903               	goto	l2387
  2721  01A8  294A               	xorlw	54^53	; case 54
  2722  01A9  3A03               	skipnz
  2723  01AA  1903               	goto	l2391
  2724  01AB  296C               	goto	l219
  2725  01AC  2A16               	opt asmopt_pop
  2726                           
  2727                           	
  2728                           l204:	
  2729  01AD                     	line	319
  2730                           ;Main.c: 319:         }
  2731                           	goto	l219
  2732  01AD  2A16               	line	320
  2733                           ;Main.c: 320:         else
  2734                           	
  2735                           l199:	
  2736  01AE                     	line	322
  2737                           ;Main.c: 321:         {;Main.c: 322:             switch (ThisTelegram.Address)
  2738                           	goto	l2425
  2739  01AE  29F8               	line	324
  2740                           ;Main.c: 323:             {;Main.c: 324:                 case '1':
  2741                           	
  2742                           l212:	
  2743  01AF                     	line	325
  2744                           	
  2745                           l2399:	
  2746  01AF                     ;Main.c: 325:                     Set_Relay(Relay1, state);
  2747                           	movf	(Handle_Telegram@state),w
  2748  01AF  0853               	movwf	(??_Handle_Telegram+0)+0
  2749  01B0  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2750  01B1  084E               	movwf	(Set_Relay@State)
  2751  01B2  00A0               	movlw	low(0)
  2752  01B3  3000               	fcall	_Set_Relay
  2753  01B4  118A  2547  118A   	line	326
  2754                           	
  2755                           l2401:	
  2756  01B7                     ;Main.c: 326:                     StopRelay1OnTime = 0;
  2757                           	bcf	status, 5	;RP0=0, select bank0
  2758  01B7  1283               	bcf	status, 6	;RP1=0, select bank0
  2759  01B8  1303               	clrf	(_StopRelay1OnTime)
  2760  01B9  01EB               	line	328
  2761                           ;Main.c: 328:                     break;
  2762                           	goto	l219
  2763  01BA  2A16               	line	330
  2764                           ;Main.c: 330:                 case '2':
  2765                           	
  2766                           l214:	
  2767  01BB                     	line	331
  2768                           	
  2769                           l2403:	
  2770  01BB                     ;Main.c: 331:                     Set_Relay(Relay2, state);
  2771                           	movf	(Handle_Telegram@state),w
  2772  01BB  0853               	movwf	(??_Handle_Telegram+0)+0
  2773  01BC  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2774  01BD  084E               	movwf	(Set_Relay@State)
  2775  01BE  00A0               	movlw	low(01h)
  2776  01BF  3001               	fcall	_Set_Relay
  2777  01C0  118A  2547  118A   	line	332
  2778                           	
  2779                           l2405:	
  2780  01C3                     ;Main.c: 332:                     StopRelay2OnTime = 0;
  2781                           	bcf	status, 5	;RP0=0, select bank0
  2782  01C3  1283               	bcf	status, 6	;RP1=0, select bank0
  2783  01C4  1303               	clrf	(_StopRelay2OnTime)
  2784  01C5  01EA               	line	333
  2785                           ;Main.c: 333:                     break;
  2786                           	goto	l219
  2787  01C6  2A16               	line	335
  2788                           ;Main.c: 335:                 case '3':
  2789                           	
  2790                           l215:	
  2791  01C7                     	line	336
  2792                           	
  2793                           l2407:	
  2794  01C7                     ;Main.c: 336:                     Set_Relay(Relay3, state);
  2795                           	movf	(Handle_Telegram@state),w
  2796  01C7  0853               	movwf	(??_Handle_Telegram+0)+0
  2797  01C8  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2798  01C9  084E               	movwf	(Set_Relay@State)
  2799  01CA  00A0               	movlw	low(02h)
  2800  01CB  3002               	fcall	_Set_Relay
  2801  01CC  118A  2547  118A   	line	337
  2802                           	
  2803                           l2409:	
  2804  01CF                     ;Main.c: 337:                     StopRelay3OnTime = 0;
  2805                           	bcf	status, 5	;RP0=0, select bank0
  2806  01CF  1283               	bcf	status, 6	;RP1=0, select bank0
  2807  01D0  1303               	clrf	(_StopRelay3OnTime)
  2808  01D1  01E9               	line	338
  2809                           ;Main.c: 338:                     break;
  2810                           	goto	l219
  2811  01D2  2A16               	line	340
  2812                           ;Main.c: 340:                 case '4':
  2813                           	
  2814                           l216:	
  2815  01D3                     	line	341
  2816                           	
  2817                           l2411:	
  2818  01D3                     ;Main.c: 341:                     Set_Relay(Relay4, state);
  2819                           	movf	(Handle_Telegram@state),w
  2820  01D3  0853               	movwf	(??_Handle_Telegram+0)+0
  2821  01D4  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2822  01D5  084E               	movwf	(Set_Relay@State)
  2823  01D6  00A0               	movlw	low(03h)
  2824  01D7  3003               	fcall	_Set_Relay
  2825  01D8  118A  2547  118A   	line	342
  2826                           	
  2827                           l2413:	
  2828  01DB                     ;Main.c: 342:                     StopRelay4OnTime = 0;
  2829                           	bcf	status, 5	;RP0=0, select bank0
  2830  01DB  1283               	bcf	status, 6	;RP1=0, select bank0
  2831  01DC  1303               	clrf	(_StopRelay4OnTime)
  2832  01DD  01E8               	line	343
  2833                           ;Main.c: 343:                     break;
  2834                           	goto	l219
  2835  01DE  2A16               	line	345
  2836                           ;Main.c: 345:                 case '5':
  2837                           	
  2838                           l217:	
  2839  01DF                     	line	346
  2840                           	
  2841                           l2415:	
  2842  01DF                     ;Main.c: 346:                     Set_Relay(Relay5, state);
  2843                           	movf	(Handle_Telegram@state),w
  2844  01DF  0853               	movwf	(??_Handle_Telegram+0)+0
  2845  01E0  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2846  01E1  084E               	movwf	(Set_Relay@State)
  2847  01E2  00A0               	movlw	low(04h)
  2848  01E3  3004               	fcall	_Set_Relay
  2849  01E4  118A  2547  118A   	line	347
  2850                           	
  2851                           l2417:	
  2852  01E7                     ;Main.c: 347:                     StopRelay5OnTime = 0;
  2853                           	bcf	status, 5	;RP0=0, select bank0
  2854  01E7  1283               	bcf	status, 6	;RP1=0, select bank0
  2855  01E8  1303               	clrf	(_StopRelay5OnTime)
  2856  01E9  01E7               	line	348
  2857                           ;Main.c: 348:                     break;
  2858                           	goto	l219
  2859  01EA  2A16               	line	350
  2860                           ;Main.c: 350:                 case '6':
  2861                           	
  2862                           l218:	
  2863  01EB                     	line	351
  2864                           	
  2865                           l2419:	
  2866  01EB                     ;Main.c: 351:                     Set_Relay(Relay6, state);
  2867                           	movf	(Handle_Telegram@state),w
  2868  01EB  0853               	movwf	(??_Handle_Telegram+0)+0
  2869  01EC  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2870  01ED  084E               	movwf	(Set_Relay@State)
  2871  01EE  00A0               	movlw	low(05h)
  2872  01EF  3005               	fcall	_Set_Relay
  2873  01F0  118A  2547  118A   	line	352
  2874                           	
  2875                           l2421:	
  2876  01F3                     ;Main.c: 352:                     StopRelay6OnTime = 0;
  2877                           	bcf	status, 5	;RP0=0, select bank0
  2878  01F3  1283               	bcf	status, 6	;RP1=0, select bank0
  2879  01F4  1303               	clrf	(_StopRelay6OnTime)
  2880  01F5  01E6               	line	353
  2881                           ;Main.c: 353:                     break;
  2882                           	goto	l219
  2883  01F6  2A16               	line	355
  2884                           	
  2885                           l2423:	
  2886  01F7                     ;Main.c: 355:             }
  2887                           	goto	l219
  2888  01F7  2A16               	
  2889                           l211:	
  2890  01F8                     	
  2891                           l2425:	
  2892  01F8                     	movf	0+(Handle_Telegram@ThisTelegram)+01h,w
  2893  01F8  083A               	movwf	(??_Handle_Telegram+0)+0
  2894  01F9  00CE               	clrf	(??_Handle_Telegram+0)+0+1
  2895  01FA  01CF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2896                           ; Switch size 1, requested type "space"
  2897                           ; Number of cases is 1, Range of values is 0 to 0
  2898                           ; switch strategies available:
  2899                           ; Name         Instructions Cycles
  2900                           ; simple_byte            4     3 (average)
  2901                           ; direct_byte            9     7 (fixed)
  2902                           ; jumptable            260     6 (fixed)
  2903                           ;	Chosen strategy is simple_byte
  2904                           
  2905                           	movf 1+(??_Handle_Telegram+0)+0,w
  2906  01FB  084F               	opt asmopt_push
  2907                           	opt asmopt_off
  2908                           	xorlw	0^0	; case 0
  2909  01FC  3A00               	skipnz
  2910  01FD  1903               	goto	l2885
  2911  01FE  2A00               	goto	l219
  2912  01FF  2A16               	opt asmopt_pop
  2913                           	
  2914                           l2885:	
  2915  0200                     ; Switch size 1, requested type "space"
  2916                           ; Number of cases is 6, Range of values is 49 to 54
  2917                           ; switch strategies available:
  2918                           ; Name         Instructions Cycles
  2919                           ; simple_byte           19    10 (average)
  2920                           ; direct_byte           22    10 (fixed)
  2921                           ; jumptable            263     9 (fixed)
  2922                           ;	Chosen strategy is simple_byte
  2923                           
  2924                           	movf 0+(??_Handle_Telegram+0)+0,w
  2925  0200  084E               	opt asmopt_push
  2926                           	opt asmopt_off
  2927                           	xorlw	49^0	; case 49
  2928  0201  3A31               	skipnz
  2929  0202  1903               	goto	l2399
  2930  0203  29AF               	xorlw	50^49	; case 50
  2931  0204  3A03               	skipnz
  2932  0205  1903               	goto	l2403
  2933  0206  29BB               	xorlw	51^50	; case 51
  2934  0207  3A01               	skipnz
  2935  0208  1903               	goto	l2407
  2936  0209  29C7               	xorlw	52^51	; case 52
  2937  020A  3A07               	skipnz
  2938  020B  1903               	goto	l2411
  2939  020C  29D3               	xorlw	53^52	; case 53
  2940  020D  3A01               	skipnz
  2941  020E  1903               	goto	l2415
  2942  020F  29DF               	xorlw	54^53	; case 54
  2943  0210  3A03               	skipnz
  2944  0211  1903               	goto	l2419
  2945  0212  29EB               	goto	l219
  2946  0213  2A16               	opt asmopt_pop
  2947                           
  2948                           	
  2949                           l213:	
  2950  0214                     	goto	l219
  2951  0214  2A16               	line	357
  2952                           ;Main.c: 357:         }
  2953                           	
  2954                           l210:	
  2955  0215                     	goto	l219
  2956  0215  2A16               	line	358
  2957                           ;Main.c: 358:     }
  2958                           	
  2959                           l198:	
  2960  0216                     	line	359
  2961                           	
  2962                           l219:	
  2963  0216                     	return
  2964  0216  0008               	opt stack 0
  2965                           GLOBAL	__end_of_Handle_Telegram
  2966                           	__end_of_Handle_Telegram:
  2967  0217                     	signat	_Handle_Telegram,4217
  2968                           	global	_SetStopTime
  2969                           
  2970 ;; *************** function _SetStopTime *****************
  2971 ;; Defined at:
  2972 ;;		line 187 in file "Main.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  RelayStopTim    1    wreg     PTR unsigned char 
  2975 ;;		 -> Relay6StopTime(3), Relay5StopTime(3), Relay4StopTime(3), Relay3StopTime(3), 
  2976 ;;		 -> Relay2StopTime(3), Relay1StopTime(3), 
  2977 ;;  Time10sec       1    0[BANK0 ] unsigned char 
  2978 ;;  Time1sec        1    1[BANK0 ] unsigned char 
  2979 ;;  Time100ms       1    2[BANK0 ] unsigned char 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  RelayStopTim    1    5[BANK0 ] PTR unsigned char 
  2982 ;;		 -> Relay6StopTime(3), Relay5StopTime(3), Relay4StopTime(3), Relay3StopTime(3), 
  2983 ;;		 -> Relay2StopTime(3), Relay1StopTime(3), 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2993 ;;      Params:         0       3       0       0
  2994 ;;      Locals:         0       1       0       0
  2995 ;;      Temps:          0       2       0       0
  2996 ;;      Totals:         0       6       0       0
  2997 ;;Total ram usage:        6 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    3
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_Handle_Telegram
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3007                           	line	187
  3008                           global __ptext8
  3009                           __ptext8:	;psect for function _SetStopTime
  3010  05C7                     psect	text8
  3011                           	file	"Main.c"
  3012                           	line	187
  3013                           	global	__size_of_SetStopTime
  3014                           	__size_of_SetStopTime	equ	__end_of_SetStopTime-_SetStopTime
  3015  0075                     	
  3016                           _SetStopTime:	
  3017  05C7                     ;incstack = 0
  3018                           	opt	stack 3
  3019                           ; Regs used in _SetStopTime: [wreg-fsr0h+status,2+status,0]
  3020                           ;SetStopTime@RelayStopTime stored from wreg
  3021                           	bcf	status, 5	;RP0=0, select bank0
  3022  05C7  1283               	bcf	status, 6	;RP1=0, select bank0
  3023  05C8  1303               	movwf	(SetStopTime@RelayStopTime)
  3024  05C9  00A5               	line	189
  3025                           	
  3026                           l2035:	
  3027  05CA                     ;Main.c: 187: void SetStopTime(unsigned char *RelayStopTime, unsigned char Time10sec, un
                                 signed char Time1sec, unsigned char Time100ms);Main.c: 188: {;Main.c: 189:     if (Count
                                 er_100ms + Time100ms >= 10)
  3028                           	movf	(SetStopTime@Time100ms),w
  3029  05CA  0822               	addwf	(_Counter_100ms),w
  3030  05CB  075C               	movwf	(??_SetStopTime+0)+0
  3031  05CC  00A3               	movf	(_Counter_100ms+1),w
  3032  05CD  085D               	skipnc
  3033  05CE  1803               	incf	(_Counter_100ms+1),w
  3034  05CF  0A5D               	movwf	((??_SetStopTime+0)+0)+1
  3035  05D0  00A4               	movlw	0
  3036  05D1  3000               	subwf	1+(??_SetStopTime+0)+0,w
  3037  05D2  0224               	movlw	0Ah
  3038  05D3  300A               	skipnz
  3039  05D4  1903               	subwf	0+(??_SetStopTime+0)+0,w
  3040  05D5  0223               	skipc
  3041  05D6  1C03               	goto	u1011
  3042  05D7  2DD9               	goto	u1010
  3043  05D8  2DDA               u1011:
  3044  05D9                     	goto	l2041
  3045  05D9  2DEA               u1010:
  3046  05DA                     	line	191
  3047                           	
  3048                           l2037:	
  3049  05DA                     ;Main.c: 190:     {;Main.c: 191:         *(RelayStopTime + 2) = Counter_100ms + Time100m
                                 s - 10;
  3050                           	movf	(_Counter_100ms),w
  3051  05DA  085C               	addwf	(SetStopTime@Time100ms),w
  3052  05DB  0722               	addlw	0F6h
  3053  05DC  3EF6               	movwf	(??_SetStopTime+0)+0
  3054  05DD  00A3               	movf	(SetStopTime@RelayStopTime),w
  3055  05DE  0825               	addlw	02h
  3056  05DF  3E02               	movwf	fsr0
  3057  05E0  0084               	movf	(??_SetStopTime+0)+0,w
  3058  05E1  0823               	bcf	status, 7	;select IRP bank0
  3059  05E2  1383               	movwf	indf
  3060  05E3  0080               	line	193
  3061                           	
  3062                           l2039:	
  3063  05E4                     ;Main.c: 193:         Time1sec = Time1sec + 1;
  3064                           	movf	(SetStopTime@Time1sec),w
  3065  05E4  0821               	addlw	01h
  3066  05E5  3E01               	movwf	(??_SetStopTime+0)+0
  3067  05E6  00A3               	movf	(??_SetStopTime+0)+0,w
  3068  05E7  0823               	movwf	(SetStopTime@Time1sec)
  3069  05E8  00A1               	line	194
  3070                           ;Main.c: 194:     }
  3071                           	goto	l2043
  3072  05E9  2DF4               	line	195
  3073                           ;Main.c: 195:     else
  3074                           	
  3075                           l183:	
  3076  05EA                     	line	197
  3077                           	
  3078                           l2041:	
  3079  05EA                     ;Main.c: 196:     {;Main.c: 197:         *(RelayStopTime + 2) = Counter_100ms + Time100m
                                 s;
  3080                           	movf	(_Counter_100ms),w
  3081  05EA  085C               	addwf	(SetStopTime@Time100ms),w
  3082  05EB  0722               	movwf	(??_SetStopTime+0)+0
  3083  05EC  00A3               	movf	(SetStopTime@RelayStopTime),w
  3084  05ED  0825               	addlw	02h
  3085  05EE  3E02               	movwf	fsr0
  3086  05EF  0084               	movf	(??_SetStopTime+0)+0,w
  3087  05F0  0823               	bcf	status, 7	;select IRP bank0
  3088  05F1  1383               	movwf	indf
  3089  05F2  0080               	goto	l2043
  3090  05F3  2DF4               	line	198
  3091                           ;Main.c: 198:     }
  3092                           	
  3093                           l184:	
  3094  05F4                     	line	200
  3095                           	
  3096                           l2043:	
  3097  05F4                     ;Main.c: 200:     if (Counter_1sec + Time1sec >= 10)
  3098                           	movf	(SetStopTime@Time1sec),w
  3099  05F4  0821               	addwf	(_Counter_1sec),w
  3100  05F5  075A               	movwf	(??_SetStopTime+0)+0
  3101  05F6  00A3               	movf	(_Counter_1sec+1),w
  3102  05F7  085B               	skipnc
  3103  05F8  1803               	incf	(_Counter_1sec+1),w
  3104  05F9  0A5B               	movwf	((??_SetStopTime+0)+0)+1
  3105  05FA  00A4               	movlw	0
  3106  05FB  3000               	subwf	1+(??_SetStopTime+0)+0,w
  3107  05FC  0224               	movlw	0Ah
  3108  05FD  300A               	skipnz
  3109  05FE  1903               	subwf	0+(??_SetStopTime+0)+0,w
  3110  05FF  0223               	skipc
  3111  0600  1C03               	goto	u1021
  3112  0601  2E03               	goto	u1020
  3113  0602  2E04               u1021:
  3114  0603                     	goto	l2049
  3115  0603  2E12               u1020:
  3116  0604                     	line	202
  3117                           	
  3118                           l2045:	
  3119  0604                     ;Main.c: 201:     {;Main.c: 202:         *(RelayStopTime + 1) = Counter_1sec + Time1sec 
                                 - 10;
  3120                           	movf	(_Counter_1sec),w
  3121  0604  085A               	addwf	(SetStopTime@Time1sec),w
  3122  0605  0721               	addlw	0F6h
  3123  0606  3EF6               	movwf	(??_SetStopTime+0)+0
  3124  0607  00A3               	incf	(SetStopTime@RelayStopTime),w
  3125  0608  0A25               	movwf	fsr0
  3126  0609  0084               	movf	(??_SetStopTime+0)+0,w
  3127  060A  0823               	movwf	indf
  3128  060B  0080               	line	204
  3129                           	
  3130                           l2047:	
  3131  060C                     ;Main.c: 204:         Time10sec = Time10sec + 1;
  3132                           	movf	(SetStopTime@Time10sec),w
  3133  060C  0820               	addlw	01h
  3134  060D  3E01               	movwf	(??_SetStopTime+0)+0
  3135  060E  00A3               	movf	(??_SetStopTime+0)+0,w
  3136  060F  0823               	movwf	(SetStopTime@Time10sec)
  3137  0610  00A0               	line	205
  3138                           ;Main.c: 205:     }
  3139                           	goto	l2051
  3140  0611  2E1A               	line	206
  3141                           ;Main.c: 206:     else
  3142                           	
  3143                           l185:	
  3144  0612                     	line	208
  3145                           	
  3146                           l2049:	
  3147  0612                     ;Main.c: 207:     {;Main.c: 208:         *(RelayStopTime + 1) = Counter_1sec + Time1sec;
                                 
  3148                           	movf	(_Counter_1sec),w
  3149  0612  085A               	addwf	(SetStopTime@Time1sec),w
  3150  0613  0721               	movwf	(??_SetStopTime+0)+0
  3151  0614  00A3               	incf	(SetStopTime@RelayStopTime),w
  3152  0615  0A25               	movwf	fsr0
  3153  0616  0084               	movf	(??_SetStopTime+0)+0,w
  3154  0617  0823               	movwf	indf
  3155  0618  0080               	goto	l2051
  3156  0619  2E1A               	line	209
  3157                           ;Main.c: 209:     }
  3158                           	
  3159                           l186:	
  3160  061A                     	line	211
  3161                           	
  3162                           l2051:	
  3163  061A                     ;Main.c: 211:     if (Counter_10sec + Time10sec >= 10)
  3164                           	movf	(SetStopTime@Time10sec),w
  3165  061A  0820               	addwf	(_Counter_10sec),w
  3166  061B  0758               	movwf	(??_SetStopTime+0)+0
  3167  061C  00A3               	movf	(_Counter_10sec+1),w
  3168  061D  0859               	skipnc
  3169  061E  1803               	incf	(_Counter_10sec+1),w
  3170  061F  0A59               	movwf	((??_SetStopTime+0)+0)+1
  3171  0620  00A4               	movlw	0
  3172  0621  3000               	subwf	1+(??_SetStopTime+0)+0,w
  3173  0622  0224               	movlw	0Ah
  3174  0623  300A               	skipnz
  3175  0624  1903               	subwf	0+(??_SetStopTime+0)+0,w
  3176  0625  0223               	skipc
  3177  0626  1C03               	goto	u1031
  3178  0627  2E29               	goto	u1030
  3179  0628  2E2A               u1031:
  3180  0629                     	goto	l2055
  3181  0629  2E33               u1030:
  3182  062A                     	line	213
  3183                           	
  3184                           l2053:	
  3185  062A                     ;Main.c: 212:     {;Main.c: 213:         *(RelayStopTime + 0) = Counter_10sec + Time10se
                                 c - 10;
  3186                           	movf	(_Counter_10sec),w
  3187  062A  0858               	addwf	(SetStopTime@Time10sec),w
  3188  062B  0720               	addlw	0F6h
  3189  062C  3EF6               	movwf	(??_SetStopTime+0)+0
  3190  062D  00A3               	movf	(SetStopTime@RelayStopTime),w
  3191  062E  0825               	movwf	fsr0
  3192  062F  0084               	movf	(??_SetStopTime+0)+0,w
  3193  0630  0823               	movwf	indf
  3194  0631  0080               	line	214
  3195                           ;Main.c: 214:     }
  3196                           	goto	l189
  3197  0632  2E3B               	line	215
  3198                           ;Main.c: 215:     else
  3199                           	
  3200                           l187:	
  3201  0633                     	line	217
  3202                           	
  3203                           l2055:	
  3204  0633                     ;Main.c: 216:     {;Main.c: 217:         *(RelayStopTime + 0) = Counter_10sec + Time10se
                                 c;
  3205                           	movf	(_Counter_10sec),w
  3206  0633  0858               	addwf	(SetStopTime@Time10sec),w
  3207  0634  0720               	movwf	(??_SetStopTime+0)+0
  3208  0635  00A3               	movf	(SetStopTime@RelayStopTime),w
  3209  0636  0825               	movwf	fsr0
  3210  0637  0084               	movf	(??_SetStopTime+0)+0,w
  3211  0638  0823               	movwf	indf
  3212  0639  0080               	goto	l189
  3213  063A  2E3B               	line	218
  3214                           ;Main.c: 218:     }
  3215                           	
  3216                           l188:	
  3217  063B                     	line	240
  3218                           	
  3219                           l189:	
  3220  063B                     	return
  3221  063B  0008               	opt stack 0
  3222                           GLOBAL	__end_of_SetStopTime
  3223                           	__end_of_SetStopTime:
  3224  063C                     	signat	_SetStopTime,16505
  3225                           	global	_SendTelegram
  3226                           
  3227 ;; *************** function _SendTelegram *****************
  3228 ;; Defined at:
  3229 ;;		line 56 in file "TelegramInterpreter.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  MyTelegram     21    2[BANK0 ] struct .
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  CommandCount    1   24[BANK0 ] unsigned char 
  3234 ;;  MacCounter      1    0        unsigned char 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3244 ;;      Params:         0      21       0       0
  3245 ;;      Locals:         0       1       0       0
  3246 ;;      Temps:          0       1       0       0
  3247 ;;      Totals:         0      23       0       0
  3248 ;;Total ram usage:       23 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:    4
  3251 ;; This function calls:
  3252 ;;		_AddByteToBuffer
  3253 ;; This function is called by:
  3254 ;;		_Handle_Telegram
  3255 ;;		_Say_Hello
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3259                           	file	"TelegramInterpreter.c"
  3260                           	line	56
  3261                           global __ptext9
  3262                           __ptext9:	;psect for function _SendTelegram
  3263  06F8                     psect	text9
  3264                           	file	"TelegramInterpreter.c"
  3265                           	line	56
  3266                           	global	__size_of_SendTelegram
  3267                           	__size_of_SendTelegram	equ	__end_of_SendTelegram-_SendTelegram
  3268  0039                     	
  3269                           _SendTelegram:	
  3270  06F8                     ;incstack = 0
  3271                           	opt	stack 2
  3272                           ; Regs used in _SendTelegram: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3273                           	line	63
  3274                           	
  3275                           l1957:	
  3276  06F8                     ;TelegramInterpreter.c: 56: void SendTelegram(TelegramType MyTelegram);TelegramInterpret
                                 er.c: 57: {;TelegramInterpreter.c: 60:     unsigned char MacCounter;;TelegramInterpreter
                                 .c: 61:     unsigned char CommandCounter;;TelegramInterpreter.c: 63:     AddByteToBuffer
                                 (MyTelegram.Start);
  3277                           	bcf	status, 5	;RP0=0, select bank0
  3278  06F8  1283               	bcf	status, 6	;RP1=0, select bank0
  3279  06F9  1303               	movf	(SendTelegram@MyTelegram),w
  3280  06FA  0822               	fcall	_AddByteToBuffer
  3281  06FB  158A  27E4  118A   	line	65
  3282                           ;TelegramInterpreter.c: 65:     AddByteToBuffer(MyTelegram.Address);
  3283                           	bcf	status, 5	;RP0=0, select bank0
  3284  06FE  1283               	bcf	status, 6	;RP1=0, select bank0
  3285  06FF  1303               	movf	0+(SendTelegram@MyTelegram)+01h,w
  3286  0700  0823               	fcall	_AddByteToBuffer
  3287  0701  158A  27E4  118A   	line	66
  3288                           ;TelegramInterpreter.c: 66:     AddByteToBuffer(MyTelegram.Commandlength + 48);
  3289                           	bcf	status, 5	;RP0=0, select bank0
  3290  0704  1283               	bcf	status, 6	;RP1=0, select bank0
  3291  0705  1303               	movf	0+(SendTelegram@MyTelegram)+02h,w
  3292  0706  0824               	addlw	030h
  3293  0707  3E30               	fcall	_AddByteToBuffer
  3294  0708  158A  27E4  118A   	line	69
  3295                           	
  3296                           l1959:	
  3297  070B                     ;TelegramInterpreter.c: 69:     for (CommandCounter = 0; CommandCounter < MyTelegram.Com
                                 mandlength; CommandCounter ++)
  3298                           	bcf	status, 5	;RP0=0, select bank0
  3299  070B  1283               	bcf	status, 6	;RP1=0, select bank0
  3300  070C  1303               	clrf	(SendTelegram@CommandCounter)
  3301  070D  01B8               	goto	l1965
  3302  070E  2F1F               	
  3303                           l482:	
  3304  070F                     	line	71
  3305                           	
  3306                           l1961:	
  3307  070F                     ;TelegramInterpreter.c: 70:     {;TelegramInterpreter.c: 71:         AddByteToBuffer(MyT
                                 elegram.Command[CommandCounter]);
  3308                           	movf	(SendTelegram@CommandCounter),w
  3309  070F  0838               	addlw	03h
  3310  0710  3E03               	addlw	low(SendTelegram@MyTelegram|((0x0)<<8))&0ffh
  3311  0711  3E22               	movwf	fsr0
  3312  0712  0084               	bcf	status, 7	;select IRP bank0
  3313  0713  1383               	movf	indf,w
  3314  0714  0800               	fcall	_AddByteToBuffer
  3315  0715  158A  27E4  118A   	line	72
  3316                           	
  3317                           l1963:	
  3318  0718                     ;TelegramInterpreter.c: 72:     }
  3319                           	movlw	low(01h)
  3320  0718  3001               	bcf	status, 5	;RP0=0, select bank0
  3321  0719  1283               	bcf	status, 6	;RP1=0, select bank0
  3322  071A  1303               	movwf	(??_SendTelegram+0)+0
  3323  071B  00B7               	movf	(??_SendTelegram+0)+0,w
  3324  071C  0837               	addwf	(SendTelegram@CommandCounter),f
  3325  071D  07B8               	goto	l1965
  3326  071E  2F1F               	
  3327                           l481:	
  3328  071F                     	
  3329                           l1965:	
  3330  071F                     	movf	0+(SendTelegram@MyTelegram)+02h,w
  3331  071F  0824               	subwf	(SendTelegram@CommandCounter),w
  3332  0720  0238               	skipc
  3333  0721  1C03               	goto	u881
  3334  0722  2F24               	goto	u880
  3335  0723  2F25               u881:
  3336  0724                     	goto	l1961
  3337  0724  2F0F               u880:
  3338  0725                     	goto	l1967
  3339  0725  2F26               	
  3340                           l483:	
  3341  0726                     	line	74
  3342                           	
  3343                           l1967:	
  3344  0726                     ;TelegramInterpreter.c: 74:     AddByteToBuffer(MyTelegram.End[0]);
  3345                           	movf	0+(SendTelegram@MyTelegram)+013h,w
  3346  0726  0835               	fcall	_AddByteToBuffer
  3347  0727  158A  27E4  118A   	line	75
  3348                           ;TelegramInterpreter.c: 75:     AddByteToBuffer(MyTelegram.End[1]);
  3349                           	bcf	status, 5	;RP0=0, select bank0
  3350  072A  1283               	bcf	status, 6	;RP1=0, select bank0
  3351  072B  1303               	movf	0+(SendTelegram@MyTelegram)+014h,w
  3352  072C  0836               	fcall	_AddByteToBuffer
  3353  072D  158A  27E4  118A   	line	77
  3354                           	
  3355                           l484:	
  3356  0730                     	return
  3357  0730  0008               	opt stack 0
  3358                           GLOBAL	__end_of_SendTelegram
  3359                           	__end_of_SendTelegram:
  3360  0731                     	signat	_SendTelegram,4217
  3361                           	global	_AddByteToBuffer
  3362                           
  3363 ;; *************** function _AddByteToBuffer *****************
  3364 ;; Defined at:
  3365 ;;		line 120 in file "Eusart.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  Byte            1    wreg     unsigned char 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  Byte            1    1[BANK0 ] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3379 ;;      Params:         0       0       0       0
  3380 ;;      Locals:         0       1       0       0
  3381 ;;      Temps:          0       1       0       0
  3382 ;;      Totals:         0       2       0       0
  3383 ;;Total ram usage:        2 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    3
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_main
  3390 ;;		_SendTelegram
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3394                           	file	"Eusart.c"
  3395                           	line	120
  3396                           global __ptext10
  3397                           __ptext10:	;psect for function _AddByteToBuffer
  3398  0FE4                     psect	text10
  3399                           	file	"Eusart.c"
  3400                           	line	120
  3401                           	global	__size_of_AddByteToBuffer
  3402                           	__size_of_AddByteToBuffer	equ	__end_of_AddByteToBuffer-_AddByteToBuffer
  3403  001C                     	
  3404                           _AddByteToBuffer:	
  3405  0FE4                     ;incstack = 0
  3406                           	opt	stack 2
  3407                           ; Regs used in _AddByteToBuffer: [wreg-fsr0h+status,2+status,0]
  3408                           ;AddByteToBuffer@Byte stored from wreg
  3409                           	bcf	status, 5	;RP0=0, select bank0
  3410  0FE4  1283               	bcf	status, 6	;RP1=0, select bank0
  3411  0FE5  1303               	movwf	(AddByteToBuffer@Byte)
  3412  0FE6  00A1               	line	122
  3413                           	
  3414                           l1947:	
  3415  0FE7                     ;Eusart.c: 120: void AddByteToBuffer (unsigned char Byte);Eusart.c: 121: {;Eusart.c: 122
                                 :     SendBuffer[BufferHead] = Byte;
  3416                           	movf	(AddByteToBuffer@Byte),w
  3417  0FE7  0821               	movwf	(??_AddByteToBuffer+0)+0
  3418  0FE8  00A0               	movf	(_BufferHead),w
  3419  0FE9  087D               	addlw	low(_SendBuffer|((0x0)<<8))&0ffh
  3420  0FEA  3EA0               	movwf	fsr0
  3421  0FEB  0084               	movf	(??_AddByteToBuffer+0)+0,w
  3422  0FEC  0820               	bcf	status, 7	;select IRP bank1
  3423  0FED  1383               	movwf	indf
  3424  0FEE  0080               	line	124
  3425                           	
  3426                           l1949:	
  3427  0FEF                     ;Eusart.c: 124:     if (BufferHead == 39)
  3428                           		movlw	39
  3429  0FEF  3027               	xorwf	((_BufferHead)),w
  3430  0FF0  067D               	btfss	status,2
  3431  0FF1  1D03               	goto	u871
  3432  0FF2  2FF4               	goto	u870
  3433  0FF3  2FF5               u871:
  3434  0FF4                     	goto	l1953
  3435  0FF4  2FF7               u870:
  3436  0FF5                     	line	126
  3437                           	
  3438                           l1951:	
  3439  0FF5                     ;Eusart.c: 125:     {;Eusart.c: 126:         BufferHead = 0;
  3440                           	clrf	(_BufferHead)
  3441  0FF5  01FD               	line	127
  3442                           ;Eusart.c: 127:     }
  3443                           	goto	l1955
  3444  0FF6  2FFC               	line	128
  3445                           ;Eusart.c: 128:     else
  3446                           	
  3447                           l316:	
  3448  0FF7                     	line	130
  3449                           	
  3450                           l1953:	
  3451  0FF7                     ;Eusart.c: 129:     {;Eusart.c: 130:         BufferHead++;
  3452                           	movlw	low(01h)
  3453  0FF7  3001               	movwf	(??_AddByteToBuffer+0)+0
  3454  0FF8  00A0               	movf	(??_AddByteToBuffer+0)+0,w
  3455  0FF9  0820               	addwf	(_BufferHead),f
  3456  0FFA  07FD               	goto	l1955
  3457  0FFB  2FFC               	line	131
  3458                           ;Eusart.c: 131:     }
  3459                           	
  3460                           l317:	
  3461  0FFC                     	line	134
  3462                           	
  3463                           l1955:	
  3464  0FFC                     ;Eusart.c: 134:     PIE1bits.TXIE = 1;
  3465                           	bsf	status, 5	;RP0=1, select bank1
  3466  0FFC  1683               	bcf	status, 6	;RP1=0, select bank1
  3467  0FFD  1303               	bsf	(140)^080h,1	;volatile
  3468  0FFE  148C               	line	136
  3469                           	
  3470                           l318:	
  3471  0FFF                     	return
  3472  0FFF  0008               	opt stack 0
  3473                           GLOBAL	__end_of_AddByteToBuffer
  3474                           	__end_of_AddByteToBuffer:
  3475  1000                     	signat	_AddByteToBuffer,4217
  3476                           	global	_Read_Relay
  3477                           
  3478 ;; *************** function _Read_Relay *****************
  3479 ;; Defined at:
  3480 ;;		line 161 in file "RelayControl.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  Relay           1    wreg     unsigned char 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  Relay           1    2[BANK0 ] unsigned char 
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      unsigned char 
  3487 ;; Registers used:
  3488 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3494 ;;      Params:         0       0       0       0
  3495 ;;      Locals:         0       1       0       0
  3496 ;;      Temps:          0       2       0       0
  3497 ;;      Totals:         0       3       0       0
  3498 ;;Total ram usage:        3 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:    3
  3501 ;; This function calls:
  3502 ;;		Nothing
  3503 ;; This function is called by:
  3504 ;;		_Handle_Telegram
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3508                           	file	"RelayControl.c"
  3509                           	line	161
  3510                           global __ptext11
  3511                           __ptext11:	;psect for function _Read_Relay
  3512  0731                     psect	text11
  3513                           	file	"RelayControl.c"
  3514                           	line	161
  3515                           	global	__size_of_Read_Relay
  3516                           	__size_of_Read_Relay	equ	__end_of_Read_Relay-_Read_Relay
  3517  0038                     	
  3518                           _Read_Relay:	
  3519  0731                     ;incstack = 0
  3520                           	opt	stack 3
  3521                           ; Regs used in _Read_Relay: [wreg-fsr0h+status,2+status,0]
  3522                           ;Read_Relay@Relay stored from wreg
  3523                           	bcf	status, 5	;RP0=0, select bank0
  3524  0731  1283               	bcf	status, 6	;RP1=0, select bank0
  3525  0732  1303               	movwf	(Read_Relay@Relay)
  3526  0733  00A2               	line	163
  3527                           	
  3528                           l2057:	
  3529  0734                     ;RelayControl.c: 161: unsigned char Read_Relay (unsigned char Relay);RelayControl.c: 162
                                 :     {;RelayControl.c: 163:         switch (Relay)
  3530                           	goto	l2085
  3531  0734  2F52               	line	165
  3532                           ;RelayControl.c: 164:         {;RelayControl.c: 165:             case Relay1:
  3533                           	
  3534                           l411:	
  3535  0735                     	line	166
  3536                           	
  3537                           l2059:	
  3538  0735                     ;RelayControl.c: 166:                 return PORTAbits.RA0;
  3539                           	movf	(5),w	;volatile
  3540  0735  0805               	andlw	(1<<1)-1
  3541  0736  3901               	goto	l412
  3542  0737  2F68               	
  3543                           l2061:	
  3544  0738                     	goto	l412
  3545  0738  2F68               	line	168
  3546                           ;RelayControl.c: 168:             case Relay2:
  3547                           	
  3548                           l413:	
  3549  0739                     	line	169
  3550                           	
  3551                           l2063:	
  3552  0739                     ;RelayControl.c: 169:                 return PORTAbits.RA1;
  3553                           	rrf	(5),w	;volatile
  3554  0739  0C05               	andlw	(1<<1)-1
  3555  073A  3901               	goto	l412
  3556  073B  2F68               	
  3557                           l2065:	
  3558  073C                     	goto	l412
  3559  073C  2F68               	line	171
  3560                           ;RelayControl.c: 171:             case Relay3:
  3561                           	
  3562                           l414:	
  3563  073D                     	line	172
  3564                           	
  3565                           l2067:	
  3566  073D                     ;RelayControl.c: 172:                 return PORTAbits.RA2;
  3567                           	rrf	(5),w	;volatile
  3568  073D  0C05               	movwf	(??_Read_Relay+0)+0
  3569  073E  00A0               	rrf	(??_Read_Relay+0)+0,w
  3570  073F  0C20               	andlw	(1<<1)-1
  3571  0740  3901               	goto	l412
  3572  0741  2F68               	
  3573                           l2069:	
  3574  0742                     	goto	l412
  3575  0742  2F68               	line	174
  3576                           ;RelayControl.c: 174:             case Relay4:
  3577                           	
  3578                           l415:	
  3579  0743                     	line	175
  3580                           	
  3581                           l2071:	
  3582  0743                     ;RelayControl.c: 175:                 return PORTCbits.RC0;
  3583                           	movf	(7),w	;volatile
  3584  0743  0807               	andlw	(1<<1)-1
  3585  0744  3901               	goto	l412
  3586  0745  2F68               	
  3587                           l2073:	
  3588  0746                     	goto	l412
  3589  0746  2F68               	line	177
  3590                           ;RelayControl.c: 177:             case Relay5:
  3591                           	
  3592                           l416:	
  3593  0747                     	line	178
  3594                           	
  3595                           l2075:	
  3596  0747                     ;RelayControl.c: 178:                 return PORTCbits.RC1;
  3597                           	rrf	(7),w	;volatile
  3598  0747  0C07               	andlw	(1<<1)-1
  3599  0748  3901               	goto	l412
  3600  0749  2F68               	
  3601                           l2077:	
  3602  074A                     	goto	l412
  3603  074A  2F68               	line	180
  3604                           ;RelayControl.c: 180:             case Relay6:
  3605                           	
  3606                           l417:	
  3607  074B                     	line	181
  3608                           	
  3609                           l2079:	
  3610  074B                     ;RelayControl.c: 181:                 return PORTCbits.RC2;
  3611                           	rrf	(7),w	;volatile
  3612  074B  0C07               	movwf	(??_Read_Relay+0)+0
  3613  074C  00A0               	rrf	(??_Read_Relay+0)+0,w
  3614  074D  0C20               	andlw	(1<<1)-1
  3615  074E  3901               	goto	l412
  3616  074F  2F68               	
  3617                           l2081:	
  3618  0750                     	goto	l412
  3619  0750  2F68               	line	182
  3620                           	
  3621                           l2083:	
  3622  0751                     ;RelayControl.c: 182:         }
  3623                           	goto	l2087
  3624  0751  2F66               	
  3625                           l410:	
  3626  0752                     	
  3627                           l2085:	
  3628  0752                     	movf	(Read_Relay@Relay),w
  3629  0752  0822               	movwf	(??_Read_Relay+0)+0
  3630  0753  00A0               	clrf	(??_Read_Relay+0)+0+1
  3631  0754  01A1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3632                           ; Switch size 1, requested type "space"
  3633                           ; Number of cases is 1, Range of values is 0 to 0
  3634                           ; switch strategies available:
  3635                           ; Name         Instructions Cycles
  3636                           ; simple_byte            4     3 (average)
  3637                           ; direct_byte            9     7 (fixed)
  3638                           ; jumptable            260     6 (fixed)
  3639                           ;	Chosen strategy is simple_byte
  3640                           
  3641                           	movf 1+(??_Read_Relay+0)+0,w
  3642  0755  0821               	opt asmopt_push
  3643                           	opt asmopt_off
  3644                           	xorlw	0^0	; case 0
  3645  0756  3A00               	skipnz
  3646  0757  1903               	goto	l2887
  3647  0758  2F5A               	goto	l2087
  3648  0759  2F66               	opt asmopt_pop
  3649                           	
  3650                           l2887:	
  3651  075A                     ; Switch size 1, requested type "space"
  3652                           ; Number of cases is 6, Range of values is 0 to 5
  3653                           ; switch strategies available:
  3654                           ; Name         Instructions Cycles
  3655                           ; direct_byte           19     7 (fixed)
  3656                           ; simple_byte           19    10 (average)
  3657                           ; jumptable            260     6 (fixed)
  3658                           ;	Chosen strategy is direct_byte
  3659                           
  3660                           	movf 0+(??_Read_Relay+0)+0,w
  3661  075A  0820               	movwf fsr
  3662  075B  0084               	movlw	6
  3663  075C  3006               	subwf	fsr,w
  3664  075D  0204               skipnc
  3665  075E  1803               goto l2087
  3666  075F  2F66               movlw high(S2889)
  3667  0760  3008               movwf pclath
  3668  0761  008A               	clrc
  3669  0762  1003               	rlf fsr,w
  3670  0763  0D04               	addlw low(S2889)
  3671  0764  3E00               	movwf pc
  3672  0765  0082               psect	swtext1,local,class=CONST,delta=2
  3673                           global __pswtext1
  3674                           __pswtext1:
  3675  0800                     S2889:
  3676  0800                     	ljmp	l2059
  3677  0800  118A  2F35         	ljmp	l2063
  3678  0802  118A  2F39         	ljmp	l2067
  3679  0804  118A  2F3D         	ljmp	l2071
  3680  0806  118A  2F43         	ljmp	l2075
  3681  0808  118A  2F47         	ljmp	l2079
  3682  080A  118A  2F4B         psect	text11
  3683                           
  3684                           	
  3685                           l418:	
  3686  0766                     	line	183
  3687                           	
  3688                           l2087:	
  3689  0766                     ;RelayControl.c: 183:         return(255);
  3690                           	movlw	low(0FFh)
  3691  0766  30FF               	goto	l412
  3692  0767  2F68               	
  3693                           l2089:	
  3694  0768                     	line	184
  3695                           	
  3696                           l412:	
  3697  0768                     	return
  3698  0768  0008               	opt stack 0
  3699                           GLOBAL	__end_of_Read_Relay
  3700                           	__end_of_Read_Relay:
  3701  0769                     	signat	_Read_Relay,4217
  3702                           	global	_CheckStopTime
  3703                           
  3704 ;; *************** function _CheckStopTime *****************
  3705 ;; Defined at:
  3706 ;;		line 148 in file "Main.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;		None
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      void 
  3713 ;; Registers used:
  3714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3720 ;;      Params:         0       0       0       0
  3721 ;;      Locals:         0       0       0       0
  3722 ;;      Temps:          0       2       0       0
  3723 ;;      Totals:         0       2       0       0
  3724 ;;Total ram usage:        2 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; Hardware stack levels required when called:    4
  3727 ;; This function calls:
  3728 ;;		_Set_Relay
  3729 ;; This function is called by:
  3730 ;;		_main
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3734                           	file	"Main.c"
  3735                           	line	148
  3736                           global __ptext12
  3737                           __ptext12:	;psect for function _CheckStopTime
  3738  0217                     psect	text12
  3739                           	file	"Main.c"
  3740                           	line	148
  3741                           	global	__size_of_CheckStopTime
  3742                           	__size_of_CheckStopTime	equ	__end_of_CheckStopTime-_CheckStopTime
  3743  017B                     	
  3744                           _CheckStopTime:	
  3745  0217                     ;incstack = 0
  3746                           	opt	stack 3
  3747                           ; Regs used in _CheckStopTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3748                           	line	150
  3749                           	
  3750                           l2255:	
  3751  0217                     ;Main.c: 150:     if (StopRelay1OnTime == 1 && Relay1StopTime[0] == Counter_10sec && Rel
                                 ay1StopTime[1] == Counter_1sec && Relay1StopTime[2] == Counter_100ms)
  3752                           	bcf	status, 5	;RP0=0, select bank0
  3753  0217  1283               	bcf	status, 6	;RP1=0, select bank0
  3754  0218  1303               		decf	((_StopRelay1OnTime)),w
  3755  0219  036B               	btfss	status,2
  3756  021A  1D03               	goto	u1201
  3757  021B  2A1D               	goto	u1200
  3758  021C  2A1E               u1201:
  3759  021D                     	goto	l2267
  3760  021D  2A4C               u1200:
  3761  021E                     	
  3762                           l2257:	
  3763  021E                     	movf	(_Relay1StopTime),w
  3764  021E  086C               	movwf	(??_CheckStopTime+0)+0
  3765  021F  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3766  0220  01A5               	movf	(_Counter_10sec+1),w
  3767  0221  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  3768  0222  0625               	skipz
  3769  0223  1D03               	goto	u1215
  3770  0224  2A27               	movf	(_Counter_10sec),w
  3771  0225  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  3772  0226  0624               u1215:
  3773  0227                     
  3774                           	skipz
  3775  0227  1D03               	goto	u1211
  3776  0228  2A2A               	goto	u1210
  3777  0229  2A2B               u1211:
  3778  022A                     	goto	l2267
  3779  022A  2A4C               u1210:
  3780  022B                     	
  3781                           l2259:	
  3782  022B                     	movf	0+(_Relay1StopTime)+01h,w
  3783  022B  086D               	movwf	(??_CheckStopTime+0)+0
  3784  022C  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3785  022D  01A5               	movf	(_Counter_1sec+1),w
  3786  022E  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  3787  022F  0625               	skipz
  3788  0230  1D03               	goto	u1225
  3789  0231  2A34               	movf	(_Counter_1sec),w
  3790  0232  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  3791  0233  0624               u1225:
  3792  0234                     
  3793                           	skipz
  3794  0234  1D03               	goto	u1221
  3795  0235  2A37               	goto	u1220
  3796  0236  2A38               u1221:
  3797  0237                     	goto	l2267
  3798  0237  2A4C               u1220:
  3799  0238                     	
  3800                           l2261:	
  3801  0238                     	movf	0+(_Relay1StopTime)+02h,w
  3802  0238  086E               	movwf	(??_CheckStopTime+0)+0
  3803  0239  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3804  023A  01A5               	movf	(_Counter_100ms+1),w
  3805  023B  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  3806  023C  0625               	skipz
  3807  023D  1D03               	goto	u1235
  3808  023E  2A41               	movf	(_Counter_100ms),w
  3809  023F  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  3810  0240  0624               u1235:
  3811  0241                     
  3812                           	skipz
  3813  0241  1D03               	goto	u1231
  3814  0242  2A44               	goto	u1230
  3815  0243  2A45               u1231:
  3816  0244                     	goto	l2267
  3817  0244  2A4C               u1230:
  3818  0245                     	line	152
  3819                           	
  3820                           l2263:	
  3821  0245                     ;Main.c: 151:     {;Main.c: 152:         StopRelay1OnTime = 0;
  3822                           	clrf	(_StopRelay1OnTime)
  3823  0245  01EB               	line	153
  3824                           	
  3825                           l2265:	
  3826  0246                     ;Main.c: 153:         Set_Relay(Relay1, Off);
  3827                           	clrf	(Set_Relay@State)
  3828  0246  01A0               	movlw	low(0)
  3829  0247  3000               	fcall	_Set_Relay
  3830  0248  118A  2547  118A   	goto	l2267
  3831  024B  2A4C               	line	154
  3832                           ;Main.c: 154:     }
  3833                           	
  3834                           l174:	
  3835  024C                     	line	156
  3836                           	
  3837                           l2267:	
  3838  024C                     ;Main.c: 156:     if (StopRelay2OnTime == 1 && Relay2StopTime[0] == Counter_10sec && Rel
                                 ay2StopTime[1] == Counter_1sec && Relay2StopTime[2] == Counter_100ms)
  3839                           	bcf	status, 5	;RP0=0, select bank0
  3840  024C  1283               	bcf	status, 6	;RP1=0, select bank0
  3841  024D  1303               		decf	((_StopRelay2OnTime)),w
  3842  024E  036A               	btfss	status,2
  3843  024F  1D03               	goto	u1241
  3844  0250  2A52               	goto	u1240
  3845  0251  2A53               u1241:
  3846  0252                     	goto	l2279
  3847  0252  2A8D               u1240:
  3848  0253                     	
  3849                           l2269:	
  3850  0253                     	bsf	status, 5	;RP0=1, select bank1
  3851  0253  1683               	bcf	status, 6	;RP1=0, select bank1
  3852  0254  1303               	movf	(_Relay2StopTime)^080h,w
  3853  0255  086B               	bcf	status, 5	;RP0=0, select bank0
  3854  0256  1283               	bcf	status, 6	;RP1=0, select bank0
  3855  0257  1303               	movwf	(??_CheckStopTime+0)+0
  3856  0258  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3857  0259  01A5               	movf	(_Counter_10sec+1),w
  3858  025A  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  3859  025B  0625               	skipz
  3860  025C  1D03               	goto	u1255
  3861  025D  2A60               	movf	(_Counter_10sec),w
  3862  025E  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  3863  025F  0624               u1255:
  3864  0260                     
  3865                           	skipz
  3866  0260  1D03               	goto	u1251
  3867  0261  2A63               	goto	u1250
  3868  0262  2A64               u1251:
  3869  0263                     	goto	l2279
  3870  0263  2A8D               u1250:
  3871  0264                     	
  3872                           l2271:	
  3873  0264                     	bsf	status, 5	;RP0=1, select bank1
  3874  0264  1683               	bcf	status, 6	;RP1=0, select bank1
  3875  0265  1303               	movf	0+(_Relay2StopTime)^080h+01h,w
  3876  0266  086C               	bcf	status, 5	;RP0=0, select bank0
  3877  0267  1283               	bcf	status, 6	;RP1=0, select bank0
  3878  0268  1303               	movwf	(??_CheckStopTime+0)+0
  3879  0269  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3880  026A  01A5               	movf	(_Counter_1sec+1),w
  3881  026B  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  3882  026C  0625               	skipz
  3883  026D  1D03               	goto	u1265
  3884  026E  2A71               	movf	(_Counter_1sec),w
  3885  026F  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  3886  0270  0624               u1265:
  3887  0271                     
  3888                           	skipz
  3889  0271  1D03               	goto	u1261
  3890  0272  2A74               	goto	u1260
  3891  0273  2A75               u1261:
  3892  0274                     	goto	l2279
  3893  0274  2A8D               u1260:
  3894  0275                     	
  3895                           l2273:	
  3896  0275                     	bsf	status, 5	;RP0=1, select bank1
  3897  0275  1683               	bcf	status, 6	;RP1=0, select bank1
  3898  0276  1303               	movf	0+(_Relay2StopTime)^080h+02h,w
  3899  0277  086D               	bcf	status, 5	;RP0=0, select bank0
  3900  0278  1283               	bcf	status, 6	;RP1=0, select bank0
  3901  0279  1303               	movwf	(??_CheckStopTime+0)+0
  3902  027A  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3903  027B  01A5               	movf	(_Counter_100ms+1),w
  3904  027C  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  3905  027D  0625               	skipz
  3906  027E  1D03               	goto	u1275
  3907  027F  2A82               	movf	(_Counter_100ms),w
  3908  0280  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  3909  0281  0624               u1275:
  3910  0282                     
  3911                           	skipz
  3912  0282  1D03               	goto	u1271
  3913  0283  2A85               	goto	u1270
  3914  0284  2A86               u1271:
  3915  0285                     	goto	l2279
  3916  0285  2A8D               u1270:
  3917  0286                     	line	158
  3918                           	
  3919                           l2275:	
  3920  0286                     ;Main.c: 157:     {;Main.c: 158:         StopRelay2OnTime = 0;
  3921                           	clrf	(_StopRelay2OnTime)
  3922  0286  01EA               	line	159
  3923                           	
  3924                           l2277:	
  3925  0287                     ;Main.c: 159:         Set_Relay(Relay2, Off);
  3926                           	clrf	(Set_Relay@State)
  3927  0287  01A0               	movlw	low(01h)
  3928  0288  3001               	fcall	_Set_Relay
  3929  0289  118A  2547  118A   	goto	l2279
  3930  028C  2A8D               	line	160
  3931                           ;Main.c: 160:     }
  3932                           	
  3933                           l175:	
  3934  028D                     	line	162
  3935                           	
  3936                           l2279:	
  3937  028D                     ;Main.c: 162:     if (StopRelay3OnTime == 1 && Relay3StopTime[0] == Counter_10sec && Rel
                                 ay3StopTime[1] == Counter_1sec && Relay3StopTime[2] == Counter_100ms)
  3938                           	bcf	status, 5	;RP0=0, select bank0
  3939  028D  1283               	bcf	status, 6	;RP1=0, select bank0
  3940  028E  1303               		decf	((_StopRelay3OnTime)),w
  3941  028F  0369               	btfss	status,2
  3942  0290  1D03               	goto	u1281
  3943  0291  2A93               	goto	u1280
  3944  0292  2A94               u1281:
  3945  0293                     	goto	l2291
  3946  0293  2ACE               u1280:
  3947  0294                     	
  3948                           l2281:	
  3949  0294                     	bsf	status, 5	;RP0=1, select bank1
  3950  0294  1683               	bcf	status, 6	;RP1=0, select bank1
  3951  0295  1303               	movf	(_Relay3StopTime)^080h,w
  3952  0296  0868               	bcf	status, 5	;RP0=0, select bank0
  3953  0297  1283               	bcf	status, 6	;RP1=0, select bank0
  3954  0298  1303               	movwf	(??_CheckStopTime+0)+0
  3955  0299  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3956  029A  01A5               	movf	(_Counter_10sec+1),w
  3957  029B  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  3958  029C  0625               	skipz
  3959  029D  1D03               	goto	u1295
  3960  029E  2AA1               	movf	(_Counter_10sec),w
  3961  029F  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  3962  02A0  0624               u1295:
  3963  02A1                     
  3964                           	skipz
  3965  02A1  1D03               	goto	u1291
  3966  02A2  2AA4               	goto	u1290
  3967  02A3  2AA5               u1291:
  3968  02A4                     	goto	l2291
  3969  02A4  2ACE               u1290:
  3970  02A5                     	
  3971                           l2283:	
  3972  02A5                     	bsf	status, 5	;RP0=1, select bank1
  3973  02A5  1683               	bcf	status, 6	;RP1=0, select bank1
  3974  02A6  1303               	movf	0+(_Relay3StopTime)^080h+01h,w
  3975  02A7  0869               	bcf	status, 5	;RP0=0, select bank0
  3976  02A8  1283               	bcf	status, 6	;RP1=0, select bank0
  3977  02A9  1303               	movwf	(??_CheckStopTime+0)+0
  3978  02AA  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3979  02AB  01A5               	movf	(_Counter_1sec+1),w
  3980  02AC  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  3981  02AD  0625               	skipz
  3982  02AE  1D03               	goto	u1305
  3983  02AF  2AB2               	movf	(_Counter_1sec),w
  3984  02B0  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  3985  02B1  0624               u1305:
  3986  02B2                     
  3987                           	skipz
  3988  02B2  1D03               	goto	u1301
  3989  02B3  2AB5               	goto	u1300
  3990  02B4  2AB6               u1301:
  3991  02B5                     	goto	l2291
  3992  02B5  2ACE               u1300:
  3993  02B6                     	
  3994                           l2285:	
  3995  02B6                     	bsf	status, 5	;RP0=1, select bank1
  3996  02B6  1683               	bcf	status, 6	;RP1=0, select bank1
  3997  02B7  1303               	movf	0+(_Relay3StopTime)^080h+02h,w
  3998  02B8  086A               	bcf	status, 5	;RP0=0, select bank0
  3999  02B9  1283               	bcf	status, 6	;RP1=0, select bank0
  4000  02BA  1303               	movwf	(??_CheckStopTime+0)+0
  4001  02BB  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4002  02BC  01A5               	movf	(_Counter_100ms+1),w
  4003  02BD  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4004  02BE  0625               	skipz
  4005  02BF  1D03               	goto	u1315
  4006  02C0  2AC3               	movf	(_Counter_100ms),w
  4007  02C1  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4008  02C2  0624               u1315:
  4009  02C3                     
  4010                           	skipz
  4011  02C3  1D03               	goto	u1311
  4012  02C4  2AC6               	goto	u1310
  4013  02C5  2AC7               u1311:
  4014  02C6                     	goto	l2291
  4015  02C6  2ACE               u1310:
  4016  02C7                     	line	164
  4017                           	
  4018                           l2287:	
  4019  02C7                     ;Main.c: 163:     {;Main.c: 164:         StopRelay3OnTime = 0;
  4020                           	clrf	(_StopRelay3OnTime)
  4021  02C7  01E9               	line	165
  4022                           	
  4023                           l2289:	
  4024  02C8                     ;Main.c: 165:         Set_Relay(Relay3, Off);
  4025                           	clrf	(Set_Relay@State)
  4026  02C8  01A0               	movlw	low(02h)
  4027  02C9  3002               	fcall	_Set_Relay
  4028  02CA  118A  2547  118A   	goto	l2291
  4029  02CD  2ACE               	line	166
  4030                           ;Main.c: 166:     }
  4031                           	
  4032                           l176:	
  4033  02CE                     	line	168
  4034                           	
  4035                           l2291:	
  4036  02CE                     ;Main.c: 168:     if (StopRelay4OnTime == 1 && Relay4StopTime[0] == Counter_10sec && Rel
                                 ay4StopTime[1] == Counter_1sec && Relay4StopTime[2] == Counter_100ms)
  4037                           	bcf	status, 5	;RP0=0, select bank0
  4038  02CE  1283               	bcf	status, 6	;RP1=0, select bank0
  4039  02CF  1303               		decf	((_StopRelay4OnTime)),w
  4040  02D0  0368               	btfss	status,2
  4041  02D1  1D03               	goto	u1321
  4042  02D2  2AD4               	goto	u1320
  4043  02D3  2AD5               u1321:
  4044  02D4                     	goto	l2303
  4045  02D4  2B0F               u1320:
  4046  02D5                     	
  4047                           l2293:	
  4048  02D5                     	bsf	status, 5	;RP0=1, select bank1
  4049  02D5  1683               	bcf	status, 6	;RP1=0, select bank1
  4050  02D6  1303               	movf	(_Relay4StopTime)^080h,w
  4051  02D7  0865               	bcf	status, 5	;RP0=0, select bank0
  4052  02D8  1283               	bcf	status, 6	;RP1=0, select bank0
  4053  02D9  1303               	movwf	(??_CheckStopTime+0)+0
  4054  02DA  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4055  02DB  01A5               	movf	(_Counter_10sec+1),w
  4056  02DC  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4057  02DD  0625               	skipz
  4058  02DE  1D03               	goto	u1335
  4059  02DF  2AE2               	movf	(_Counter_10sec),w
  4060  02E0  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4061  02E1  0624               u1335:
  4062  02E2                     
  4063                           	skipz
  4064  02E2  1D03               	goto	u1331
  4065  02E3  2AE5               	goto	u1330
  4066  02E4  2AE6               u1331:
  4067  02E5                     	goto	l2303
  4068  02E5  2B0F               u1330:
  4069  02E6                     	
  4070                           l2295:	
  4071  02E6                     	bsf	status, 5	;RP0=1, select bank1
  4072  02E6  1683               	bcf	status, 6	;RP1=0, select bank1
  4073  02E7  1303               	movf	0+(_Relay4StopTime)^080h+01h,w
  4074  02E8  0866               	bcf	status, 5	;RP0=0, select bank0
  4075  02E9  1283               	bcf	status, 6	;RP1=0, select bank0
  4076  02EA  1303               	movwf	(??_CheckStopTime+0)+0
  4077  02EB  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4078  02EC  01A5               	movf	(_Counter_1sec+1),w
  4079  02ED  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4080  02EE  0625               	skipz
  4081  02EF  1D03               	goto	u1345
  4082  02F0  2AF3               	movf	(_Counter_1sec),w
  4083  02F1  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4084  02F2  0624               u1345:
  4085  02F3                     
  4086                           	skipz
  4087  02F3  1D03               	goto	u1341
  4088  02F4  2AF6               	goto	u1340
  4089  02F5  2AF7               u1341:
  4090  02F6                     	goto	l2303
  4091  02F6  2B0F               u1340:
  4092  02F7                     	
  4093                           l2297:	
  4094  02F7                     	bsf	status, 5	;RP0=1, select bank1
  4095  02F7  1683               	bcf	status, 6	;RP1=0, select bank1
  4096  02F8  1303               	movf	0+(_Relay4StopTime)^080h+02h,w
  4097  02F9  0867               	bcf	status, 5	;RP0=0, select bank0
  4098  02FA  1283               	bcf	status, 6	;RP1=0, select bank0
  4099  02FB  1303               	movwf	(??_CheckStopTime+0)+0
  4100  02FC  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4101  02FD  01A5               	movf	(_Counter_100ms+1),w
  4102  02FE  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4103  02FF  0625               	skipz
  4104  0300  1D03               	goto	u1355
  4105  0301  2B04               	movf	(_Counter_100ms),w
  4106  0302  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4107  0303  0624               u1355:
  4108  0304                     
  4109                           	skipz
  4110  0304  1D03               	goto	u1351
  4111  0305  2B07               	goto	u1350
  4112  0306  2B08               u1351:
  4113  0307                     	goto	l2303
  4114  0307  2B0F               u1350:
  4115  0308                     	line	170
  4116                           	
  4117                           l2299:	
  4118  0308                     ;Main.c: 169:     {;Main.c: 170:         StopRelay4OnTime = 0;
  4119                           	clrf	(_StopRelay4OnTime)
  4120  0308  01E8               	line	171
  4121                           	
  4122                           l2301:	
  4123  0309                     ;Main.c: 171:         Set_Relay(Relay4, Off);
  4124                           	clrf	(Set_Relay@State)
  4125  0309  01A0               	movlw	low(03h)
  4126  030A  3003               	fcall	_Set_Relay
  4127  030B  118A  2547  118A   	goto	l2303
  4128  030E  2B0F               	line	172
  4129                           ;Main.c: 172:     }
  4130                           	
  4131                           l177:	
  4132  030F                     	line	174
  4133                           	
  4134                           l2303:	
  4135  030F                     ;Main.c: 174:     if (StopRelay5OnTime == 1 && Relay5StopTime[0] == Counter_10sec && Rel
                                 ay5StopTime[1] == Counter_1sec && Relay5StopTime[2] == Counter_100ms)
  4136                           	bcf	status, 5	;RP0=0, select bank0
  4137  030F  1283               	bcf	status, 6	;RP1=0, select bank0
  4138  0310  1303               		decf	((_StopRelay5OnTime)),w
  4139  0311  0367               	btfss	status,2
  4140  0312  1D03               	goto	u1361
  4141  0313  2B15               	goto	u1360
  4142  0314  2B16               u1361:
  4143  0315                     	goto	l2315
  4144  0315  2B50               u1360:
  4145  0316                     	
  4146                           l2305:	
  4147  0316                     	bsf	status, 5	;RP0=1, select bank1
  4148  0316  1683               	bcf	status, 6	;RP1=0, select bank1
  4149  0317  1303               	movf	(_Relay5StopTime)^080h,w
  4150  0318  0862               	bcf	status, 5	;RP0=0, select bank0
  4151  0319  1283               	bcf	status, 6	;RP1=0, select bank0
  4152  031A  1303               	movwf	(??_CheckStopTime+0)+0
  4153  031B  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4154  031C  01A5               	movf	(_Counter_10sec+1),w
  4155  031D  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4156  031E  0625               	skipz
  4157  031F  1D03               	goto	u1375
  4158  0320  2B23               	movf	(_Counter_10sec),w
  4159  0321  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4160  0322  0624               u1375:
  4161  0323                     
  4162                           	skipz
  4163  0323  1D03               	goto	u1371
  4164  0324  2B26               	goto	u1370
  4165  0325  2B27               u1371:
  4166  0326                     	goto	l2315
  4167  0326  2B50               u1370:
  4168  0327                     	
  4169                           l2307:	
  4170  0327                     	bsf	status, 5	;RP0=1, select bank1
  4171  0327  1683               	bcf	status, 6	;RP1=0, select bank1
  4172  0328  1303               	movf	0+(_Relay5StopTime)^080h+01h,w
  4173  0329  0863               	bcf	status, 5	;RP0=0, select bank0
  4174  032A  1283               	bcf	status, 6	;RP1=0, select bank0
  4175  032B  1303               	movwf	(??_CheckStopTime+0)+0
  4176  032C  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4177  032D  01A5               	movf	(_Counter_1sec+1),w
  4178  032E  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4179  032F  0625               	skipz
  4180  0330  1D03               	goto	u1385
  4181  0331  2B34               	movf	(_Counter_1sec),w
  4182  0332  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4183  0333  0624               u1385:
  4184  0334                     
  4185                           	skipz
  4186  0334  1D03               	goto	u1381
  4187  0335  2B37               	goto	u1380
  4188  0336  2B38               u1381:
  4189  0337                     	goto	l2315
  4190  0337  2B50               u1380:
  4191  0338                     	
  4192                           l2309:	
  4193  0338                     	bsf	status, 5	;RP0=1, select bank1
  4194  0338  1683               	bcf	status, 6	;RP1=0, select bank1
  4195  0339  1303               	movf	0+(_Relay5StopTime)^080h+02h,w
  4196  033A  0864               	bcf	status, 5	;RP0=0, select bank0
  4197  033B  1283               	bcf	status, 6	;RP1=0, select bank0
  4198  033C  1303               	movwf	(??_CheckStopTime+0)+0
  4199  033D  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4200  033E  01A5               	movf	(_Counter_100ms+1),w
  4201  033F  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4202  0340  0625               	skipz
  4203  0341  1D03               	goto	u1395
  4204  0342  2B45               	movf	(_Counter_100ms),w
  4205  0343  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4206  0344  0624               u1395:
  4207  0345                     
  4208                           	skipz
  4209  0345  1D03               	goto	u1391
  4210  0346  2B48               	goto	u1390
  4211  0347  2B49               u1391:
  4212  0348                     	goto	l2315
  4213  0348  2B50               u1390:
  4214  0349                     	line	176
  4215                           	
  4216                           l2311:	
  4217  0349                     ;Main.c: 175:     {;Main.c: 176:         StopRelay5OnTime = 0;
  4218                           	clrf	(_StopRelay5OnTime)
  4219  0349  01E7               	line	177
  4220                           	
  4221                           l2313:	
  4222  034A                     ;Main.c: 177:         Set_Relay(Relay5, Off);
  4223                           	clrf	(Set_Relay@State)
  4224  034A  01A0               	movlw	low(04h)
  4225  034B  3004               	fcall	_Set_Relay
  4226  034C  118A  2547  118A   	goto	l2315
  4227  034F  2B50               	line	178
  4228                           ;Main.c: 178:     }
  4229                           	
  4230                           l178:	
  4231  0350                     	line	180
  4232                           	
  4233                           l2315:	
  4234  0350                     ;Main.c: 180:     if (StopRelay6OnTime == 1 && Relay6StopTime[0] == Counter_10sec && Rel
                                 ay6StopTime[1] == Counter_1sec && Relay6StopTime[2] == Counter_100ms)
  4235                           	bcf	status, 5	;RP0=0, select bank0
  4236  0350  1283               	bcf	status, 6	;RP1=0, select bank0
  4237  0351  1303               		decf	((_StopRelay6OnTime)),w
  4238  0352  0366               	btfss	status,2
  4239  0353  1D03               	goto	u1401
  4240  0354  2B56               	goto	u1400
  4241  0355  2B57               u1401:
  4242  0356                     	goto	l180
  4243  0356  2B91               u1400:
  4244  0357                     	
  4245                           l2317:	
  4246  0357                     	bsf	status, 5	;RP0=1, select bank1
  4247  0357  1683               	bcf	status, 6	;RP1=0, select bank1
  4248  0358  1303               	movf	(_Relay6StopTime)^080h,w
  4249  0359  085F               	bcf	status, 5	;RP0=0, select bank0
  4250  035A  1283               	bcf	status, 6	;RP1=0, select bank0
  4251  035B  1303               	movwf	(??_CheckStopTime+0)+0
  4252  035C  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4253  035D  01A5               	movf	(_Counter_10sec+1),w
  4254  035E  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4255  035F  0625               	skipz
  4256  0360  1D03               	goto	u1415
  4257  0361  2B64               	movf	(_Counter_10sec),w
  4258  0362  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4259  0363  0624               u1415:
  4260  0364                     
  4261                           	skipz
  4262  0364  1D03               	goto	u1411
  4263  0365  2B67               	goto	u1410
  4264  0366  2B68               u1411:
  4265  0367                     	goto	l180
  4266  0367  2B91               u1410:
  4267  0368                     	
  4268                           l2319:	
  4269  0368                     	bsf	status, 5	;RP0=1, select bank1
  4270  0368  1683               	bcf	status, 6	;RP1=0, select bank1
  4271  0369  1303               	movf	0+(_Relay6StopTime)^080h+01h,w
  4272  036A  0860               	bcf	status, 5	;RP0=0, select bank0
  4273  036B  1283               	bcf	status, 6	;RP1=0, select bank0
  4274  036C  1303               	movwf	(??_CheckStopTime+0)+0
  4275  036D  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4276  036E  01A5               	movf	(_Counter_1sec+1),w
  4277  036F  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4278  0370  0625               	skipz
  4279  0371  1D03               	goto	u1425
  4280  0372  2B75               	movf	(_Counter_1sec),w
  4281  0373  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4282  0374  0624               u1425:
  4283  0375                     
  4284                           	skipz
  4285  0375  1D03               	goto	u1421
  4286  0376  2B78               	goto	u1420
  4287  0377  2B79               u1421:
  4288  0378                     	goto	l180
  4289  0378  2B91               u1420:
  4290  0379                     	
  4291                           l2321:	
  4292  0379                     	bsf	status, 5	;RP0=1, select bank1
  4293  0379  1683               	bcf	status, 6	;RP1=0, select bank1
  4294  037A  1303               	movf	0+(_Relay6StopTime)^080h+02h,w
  4295  037B  0861               	bcf	status, 5	;RP0=0, select bank0
  4296  037C  1283               	bcf	status, 6	;RP1=0, select bank0
  4297  037D  1303               	movwf	(??_CheckStopTime+0)+0
  4298  037E  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4299  037F  01A5               	movf	(_Counter_100ms+1),w
  4300  0380  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4301  0381  0625               	skipz
  4302  0382  1D03               	goto	u1435
  4303  0383  2B86               	movf	(_Counter_100ms),w
  4304  0384  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4305  0385  0624               u1435:
  4306  0386                     
  4307                           	skipz
  4308  0386  1D03               	goto	u1431
  4309  0387  2B89               	goto	u1430
  4310  0388  2B8A               u1431:
  4311  0389                     	goto	l180
  4312  0389  2B91               u1430:
  4313  038A                     	line	182
  4314                           	
  4315                           l2323:	
  4316  038A                     ;Main.c: 181:     {;Main.c: 182:         StopRelay6OnTime = 0;
  4317                           	clrf	(_StopRelay6OnTime)
  4318  038A  01E6               	line	183
  4319                           	
  4320                           l2325:	
  4321  038B                     ;Main.c: 183:         Set_Relay(Relay6, Off);
  4322                           	clrf	(Set_Relay@State)
  4323  038B  01A0               	movlw	low(05h)
  4324  038C  3005               	fcall	_Set_Relay
  4325  038D  118A  2547  118A   	goto	l180
  4326  0390  2B91               	line	184
  4327                           ;Main.c: 184:     }
  4328                           	
  4329                           l179:	
  4330  0391                     	line	185
  4331                           	
  4332                           l180:	
  4333  0391                     	return
  4334  0391  0008               	opt stack 0
  4335                           GLOBAL	__end_of_CheckStopTime
  4336                           	__end_of_CheckStopTime:
  4337  0392                     	signat	_CheckStopTime,89
  4338                           	global	_Set_Relay
  4339                           
  4340 ;; *************** function _Set_Relay *****************
  4341 ;; Defined at:
  4342 ;;		line 64 in file "RelayControl.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  Relay           1    wreg     unsigned char 
  4345 ;;  State           1    0[BANK0 ] unsigned char 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  Relay           1    3[BANK0 ] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      void 
  4350 ;; Registers used:
  4351 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4357 ;;      Params:         0       1       0       0
  4358 ;;      Locals:         0       1       0       0
  4359 ;;      Temps:          0       2       0       0
  4360 ;;      Totals:         0       4       0       0
  4361 ;;Total ram usage:        4 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    3
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_CheckStopTime
  4368 ;;		_Handle_Telegram
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4372                           	file	"RelayControl.c"
  4373                           	line	64
  4374                           global __ptext13
  4375                           __ptext13:	;psect for function _Set_Relay
  4376  0547                     psect	text13
  4377                           	file	"RelayControl.c"
  4378                           	line	64
  4379                           	global	__size_of_Set_Relay
  4380                           	__size_of_Set_Relay	equ	__end_of_Set_Relay-_Set_Relay
  4381  0080                     	
  4382                           _Set_Relay:	
  4383  0547                     ;incstack = 0
  4384                           	opt	stack 3
  4385                           ; Regs used in _Set_Relay: [wreg-fsr0h+status,2+status,0]
  4386                           ;Set_Relay@Relay stored from wreg
  4387                           	bcf	status, 5	;RP0=0, select bank0
  4388  0547  1283               	bcf	status, 6	;RP1=0, select bank0
  4389  0548  1303               	movwf	(Set_Relay@Relay)
  4390  0549  00A3               	line	66
  4391                           	
  4392                           l1969:	
  4393  054A                     ;RelayControl.c: 64: void Set_Relay (unsigned char Relay, unsigned char State);RelayCont
                                 rol.c: 65: {;RelayControl.c: 66:     switch (Relay)
  4394                           	goto	l2021
  4395  054A  2DB2               	line	68
  4396                           ;RelayControl.c: 67:     {;RelayControl.c: 68:         case Relay1:
  4397                           	
  4398                           l376:	
  4399  054B                     	line	69
  4400                           	
  4401                           l1971:	
  4402  054B                     ;RelayControl.c: 69:         if (State == On)
  4403                           		decf	((Set_Relay@State)),w
  4404  054B  0320               	btfss	status,2
  4405  054C  1D03               	goto	u891
  4406  054D  2D4F               	goto	u890
  4407  054E  2D50               u891:
  4408  054F                     	goto	l1975
  4409  054F  2D52               u890:
  4410  0550                     	line	71
  4411                           	
  4412                           l1973:	
  4413  0550                     ;RelayControl.c: 70:         {;RelayControl.c: 71:             PORTAbits.RA0 = 1;
  4414                           	bsf	(5),0	;volatile
  4415  0550  1405               	line	72
  4416                           ;RelayControl.c: 72:         }
  4417                           	goto	l407
  4418  0551  2DC6               	line	73
  4419                           ;RelayControl.c: 73:         else if (State == Off)
  4420                           	
  4421                           l377:	
  4422  0552                     	
  4423                           l1975:	
  4424  0552                     	movf	((Set_Relay@State)),w
  4425  0552  0820               	btfss	status,2
  4426  0553  1D03               	goto	u901
  4427  0554  2D56               	goto	u900
  4428  0555  2D57               u901:
  4429  0556                     	goto	l407
  4430  0556  2DC6               u900:
  4431  0557                     	line	75
  4432                           	
  4433                           l1977:	
  4434  0557                     ;RelayControl.c: 74:         {;RelayControl.c: 75:             PORTAbits.RA0 = 0;
  4435                           	bcf	(5),0	;volatile
  4436  0557  1005               	line	76
  4437                           ;RelayControl.c: 76:         }
  4438                           	goto	l407
  4439  0558  2DC6               	line	77
  4440                           ;RelayControl.c: 77:         else
  4441                           	
  4442                           l379:	
  4443  0559                     	goto	l407
  4444  0559  2DC6               	line	80
  4445                           ;RelayControl.c: 78:         {;RelayControl.c: 80:         }
  4446                           	
  4447                           l380:	
  4448  055A                     	goto	l407
  4449  055A  2DC6               	
  4450                           l378:	
  4451  055B                     	line	81
  4452                           ;RelayControl.c: 81:         break;
  4453                           	goto	l407
  4454  055B  2DC6               	line	83
  4455                           ;RelayControl.c: 83:         case Relay2:
  4456                           	
  4457                           l382:	
  4458  055C                     	line	84
  4459                           	
  4460                           l1979:	
  4461  055C                     ;RelayControl.c: 84:         if (State == On)
  4462                           		decf	((Set_Relay@State)),w
  4463  055C  0320               	btfss	status,2
  4464  055D  1D03               	goto	u911
  4465  055E  2D60               	goto	u910
  4466  055F  2D61               u911:
  4467  0560                     	goto	l1983
  4468  0560  2D63               u910:
  4469  0561                     	line	86
  4470                           	
  4471                           l1981:	
  4472  0561                     ;RelayControl.c: 85:         {;RelayControl.c: 86:             PORTAbits.RA1 = 1;
  4473                           	bsf	(5),1	;volatile
  4474  0561  1485               	line	87
  4475                           ;RelayControl.c: 87:         }
  4476                           	goto	l407
  4477  0562  2DC6               	line	88
  4478                           ;RelayControl.c: 88:         else if (State == Off)
  4479                           	
  4480                           l383:	
  4481  0563                     	
  4482                           l1983:	
  4483  0563                     	movf	((Set_Relay@State)),w
  4484  0563  0820               	btfss	status,2
  4485  0564  1D03               	goto	u921
  4486  0565  2D67               	goto	u920
  4487  0566  2D68               u921:
  4488  0567                     	goto	l407
  4489  0567  2DC6               u920:
  4490  0568                     	line	90
  4491                           	
  4492                           l1985:	
  4493  0568                     ;RelayControl.c: 89:         {;RelayControl.c: 90:             PORTAbits.RA1 = 0;
  4494                           	bcf	(5),1	;volatile
  4495  0568  1085               	line	91
  4496                           ;RelayControl.c: 91:         }
  4497                           	goto	l407
  4498  0569  2DC6               	line	92
  4499                           ;RelayControl.c: 92:         else
  4500                           	
  4501                           l385:	
  4502  056A                     	goto	l407
  4503  056A  2DC6               	line	95
  4504                           ;RelayControl.c: 93:         {;RelayControl.c: 95:         }
  4505                           	
  4506                           l386:	
  4507  056B                     	goto	l407
  4508  056B  2DC6               	
  4509                           l384:	
  4510  056C                     	line	96
  4511                           ;RelayControl.c: 96:         break;
  4512                           	goto	l407
  4513  056C  2DC6               	line	98
  4514                           ;RelayControl.c: 98:         case Relay3:
  4515                           	
  4516                           l387:	
  4517  056D                     	line	99
  4518                           	
  4519                           l1987:	
  4520  056D                     ;RelayControl.c: 99:         if (State == On)
  4521                           		decf	((Set_Relay@State)),w
  4522  056D  0320               	btfss	status,2
  4523  056E  1D03               	goto	u931
  4524  056F  2D71               	goto	u930
  4525  0570  2D72               u931:
  4526  0571                     	goto	l1991
  4527  0571  2D74               u930:
  4528  0572                     	line	101
  4529                           	
  4530                           l1989:	
  4531  0572                     ;RelayControl.c: 100:         {;RelayControl.c: 101:             PORTAbits.RA2 = 1;
  4532                           	bsf	(5),2	;volatile
  4533  0572  1505               	line	102
  4534                           ;RelayControl.c: 102:         }
  4535                           	goto	l407
  4536  0573  2DC6               	line	103
  4537                           ;RelayControl.c: 103:         else if (State == Off)
  4538                           	
  4539                           l388:	
  4540  0574                     	
  4541                           l1991:	
  4542  0574                     	movf	((Set_Relay@State)),w
  4543  0574  0820               	btfss	status,2
  4544  0575  1D03               	goto	u941
  4545  0576  2D78               	goto	u940
  4546  0577  2D79               u941:
  4547  0578                     	goto	l407
  4548  0578  2DC6               u940:
  4549  0579                     	line	105
  4550                           	
  4551                           l1993:	
  4552  0579                     ;RelayControl.c: 104:         {;RelayControl.c: 105:             PORTAbits.RA2 = 0;
  4553                           	bcf	(5),2	;volatile
  4554  0579  1105               	line	106
  4555                           ;RelayControl.c: 106:         }
  4556                           	goto	l407
  4557  057A  2DC6               	line	107
  4558                           ;RelayControl.c: 107:         else
  4559                           	
  4560                           l390:	
  4561  057B                     	goto	l407
  4562  057B  2DC6               	line	110
  4563                           ;RelayControl.c: 108:         {;RelayControl.c: 110:         }
  4564                           	
  4565                           l391:	
  4566  057C                     	goto	l407
  4567  057C  2DC6               	
  4568                           l389:	
  4569  057D                     	line	111
  4570                           ;RelayControl.c: 111:         break;
  4571                           	goto	l407
  4572  057D  2DC6               	line	113
  4573                           ;RelayControl.c: 113:         case Relay4:
  4574                           	
  4575                           l392:	
  4576  057E                     	line	114
  4577                           	
  4578                           l1995:	
  4579  057E                     ;RelayControl.c: 114:         if (State == On)
  4580                           		decf	((Set_Relay@State)),w
  4581  057E  0320               	btfss	status,2
  4582  057F  1D03               	goto	u951
  4583  0580  2D82               	goto	u950
  4584  0581  2D83               u951:
  4585  0582                     	goto	l1999
  4586  0582  2D85               u950:
  4587  0583                     	line	116
  4588                           	
  4589                           l1997:	
  4590  0583                     ;RelayControl.c: 115:         {;RelayControl.c: 116:             PORTCbits.RC0 = 1;
  4591                           	bsf	(7),0	;volatile
  4592  0583  1407               	line	117
  4593                           ;RelayControl.c: 117:         }
  4594                           	goto	l407
  4595  0584  2DC6               	line	118
  4596                           ;RelayControl.c: 118:         else if (State == Off)
  4597                           	
  4598                           l393:	
  4599  0585                     	
  4600                           l1999:	
  4601  0585                     	movf	((Set_Relay@State)),w
  4602  0585  0820               	btfss	status,2
  4603  0586  1D03               	goto	u961
  4604  0587  2D89               	goto	u960
  4605  0588  2D8A               u961:
  4606  0589                     	goto	l407
  4607  0589  2DC6               u960:
  4608  058A                     	line	120
  4609                           	
  4610                           l2001:	
  4611  058A                     ;RelayControl.c: 119:         {;RelayControl.c: 120:             PORTCbits.RC0 = 0;
  4612                           	bcf	(7),0	;volatile
  4613  058A  1007               	line	121
  4614                           ;RelayControl.c: 121:         }
  4615                           	goto	l407
  4616  058B  2DC6               	line	122
  4617                           ;RelayControl.c: 122:         else
  4618                           	
  4619                           l395:	
  4620  058C                     	goto	l407
  4621  058C  2DC6               	line	125
  4622                           ;RelayControl.c: 123:         {;RelayControl.c: 125:         }
  4623                           	
  4624                           l396:	
  4625  058D                     	goto	l407
  4626  058D  2DC6               	
  4627                           l394:	
  4628  058E                     	line	126
  4629                           ;RelayControl.c: 126:         break;
  4630                           	goto	l407
  4631  058E  2DC6               	line	128
  4632                           ;RelayControl.c: 128:         case Relay5:
  4633                           	
  4634                           l397:	
  4635  058F                     	line	129
  4636                           	
  4637                           l2003:	
  4638  058F                     ;RelayControl.c: 129:         if (State == On)
  4639                           		decf	((Set_Relay@State)),w
  4640  058F  0320               	btfss	status,2
  4641  0590  1D03               	goto	u971
  4642  0591  2D93               	goto	u970
  4643  0592  2D94               u971:
  4644  0593                     	goto	l2007
  4645  0593  2D96               u970:
  4646  0594                     	line	131
  4647                           	
  4648                           l2005:	
  4649  0594                     ;RelayControl.c: 130:         {;RelayControl.c: 131:             PORTCbits.RC1 = 1;
  4650                           	bsf	(7),1	;volatile
  4651  0594  1487               	line	132
  4652                           ;RelayControl.c: 132:         }
  4653                           	goto	l407
  4654  0595  2DC6               	line	133
  4655                           ;RelayControl.c: 133:         else if (State == Off)
  4656                           	
  4657                           l398:	
  4658  0596                     	
  4659                           l2007:	
  4660  0596                     	movf	((Set_Relay@State)),w
  4661  0596  0820               	btfss	status,2
  4662  0597  1D03               	goto	u981
  4663  0598  2D9A               	goto	u980
  4664  0599  2D9B               u981:
  4665  059A                     	goto	l407
  4666  059A  2DC6               u980:
  4667  059B                     	line	135
  4668                           	
  4669                           l2009:	
  4670  059B                     ;RelayControl.c: 134:         {;RelayControl.c: 135:             PORTCbits.RC1 = 0;
  4671                           	bcf	(7),1	;volatile
  4672  059B  1087               	line	136
  4673                           ;RelayControl.c: 136:         }
  4674                           	goto	l407
  4675  059C  2DC6               	line	137
  4676                           ;RelayControl.c: 137:         else
  4677                           	
  4678                           l400:	
  4679  059D                     	goto	l407
  4680  059D  2DC6               	line	140
  4681                           ;RelayControl.c: 138:         {;RelayControl.c: 140:         }
  4682                           	
  4683                           l401:	
  4684  059E                     	goto	l407
  4685  059E  2DC6               	
  4686                           l399:	
  4687  059F                     	line	141
  4688                           ;RelayControl.c: 141:         break;
  4689                           	goto	l407
  4690  059F  2DC6               	line	143
  4691                           ;RelayControl.c: 143:         case Relay6:
  4692                           	
  4693                           l402:	
  4694  05A0                     	line	144
  4695                           	
  4696                           l2011:	
  4697  05A0                     ;RelayControl.c: 144:         if (State == On)
  4698                           		decf	((Set_Relay@State)),w
  4699  05A0  0320               	btfss	status,2
  4700  05A1  1D03               	goto	u991
  4701  05A2  2DA4               	goto	u990
  4702  05A3  2DA5               u991:
  4703  05A4                     	goto	l2015
  4704  05A4  2DA7               u990:
  4705  05A5                     	line	146
  4706                           	
  4707                           l2013:	
  4708  05A5                     ;RelayControl.c: 145:         {;RelayControl.c: 146:             PORTCbits.RC2 = 1;
  4709                           	bsf	(7),2	;volatile
  4710  05A5  1507               	line	147
  4711                           ;RelayControl.c: 147:         }
  4712                           	goto	l407
  4713  05A6  2DC6               	line	148
  4714                           ;RelayControl.c: 148:         else if (State == Off)
  4715                           	
  4716                           l403:	
  4717  05A7                     	
  4718                           l2015:	
  4719  05A7                     	movf	((Set_Relay@State)),w
  4720  05A7  0820               	btfss	status,2
  4721  05A8  1D03               	goto	u1001
  4722  05A9  2DAB               	goto	u1000
  4723  05AA  2DAC               u1001:
  4724  05AB                     	goto	l407
  4725  05AB  2DC6               u1000:
  4726  05AC                     	line	150
  4727                           	
  4728                           l2017:	
  4729  05AC                     ;RelayControl.c: 149:         {;RelayControl.c: 150:             PORTCbits.RC2 = 0;
  4730                           	bcf	(7),2	;volatile
  4731  05AC  1107               	line	151
  4732                           ;RelayControl.c: 151:         }
  4733                           	goto	l407
  4734  05AD  2DC6               	line	152
  4735                           ;RelayControl.c: 152:         else
  4736                           	
  4737                           l405:	
  4738  05AE                     	goto	l407
  4739  05AE  2DC6               	line	155
  4740                           ;RelayControl.c: 153:         {;RelayControl.c: 155:         }
  4741                           	
  4742                           l406:	
  4743  05AF                     	goto	l407
  4744  05AF  2DC6               	
  4745                           l404:	
  4746  05B0                     	line	156
  4747                           ;RelayControl.c: 156:         break;
  4748                           	goto	l407
  4749  05B0  2DC6               	line	157
  4750                           	
  4751                           l2019:	
  4752  05B1                     ;RelayControl.c: 157:     }
  4753                           	goto	l407
  4754  05B1  2DC6               	
  4755                           l375:	
  4756  05B2                     	
  4757                           l2021:	
  4758  05B2                     	movf	(Set_Relay@Relay),w
  4759  05B2  0823               	movwf	(??_Set_Relay+0)+0
  4760  05B3  00A1               	clrf	(??_Set_Relay+0)+0+1
  4761  05B4  01A2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4762                           ; Switch size 1, requested type "space"
  4763                           ; Number of cases is 1, Range of values is 0 to 0
  4764                           ; switch strategies available:
  4765                           ; Name         Instructions Cycles
  4766                           ; simple_byte            4     3 (average)
  4767                           ; direct_byte            9     7 (fixed)
  4768                           ; jumptable            260     6 (fixed)
  4769                           ;	Chosen strategy is simple_byte
  4770                           
  4771                           	movf 1+(??_Set_Relay+0)+0,w
  4772  05B5  0822               	opt asmopt_push
  4773                           	opt asmopt_off
  4774                           	xorlw	0^0	; case 0
  4775  05B6  3A00               	skipnz
  4776  05B7  1903               	goto	l2891
  4777  05B8  2DBA               	goto	l407
  4778  05B9  2DC6               	opt asmopt_pop
  4779                           	
  4780                           l2891:	
  4781  05BA                     ; Switch size 1, requested type "space"
  4782                           ; Number of cases is 6, Range of values is 0 to 5
  4783                           ; switch strategies available:
  4784                           ; Name         Instructions Cycles
  4785                           ; direct_byte           19     7 (fixed)
  4786                           ; simple_byte           19    10 (average)
  4787                           ; jumptable            260     6 (fixed)
  4788                           ;	Chosen strategy is direct_byte
  4789                           
  4790                           	movf 0+(??_Set_Relay+0)+0,w
  4791  05BA  0821               	movwf fsr
  4792  05BB  0084               	movlw	6
  4793  05BC  3006               	subwf	fsr,w
  4794  05BD  0204               skipnc
  4795  05BE  1803               goto l407
  4796  05BF  2DC6               movlw high(S2893)
  4797  05C0  3008               movwf pclath
  4798  05C1  008A               	clrc
  4799  05C2  1003               	rlf fsr,w
  4800  05C3  0D04               	addlw low(S2893)
  4801  05C4  3E0C               	movwf pc
  4802  05C5  0082               psect	swtext2,local,class=CONST,delta=2
  4803                           global __pswtext2
  4804                           __pswtext2:
  4805  080C                     S2893:
  4806  080C                     	ljmp	l1971
  4807  080C  118A  2D4B         	ljmp	l1979
  4808  080E  118A  2D5C         	ljmp	l1987
  4809  0810  118A  2D6D         	ljmp	l1995
  4810  0812  118A  2D7E         	ljmp	l2003
  4811  0814  118A  2D8F         	ljmp	l2011
  4812  0816  118A  2DA0         psect	text13
  4813                           
  4814                           	
  4815                           l381:	
  4816  05C6                     	line	159
  4817                           	
  4818                           l407:	
  4819  05C6                     	return
  4820  05C6  0008               	opt stack 0
  4821                           GLOBAL	__end_of_Set_Relay
  4822                           	__end_of_Set_Relay:
  4823  05C7                     	signat	_Set_Relay,8313
  4824                           	global	_Handle_Interrupts
  4825                           
  4826 ;; *************** function _Handle_Interrupts *****************
  4827 ;; Defined at:
  4828 ;;		line 432 in file "Main.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;		None
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  dummy           1   12[COMMON] unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4842 ;;      Params:         0       0       0       0
  4843 ;;      Locals:         1       0       0       0
  4844 ;;      Temps:          5       0       0       0
  4845 ;;      Totals:         6       0       0       0
  4846 ;;Total ram usage:        6 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    2
  4849 ;; This function calls:
  4850 ;;		_HandleConfigByte
  4851 ;;		_HandleTelegramByte
  4852 ;;		_Timer_Interrupt
  4853 ;;		_WriteByteFromBuffer
  4854 ;; This function is called by:
  4855 ;;		Interrupt level 1
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4859                           	file	"Main.c"
  4860                           	line	432
  4861                           global __ptext14
  4862                           __ptext14:	;psect for function _Handle_Interrupts
  4863  06A2                     psect	text14
  4864                           	file	"Main.c"
  4865                           	line	432
  4866                           	global	__size_of_Handle_Interrupts
  4867                           	__size_of_Handle_Interrupts	equ	__end_of_Handle_Interrupts-_Handle_Interrupts
  4868  0056                     	
  4869                           _Handle_Interrupts:	
  4870  06A2                     ;incstack = 0
  4871                           	opt	stack 2
  4872                           ; Regs used in _Handle_Interrupts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4873                           psect	intentry,class=CODE,delta=2
  4874                           global __pintentry
  4875                           __pintentry:
  4876  0004                     global interrupt_function
  4877                           interrupt_function:
  4878  0004                     	global saved_w
  4879                           	saved_w	set	btemp+0
  4880  007E                     	movwf	saved_w
  4881  0004  00FE               	swapf	status,w
  4882  0005  0E03               	movwf	(??_Handle_Interrupts+2)
  4883  0006  00F9               	movf	fsr0,w
  4884  0007  0804               	movwf	(??_Handle_Interrupts+3)
  4885  0008  00FA               	movf	pclath,w
  4886  0009  080A               	movwf	(??_Handle_Interrupts+4)
  4887  000A  00FB               	ljmp	_Handle_Interrupts
  4888  000B  118A  2EA2         psect	text14
  4889                           	line	434
  4890                           	
  4891                           i1l2585:	
  4892  06A2                     ;Main.c: 434:     if (PIR1bits.TXIF)
  4893                           	bcf	status, 5	;RP0=0, select bank0
  4894  06A2  1283               	bcf	status, 6	;RP1=0, select bank0
  4895  06A3  1303               	btfss	(12),1	;volatile
  4896  06A4  1C8C               	goto	u169_21
  4897  06A5  2EA7               	goto	u169_20
  4898  06A6  2EA8               u169_21:
  4899  06A7                     	goto	i1l2589
  4900  06A7  2EAC               u169_20:
  4901  06A8                     	line	436
  4902                           	
  4903                           i1l2587:	
  4904  06A8                     ;Main.c: 435:     {;Main.c: 436:         WriteByteFromBuffer();
  4905                           	fcall	_WriteByteFromBuffer
  4906  06A8  118A  27A0  118A   	goto	i1l2589
  4907  06AB  2EAC               	line	437
  4908                           ;Main.c: 437:     }
  4909                           	
  4910                           i1l235:	
  4911  06AC                     	line	439
  4912                           	
  4913                           i1l2589:	
  4914  06AC                     ;Main.c: 439:     if (PIR1bits.RCIF)
  4915                           	bcf	status, 5	;RP0=0, select bank0
  4916  06AC  1283               	bcf	status, 6	;RP1=0, select bank0
  4917  06AD  1303               	btfss	(12),5	;volatile
  4918  06AE  1E8C               	goto	u170_21
  4919  06AF  2EB1               	goto	u170_20
  4920  06B0  2EB2               u170_21:
  4921  06B1                     	goto	i1l236
  4922  06B1  2ECF               u170_20:
  4923  06B2                     	goto	i1l2599
  4924  06B2  2EBD               	line	441
  4925                           	
  4926                           i1l2591:	
  4927  06B3                     ;Main.c: 440:     {;Main.c: 441:         switch (CurrentMode)
  4928                           	goto	i1l2599
  4929  06B3  2EBD               	line	443
  4930                           ;Main.c: 442:         {;Main.c: 443:             case Running:
  4931                           	
  4932                           i1l238:	
  4933  06B4                     	line	444
  4934                           	
  4935                           i1l2593:	
  4936  06B4                     ;Main.c: 444:                 HandleTelegramByte();
  4937                           	fcall	_HandleTelegramByte
  4938  06B4  118A  2428  118A   	line	445
  4939                           ;Main.c: 445:                 break;
  4940                           	goto	i1l236
  4941  06B7  2ECF               	line	447
  4942                           ;Main.c: 447:             case Config:
  4943                           	
  4944                           i1l240:	
  4945  06B8                     	line	448
  4946                           	
  4947                           i1l2595:	
  4948  06B8                     ;Main.c: 448:                 HandleConfigByte();
  4949                           	fcall	_HandleConfigByte
  4950  06B8  118A  24BC  118A   	line	449
  4951                           ;Main.c: 449:                 break;
  4952                           	goto	i1l236
  4953  06BB  2ECF               	line	450
  4954                           	
  4955                           i1l2597:	
  4956  06BC                     ;Main.c: 450:         }
  4957                           	goto	i1l236
  4958  06BC  2ECF               	
  4959                           i1l237:	
  4960  06BD                     	
  4961                           i1l2599:	
  4962  06BD                     	bcf	status, 5	;RP0=0, select bank0
  4963  06BD  1283               	bcf	status, 6	;RP1=0, select bank0
  4964  06BE  1303               	movf	(_CurrentMode),w
  4965  06BF  0865               	movwf	(??_Handle_Interrupts+0)+0
  4966  06C0  00F7               	clrf	(??_Handle_Interrupts+0)+0+1
  4967  06C1  01F8               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4968                           ; Switch size 1, requested type "space"
  4969                           ; Number of cases is 1, Range of values is 0 to 0
  4970                           ; switch strategies available:
  4971                           ; Name         Instructions Cycles
  4972                           ; simple_byte            4     3 (average)
  4973                           ; direct_byte            9     7 (fixed)
  4974                           ; jumptable            260     6 (fixed)
  4975                           ;	Chosen strategy is simple_byte
  4976                           
  4977                           	movf 1+(??_Handle_Interrupts+0)+0,w
  4978  06C2  0878               	opt asmopt_push
  4979                           	opt asmopt_off
  4980                           	xorlw	0^0	; case 0
  4981  06C3  3A00               	skipnz
  4982  06C4  1903               	goto	i1l2895
  4983  06C5  2EC7               	goto	i1l236
  4984  06C6  2ECF               	opt asmopt_pop
  4985                           	
  4986                           i1l2895:	
  4987  06C7                     ; Switch size 1, requested type "space"
  4988                           ; Number of cases is 2, Range of values is 0 to 1
  4989                           ; switch strategies available:
  4990                           ; Name         Instructions Cycles
  4991                           ; simple_byte            7     4 (average)
  4992                           ; direct_byte           11     7 (fixed)
  4993                           ; jumptable            260     6 (fixed)
  4994                           ;	Chosen strategy is simple_byte
  4995                           
  4996                           	movf 0+(??_Handle_Interrupts+0)+0,w
  4997  06C7  0877               	opt asmopt_push
  4998                           	opt asmopt_off
  4999                           	xorlw	0^0	; case 0
  5000  06C8  3A00               	skipnz
  5001  06C9  1903               	goto	i1l2593
  5002  06CA  2EB4               	xorlw	1^0	; case 1
  5003  06CB  3A01               	skipnz
  5004  06CC  1903               	goto	i1l2595
  5005  06CD  2EB8               	goto	i1l236
  5006  06CE  2ECF               	opt asmopt_pop
  5007                           
  5008                           	
  5009                           i1l239:	
  5010  06CF                     	line	452
  5011                           ;Main.c: 452:     }
  5012                           	
  5013                           i1l236:	
  5014  06CF                     	line	454
  5015                           ;Main.c: 454:     if (INTCONbits.RAIF)
  5016                           	btfss	(11),0	;volatile
  5017  06CF  1C0B               	goto	u171_21
  5018  06D0  2ED2               	goto	u171_20
  5019  06D1  2ED3               u171_21:
  5020  06D2                     	goto	i1l2613
  5021  06D2  2EE4               u171_20:
  5022  06D3                     	line	457
  5023                           	
  5024                           i1l2601:	
  5025  06D3                     ;Main.c: 455:     {;Main.c: 457:         INTCONbits.RAIE = 0;
  5026                           	bcf	(11),3	;volatile
  5027  06D3  118B               	line	458
  5028                           	
  5029                           i1l2603:	
  5030  06D4                     ;Main.c: 458:         unsigned char dummy = PORTA;
  5031                           	bcf	status, 5	;RP0=0, select bank0
  5032  06D4  1283               	bcf	status, 6	;RP1=0, select bank0
  5033  06D5  1303               	movf	(5),w	;volatile
  5034  06D6  0805               	movwf	(??_Handle_Interrupts+0)+0
  5035  06D7  00F7               	movf	(??_Handle_Interrupts+0)+0,w
  5036  06D8  0877               	movwf	(Handle_Interrupts@dummy)
  5037  06D9  00FC               	line	459
  5038                           	
  5039                           i1l2605:	
  5040  06DA                     ;Main.c: 459:         INTCONbits.RAIF = 0;
  5041                           	bcf	(11),0	;volatile
  5042  06DA  100B               	line	462
  5043                           	
  5044                           i1l2607:	
  5045  06DB                     ;Main.c: 462:         CurrentMode = Config;
  5046                           	clrf	(_CurrentMode)
  5047  06DB  01E5               	incf	(_CurrentMode),f
  5048  06DC  0AE5               	line	465
  5049                           	
  5050                           i1l2609:	
  5051  06DD                     ;Main.c: 465:         TRISAbits.TRISA5 = 0;
  5052                           	bsf	status, 5	;RP0=1, select bank1
  5053  06DD  1683               	bcf	status, 6	;RP1=0, select bank1
  5054  06DE  1303               	bcf	(133)^080h,5	;volatile
  5055  06DF  1285               	line	467
  5056                           	
  5057                           i1l2611:	
  5058  06E0                     ;Main.c: 467:         PORTAbits.RA5 = 0;
  5059                           	bcf	status, 5	;RP0=0, select bank0
  5060  06E0  1283               	bcf	status, 6	;RP1=0, select bank0
  5061  06E1  1303               	bcf	(5),5	;volatile
  5062  06E2  1285               	goto	i1l2613
  5063  06E3  2EE4               	line	469
  5064                           ;Main.c: 469:     }
  5065                           	
  5066                           i1l241:	
  5067  06E4                     	line	471
  5068                           	
  5069                           i1l2613:	
  5070  06E4                     ;Main.c: 471:     if (PIR1bits.TMR1IF)
  5071                           	bcf	status, 5	;RP0=0, select bank0
  5072  06E4  1283               	bcf	status, 6	;RP1=0, select bank0
  5073  06E5  1303               	btfss	(12),0	;volatile
  5074  06E6  1C0C               	goto	u172_21
  5075  06E7  2EE9               	goto	u172_20
  5076  06E8  2EEA               u172_21:
  5077  06E9                     	goto	i1l243
  5078  06E9  2EEF               u172_20:
  5079  06EA                     	line	473
  5080                           	
  5081                           i1l2615:	
  5082  06EA                     ;Main.c: 472:     {;Main.c: 473:         PIR1bits.TMR1IF = 0;
  5083                           	bcf	(12),0	;volatile
  5084  06EA  100C               	line	474
  5085                           	
  5086                           i1l2617:	
  5087  06EB                     ;Main.c: 474:         Timer_Interrupt();
  5088                           	fcall	_Timer_Interrupt
  5089  06EB  118A  2769  118A   	goto	i1l243
  5090  06EE  2EEF               	line	476
  5091                           ;Main.c: 476:     }
  5092                           	
  5093                           i1l242:	
  5094  06EF                     	line	477
  5095                           	
  5096                           i1l243:	
  5097  06EF                     	movf	(??_Handle_Interrupts+4),w
  5098  06EF  087B               	movwf	pclath
  5099  06F0  008A               	movf	(??_Handle_Interrupts+3),w
  5100  06F1  087A               	movwf	fsr0
  5101  06F2  0084               	swapf	(??_Handle_Interrupts+2)^0FFFFFF80h,w
  5102  06F3  0E79               	movwf	status
  5103  06F4  0083               	swapf	saved_w,f
  5104  06F5  0EFE               	swapf	saved_w,w
  5105  06F6  0E7E               	retfie
  5106  06F7  0009               	opt stack 0
  5107                           GLOBAL	__end_of_Handle_Interrupts
  5108                           	__end_of_Handle_Interrupts:
  5109  06F8                     	signat	_Handle_Interrupts,89
  5110                           	global	_WriteByteFromBuffer
  5111                           
  5112 ;; *************** function _WriteByteFromBuffer *****************
  5113 ;; Defined at:
  5114 ;;		line 138 in file "Eusart.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;		None
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;		None
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  1    wreg      void 
  5121 ;; Registers used:
  5122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5128 ;;      Params:         0       0       0       0
  5129 ;;      Locals:         0       0       0       0
  5130 ;;      Temps:          1       0       0       0
  5131 ;;      Totals:         1       0       0       0
  5132 ;;Total ram usage:        1 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    1
  5135 ;; This function calls:
  5136 ;;		_Write_Byte
  5137 ;; This function is called by:
  5138 ;;		_Handle_Interrupts
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5142                           	file	"Eusart.c"
  5143                           	line	138
  5144                           global __ptext15
  5145                           __ptext15:	;psect for function _WriteByteFromBuffer
  5146  07A0                     psect	text15
  5147                           	file	"Eusart.c"
  5148                           	line	138
  5149                           	global	__size_of_WriteByteFromBuffer
  5150                           	__size_of_WriteByteFromBuffer	equ	__end_of_WriteByteFromBuffer-_WriteByteFromBuffer
  5151  002B                     	
  5152                           _WriteByteFromBuffer:	
  5153  07A0                     ;incstack = 0
  5154                           	opt	stack 2
  5155                           ; Regs used in _WriteByteFromBuffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5156                           	line	140
  5157                           	
  5158                           i1l2495:	
  5159  07A0                     ;Eusart.c: 140:     if (BufferHead != BufferTail)
  5160                           	movf	(_BufferHead),w
  5161  07A0  087D               	bcf	status, 5	;RP0=0, select bank0
  5162  07A1  1283               	bcf	status, 6	;RP1=0, select bank0
  5163  07A2  1303               	xorwf	(_BufferTail),w
  5164  07A3  0663               	skipnz
  5165  07A4  1903               	goto	u154_21
  5166  07A5  2FA7               	goto	u154_20
  5167  07A6  2FA8               u154_21:
  5168  07A7                     	goto	i1l2505
  5169  07A7  2FC0               u154_20:
  5170  07A8                     	line	142
  5171                           	
  5172                           i1l2497:	
  5173  07A8                     ;Eusart.c: 141:     {;Eusart.c: 142:         Write_Byte(SendBuffer[BufferTail]);
  5174                           	movf	(_BufferTail),w
  5175  07A8  0863               	addlw	low(_SendBuffer|((0x0)<<8))&0ffh
  5176  07A9  3EA0               	movwf	fsr0
  5177  07AA  0084               	bcf	status, 7	;select IRP bank1
  5178  07AB  1383               	movf	indf,w
  5179  07AC  0800               	fcall	_Write_Byte
  5180  07AD  158A  277C  118A   	line	144
  5181                           	
  5182                           i1l2499:	
  5183  07B0                     ;Eusart.c: 144:         if (BufferTail == 39)
  5184                           		movlw	39
  5185  07B0  3027               	bcf	status, 5	;RP0=0, select bank0
  5186  07B1  1283               	bcf	status, 6	;RP1=0, select bank0
  5187  07B2  1303               	xorwf	((_BufferTail)),w
  5188  07B3  0663               	btfss	status,2
  5189  07B4  1D03               	goto	u155_21
  5190  07B5  2FB7               	goto	u155_20
  5191  07B6  2FB8               u155_21:
  5192  07B7                     	goto	i1l2503
  5193  07B7  2FBA               u155_20:
  5194  07B8                     	line	146
  5195                           	
  5196                           i1l2501:	
  5197  07B8                     ;Eusart.c: 145:         {;Eusart.c: 146:             BufferTail = 0;
  5198                           	clrf	(_BufferTail)
  5199  07B8  01E3               	line	147
  5200                           ;Eusart.c: 147:         }
  5201                           	goto	i1l2505
  5202  07B9  2FC0               	line	148
  5203                           ;Eusart.c: 148:         else
  5204                           	
  5205                           i1l322:	
  5206  07BA                     	line	150
  5207                           	
  5208                           i1l2503:	
  5209  07BA                     ;Eusart.c: 149:         {;Eusart.c: 150:             BufferTail++;
  5210                           	movlw	low(01h)
  5211  07BA  3001               	movwf	(??_WriteByteFromBuffer+0)+0
  5212  07BB  00F1               	movf	(??_WriteByteFromBuffer+0)+0,w
  5213  07BC  0871               	addwf	(_BufferTail),f
  5214  07BD  07E3               	goto	i1l2505
  5215  07BE  2FC0               	line	151
  5216                           ;Eusart.c: 151:         }
  5217                           	
  5218                           i1l323:	
  5219  07BF                     	goto	i1l2505
  5220  07BF  2FC0               	line	153
  5221                           ;Eusart.c: 153:     }
  5222                           	
  5223                           i1l321:	
  5224  07C0                     	line	155
  5225                           	
  5226                           i1l2505:	
  5227  07C0                     ;Eusart.c: 155:     if (BufferHead == BufferTail)
  5228                           	movf	(_BufferHead),w
  5229  07C0  087D               	xorwf	(_BufferTail),w
  5230  07C1  0663               	skipz
  5231  07C2  1D03               	goto	u156_21
  5232  07C3  2FC5               	goto	u156_20
  5233  07C4  2FC6               u156_21:
  5234  07C5                     	goto	i1l325
  5235  07C5  2FCA               u156_20:
  5236  07C6                     	line	157
  5237                           	
  5238                           i1l2507:	
  5239  07C6                     ;Eusart.c: 156:     {;Eusart.c: 157:         PIE1bits.TXIE = 0;
  5240                           	bsf	status, 5	;RP0=1, select bank1
  5241  07C6  1683               	bcf	status, 6	;RP1=0, select bank1
  5242  07C7  1303               	bcf	(140)^080h,1	;volatile
  5243  07C8  108C               	goto	i1l325
  5244  07C9  2FCA               	line	158
  5245                           ;Eusart.c: 158:     }
  5246                           	
  5247                           i1l324:	
  5248  07CA                     	line	160
  5249                           	
  5250                           i1l325:	
  5251  07CA                     	return
  5252  07CA  0008               	opt stack 0
  5253                           GLOBAL	__end_of_WriteByteFromBuffer
  5254                           	__end_of_WriteByteFromBuffer:
  5255  07CB                     	signat	_WriteByteFromBuffer,89
  5256                           	global	_Write_Byte
  5257                           
  5258 ;; *************** function _Write_Byte *****************
  5259 ;; Defined at:
  5260 ;;		line 113 in file "Eusart.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  Data            1    wreg     unsigned char 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  Data            1    0[COMMON] unsigned char 
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		wreg
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5274 ;;      Params:         0       0       0       0
  5275 ;;      Locals:         1       0       0       0
  5276 ;;      Temps:          0       0       0       0
  5277 ;;      Totals:         1       0       0       0
  5278 ;;Total ram usage:        1 bytes
  5279 ;; Hardware stack levels used:    1
  5280 ;; This function calls:
  5281 ;;		Nothing
  5282 ;; This function is called by:
  5283 ;;		_WriteByteFromBuffer
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5287                           	line	113
  5288                           global __ptext16
  5289                           __ptext16:	;psect for function _Write_Byte
  5290  0F7C                     psect	text16
  5291                           	file	"Eusart.c"
  5292                           	line	113
  5293                           	global	__size_of_Write_Byte
  5294                           	__size_of_Write_Byte	equ	__end_of_Write_Byte-_Write_Byte
  5295  0006                     	
  5296                           _Write_Byte:	
  5297  0F7C                     ;incstack = 0
  5298                           	opt	stack 2
  5299                           ; Regs used in _Write_Byte: [wreg]
  5300                           ;Write_Byte@Data stored from wreg
  5301                           	movwf	(Write_Byte@Data)
  5302  0F7C  00F0               	line	117
  5303                           	
  5304                           i1l2107:	
  5305  0F7D                     ;Eusart.c: 113: void Write_Byte (unsigned char Data);Eusart.c: 114: {;Eusart.c: 117:    
                                  TXREG = Data;
  5306                           	movf	(Write_Byte@Data),w
  5307  0F7D  0870               	bcf	status, 5	;RP0=0, select bank0
  5308  0F7E  1283               	bcf	status, 6	;RP1=0, select bank0
  5309  0F7F  1303               	movwf	(21)	;volatile
  5310  0F80  0095               	line	118
  5311                           	
  5312                           i1l313:	
  5313  0F81                     	return
  5314  0F81  0008               	opt stack 0
  5315                           GLOBAL	__end_of_Write_Byte
  5316                           	__end_of_Write_Byte:
  5317  0F82                     	signat	_Write_Byte,4217
  5318                           	global	_Timer_Interrupt
  5319                           
  5320 ;; *************** function _Timer_Interrupt *****************
  5321 ;; Defined at:
  5322 ;;		line 74 in file "Timer.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;		None
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;		None
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		wreg, status,2, status,0
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5336 ;;      Params:         0       0       0       0
  5337 ;;      Locals:         0       0       0       0
  5338 ;;      Temps:          0       0       0       0
  5339 ;;      Totals:         0       0       0       0
  5340 ;;Total ram usage:        0 bytes
  5341 ;; Hardware stack levels used:    1
  5342 ;; This function calls:
  5343 ;;		Nothing
  5344 ;; This function is called by:
  5345 ;;		_Handle_Interrupts
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5349                           	file	"Timer.c"
  5350                           	line	74
  5351                           global __ptext17
  5352                           __ptext17:	;psect for function _Timer_Interrupt
  5353  0769                     psect	text17
  5354                           	file	"Timer.c"
  5355                           	line	74
  5356                           	global	__size_of_Timer_Interrupt
  5357                           	__size_of_Timer_Interrupt	equ	__end_of_Timer_Interrupt-_Timer_Interrupt
  5358  0037                     	
  5359                           _Timer_Interrupt:	
  5360  0769                     ;incstack = 0
  5361                           	opt	stack 3
  5362                           ; Regs used in _Timer_Interrupt: [wreg+status,2+status,0]
  5363                           	line	76
  5364                           	
  5365                           i1l2203:	
  5366  0769                     ;Timer.c: 76:     TMR1H = 160;
  5367                           	movlw	low(0A0h)
  5368  0769  30A0               	bcf	status, 5	;RP0=0, select bank0
  5369  076A  1283               	bcf	status, 6	;RP1=0, select bank0
  5370  076B  1303               	movwf	(15)	;volatile
  5371  076C  008F               	line	77
  5372                           ;Timer.c: 77:     TMR1L = 138;
  5373                           	movlw	low(08Ah)
  5374  076D  308A               	movwf	(14)	;volatile
  5375  076E  008E               	line	78
  5376                           ;Timer.c: 78:     Counter_100ms++;
  5377                           	movlw	01h
  5378  076F  3001               	addwf	(_Counter_100ms),f
  5379  0770  07DC               	skipnc
  5380  0771  1803               	incf	(_Counter_100ms+1),f
  5381  0772  0ADD               	movlw	0
  5382  0773  3000               	addwf	(_Counter_100ms+1),f
  5383  0774  07DD               	line	82
  5384                           	
  5385                           i1l2205:	
  5386  0775                     ;Timer.c: 82:     if (Counter_100ms == 10)
  5387                           		movlw	10
  5388  0775  300A               	xorwf	((_Counter_100ms)),w
  5389  0776  065C               iorwf	((_Counter_100ms+1)),w
  5390  0777  045D               	btfss	status,2
  5391  0778  1D03               	goto	u117_21
  5392  0779  2F7B               	goto	u117_20
  5393  077A  2F7C               u117_21:
  5394  077B                     	goto	i1l63
  5395  077B  2F9F               u117_20:
  5396  077C                     	line	85
  5397                           	
  5398                           i1l2207:	
  5399  077C                     ;Timer.c: 83:     {;Timer.c: 85:         Counter_100ms = 0;
  5400                           	clrf	(_Counter_100ms)
  5401  077C  01DC               	clrf	(_Counter_100ms+1)
  5402  077D  01DD               	line	86
  5403                           	
  5404                           i1l2209:	
  5405  077E                     ;Timer.c: 86:         Counter_1sec ++;
  5406                           	movlw	01h
  5407  077E  3001               	addwf	(_Counter_1sec),f
  5408  077F  07DA               	skipnc
  5409  0780  1803               	incf	(_Counter_1sec+1),f
  5410  0781  0ADB               	movlw	0
  5411  0782  3000               	addwf	(_Counter_1sec+1),f
  5412  0783  07DB               	line	88
  5413                           	
  5414                           i1l2211:	
  5415  0784                     ;Timer.c: 88:         if (Counter_1sec == 10)
  5416                           		movlw	10
  5417  0784  300A               	xorwf	((_Counter_1sec)),w
  5418  0785  065A               iorwf	((_Counter_1sec+1)),w
  5419  0786  045B               	btfss	status,2
  5420  0787  1D03               	goto	u118_21
  5421  0788  2F8A               	goto	u118_20
  5422  0789  2F8B               u118_21:
  5423  078A                     	goto	i1l63
  5424  078A  2F9F               u118_20:
  5425  078B                     	line	91
  5426                           	
  5427                           i1l2213:	
  5428  078B                     ;Timer.c: 89:         {;Timer.c: 91:             Counter_1sec = 0;
  5429                           	clrf	(_Counter_1sec)
  5430  078B  01DA               	clrf	(_Counter_1sec+1)
  5431  078C  01DB               	line	92
  5432                           	
  5433                           i1l2215:	
  5434  078D                     ;Timer.c: 92:             Counter_10sec ++;
  5435                           	movlw	01h
  5436  078D  3001               	addwf	(_Counter_10sec),f
  5437  078E  07D8               	skipnc
  5438  078F  1803               	incf	(_Counter_10sec+1),f
  5439  0790  0AD9               	movlw	0
  5440  0791  3000               	addwf	(_Counter_10sec+1),f
  5441  0792  07D9               	line	94
  5442                           	
  5443                           i1l2217:	
  5444  0793                     ;Timer.c: 94:             if (Counter_10sec == 10)
  5445                           		movlw	10
  5446  0793  300A               	xorwf	((_Counter_10sec)),w
  5447  0794  0658               iorwf	((_Counter_10sec+1)),w
  5448  0795  0459               	btfss	status,2
  5449  0796  1D03               	goto	u119_21
  5450  0797  2F99               	goto	u119_20
  5451  0798  2F9A               u119_21:
  5452  0799                     	goto	i1l63
  5453  0799  2F9F               u119_20:
  5454  079A                     	line	97
  5455                           	
  5456                           i1l2219:	
  5457  079A                     ;Timer.c: 95:             {;Timer.c: 97:                 Counter_10sec = 0;
  5458                           	clrf	(_Counter_10sec)
  5459  079A  01D8               	clrf	(_Counter_10sec+1)
  5460  079B  01D9               	goto	i1l63
  5461  079C  2F9F               	line	98
  5462                           ;Timer.c: 98:             }
  5463                           	
  5464                           i1l62:	
  5465  079D                     	goto	i1l63
  5466  079D  2F9F               	line	100
  5467                           ;Timer.c: 100:         }
  5468                           	
  5469                           i1l61:	
  5470  079E                     	goto	i1l63
  5471  079E  2F9F               	line	102
  5472                           ;Timer.c: 102:     }
  5473                           	
  5474                           i1l60:	
  5475  079F                     	line	103
  5476                           	
  5477                           i1l63:	
  5478  079F                     	return
  5479  079F  0008               	opt stack 0
  5480                           GLOBAL	__end_of_Timer_Interrupt
  5481                           	__end_of_Timer_Interrupt:
  5482  07A0                     	signat	_Timer_Interrupt,89
  5483                           	global	_HandleTelegramByte
  5484                           
  5485 ;; *************** function _HandleTelegramByte *****************
  5486 ;; Defined at:
  5487 ;;		line 3 in file "TelegramInterpreter.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;		None
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;  Byte            1    4[COMMON] unsigned char 
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  1    wreg      void 
  5494 ;; Registers used:
  5495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5501 ;;      Params:         0       0       0       0
  5502 ;;      Locals:         1       0       0       0
  5503 ;;      Temps:          2       0       0       0
  5504 ;;      Totals:         3       0       0       0
  5505 ;;Total ram usage:        3 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; Hardware stack levels required when called:    1
  5508 ;; This function calls:
  5509 ;;		_Read_Byte
  5510 ;; This function is called by:
  5511 ;;		_Handle_Interrupts
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5515                           	file	"TelegramInterpreter.c"
  5516                           	line	3
  5517                           global __ptext18
  5518                           __ptext18:	;psect for function _HandleTelegramByte
  5519  0428                     psect	text18
  5520                           	file	"TelegramInterpreter.c"
  5521                           	line	3
  5522                           	global	__size_of_HandleTelegramByte
  5523                           	__size_of_HandleTelegramByte	equ	__end_of_HandleTelegramByte-_HandleTelegramByte
  5524  0094                     	
  5525                           _HandleTelegramByte:	
  5526  0428                     ;incstack = 0
  5527                           	opt	stack 2
  5528                           ; Regs used in _HandleTelegramByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5529                           	line	10
  5530                           	
  5531                           i1l2509:	
  5532  0428                     ;TelegramInterpreter.c: 5:     unsigned char Byte;;TelegramInterpreter.c: 6:     static 
                                 unsigned char ByteCounter = Idle;;TelegramInterpreter.c: 7:     static unsigned char Com
                                 mandCounter = 0;;TelegramInterpreter.c: 8:     static unsigned char Lenght;;TelegramInte
                                 rpreter.c: 10:     Byte = Read_Byte();
  5533                           	fcall	_Read_Byte
  5534  0428  158A  278A  118A   	movwf	(??_HandleTelegramByte+0)+0
  5535  042B  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5536  042C  0872               	movwf	(HandleTelegramByte@Byte)
  5537  042D  00F4               	line	12
  5538                           	
  5539                           i1l2511:	
  5540  042E                     ;TelegramInterpreter.c: 12:     if (Byte == ':')
  5541                           		movlw	58
  5542  042E  303A               	xorwf	((HandleTelegramByte@Byte)),w
  5543  042F  0674               	btfss	status,2
  5544  0430  1D03               	goto	u157_21
  5545  0431  2C33               	goto	u157_20
  5546  0432  2C34               u157_21:
  5547  0433                     	goto	i1l2515
  5548  0433  2C41               u157_20:
  5549  0434                     	line	14
  5550                           	
  5551                           i1l2513:	
  5552  0434                     ;TelegramInterpreter.c: 13:     {;TelegramInterpreter.c: 14:         Telegram.Start = By
                                 te;
  5553                           	movf	(HandleTelegramByte@Byte),w
  5554  0434  0874               	movwf	(??_HandleTelegramByte+0)+0
  5555  0435  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5556  0436  0872               	bsf	status, 5	;RP0=1, select bank1
  5557  0437  1683               	bcf	status, 6	;RP1=0, select bank1
  5558  0438  1303               	movwf	(_Telegram)^080h
  5559  0439  00C8               	line	15
  5560                           ;TelegramInterpreter.c: 15:         ByteCounter = Address;
  5561                           	movlw	low(02h)
  5562  043A  3002               	movwf	(??_HandleTelegramByte+0)+0
  5563  043B  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5564  043C  0872               	bcf	status, 5	;RP0=0, select bank0
  5565  043D  1283               	bcf	status, 6	;RP1=0, select bank0
  5566  043E  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5567  043F  00E2               	line	16
  5568                           ;TelegramInterpreter.c: 16:     }
  5569                           	goto	i1l478
  5570  0440  2CBB               	line	17
  5571                           ;TelegramInterpreter.c: 17:     else if (ByteCounter > Start)
  5572                           	
  5573                           i1l467:	
  5574  0441                     	
  5575                           i1l2515:	
  5576  0441                     	movlw	low(02h)
  5577  0441  3002               	bcf	status, 5	;RP0=0, select bank0
  5578  0442  1283               	bcf	status, 6	;RP1=0, select bank0
  5579  0443  1303               	subwf	(HandleTelegramByte@ByteCounter),w
  5580  0444  0262               	skipc
  5581  0445  1C03               	goto	u158_21
  5582  0446  2C48               	goto	u158_20
  5583  0447  2C49               u158_21:
  5584  0448                     	goto	i1l478
  5585  0448  2CBB               u158_20:
  5586  0449                     	goto	i1l2543
  5587  0449  2CA0               	line	19
  5588                           	
  5589                           i1l2517:	
  5590  044A                     ;TelegramInterpreter.c: 18:     {;TelegramInterpreter.c: 19:         switch (ByteCounter
                                 )
  5591                           	goto	i1l2543
  5592  044A  2CA0               	line	21
  5593                           ;TelegramInterpreter.c: 20:         {;TelegramInterpreter.c: 21:             case Addres
                                 s:
  5594                           	
  5595                           i1l471:	
  5596  044B                     	line	22
  5597                           	
  5598                           i1l2519:	
  5599  044B                     ;TelegramInterpreter.c: 22:                 Telegram.Address = Byte;
  5600                           	movf	(HandleTelegramByte@Byte),w
  5601  044B  0874               	movwf	(??_HandleTelegramByte+0)+0
  5602  044C  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5603  044D  0872               	bsf	status, 5	;RP0=1, select bank1
  5604  044E  1683               	bcf	status, 6	;RP1=0, select bank1
  5605  044F  1303               	movwf	0+(_Telegram)^080h+01h
  5606  0450  00C9               	line	23
  5607                           ;TelegramInterpreter.c: 23:                 ByteCounter = Commandlength;
  5608                           	movlw	low(03h)
  5609  0451  3003               	movwf	(??_HandleTelegramByte+0)+0
  5610  0452  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5611  0453  0872               	bcf	status, 5	;RP0=0, select bank0
  5612  0454  1283               	bcf	status, 6	;RP1=0, select bank0
  5613  0455  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5614  0456  00E2               	line	24
  5615                           ;TelegramInterpreter.c: 24:                 break;
  5616                           	goto	i1l478
  5617  0457  2CBB               	line	26
  5618                           ;TelegramInterpreter.c: 26:             case Commandlength:
  5619                           	
  5620                           i1l473:	
  5621  0458                     	line	27
  5622                           	
  5623                           i1l2521:	
  5624  0458                     ;TelegramInterpreter.c: 27:                 Telegram.Commandlength = Byte - 48;
  5625                           	movf	(HandleTelegramByte@Byte),w
  5626  0458  0874               	addlw	0D0h
  5627  0459  3ED0               	movwf	(??_HandleTelegramByte+0)+0
  5628  045A  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5629  045B  0872               	bsf	status, 5	;RP0=1, select bank1
  5630  045C  1683               	bcf	status, 6	;RP1=0, select bank1
  5631  045D  1303               	movwf	0+(_Telegram)^080h+02h
  5632  045E  00CA               	line	28
  5633                           	
  5634                           i1l2523:	
  5635  045F                     ;TelegramInterpreter.c: 28:                 ByteCounter = Command;
  5636                           	movlw	low(04h)
  5637  045F  3004               	movwf	(??_HandleTelegramByte+0)+0
  5638  0460  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5639  0461  0872               	bcf	status, 5	;RP0=0, select bank0
  5640  0462  1283               	bcf	status, 6	;RP1=0, select bank0
  5641  0463  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5642  0464  00E2               	line	29
  5643                           	
  5644                           i1l2525:	
  5645  0465                     ;TelegramInterpreter.c: 29:                 CommandCounter = 0;
  5646                           	clrf	(HandleTelegramByte@CommandCounter)
  5647  0465  01E1               	line	30
  5648                           ;TelegramInterpreter.c: 30:                 break;
  5649                           	goto	i1l478
  5650  0466  2CBB               	line	32
  5651                           ;TelegramInterpreter.c: 32:             case Command:
  5652                           	
  5653                           i1l474:	
  5654  0467                     	line	33
  5655                           	
  5656                           i1l2527:	
  5657  0467                     ;TelegramInterpreter.c: 33:                 Telegram.Command[CommandCounter] = Byte;
  5658                           	movf	(HandleTelegramByte@Byte),w
  5659  0467  0874               	movwf	(??_HandleTelegramByte+0)+0
  5660  0468  00F2               	movf	(HandleTelegramByte@CommandCounter),w
  5661  0469  0861               	addlw	low(_Telegram|((0x0)<<8)+03h)&0ffh
  5662  046A  3ECB               	movwf	fsr0
  5663  046B  0084               	movf	(??_HandleTelegramByte+0)+0,w
  5664  046C  0872               	bcf	status, 7	;select IRP bank1
  5665  046D  1383               	movwf	indf
  5666  046E  0080               	line	34
  5667                           	
  5668                           i1l2529:	
  5669  046F                     ;TelegramInterpreter.c: 34:                 CommandCounter ++;
  5670                           	movlw	low(01h)
  5671  046F  3001               	movwf	(??_HandleTelegramByte+0)+0
  5672  0470  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5673  0471  0872               	addwf	(HandleTelegramByte@CommandCounter),f
  5674  0472  07E1               	line	35
  5675                           	
  5676                           i1l2531:	
  5677  0473                     ;TelegramInterpreter.c: 35:                 if (CommandCounter >= Telegram.Commandlength
                                 )
  5678                           	bsf	status, 5	;RP0=1, select bank1
  5679  0473  1683               	bcf	status, 6	;RP1=0, select bank1
  5680  0474  1303               	movf	0+(_Telegram)^080h+02h,w
  5681  0475  084A               	bcf	status, 5	;RP0=0, select bank0
  5682  0476  1283               	bcf	status, 6	;RP1=0, select bank0
  5683  0477  1303               	subwf	(HandleTelegramByte@CommandCounter),w
  5684  0478  0261               	skipc
  5685  0479  1C03               	goto	u159_21
  5686  047A  2C7C               	goto	u159_20
  5687  047B  2C7D               u159_21:
  5688  047C                     	goto	i1l478
  5689  047C  2CBB               u159_20:
  5690  047D                     	line	37
  5691                           	
  5692                           i1l2533:	
  5693  047D                     ;TelegramInterpreter.c: 36:                 {;TelegramInterpreter.c: 37:                
                                      ByteCounter = End1;
  5694                           	movlw	low(05h)
  5695  047D  3005               	movwf	(??_HandleTelegramByte+0)+0
  5696  047E  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5697  047F  0872               	movwf	(HandleTelegramByte@ByteCounter)
  5698  0480  00E2               	goto	i1l478
  5699  0481  2CBB               	line	38
  5700                           ;TelegramInterpreter.c: 38:                 }
  5701                           	
  5702                           i1l475:	
  5703  0482                     	line	39
  5704                           ;TelegramInterpreter.c: 39:                 break;
  5705                           	goto	i1l478
  5706  0482  2CBB               	line	41
  5707                           ;TelegramInterpreter.c: 41:             case End1:
  5708                           	
  5709                           i1l476:	
  5710  0483                     	line	42
  5711                           	
  5712                           i1l2535:	
  5713  0483                     ;TelegramInterpreter.c: 42:                 Telegram.End[0] = Byte;
  5714                           	movf	(HandleTelegramByte@Byte),w
  5715  0483  0874               	movwf	(??_HandleTelegramByte+0)+0
  5716  0484  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5717  0485  0872               	bsf	status, 5	;RP0=1, select bank1
  5718  0486  1683               	bcf	status, 6	;RP1=0, select bank1
  5719  0487  1303               	movwf	0+(_Telegram)^080h+013h
  5720  0488  00DB               	line	43
  5721                           ;TelegramInterpreter.c: 43:                 ByteCounter = End2;
  5722                           	movlw	low(06h)
  5723  0489  3006               	movwf	(??_HandleTelegramByte+0)+0
  5724  048A  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5725  048B  0872               	bcf	status, 5	;RP0=0, select bank0
  5726  048C  1283               	bcf	status, 6	;RP1=0, select bank0
  5727  048D  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5728  048E  00E2               	line	44
  5729                           ;TelegramInterpreter.c: 44:                 break;
  5730                           	goto	i1l478
  5731  048F  2CBB               	line	46
  5732                           ;TelegramInterpreter.c: 46:             case End2:
  5733                           	
  5734                           i1l477:	
  5735  0490                     	line	47
  5736                           	
  5737                           i1l2537:	
  5738  0490                     ;TelegramInterpreter.c: 47:                 Telegram.End[1] = Byte;
  5739                           	movf	(HandleTelegramByte@Byte),w
  5740  0490  0874               	movwf	(??_HandleTelegramByte+0)+0
  5741  0491  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5742  0492  0872               	bsf	status, 5	;RP0=1, select bank1
  5743  0493  1683               	bcf	status, 6	;RP1=0, select bank1
  5744  0494  1303               	movwf	0+(_Telegram)^080h+014h
  5745  0495  00DC               	line	48
  5746                           	
  5747                           i1l2539:	
  5748  0496                     ;TelegramInterpreter.c: 48:                 ByteCounter = Start;
  5749                           	bcf	status, 5	;RP0=0, select bank0
  5750  0496  1283               	bcf	status, 6	;RP1=0, select bank0
  5751  0497  1303               	clrf	(HandleTelegramByte@ByteCounter)
  5752  0498  01E2               	incf	(HandleTelegramByte@ByteCounter),f
  5753  0499  0AE2               	line	50
  5754                           ;TelegramInterpreter.c: 50:                 TelegramReadyFlag = 1;
  5755                           	movlw	01h
  5756  049A  3001               	movwf	(_TelegramReadyFlag)
  5757  049B  00DE               	movlw	0
  5758  049C  3000               	movwf	((_TelegramReadyFlag))+1
  5759  049D  00DF               	line	51
  5760                           ;TelegramInterpreter.c: 51:                 break;
  5761                           	goto	i1l478
  5762  049E  2CBB               	line	52
  5763                           	
  5764                           i1l2541:	
  5765  049F                     ;TelegramInterpreter.c: 52:         }
  5766                           	goto	i1l478
  5767  049F  2CBB               	
  5768                           i1l470:	
  5769  04A0                     	
  5770                           i1l2543:	
  5771  04A0                     	movf	(HandleTelegramByte@ByteCounter),w
  5772  04A0  0862               	movwf	(??_HandleTelegramByte+0)+0
  5773  04A1  00F2               	clrf	(??_HandleTelegramByte+0)+0+1
  5774  04A2  01F3               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5775                           ; Switch size 1, requested type "space"
  5776                           ; Number of cases is 1, Range of values is 0 to 0
  5777                           ; switch strategies available:
  5778                           ; Name         Instructions Cycles
  5779                           ; simple_byte            4     3 (average)
  5780                           ; direct_byte            9     7 (fixed)
  5781                           ; jumptable            260     6 (fixed)
  5782                           ;	Chosen strategy is simple_byte
  5783                           
  5784                           	movf 1+(??_HandleTelegramByte+0)+0,w
  5785  04A3  0873               	opt asmopt_push
  5786                           	opt asmopt_off
  5787                           	xorlw	0^0	; case 0
  5788  04A4  3A00               	skipnz
  5789  04A5  1903               	goto	i1l2897
  5790  04A6  2CA8               	goto	i1l478
  5791  04A7  2CBB               	opt asmopt_pop
  5792                           	
  5793                           i1l2897:	
  5794  04A8                     ; Switch size 1, requested type "space"
  5795                           ; Number of cases is 5, Range of values is 2 to 6
  5796                           ; switch strategies available:
  5797                           ; Name         Instructions Cycles
  5798                           ; simple_byte           16     9 (average)
  5799                           ; direct_byte           20    10 (fixed)
  5800                           ; jumptable            263     9 (fixed)
  5801                           ;	Chosen strategy is simple_byte
  5802                           
  5803                           	movf 0+(??_HandleTelegramByte+0)+0,w
  5804  04A8  0872               	opt asmopt_push
  5805                           	opt asmopt_off
  5806                           	xorlw	2^0	; case 2
  5807  04A9  3A02               	skipnz
  5808  04AA  1903               	goto	i1l2519
  5809  04AB  2C4B               	xorlw	3^2	; case 3
  5810  04AC  3A01               	skipnz
  5811  04AD  1903               	goto	i1l2521
  5812  04AE  2C58               	xorlw	4^3	; case 4
  5813  04AF  3A07               	skipnz
  5814  04B0  1903               	goto	i1l2527
  5815  04B1  2C67               	xorlw	5^4	; case 5
  5816  04B2  3A01               	skipnz
  5817  04B3  1903               	goto	i1l2535
  5818  04B4  2C83               	xorlw	6^5	; case 6
  5819  04B5  3A03               	skipnz
  5820  04B6  1903               	goto	i1l2537
  5821  04B7  2C90               	goto	i1l478
  5822  04B8  2CBB               	opt asmopt_pop
  5823                           
  5824                           	
  5825                           i1l472:	
  5826  04B9                     	goto	i1l478
  5827  04B9  2CBB               	line	53
  5828                           ;TelegramInterpreter.c: 53:     }
  5829                           	
  5830                           i1l469:	
  5831  04BA                     	goto	i1l478
  5832  04BA  2CBB               	
  5833                           i1l468:	
  5834  04BB                     	line	54
  5835                           	
  5836                           i1l478:	
  5837  04BB                     	return
  5838  04BB  0008               	opt stack 0
  5839                           GLOBAL	__end_of_HandleTelegramByte
  5840                           	__end_of_HandleTelegramByte:
  5841  04BC                     	signat	_HandleTelegramByte,89
  5842                           	global	_HandleConfigByte
  5843                           
  5844 ;; *************** function _HandleConfigByte *****************
  5845 ;; Defined at:
  5846 ;;		line 361 in file "Main.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;		None
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;  Byte            1    6[COMMON] unsigned char 
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  1    wreg      void 
  5853 ;; Registers used:
  5854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5860 ;;      Params:         0       0       0       0
  5861 ;;      Locals:         1       0       0       0
  5862 ;;      Temps:          2       0       0       0
  5863 ;;      Totals:         3       0       0       0
  5864 ;;Total ram usage:        3 bytes
  5865 ;; Hardware stack levels used:    1
  5866 ;; Hardware stack levels required when called:    1
  5867 ;; This function calls:
  5868 ;;		_Read_Byte
  5869 ;;		i1_AddByteToBuffer
  5870 ;;		i1_Set_Relay
  5871 ;; This function is called by:
  5872 ;;		_Handle_Interrupts
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5876                           	file	"Main.c"
  5877                           	line	361
  5878                           global __ptext19
  5879                           __ptext19:	;psect for function _HandleConfigByte
  5880  04BC                     psect	text19
  5881                           	file	"Main.c"
  5882                           	line	361
  5883                           	global	__size_of_HandleConfigByte
  5884                           	__size_of_HandleConfigByte	equ	__end_of_HandleConfigByte-_HandleConfigByte
  5885  008B                     	
  5886                           _HandleConfigByte:	
  5887  04BC                     ;incstack = 0
  5888                           	opt	stack 2
  5889                           ; Regs used in _HandleConfigByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5890                           	line	366
  5891                           	
  5892                           i1l2435:	
  5893  04BC                     ;Main.c: 363:     static unsigned char ByteCounter = 0;;Main.c: 365:     unsigned char B
                                 yte;;Main.c: 366:     Byte = Read_Byte();
  5894                           	fcall	_Read_Byte
  5895  04BC  158A  278A  118A   	movwf	(??_HandleConfigByte+0)+0
  5896  04BF  00F4               	movf	(??_HandleConfigByte+0)+0,w
  5897  04C0  0874               	movwf	(HandleConfigByte@Byte)
  5898  04C1  00F6               	line	368
  5899                           	
  5900                           i1l2437:	
  5901  04C2                     ;Main.c: 368:     if (Byte == '>')
  5902                           		movlw	62
  5903  04C2  303E               	xorwf	((HandleConfigByte@Byte)),w
  5904  04C3  0676               	btfss	status,2
  5905  04C4  1D03               	goto	u153_21
  5906  04C5  2CC7               	goto	u153_20
  5907  04C6  2CC8               u153_21:
  5908  04C7                     	goto	i1l230
  5909  04C7  2D46               u153_20:
  5910  04C8                     	goto	i1l2489
  5911  04C8  2D30               	line	370
  5912                           	
  5913                           i1l2439:	
  5914  04C9                     ;Main.c: 369:     {;Main.c: 370:         switch (ByteCounter)
  5915                           	goto	i1l2489
  5916  04C9  2D30               	line	372
  5917                           ;Main.c: 371:         {;Main.c: 372:             case 0:
  5918                           	
  5919                           i1l226:	
  5920  04CA                     	line	373
  5921                           	
  5922                           i1l2441:	
  5923  04CA                     ;Main.c: 373:                 ByteCounter = ByteCounter + 1;
  5924                           	bcf	status, 5	;RP0=0, select bank0
  5925  04CA  1283               	bcf	status, 6	;RP1=0, select bank0
  5926  04CB  1303               	movf	(HandleConfigByte@ByteCounter),w
  5927  04CC  0864               	addlw	01h
  5928  04CD  3E01               	movwf	(??_HandleConfigByte+0)+0
  5929  04CE  00F4               	movf	(??_HandleConfigByte+0)+0,w
  5930  04CF  0874               	movwf	(HandleConfigByte@ByteCounter)
  5931  04D0  00E4               	line	377
  5932                           	
  5933                           i1l2443:	
  5934  04D1                     ;Main.c: 377:                 PORTAbits.RA5 = 1;
  5935                           	bsf	(5),5	;volatile
  5936  04D1  1685               	line	378
  5937                           	
  5938                           i1l2445:	
  5939  04D2                     ;Main.c: 378:                 TRISAbits.TRISA5 = 1;
  5940                           	bsf	status, 5	;RP0=1, select bank1
  5941  04D2  1683               	bcf	status, 6	;RP1=0, select bank1
  5942  04D3  1303               	bsf	(133)^080h,5	;volatile
  5943  04D4  1685               	line	381
  5944                           	
  5945                           i1l2447:	
  5946  04D5                     ;Main.c: 381:                 AddByteToBuffer('M');
  5947                           	movlw	low(04Dh)
  5948  04D5  304D               	fcall	i1_AddByteToBuffer
  5949  04D6  158A  27CA  118A   	line	382
  5950                           ;Main.c: 382:                 break;
  5951                           	goto	i1l230
  5952  04D9  2D46               	line	384
  5953                           ;Main.c: 384:             case 1:
  5954                           	
  5955                           i1l228:	
  5956  04DA                     	line	385
  5957                           	
  5958                           i1l2449:	
  5959  04DA                     ;Main.c: 385:                 ByteCounter = ByteCounter + 1;
  5960                           	bcf	status, 5	;RP0=0, select bank0
  5961  04DA  1283               	bcf	status, 6	;RP1=0, select bank0
  5962  04DB  1303               	movf	(HandleConfigByte@ByteCounter),w
  5963  04DC  0864               	addlw	01h
  5964  04DD  3E01               	movwf	(??_HandleConfigByte+0)+0
  5965  04DE  00F4               	movf	(??_HandleConfigByte+0)+0,w
  5966  04DF  0874               	movwf	(HandleConfigByte@ByteCounter)
  5967  04E0  00E4               	line	388
  5968                           	
  5969                           i1l2451:	
  5970  04E1                     ;Main.c: 388:                 AddByteToBuffer(0x31);
  5971                           	movlw	low(031h)
  5972  04E1  3031               	fcall	i1_AddByteToBuffer
  5973  04E2  158A  27CA  118A   	line	389
  5974                           	
  5975                           i1l2453:	
  5976  04E5                     ;Main.c: 389:                 AddByteToBuffer(0x01);
  5977                           	movlw	low(01h)
  5978  04E5  3001               	fcall	i1_AddByteToBuffer
  5979  04E6  158A  27CA  118A   	line	392
  5980                           	
  5981                           i1l2455:	
  5982  04E9                     ;Main.c: 392:                 AddByteToBuffer(0x32);
  5983                           	movlw	low(032h)
  5984  04E9  3032               	fcall	i1_AddByteToBuffer
  5985  04EA  158A  27CA  118A   	line	393
  5986                           	
  5987                           i1l2457:	
  5988  04ED                     ;Main.c: 393:                 AddByteToBuffer(0x00);
  5989                           	movlw	low(0)
  5990  04ED  3000               	fcall	i1_AddByteToBuffer
  5991  04EE  158A  27CA  118A   	line	396
  5992                           	
  5993                           i1l2459:	
  5994  04F1                     ;Main.c: 396:                 AddByteToBuffer(0x33);
  5995                           	movlw	low(033h)
  5996  04F1  3033               	fcall	i1_AddByteToBuffer
  5997  04F2  158A  27CA  118A   	line	397
  5998                           	
  5999                           i1l2461:	
  6000  04F5                     ;Main.c: 397:                 AddByteToBuffer(0x00);
  6001                           	movlw	low(0)
  6002  04F5  3000               	fcall	i1_AddByteToBuffer
  6003  04F6  158A  27CA  118A   	line	400
  6004                           	
  6005                           i1l2463:	
  6006  04F9                     ;Main.c: 400:                 AddByteToBuffer(0x34);
  6007                           	movlw	low(034h)
  6008  04F9  3034               	fcall	i1_AddByteToBuffer
  6009  04FA  158A  27CA  118A   	line	401
  6010                           	
  6011                           i1l2465:	
  6012  04FD                     ;Main.c: 401:                 AddByteToBuffer(0x00);
  6013                           	movlw	low(0)
  6014  04FD  3000               	fcall	i1_AddByteToBuffer
  6015  04FE  158A  27CA  118A   	line	404
  6016                           	
  6017                           i1l2467:	
  6018  0501                     ;Main.c: 404:                 AddByteToBuffer(0xFF);
  6019                           	movlw	low(0FFh)
  6020  0501  30FF               	fcall	i1_AddByteToBuffer
  6021  0502  158A  27CA  118A   	line	405
  6022                           ;Main.c: 405:                 break;
  6023                           	goto	i1l230
  6024  0505  2D46               	line	407
  6025                           ;Main.c: 407:             case 2:
  6026                           	
  6027                           i1l229:	
  6028  0506                     	line	409
  6029                           	
  6030                           i1l2469:	
  6031  0506                     ;Main.c: 409:                 ByteCounter = 0;
  6032                           	bcf	status, 5	;RP0=0, select bank0
  6033  0506  1283               	bcf	status, 6	;RP1=0, select bank0
  6034  0507  1303               	clrf	(HandleConfigByte@ByteCounter)
  6035  0508  01E4               	line	412
  6036                           	
  6037                           i1l2471:	
  6038  0509                     ;Main.c: 412:                 AddByteToBuffer('X');
  6039                           	movlw	low(058h)
  6040  0509  3058               	fcall	i1_AddByteToBuffer
  6041  050A  158A  27CA  118A   	line	414
  6042                           	
  6043                           i1l2473:	
  6044  050D                     ;Main.c: 414:                 Set_Relay(Relay1, Off);
  6045                           	clrf	(i1Set_Relay@State)
  6046  050D  01F0               	movlw	low(0)
  6047  050E  3000               	fcall	i1_Set_Relay
  6048  050F  118A  2392  118A   	line	415
  6049                           	
  6050                           i1l2475:	
  6051  0512                     ;Main.c: 415:                 Set_Relay(Relay2, Off);
  6052                           	clrf	(i1Set_Relay@State)
  6053  0512  01F0               	movlw	low(01h)
  6054  0513  3001               	fcall	i1_Set_Relay
  6055  0514  118A  2392  118A   	line	416
  6056                           	
  6057                           i1l2477:	
  6058  0517                     ;Main.c: 416:                 Set_Relay(Relay3, Off);
  6059                           	clrf	(i1Set_Relay@State)
  6060  0517  01F0               	movlw	low(02h)
  6061  0518  3002               	fcall	i1_Set_Relay
  6062  0519  118A  2392  118A   	line	417
  6063                           	
  6064                           i1l2479:	
  6065  051C                     ;Main.c: 417:                 Set_Relay(Relay4, Off);
  6066                           	clrf	(i1Set_Relay@State)
  6067  051C  01F0               	movlw	low(03h)
  6068  051D  3003               	fcall	i1_Set_Relay
  6069  051E  118A  2392  118A   	line	418
  6070                           	
  6071                           i1l2481:	
  6072  0521                     ;Main.c: 418:                 Set_Relay(Relay5, Off);
  6073                           	clrf	(i1Set_Relay@State)
  6074  0521  01F0               	movlw	low(04h)
  6075  0522  3004               	fcall	i1_Set_Relay
  6076  0523  118A  2392  118A   	line	419
  6077                           	
  6078                           i1l2483:	
  6079  0526                     ;Main.c: 419:                 Set_Relay(Relay6, Off);
  6080                           	clrf	(i1Set_Relay@State)
  6081  0526  01F0               	movlw	low(05h)
  6082  0527  3005               	fcall	i1_Set_Relay
  6083  0528  118A  2392  118A   	line	421
  6084                           	
  6085                           i1l2485:	
  6086  052B                     ;Main.c: 421:                 CurrentMode = Running;
  6087                           	bcf	status, 5	;RP0=0, select bank0
  6088  052B  1283               	bcf	status, 6	;RP1=0, select bank0
  6089  052C  1303               	clrf	(_CurrentMode)
  6090  052D  01E5               	line	424
  6091                           	
  6092                           i1l2487:	
  6093  052E                     ;Main.c: 424:                 INTCONbits.RAIE = 1;
  6094                           	bsf	(11),3	;volatile
  6095  052E  158B               	line	426
  6096                           ;Main.c: 426:         }
  6097                           	goto	i1l230
  6098  052F  2D46               	
  6099                           i1l225:	
  6100  0530                     	
  6101                           i1l2489:	
  6102  0530                     	bcf	status, 5	;RP0=0, select bank0
  6103  0530  1283               	bcf	status, 6	;RP1=0, select bank0
  6104  0531  1303               	movf	(HandleConfigByte@ByteCounter),w
  6105  0532  0864               	movwf	(??_HandleConfigByte+0)+0
  6106  0533  00F4               	clrf	(??_HandleConfigByte+0)+0+1
  6107  0534  01F5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6108                           ; Switch size 1, requested type "space"
  6109                           ; Number of cases is 1, Range of values is 0 to 0
  6110                           ; switch strategies available:
  6111                           ; Name         Instructions Cycles
  6112                           ; simple_byte            4     3 (average)
  6113                           ; direct_byte            9     7 (fixed)
  6114                           ; jumptable            260     6 (fixed)
  6115                           ;	Chosen strategy is simple_byte
  6116                           
  6117                           	movf 1+(??_HandleConfigByte+0)+0,w
  6118  0535  0875               	opt asmopt_push
  6119                           	opt asmopt_off
  6120                           	xorlw	0^0	; case 0
  6121  0536  3A00               	skipnz
  6122  0537  1903               	goto	i1l2899
  6123  0538  2D3A               	goto	i1l230
  6124  0539  2D46               	opt asmopt_pop
  6125                           	
  6126                           i1l2899:	
  6127  053A                     ; Switch size 1, requested type "space"
  6128                           ; Number of cases is 3, Range of values is 0 to 2
  6129                           ; switch strategies available:
  6130                           ; Name         Instructions Cycles
  6131                           ; simple_byte           10     6 (average)
  6132                           ; direct_byte           13     7 (fixed)
  6133                           ; jumptable            260     6 (fixed)
  6134                           ;	Chosen strategy is simple_byte
  6135                           
  6136                           	movf 0+(??_HandleConfigByte+0)+0,w
  6137  053A  0874               	opt asmopt_push
  6138                           	opt asmopt_off
  6139                           	xorlw	0^0	; case 0
  6140  053B  3A00               	skipnz
  6141  053C  1903               	goto	i1l2441
  6142  053D  2CCA               	xorlw	1^0	; case 1
  6143  053E  3A01               	skipnz
  6144  053F  1903               	goto	i1l2449
  6145  0540  2CDA               	xorlw	2^1	; case 2
  6146  0541  3A03               	skipnz
  6147  0542  1903               	goto	i1l2469
  6148  0543  2D06               	goto	i1l230
  6149  0544  2D46               	opt asmopt_pop
  6150                           
  6151                           	
  6152                           i1l227:	
  6153  0545                     	goto	i1l230
  6154  0545  2D46               	line	428
  6155                           ;Main.c: 428:     }
  6156                           	
  6157                           i1l224:	
  6158  0546                     	line	430
  6159                           	
  6160                           i1l230:	
  6161  0546                     	return
  6162  0546  0008               	opt stack 0
  6163                           GLOBAL	__end_of_HandleConfigByte
  6164                           	__end_of_HandleConfigByte:
  6165  0547                     	signat	_HandleConfigByte,89
  6166                           	global	i1_Set_Relay
  6167                           
  6168 ;; *************** function i1_Set_Relay *****************
  6169 ;; Defined at:
  6170 ;;		line 64 in file "RelayControl.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;  Relay           1    wreg     unsigned char 
  6173 ;;  State           1    0[COMMON] unsigned char 
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;  Relay           1    3[COMMON] unsigned char 
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  1    wreg      void 
  6178 ;; Registers used:
  6179 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6185 ;;      Params:         1       0       0       0
  6186 ;;      Locals:         1       0       0       0
  6187 ;;      Temps:          2       0       0       0
  6188 ;;      Totals:         4       0       0       0
  6189 ;;Total ram usage:        4 bytes
  6190 ;; Hardware stack levels used:    1
  6191 ;; This function calls:
  6192 ;;		Nothing
  6193 ;; This function is called by:
  6194 ;;		_HandleConfigByte
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6198                           	file	"RelayControl.c"
  6199                           	line	64
  6200                           global __ptext20
  6201                           __ptext20:	;psect for function i1_Set_Relay
  6202  0392                     psect	text20
  6203                           	file	"RelayControl.c"
  6204                           	line	64
  6205                           	global	__size_ofi1_Set_Relay
  6206                           	__size_ofi1_Set_Relay	equ	__end_ofi1_Set_Relay-i1_Set_Relay
  6207  0096                     	
  6208                           i1_Set_Relay:	
  6209  0392                     ;incstack = 0
  6210                           	opt	stack 2
  6211                           ; Regs used in i1_Set_Relay: [wreg-fsr0h+status,2+status,0]
  6212                           ;i1Set_Relay@Relay stored from wreg
  6213                           	movwf	(i1Set_Relay@Relay)
  6214  0392  00F3               	line	66
  6215                           	
  6216                           i1l2119:	
  6217  0393                     ;RelayControl.c: 64: void Set_Relay (unsigned char Relay, unsigned char State);RelayCont
                                 rol.c: 65: {;RelayControl.c: 66:     switch (Relay)
  6218                           	goto	i1l2171
  6219  0393  2C13               	line	68
  6220                           ;RelayControl.c: 67:     {;RelayControl.c: 68:         case Relay1:
  6221                           	
  6222                           i1l376:	
  6223  0394                     	line	69
  6224                           	
  6225                           i1l2121:	
  6226  0394                     ;RelayControl.c: 69:         if (State == On)
  6227                           		decf	((i1Set_Relay@State)),w
  6228  0394  0370               	btfss	status,2
  6229  0395  1D03               	goto	u105_21
  6230  0396  2B98               	goto	u105_20
  6231  0397  2B99               u105_21:
  6232  0398                     	goto	i1l2125
  6233  0398  2B9D               u105_20:
  6234  0399                     	line	71
  6235                           	
  6236                           i1l2123:	
  6237  0399                     ;RelayControl.c: 70:         {;RelayControl.c: 71:             PORTAbits.RA0 = 1;
  6238                           	bcf	status, 5	;RP0=0, select bank0
  6239  0399  1283               	bcf	status, 6	;RP1=0, select bank0
  6240  039A  1303               	bsf	(5),0	;volatile
  6241  039B  1405               	line	72
  6242                           ;RelayControl.c: 72:         }
  6243                           	goto	i1l407
  6244  039C  2C27               	line	73
  6245                           ;RelayControl.c: 73:         else if (State == Off)
  6246                           	
  6247                           i1l377:	
  6248  039D                     	
  6249                           i1l2125:	
  6250  039D                     	movf	((i1Set_Relay@State)),w
  6251  039D  0870               	btfss	status,2
  6252  039E  1D03               	goto	u106_21
  6253  039F  2BA1               	goto	u106_20
  6254  03A0  2BA2               u106_21:
  6255  03A1                     	goto	i1l407
  6256  03A1  2C27               u106_20:
  6257  03A2                     	line	75
  6258                           	
  6259                           i1l2127:	
  6260  03A2                     ;RelayControl.c: 74:         {;RelayControl.c: 75:             PORTAbits.RA0 = 0;
  6261                           	bcf	status, 5	;RP0=0, select bank0
  6262  03A2  1283               	bcf	status, 6	;RP1=0, select bank0
  6263  03A3  1303               	bcf	(5),0	;volatile
  6264  03A4  1005               	line	76
  6265                           ;RelayControl.c: 76:         }
  6266                           	goto	i1l407
  6267  03A5  2C27               	line	77
  6268                           ;RelayControl.c: 77:         else
  6269                           	
  6270                           i1l379:	
  6271  03A6                     	goto	i1l407
  6272  03A6  2C27               	line	80
  6273                           ;RelayControl.c: 78:         {;RelayControl.c: 80:         }
  6274                           	
  6275                           i1l380:	
  6276  03A7                     	goto	i1l407
  6277  03A7  2C27               	
  6278                           i1l378:	
  6279  03A8                     	line	81
  6280                           ;RelayControl.c: 81:         break;
  6281                           	goto	i1l407
  6282  03A8  2C27               	line	83
  6283                           ;RelayControl.c: 83:         case Relay2:
  6284                           	
  6285                           i1l382:	
  6286  03A9                     	line	84
  6287                           	
  6288                           i1l2129:	
  6289  03A9                     ;RelayControl.c: 84:         if (State == On)
  6290                           		decf	((i1Set_Relay@State)),w
  6291  03A9  0370               	btfss	status,2
  6292  03AA  1D03               	goto	u107_21
  6293  03AB  2BAD               	goto	u107_20
  6294  03AC  2BAE               u107_21:
  6295  03AD                     	goto	i1l2133
  6296  03AD  2BB2               u107_20:
  6297  03AE                     	line	86
  6298                           	
  6299                           i1l2131:	
  6300  03AE                     ;RelayControl.c: 85:         {;RelayControl.c: 86:             PORTAbits.RA1 = 1;
  6301                           	bcf	status, 5	;RP0=0, select bank0
  6302  03AE  1283               	bcf	status, 6	;RP1=0, select bank0
  6303  03AF  1303               	bsf	(5),1	;volatile
  6304  03B0  1485               	line	87
  6305                           ;RelayControl.c: 87:         }
  6306                           	goto	i1l407
  6307  03B1  2C27               	line	88
  6308                           ;RelayControl.c: 88:         else if (State == Off)
  6309                           	
  6310                           i1l383:	
  6311  03B2                     	
  6312                           i1l2133:	
  6313  03B2                     	movf	((i1Set_Relay@State)),w
  6314  03B2  0870               	btfss	status,2
  6315  03B3  1D03               	goto	u108_21
  6316  03B4  2BB6               	goto	u108_20
  6317  03B5  2BB7               u108_21:
  6318  03B6                     	goto	i1l407
  6319  03B6  2C27               u108_20:
  6320  03B7                     	line	90
  6321                           	
  6322                           i1l2135:	
  6323  03B7                     ;RelayControl.c: 89:         {;RelayControl.c: 90:             PORTAbits.RA1 = 0;
  6324                           	bcf	status, 5	;RP0=0, select bank0
  6325  03B7  1283               	bcf	status, 6	;RP1=0, select bank0
  6326  03B8  1303               	bcf	(5),1	;volatile
  6327  03B9  1085               	line	91
  6328                           ;RelayControl.c: 91:         }
  6329                           	goto	i1l407
  6330  03BA  2C27               	line	92
  6331                           ;RelayControl.c: 92:         else
  6332                           	
  6333                           i1l385:	
  6334  03BB                     	goto	i1l407
  6335  03BB  2C27               	line	95
  6336                           ;RelayControl.c: 93:         {;RelayControl.c: 95:         }
  6337                           	
  6338                           i1l386:	
  6339  03BC                     	goto	i1l407
  6340  03BC  2C27               	
  6341                           i1l384:	
  6342  03BD                     	line	96
  6343                           ;RelayControl.c: 96:         break;
  6344                           	goto	i1l407
  6345  03BD  2C27               	line	98
  6346                           ;RelayControl.c: 98:         case Relay3:
  6347                           	
  6348                           i1l387:	
  6349  03BE                     	line	99
  6350                           	
  6351                           i1l2137:	
  6352  03BE                     ;RelayControl.c: 99:         if (State == On)
  6353                           		decf	((i1Set_Relay@State)),w
  6354  03BE  0370               	btfss	status,2
  6355  03BF  1D03               	goto	u109_21
  6356  03C0  2BC2               	goto	u109_20
  6357  03C1  2BC3               u109_21:
  6358  03C2                     	goto	i1l2141
  6359  03C2  2BC7               u109_20:
  6360  03C3                     	line	101
  6361                           	
  6362                           i1l2139:	
  6363  03C3                     ;RelayControl.c: 100:         {;RelayControl.c: 101:             PORTAbits.RA2 = 1;
  6364                           	bcf	status, 5	;RP0=0, select bank0
  6365  03C3  1283               	bcf	status, 6	;RP1=0, select bank0
  6366  03C4  1303               	bsf	(5),2	;volatile
  6367  03C5  1505               	line	102
  6368                           ;RelayControl.c: 102:         }
  6369                           	goto	i1l407
  6370  03C6  2C27               	line	103
  6371                           ;RelayControl.c: 103:         else if (State == Off)
  6372                           	
  6373                           i1l388:	
  6374  03C7                     	
  6375                           i1l2141:	
  6376  03C7                     	movf	((i1Set_Relay@State)),w
  6377  03C7  0870               	btfss	status,2
  6378  03C8  1D03               	goto	u110_21
  6379  03C9  2BCB               	goto	u110_20
  6380  03CA  2BCC               u110_21:
  6381  03CB                     	goto	i1l407
  6382  03CB  2C27               u110_20:
  6383  03CC                     	line	105
  6384                           	
  6385                           i1l2143:	
  6386  03CC                     ;RelayControl.c: 104:         {;RelayControl.c: 105:             PORTAbits.RA2 = 0;
  6387                           	bcf	status, 5	;RP0=0, select bank0
  6388  03CC  1283               	bcf	status, 6	;RP1=0, select bank0
  6389  03CD  1303               	bcf	(5),2	;volatile
  6390  03CE  1105               	line	106
  6391                           ;RelayControl.c: 106:         }
  6392                           	goto	i1l407
  6393  03CF  2C27               	line	107
  6394                           ;RelayControl.c: 107:         else
  6395                           	
  6396                           i1l390:	
  6397  03D0                     	goto	i1l407
  6398  03D0  2C27               	line	110
  6399                           ;RelayControl.c: 108:         {;RelayControl.c: 110:         }
  6400                           	
  6401                           i1l391:	
  6402  03D1                     	goto	i1l407
  6403  03D1  2C27               	
  6404                           i1l389:	
  6405  03D2                     	line	111
  6406                           ;RelayControl.c: 111:         break;
  6407                           	goto	i1l407
  6408  03D2  2C27               	line	113
  6409                           ;RelayControl.c: 113:         case Relay4:
  6410                           	
  6411                           i1l392:	
  6412  03D3                     	line	114
  6413                           	
  6414                           i1l2145:	
  6415  03D3                     ;RelayControl.c: 114:         if (State == On)
  6416                           		decf	((i1Set_Relay@State)),w
  6417  03D3  0370               	btfss	status,2
  6418  03D4  1D03               	goto	u111_21
  6419  03D5  2BD7               	goto	u111_20
  6420  03D6  2BD8               u111_21:
  6421  03D7                     	goto	i1l2149
  6422  03D7  2BDC               u111_20:
  6423  03D8                     	line	116
  6424                           	
  6425                           i1l2147:	
  6426  03D8                     ;RelayControl.c: 115:         {;RelayControl.c: 116:             PORTCbits.RC0 = 1;
  6427                           	bcf	status, 5	;RP0=0, select bank0
  6428  03D8  1283               	bcf	status, 6	;RP1=0, select bank0
  6429  03D9  1303               	bsf	(7),0	;volatile
  6430  03DA  1407               	line	117
  6431                           ;RelayControl.c: 117:         }
  6432                           	goto	i1l407
  6433  03DB  2C27               	line	118
  6434                           ;RelayControl.c: 118:         else if (State == Off)
  6435                           	
  6436                           i1l393:	
  6437  03DC                     	
  6438                           i1l2149:	
  6439  03DC                     	movf	((i1Set_Relay@State)),w
  6440  03DC  0870               	btfss	status,2
  6441  03DD  1D03               	goto	u112_21
  6442  03DE  2BE0               	goto	u112_20
  6443  03DF  2BE1               u112_21:
  6444  03E0                     	goto	i1l407
  6445  03E0  2C27               u112_20:
  6446  03E1                     	line	120
  6447                           	
  6448                           i1l2151:	
  6449  03E1                     ;RelayControl.c: 119:         {;RelayControl.c: 120:             PORTCbits.RC0 = 0;
  6450                           	bcf	status, 5	;RP0=0, select bank0
  6451  03E1  1283               	bcf	status, 6	;RP1=0, select bank0
  6452  03E2  1303               	bcf	(7),0	;volatile
  6453  03E3  1007               	line	121
  6454                           ;RelayControl.c: 121:         }
  6455                           	goto	i1l407
  6456  03E4  2C27               	line	122
  6457                           ;RelayControl.c: 122:         else
  6458                           	
  6459                           i1l395:	
  6460  03E5                     	goto	i1l407
  6461  03E5  2C27               	line	125
  6462                           ;RelayControl.c: 123:         {;RelayControl.c: 125:         }
  6463                           	
  6464                           i1l396:	
  6465  03E6                     	goto	i1l407
  6466  03E6  2C27               	
  6467                           i1l394:	
  6468  03E7                     	line	126
  6469                           ;RelayControl.c: 126:         break;
  6470                           	goto	i1l407
  6471  03E7  2C27               	line	128
  6472                           ;RelayControl.c: 128:         case Relay5:
  6473                           	
  6474                           i1l397:	
  6475  03E8                     	line	129
  6476                           	
  6477                           i1l2153:	
  6478  03E8                     ;RelayControl.c: 129:         if (State == On)
  6479                           		decf	((i1Set_Relay@State)),w
  6480  03E8  0370               	btfss	status,2
  6481  03E9  1D03               	goto	u113_21
  6482  03EA  2BEC               	goto	u113_20
  6483  03EB  2BED               u113_21:
  6484  03EC                     	goto	i1l2157
  6485  03EC  2BF1               u113_20:
  6486  03ED                     	line	131
  6487                           	
  6488                           i1l2155:	
  6489  03ED                     ;RelayControl.c: 130:         {;RelayControl.c: 131:             PORTCbits.RC1 = 1;
  6490                           	bcf	status, 5	;RP0=0, select bank0
  6491  03ED  1283               	bcf	status, 6	;RP1=0, select bank0
  6492  03EE  1303               	bsf	(7),1	;volatile
  6493  03EF  1487               	line	132
  6494                           ;RelayControl.c: 132:         }
  6495                           	goto	i1l407
  6496  03F0  2C27               	line	133
  6497                           ;RelayControl.c: 133:         else if (State == Off)
  6498                           	
  6499                           i1l398:	
  6500  03F1                     	
  6501                           i1l2157:	
  6502  03F1                     	movf	((i1Set_Relay@State)),w
  6503  03F1  0870               	btfss	status,2
  6504  03F2  1D03               	goto	u114_21
  6505  03F3  2BF5               	goto	u114_20
  6506  03F4  2BF6               u114_21:
  6507  03F5                     	goto	i1l407
  6508  03F5  2C27               u114_20:
  6509  03F6                     	line	135
  6510                           	
  6511                           i1l2159:	
  6512  03F6                     ;RelayControl.c: 134:         {;RelayControl.c: 135:             PORTCbits.RC1 = 0;
  6513                           	bcf	status, 5	;RP0=0, select bank0
  6514  03F6  1283               	bcf	status, 6	;RP1=0, select bank0
  6515  03F7  1303               	bcf	(7),1	;volatile
  6516  03F8  1087               	line	136
  6517                           ;RelayControl.c: 136:         }
  6518                           	goto	i1l407
  6519  03F9  2C27               	line	137
  6520                           ;RelayControl.c: 137:         else
  6521                           	
  6522                           i1l400:	
  6523  03FA                     	goto	i1l407
  6524  03FA  2C27               	line	140
  6525                           ;RelayControl.c: 138:         {;RelayControl.c: 140:         }
  6526                           	
  6527                           i1l401:	
  6528  03FB                     	goto	i1l407
  6529  03FB  2C27               	
  6530                           i1l399:	
  6531  03FC                     	line	141
  6532                           ;RelayControl.c: 141:         break;
  6533                           	goto	i1l407
  6534  03FC  2C27               	line	143
  6535                           ;RelayControl.c: 143:         case Relay6:
  6536                           	
  6537                           i1l402:	
  6538  03FD                     	line	144
  6539                           	
  6540                           i1l2161:	
  6541  03FD                     ;RelayControl.c: 144:         if (State == On)
  6542                           		decf	((i1Set_Relay@State)),w
  6543  03FD  0370               	btfss	status,2
  6544  03FE  1D03               	goto	u115_21
  6545  03FF  2C01               	goto	u115_20
  6546  0400  2C02               u115_21:
  6547  0401                     	goto	i1l2165
  6548  0401  2C06               u115_20:
  6549  0402                     	line	146
  6550                           	
  6551                           i1l2163:	
  6552  0402                     ;RelayControl.c: 145:         {;RelayControl.c: 146:             PORTCbits.RC2 = 1;
  6553                           	bcf	status, 5	;RP0=0, select bank0
  6554  0402  1283               	bcf	status, 6	;RP1=0, select bank0
  6555  0403  1303               	bsf	(7),2	;volatile
  6556  0404  1507               	line	147
  6557                           ;RelayControl.c: 147:         }
  6558                           	goto	i1l407
  6559  0405  2C27               	line	148
  6560                           ;RelayControl.c: 148:         else if (State == Off)
  6561                           	
  6562                           i1l403:	
  6563  0406                     	
  6564                           i1l2165:	
  6565  0406                     	movf	((i1Set_Relay@State)),w
  6566  0406  0870               	btfss	status,2
  6567  0407  1D03               	goto	u116_21
  6568  0408  2C0A               	goto	u116_20
  6569  0409  2C0B               u116_21:
  6570  040A                     	goto	i1l407
  6571  040A  2C27               u116_20:
  6572  040B                     	line	150
  6573                           	
  6574                           i1l2167:	
  6575  040B                     ;RelayControl.c: 149:         {;RelayControl.c: 150:             PORTCbits.RC2 = 0;
  6576                           	bcf	status, 5	;RP0=0, select bank0
  6577  040B  1283               	bcf	status, 6	;RP1=0, select bank0
  6578  040C  1303               	bcf	(7),2	;volatile
  6579  040D  1107               	line	151
  6580                           ;RelayControl.c: 151:         }
  6581                           	goto	i1l407
  6582  040E  2C27               	line	152
  6583                           ;RelayControl.c: 152:         else
  6584                           	
  6585                           i1l405:	
  6586  040F                     	goto	i1l407
  6587  040F  2C27               	line	155
  6588                           ;RelayControl.c: 153:         {;RelayControl.c: 155:         }
  6589                           	
  6590                           i1l406:	
  6591  0410                     	goto	i1l407
  6592  0410  2C27               	
  6593                           i1l404:	
  6594  0411                     	line	156
  6595                           ;RelayControl.c: 156:         break;
  6596                           	goto	i1l407
  6597  0411  2C27               	line	157
  6598                           	
  6599                           i1l2169:	
  6600  0412                     ;RelayControl.c: 157:     }
  6601                           	goto	i1l407
  6602  0412  2C27               	
  6603                           i1l375:	
  6604  0413                     	
  6605                           i1l2171:	
  6606  0413                     	movf	(i1Set_Relay@Relay),w
  6607  0413  0873               	movwf	(??i1_Set_Relay+0)+0
  6608  0414  00F1               	clrf	(??i1_Set_Relay+0)+0+1
  6609  0415  01F2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6610                           ; Switch size 1, requested type "space"
  6611                           ; Number of cases is 1, Range of values is 0 to 0
  6612                           ; switch strategies available:
  6613                           ; Name         Instructions Cycles
  6614                           ; simple_byte            4     3 (average)
  6615                           ; direct_byte            9     7 (fixed)
  6616                           ; jumptable            260     6 (fixed)
  6617                           ;	Chosen strategy is simple_byte
  6618                           
  6619                           	movf 1+(??i1_Set_Relay+0)+0,w
  6620  0416  0872               	opt asmopt_push
  6621                           	opt asmopt_off
  6622                           	xorlw	0^0	; case 0
  6623  0417  3A00               	skipnz
  6624  0418  1903               	goto	i1l2901
  6625  0419  2C1B               	goto	i1l407
  6626  041A  2C27               	opt asmopt_pop
  6627                           	
  6628                           i1l2901:	
  6629  041B                     ; Switch size 1, requested type "space"
  6630                           ; Number of cases is 6, Range of values is 0 to 5
  6631                           ; switch strategies available:
  6632                           ; Name         Instructions Cycles
  6633                           ; direct_byte           19     7 (fixed)
  6634                           ; simple_byte           19    10 (average)
  6635                           ; jumptable            260     6 (fixed)
  6636                           ;	Chosen strategy is direct_byte
  6637                           
  6638                           	movf 0+(??i1_Set_Relay+0)+0,w
  6639  041B  0871               	movwf fsr
  6640  041C  0084               	movlw	6
  6641  041D  3006               	subwf	fsr,w
  6642  041E  0204               skipnc
  6643  041F  1803               goto i1l407
  6644  0420  2C27               movlw high(i1S2903)
  6645  0421  3008               movwf pclath
  6646  0422  008A               	clrc
  6647  0423  1003               	rlf fsr,w
  6648  0424  0D04               	addlw low(i1S2903)
  6649  0425  3E18               	movwf pc
  6650  0426  0082               psect	swtext3,local,class=CONST,delta=2
  6651                           global __pswtext3
  6652                           __pswtext3:
  6653  0818                     i1S2903:
  6654  0818                     	ljmp	i1l2121
  6655  0818  118A  2B94         	ljmp	i1l2129
  6656  081A  118A  2BA9         	ljmp	i1l2137
  6657  081C  118A  2BBE         	ljmp	i1l2145
  6658  081E  118A  2BD3         	ljmp	i1l2153
  6659  0820  118A  2BE8         	ljmp	i1l2161
  6660  0822  118A  2BFD         psect	text20
  6661                           
  6662                           	
  6663                           i1l381:	
  6664  0427                     	line	159
  6665                           	
  6666                           i1l407:	
  6667  0427                     	return
  6668  0427  0008               	opt stack 0
  6669                           GLOBAL	__end_ofi1_Set_Relay
  6670                           	__end_ofi1_Set_Relay:
  6671  0428                     	signat	i1_Set_Relay,89
  6672                           	global	i1_AddByteToBuffer
  6673                           
  6674 ;; *************** function i1_AddByteToBuffer *****************
  6675 ;; Defined at:
  6676 ;;		line 120 in file "Eusart.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  Byte            1    wreg     unsigned char 
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;  Byte            1    1[COMMON] unsigned char 
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1    wreg      void 
  6683 ;; Registers used:
  6684 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6690 ;;      Params:         0       0       0       0
  6691 ;;      Locals:         1       0       0       0
  6692 ;;      Temps:          1       0       0       0
  6693 ;;      Totals:         2       0       0       0
  6694 ;;Total ram usage:        2 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; This function calls:
  6697 ;;		Nothing
  6698 ;; This function is called by:
  6699 ;;		_HandleConfigByte
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6703                           	file	"Eusart.c"
  6704                           	line	120
  6705                           global __ptext21
  6706                           __ptext21:	;psect for function i1_AddByteToBuffer
  6707  0FCA                     psect	text21
  6708                           	file	"Eusart.c"
  6709                           	line	120
  6710                           	global	__size_ofi1_AddByteToBuffer
  6711                           	__size_ofi1_AddByteToBuffer	equ	__end_ofi1_AddByteToBuffer-i1_AddByteToBuffer
  6712  001A                     	
  6713                           i1_AddByteToBuffer:	
  6714  0FCA                     ;incstack = 0
  6715                           	opt	stack 2
  6716                           ; Regs used in i1_AddByteToBuffer: [wreg-fsr0h+status,2+status,0]
  6717                           ;i1AddByteToBuffer@Byte stored from wreg
  6718                           	movwf	(i1AddByteToBuffer@Byte)
  6719  0FCA  00F1               	line	122
  6720                           	
  6721                           i1l2109:	
  6722  0FCB                     ;Eusart.c: 120: void AddByteToBuffer (unsigned char Byte);Eusart.c: 121: {;Eusart.c: 122
                                 :     SendBuffer[BufferHead] = Byte;
  6723                           	movf	(i1AddByteToBuffer@Byte),w
  6724  0FCB  0871               	movwf	(??i1_AddByteToBuffer+0)+0
  6725  0FCC  00F0               	movf	(_BufferHead),w
  6726  0FCD  087D               	addlw	low(_SendBuffer|((0x0)<<8))&0ffh
  6727  0FCE  3EA0               	movwf	fsr0
  6728  0FCF  0084               	movf	(??i1_AddByteToBuffer+0)+0,w
  6729  0FD0  0870               	bcf	status, 7	;select IRP bank1
  6730  0FD1  1383               	movwf	indf
  6731  0FD2  0080               	line	124
  6732                           	
  6733                           i1l2111:	
  6734  0FD3                     ;Eusart.c: 124:     if (BufferHead == 39)
  6735                           		movlw	39
  6736  0FD3  3027               	xorwf	((_BufferHead)),w
  6737  0FD4  067D               	btfss	status,2
  6738  0FD5  1D03               	goto	u104_21
  6739  0FD6  2FD8               	goto	u104_20
  6740  0FD7  2FD9               u104_21:
  6741  0FD8                     	goto	i1l2115
  6742  0FD8  2FDB               u104_20:
  6743  0FD9                     	line	126
  6744                           	
  6745                           i1l2113:	
  6746  0FD9                     ;Eusart.c: 125:     {;Eusart.c: 126:         BufferHead = 0;
  6747                           	clrf	(_BufferHead)
  6748  0FD9  01FD               	line	127
  6749                           ;Eusart.c: 127:     }
  6750                           	goto	i1l2117
  6751  0FDA  2FE0               	line	128
  6752                           ;Eusart.c: 128:     else
  6753                           	
  6754                           i1l316:	
  6755  0FDB                     	line	130
  6756                           	
  6757                           i1l2115:	
  6758  0FDB                     ;Eusart.c: 129:     {;Eusart.c: 130:         BufferHead++;
  6759                           	movlw	low(01h)
  6760  0FDB  3001               	movwf	(??i1_AddByteToBuffer+0)+0
  6761  0FDC  00F0               	movf	(??i1_AddByteToBuffer+0)+0,w
  6762  0FDD  0870               	addwf	(_BufferHead),f
  6763  0FDE  07FD               	goto	i1l2117
  6764  0FDF  2FE0               	line	131
  6765                           ;Eusart.c: 131:     }
  6766                           	
  6767                           i1l317:	
  6768  0FE0                     	line	134
  6769                           	
  6770                           i1l2117:	
  6771  0FE0                     ;Eusart.c: 134:     PIE1bits.TXIE = 1;
  6772                           	bsf	status, 5	;RP0=1, select bank1
  6773  0FE0  1683               	bcf	status, 6	;RP1=0, select bank1
  6774  0FE1  1303               	bsf	(140)^080h,1	;volatile
  6775  0FE2  148C               	line	136
  6776                           	
  6777                           i1l318:	
  6778  0FE3                     	return
  6779  0FE3  0008               	opt stack 0
  6780                           GLOBAL	__end_ofi1_AddByteToBuffer
  6781                           	__end_ofi1_AddByteToBuffer:
  6782  0FE4                     	signat	i1_AddByteToBuffer,89
  6783                           	global	_Read_Byte
  6784                           
  6785 ;; *************** function _Read_Byte *****************
  6786 ;; Defined at:
  6787 ;;		line 106 in file "Eusart.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;		None
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  Data            1    1[COMMON] unsigned char 
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  1    wreg      unsigned char 
  6794 ;; Registers used:
  6795 ;;		wreg
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6801 ;;      Params:         0       0       0       0
  6802 ;;      Locals:         1       0       0       0
  6803 ;;      Temps:          1       0       0       0
  6804 ;;      Totals:         2       0       0       0
  6805 ;;Total ram usage:        2 bytes
  6806 ;; Hardware stack levels used:    1
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_HandleConfigByte
  6811 ;;		_HandleTelegramByte
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6815                           	line	106
  6816                           global __ptext22
  6817                           __ptext22:	;psect for function _Read_Byte
  6818  0F8A                     psect	text22
  6819                           	file	"Eusart.c"
  6820                           	line	106
  6821                           	global	__size_of_Read_Byte
  6822                           	__size_of_Read_Byte	equ	__end_of_Read_Byte-_Read_Byte
  6823  0009                     	
  6824                           _Read_Byte:	
  6825  0F8A                     ;incstack = 0
  6826                           	opt	stack 2
  6827                           ; Regs used in _Read_Byte: [wreg]
  6828                           	line	108
  6829                           	
  6830                           i1l2103:	
  6831  0F8A                     ;Eusart.c: 108:     unsigned char Data = RCREG;
  6832                           	bcf	status, 5	;RP0=0, select bank0
  6833  0F8A  1283               	bcf	status, 6	;RP1=0, select bank0
  6834  0F8B  1303               	movf	(20),w	;volatile
  6835  0F8C  0814               	movwf	(??_Read_Byte+0)+0
  6836  0F8D  00F0               	movf	(??_Read_Byte+0)+0,w
  6837  0F8E  0870               	movwf	(Read_Byte@Data)
  6838  0F8F  00F1               	line	110
  6839                           ;Eusart.c: 110:     return Data;
  6840                           	movf	(Read_Byte@Data),w
  6841  0F90  0871               	goto	i1l310
  6842  0F91  2F92               	
  6843                           i1l2105:	
  6844  0F92                     	line	111
  6845                           	
  6846                           i1l310:	
  6847  0F92                     	return
  6848  0F92  0008               	opt stack 0
  6849                           GLOBAL	__end_of_Read_Byte
  6850                           	__end_of_Read_Byte:
  6851  0F93                     	signat	_Read_Byte,89
  6852                           global	___latbits
  6853                           ___latbits	equ	1
  6854  0001                     	global	btemp
  6855                           	btemp set 07Eh
  6856  007E                     
  6857                           	DABS	1,126,2	;btemp
  6858                           	global	wtemp0
  6859                           	wtemp0 set btemp+0
  6860  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     56      79
    BANK1            80      0      78
    BANK2            80      0       0

Pointer List with Targets:

    SetStopTime@RelayStopTime	PTR unsigned char  size(1) Largest target is 3
		 -> Relay6StopTime(BANK1[3]), Relay5StopTime(BANK1[3]), Relay4StopTime(BANK1[3]), Relay3StopTime(BANK1[3]), 
		 -> Relay2StopTime(BANK1[3]), Relay1StopTime(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handle_Interrupts in COMMON

    _Handle_Interrupts->_HandleConfigByte
    _WriteByteFromBuffer->_Write_Byte
    _HandleTelegramByte->_Read_Byte
    _HandleConfigByte->i1_Set_Relay

Critical Paths under _main in BANK0

    _main->_Handle_Telegram
    _Handle_Telegram->_SendTelegram
    _SendTelegram->_AddByteToBuffer
    _CheckStopTime->_Set_Relay

Critical Paths under _Handle_Interrupts in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handle_Interrupts in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handle_Interrupts in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    7476
                                             52 BANK0      4     4      0
                    _AddByteToBuffer
                      _CheckStopTime
                    _Handle_Telegram
                         _Init_Ports
                      _Init_Receiver
                        _Init_Relays
                         _Init_Timer
                   _Init_Transmitter
                        _Start_Timer
 ---------------------------------------------------------------------------------
 (1) _Start_Timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Transmitter                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Relays                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Receiver                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Handle_Telegram                                     27     6     21    5500
                                             25 BANK0     27     6     21
                         _Read_Relay
                       _SendTelegram
                        _SetStopTime
                          _Set_Relay
 ---------------------------------------------------------------------------------
 (2) _SetStopTime                                          6     3      3    1942
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _SendTelegram                                        24     3     21     380
                                              2 BANK0     23     2     21
                    _AddByteToBuffer
 ---------------------------------------------------------------------------------
 (3) _AddByteToBuffer                                      2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Read_Relay                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CheckStopTime                                        2     2      0    1954
                                              4 BANK0      2     2      0
                          _Set_Relay
 ---------------------------------------------------------------------------------
 (2) _Set_Relay                                            4     3      1    1954
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Handle_Interrupts                                    6     6      0     711
                                              7 COMMON     6     6      0
                   _HandleConfigByte
                 _HandleTelegramByte
                    _Timer_Interrupt
                _WriteByteFromBuffer
 ---------------------------------------------------------------------------------
 (5) _WriteByteFromBuffer                                  1     1      0      22
                                              1 COMMON     1     1      0
                         _Write_Byte
 ---------------------------------------------------------------------------------
 (6) _Write_Byte                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Timer_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HandleTelegramByte                                   3     3      0     178
                                              2 COMMON     3     3      0
                          _Read_Byte
 ---------------------------------------------------------------------------------
 (5) _HandleConfigByte                                     3     3      0     510
                                              4 COMMON     3     3      0
                          _Read_Byte
                  i1_AddByteToBuffer
                        i1_Set_Relay
 ---------------------------------------------------------------------------------
 (6) i1_Set_Relay                                          4     3      1     442
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) i1_AddByteToBuffer                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _Read_Byte                                            2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddByteToBuffer
   _CheckStopTime
     _Set_Relay
   _Handle_Telegram
     _Read_Relay
     _SendTelegram
       _AddByteToBuffer
     _SetStopTime
     _Set_Relay
   _Init_Ports
   _Init_Receiver
   _Init_Relays
   _Init_Timer
   _Init_Transmitter
   _Start_Timer

 _Handle_Interrupts (ROOT)
   _HandleConfigByte
     _Read_Byte
     i1_AddByteToBuffer
     i1_Set_Relay
   _HandleTelegramByte
     _Read_Byte
   _Timer_Interrupt
   _WriteByteFromBuffer
     _Write_Byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     38      4F       3       98.8%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      AB       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      AB      10        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Dec 16 15:41:38 2018

                               pc 0002                                l51 0FA9                                l54 0F9D  
                 Read_Relay@Relay 0022                                fsr 0004          __size_of_Handle_Telegram 01F7  
     __end_of_WriteByteFromBuffer 07CB                               l201 00C3                               l210 0215  
                             l202 018F                               l211 01F8                               l203 00C4  
                             l212 01AF                               l204 01AD                               l213 0214  
                             l205 00E4                               l214 01BB                               l206 0106  
                             l215 01C7                               l207 0128                               l400 059D  
                             l216 01D3                               l208 014A                               l304 0FB5  
                             l401 059E                               l217 01DF                               l209 016C  
                             l161 0677                               l402 05A0                               l410 0752  
                             l218 01EB                               l162 069E                               l403 05A7  
                             l411 0735                               l219 0216                               l171 0FC9  
                             l307 07FC                               l163 069F                               l404 05B0  
                             l180 0391                               l412 0768                               l316 0FF7  
                             l164 06A0                               l405 05AE                               l413 0739  
                             l317 0FFC                               l165 06A0                               l406 05AF  
                             l174 024C                               l414 073D                               l318 0FFF  
                             l158 0656                               l407 05C6                               l175 028D  
                             l415 0743                               l183 05EA                               l159 067B  
                             l176 02CE                               l416 0747                               l184 05F4  
                             l192 0030                               l177 030F                               l417 074B  
                             l185 0612                               l193 008C                               l178 0350  
                             l418 0766                               l186 061A                               l194 0038  
                             l179 0391                               l187 0633                               l195 008B  
                             l380 055A                               l188 063B                               l196 0085  
                             l372 07EF                               l381 05C6                               l189 063B  
                             l197 008A                               l390 057B                               l382 055C  
                             l198 0216                               l375 05B2                               l391 057C  
                             l383 0563                               l199 01AE                               l392 057E  
                             l384 056C                               l376 054B                               l393 0585  
                             l385 056A                               l377 0552                               l481 071F  
                             l394 058E                               l386 056B                               l378 055B  
                             l482 070F                               l395 058C                               l387 056D  
                             l379 0559                               l483 0726                               l396 058D  
                             l388 0574                               l484 0730                               l397 058F  
                             l389 057D                               l398 0596                               l399 059F  
                             u900 0557                               u901 0556                               u910 0561  
                             u911 0560                               u920 0568                               u921 0567  
                             u930 0572                               u931 0571                               u940 0579  
                             u941 0578                               u950 0583                               u870 0FF5  
                             u951 0582                               u871 0FF4                               u960 058A  
                             u880 0725                               u961 0589                               u881 0724  
                             u970 0594                               u890 0550                               u971 0593  
                             u891 054F                               u980 059B                               u981 059A  
                             u990 05A5                               u991 05A4                               fsr0 0004  
                             indf 0000                              S2893 080C                              S2889 0800  
HandleTelegramByte@CommandCounter 0061                              l2001 058A                              l2011 05A0  
                            l2003 058F                              l2013 05A5                              l2005 0594  
                            l2021 05B2                              l2015 05A7                              l2007 0596  
                            l2017 05AC                              l2009 059B                              l2041 05EA  
                            l2201 0F9C                              l2019 05B1                              l2051 061A  
                            l2043 05F4                              l2035 05CA                              l2301 0309  
                            l2061 0738                              l2053 062A                              l2045 0604  
                            l2037 05DA                              l2221 0FB6                              l2311 0349  
                            l2303 030F                              l2071 0743                              l2063 0739  
                            l2055 0633                              l2047 060C                              l2039 05E4  
                            l2231 0FC5                              l2223 0FBC                              l2321 0379  
                            l2313 034A                              l2305 0316                              l2081 0750  
                            l2073 0746                              l2065 073C                              l2057 0734  
                            l2049 0612                              l2401 01B7                              l2233 0FC6  
                            l2225 0FC0                              l2241 0FAA                              l2323 038A  
                            l2307 0327                              l2315 0350                              l2083 0751  
                            l2075 0747                              l2067 073D                              l2059 0735  
                            l2411 01D3                              l2403 01BB                              l2331 0027  
                            l2235 0FC7                              l2227 0FC3                              l2251 07F8  
                            l2243 0FB1                              l2325 038B                              l2317 0357  
                            l2309 0338                              l2261 0238                              l2077 074A  
                            l2069 0742                              l2085 0752                              l2421 01F3  
                            l2413 01DB                              l2405 01C3                              l2341 003E  
                            l2333 002D                              l2237 0FC8                              l2229 0FC4  
                            l2253 07FB                              l2181 0F9E                              l2245 0FB3  
                            l2319 0368                              l2271 0264                              l2263 0245  
                            l2255 0217                              l2087 0766                              l2079 074B  
                            l2423 01F7                              l2415 01DF                              l2407 01C7  
                            l2351 006E                              l2343 0046                              l2335 0030  
                            l2327 0020                              l2239 07CB                              l2191 0FA6  
                            l2183 0FA2                              l2247 0FB4                              l2281 0294  
                            l2273 0275                              l2265 0246                              l2257 021E  
                            l2089 0768                              l2417 01E7                              l2409 01CF  
                            l2425 01F8                              l2361 00A4                              l2353 0078  
                            l2345 0050                              l2337 0036                              l2329 0026  
                            l2249 07F0                              l2185 0FA3                              l2193 0F93  
                            l2283 02A5                              l2291 02CE                              l2275 0286  
                            l2259 022B                              l2267 024C                              l2419 01EB  
                            l2371 00C4                              l2363 00AB                              l2355 0082  
                            l2347 005A                              l2339 0038                              l2187 0FA4  
                            l2195 0F96                              l2293 02D5                              l2285 02B6  
                            l2277 0287                              l2269 0253                              l2381 0110  
                            l2373 00CC                              l2365 00B0                              l2349 0064  
                            l2357 0085                              l2189 0FA5                              l2197 0F98  
                            l2295 02E6                              l2287 02C7                              l2279 028D  
                            l2391 016C                              l2383 0128                              l2375 00E4  
                            l2367 00B6                              l2359 008C                              l2199 0F9A  
                            l2551 0642                              l2297 02F7                              l2289 02C8  
                            l2393 0176                              l2385 0132                              l2377 00EE  
                            l2369 00BC                              l2561 0656                              l2553 0645  
                            l2299 0308                              l2395 018E                              l2387 014A  
                            l2379 0106                              l2571 0671                              l2563 065D  
                            l2555 064B                              l2389 0154                              l2397 018F  
                            l2565 0662                              l2573 0677                              l2557 064E  
                            l2549 063C                              l1951 0FF5                              l2399 01AF  
                            l2575 067B                              l2567 0667                              l2559 0652  
                            l1953 0FF7                              l1961 070F                              l2577 0683  
                            l2569 066C                              l1971 054B                              l1955 0FFC  
                            l1947 0FE7                              l1963 0718                              l2579 0685  
                            l1981 0561                              l1973 0550                              l1949 0FEF  
                            l1965 071F                              l1957 06F8                              l1991 0574  
                            l1983 0563                              l1975 0552                              l1967 0726  
                            l1959 070B                              l1993 0579                              l1985 0568  
                            l1977 0557                              l1969 054A                              l2891 05BA  
                            l1995 057E                              l1987 056D                              l1979 055C  
                            l2883 0199                              l1997 0583                              l1989 0572  
                            l2885 0200                              l1999 0585                              l2887 075A  
                            u1000 05AC                              u1001 05AB                              u1010 05DA  
                            u1011 05D9                              u1020 0604                              u1021 0603  
                            u1030 062A                              u1031 0629                              u1200 021E  
                            u1201 021D                              u1210 022B                              u1211 022A  
                            u1300 02B6                              u1220 0238                              u1301 02B5  
                            u1221 0237                              u1310 02C7                              u1230 0245  
                            u1311 02C6                              u1231 0244                              u1215 0227  
                            u1400 0357                              u1320 02D5                              u1240 0253  
                            u1401 0356                              u1321 02D4                              u1305 02B2  
                            u1241 0252                              u1225 0234                              u1410 0368  
                            u1330 02E6                              u1250 0264                              u1411 0367  
                            u1331 02E5                              u1315 02C3                              u1251 0263  
                            u1235 0241                              u1420 0379                              u1340 02F7  
                            u1260 0275                              u1500 00B6                              u1421 0378  
                            u1341 02F6                              u1261 0274                              u1501 00B5  
                            u1430 038A                              u1350 0308                              u1270 0286  
                            u1510 00BC                              u1431 0389                              u1415 0364  
                            u1351 0307                              u1335 02E2                              u1271 0285  
                            u1255 0260                              u1511 00BB                              u1360 0316  
                            u1280 0294                              u1520 00C2                              u1440 002D  
                            u1600 065D                              u1425 0375                              u1361 0315  
                            u1345 02F3                              u1281 0293                              u1265 0271  
                            u1521 00C1                              u1441 002C                              u1601 065C  
                            u1370 0327                              u1290 02A5                              u1450 0036  
                            u1610 0662                              u1435 0386                              u1371 0326  
                            u1355 0304                              u1291 02A4                              u1275 0282  
                            u1451 0035                              u1611 0661                              u1380 0338  
                            u1460 003E                              u1620 0667                              u1381 0337  
                            u1461 003D                              u1621 0666                              u1390 0349  
                            u1470 0094                              u1630 066C                              u1391 0348  
                            u1375 0323                              u1295 02A1                              u1631 066B  
                            u1480 00AB                              u1640 0671                              u1385 0334  
                            u1481 00AA                              u1641 0670                              u1490 00B0  
                            u1650 0676                              u1395 0345                              u1491 00AF  
                            u1651 0675                              u1660 0683                              u1661 0682  
                            u1670 068D                              i1l60 079F                              i1l61 079E  
                            i1l62 079D                              i1l63 079F          __end_of_Init_Transmitter 0FB6  
               i1_AddByteToBuffer 0FCA                              _main 063C                              btemp 007E  
              ?i1_AddByteToBuffer 0070                              start 000D          __size_of_AddByteToBuffer 001C  
                   ??_Init_Relays 0020               ??i1_AddByteToBuffer 0070                     _Init_Receiver 07F0  
                           ?_main 0070                     __CFG_WDTE$OFF 0000                             _ANSEL 0091  
                           i1l310 0F92                             i1l230 0546                             i1l400 03FA  
                           i1l224 0546                             i1l240 06B8                             i1l401 03FB  
                           i1l225 0530                             i1l313 0F81                             i1l321 07C0  
                           i1l241 06E4                             i1l402 03FD                             i1l226 04CA  
                           i1l322 07BA                             i1l242 06EF                             i1l403 0406  
                           i1l227 0545                             i1l323 07BF                             i1l243 06EF  
                           i1l235 06AC                             i1l316 0FDB                             i1l404 0411  
                           i1l228 04DA                             i1l324 07CA                             i1l236 06CF  
                           i1l317 0FE0                             i1l405 040F                             i1l229 0506  
                           i1l325 07CA                             i1l237 06BD                             i1l318 0FE3  
                           i1l406 0410                             i1l238 06B4                             i1l407 0427  
                           i1l239 06CF                             i1l380 03A7                             i1l381 0427  
                           i1l390 03D0                             i1l382 03A9                             i1l470 04A0  
                           i1l375 0413                             i1l391 03D1                             i1l383 03B2  
                           i1l471 044B                             i1l392 03D3                             i1l384 03BD  
                           i1l376 0394                             i1l472 04B9                             i1l393 03DC  
                           i1l385 03BB                             i1l377 039D                             i1l473 0458  
                           i1l394 03E7                             i1l386 03BC                             i1l378 03A8  
                           i1l474 0467                             i1l395 03E5                             i1l387 03BE  
                           i1l379 03A6                             i1l475 0482                             i1l467 0441  
                           i1l396 03E6                             i1l388 03C7                             i1l468 04BB  
                           i1l476 0483                             i1l397 03E8                             i1l389 03D2  
                           i1l469 04BA                             i1l477 0490                             i1l398 03F1  
                           i1l478 04BB                             i1l399 03FC                             _RCREG 0014  
                      _BufferHead 007D                             _TMR1H 000F                             _TMR1L 000E  
                           _SPBRG 0013                             _PORTA 0005                        _BufferTail 0063  
                           _TXREG 0015         __end_ofi1_AddByteToBuffer 0FE4                             pclath 000A  
                           status 0003                             wtemp0 007E                  _StopRelay1OnTime 006B  
                _StopRelay2OnTime 006A                  _StopRelay3OnTime 0069                  _StopRelay4OnTime 0068  
                _StopRelay5OnTime 0067                  _StopRelay6OnTime 0066                    __CFG_MCLRE$OFF 0000  
                 __initialization 000F                        _Init_Timer 0F9E                        _Init_Ports 0FB6  
                    __end_of_main 06A2                        _Read_Relay 0731                    ?_Init_Receiver 0070  
                          ??_main 0054               __end_of_Init_Relays 07F0                 ??_Handle_Telegram 004E  
                      _SendBuffer 00A0                            i1S2903 0818                     ??_SetStopTime 0023  
                          u110_20 03CC                            u110_21 03CB                            i1l2103 0F8A  
                          i1l2111 0FD3                            u111_20 03D8                            i1l2105 0F92  
                          i1l2113 0FD9                            u111_21 03D7                            i1l2121 0394  
                          i1l2115 0FDB                            i1l2131 03AE                            i1l2123 0399  
                          i1l2211 0784                            i1l2203 0769                            i1l2107 0F7D  
                          i1l2117 0FE0                            i1l2109 0FCB                            i1l2141 03C7  
                          i1l2133 03B2                            i1l2125 039D                            i1l2213 078B  
                          i1l2205 0775                            i1l2151 03E1                            i1l2143 03CC  
                          i1l2135 03B7                            i1l2127 03A2                            i1l2119 0393  
                          i1l2215 078D                            i1l2207 077C                            u104_20 0FD9  
                          u112_20 03E1                            u104_21 0FD8                            i1l2161 03FD  
                          i1l2153 03E8                            u112_21 03E0                            i1l2145 03D3  
                          i1l2137 03BE                            i1l2129 03A9                            i1l2217 0793  
                          i1l2209 077E                            i1l2163 0402                            i1l2155 03ED  
                          i1l2147 03D8                            i1l2139 03C3                            i1l2171 0413  
                          i1l2219 079A                            i1l2165 0406                            i1l2157 03F1  
                          i1l2149 03DC                            i1l2501 07B8                            i1l2167 040B  
                          i1l2159 03F6                            i1l2511 042E                            i1l2503 07BA  
                          u113_20 03ED                            u105_20 0399                            i1l2169 0412  
                          u113_21 03EC                            u105_21 0398                            i1l2441 04CA  
                          i1l2521 0458                            i1l2513 0434                            i1l2505 07C0  
                          i1l2601 06D3                            i1l2451 04E1                            i1l2443 04D1  
                          i1l2435 04BC                            i1l2531 0473                            i1l2523 045F  
                          i1l2515 0441                            i1l2507 07C6                            i1l2611 06E0  
                          i1l2603 06D4                            i1l2461 04F5                            i1l2453 04E5  
                          i1l2445 04D2                            i1l2437 04C2                            i1l2541 049F  
                          i1l2533 047D                            i1l2525 0465                            i1l2517 044A  
                          i1l2509 0428                            i1l2605 06DA                            i1l2613 06E4  
                          i1l2471 0509                            i1l2463 04F9                            i1l2455 04E9  
                          i1l2447 04D5                            i1l2439 04C9                            i1l2535 0483  
                          i1l2527 0467                            i1l2519 044B                            i1l2543 04A0  
                          i1l2615 06EA                            i1l2607 06DB                            u114_20 03F6  
                          u106_20 03A2                            u114_21 03F5                            u106_21 03A1  
                          i1l2481 0521                            i1l2473 050D                            i1l2465 04FD  
                          i1l2457 04ED                            i1l2449 04DA                            i1l2537 0490  
                          i1l2529 046F                            i1l2617 06EB                            i1l2609 06DD  
                          i1l2483 0526                            i1l2475 0512                            i1l2467 0501  
                          i1l2459 04F1                            i1l2539 0496                            i1l2901 041B  
                          i1l2485 052B                            i1l2477 0517                            i1l2469 0506  
                          i1l2487 052E                            i1l2479 051C                            i1l2495 07A0  
                          i1l2591 06B3                            u115_20 0402                            u107_20 03AE  
                          u115_21 0401                            u107_21 03AD                            i1l2489 0530  
                          i1l2497 07A8                            i1l2593 06B4                            i1l2585 06A2  
                          i1l2499 07B0                            i1l2595 06B8                            i1l2587 06A8  
                          i1l2597 06BC                            i1l2589 06AC                            i1l2599 06BD  
                          u116_20 040B                            u108_20 03B7                            u116_21 040A  
                          u108_21 03B6                            i1l2895 06C7                            u109_20 03C3  
                          u117_20 077C                            u109_21 03C2                            i1l2897 04A8  
                          u117_21 077B                            i1l2899 053A                            u118_20 078B  
                          u118_21 078A                            u119_20 079A                            u119_21 0799  
                          u153_20 04C8                            u153_21 04C7                            u154_20 07A8  
                          u170_20 06B2                            u154_21 07A7                            u170_21 06B1  
                          u155_20 07B8                            u171_20 06D3                            u155_21 07B7  
                          u171_21 06D2                            u156_20 07C6                            u172_20 06EA  
                          u156_21 07C5                            u172_21 06E9                            u157_20 0434  
                          u157_21 0433                            u158_20 0449                            u158_21 0448  
                          u159_20 047D                            u159_21 047C                            u169_20 06A8  
                          u169_21 06A7                __size_of_Read_Byte 0009       HandleConfigByte@ByteCounter 0064  
              __size_of_Set_Relay 0080                 ??_AddByteToBuffer 0020                 ?_HandleConfigByte 0070  
              ??_HandleConfigByte 0074                            saved_w 007E                     ?_SendTelegram 0022  
          __size_of_CheckStopTime 017B                _HandleTelegramByte 0428        __size_ofi1_AddByteToBuffer 001A  
                    ?i1_Set_Relay 0070           __end_of__initialization 001D               ?_HandleTelegramByte 0070  
             __end_of_SetStopTime 063C                    __pcstackCOMMON 0070                       ?_Init_Timer 0070  
                 ??_Init_Receiver 0020                       ?_Init_Ports 0070                       _Init_Relays 07CB  
                     ?_Read_Relay 0070                        _Write_Byte 0F7C                     ??_Start_Timer 0020  
            HandleConfigByte@Byte 0076                       _CurrentMode 0065              ??_HandleTelegramByte 0072  
               __end_of_Read_Byte 0F93                    ??_SendTelegram 0037                    Write_Byte@Data 0070  
               __end_of_Set_Relay 05C7                        __pbssBANK0 0058                        __pbssBANK1 00A0  
               ?_Init_Transmitter 0070                ??_Init_Transmitter 0020                        __pmaintext 063C  
                   _CheckStopTime 0217                        __pintentry 0004                    Set_Relay@Relay 0023  
                  Set_Relay@State 0020          __size_of_Timer_Interrupt 0037               __end_of_Start_Timer 0F9E  
    __size_of_WriteByteFromBuffer 002B               __size_of_Init_Timer 000C               __size_of_Init_Ports 0014  
             __size_of_Read_Relay 0038                       _SetStopTime 05C7             i1AddByteToBuffer@Byte 0071  
                  ?_CheckStopTime 0070                       ?_Write_Byte 0070                   _Handle_Telegram 0020  
                         __ptext1 0F93                           __ptext2 0FAA                           __ptext3 0F9E  
                         __ptext4 07CB                           __ptext5 07F0                           __ptext6 0FB6  
                         __ptext7 0020                           __ptext8 05C7                           __ptext9 06F8  
                       _T1CONbits 0010       Handle_Telegram@ThisTelegram 0039                           clrloop0 0F83  
            end_of_initialization 001D              __size_ofi1_Set_Relay 0096                   _AddByteToBuffer 0FE4  
            __end_of_SendTelegram 0731                         _RCSTAbits 0017                     Read_Byte@Data 0071  
                     _Start_Timer 0F93            SendTelegram@MyTelegram 0022                         _PORTAbits 0005  
                       _PORTCbits 0007                      _Counter_1sec 005A                 ??_Timer_Interrupt 0070  
                       _TRISAbits 0085                         _TRISCbits 0087         __size_of_HandleConfigByte 008B  
             __size_of_Write_Byte 0006                         _TXSTAbits 0016                   ??_CheckStopTime 0024  
         __end_of_Handle_Telegram 0217                      ??_Init_Timer 0020                      ??_Init_Ports 0020  
                    ?_Init_Relays 0070                      ??_Read_Relay 0020                       _BAUDCTLbits 0011  
             start_initialization 000F                         _Read_Byte 0F8A     HandleTelegramByte@ByteCounter 0062  
         __end_of_AddByteToBuffer 1000                __end_of_Init_Timer 0FAA                __end_of_Init_Ports 0FCA  
              __end_of_Read_Relay 0769                         _Set_Relay 0547               _WriteByteFromBuffer 07A0  
           __end_of_Init_Receiver 07FD         __size_of_Init_Transmitter 000C                    _Relay1StopTime 006C  
               _Handle_Interrupts 06A2                    _Relay2StopTime 00EB                    _Relay3StopTime 00E8  
     __size_of_HandleTelegramByte 0094                ?_Handle_Interrupts 0070                    _Relay4StopTime 00E5  
                     __pbssCOMMON 007D                         ___latbits 0001                _Stop_Ignition_Flag 00DD  
                  _Relay5StopTime 00E2                     __pcstackBANK0 0020                        ?_Read_Byte 0070  
                  _Relay6StopTime 00DF              ?_WriteByteFromBuffer 0070                  i1Set_Relay@Relay 0073  
             ??_Handle_Interrupts 0077                  i1Set_Relay@State 0070                      ?_SetStopTime 0020  
               _TelegramReadyFlag 005E             __size_of_SendTelegram 0039                        ?_Set_Relay 0020  
                ?_Handle_Telegram 0039                      ??_Write_Byte 0070         __end_of_Handle_Interrupts 06F8  
                       __pswtext1 0800                         __pswtext2 080C                         __pswtext3 0818  
          Handle_Interrupts@dummy 007C             ??_WriteByteFromBuffer 0071                      _SendTelegram 06F8  
                ?_AddByteToBuffer 0070                  _HandleConfigByte 04BC                __end_of_Write_Byte 0F82  
               interrupt_function 0004                          _IOCAbits 0096                         clear_ram0 0F82  
                        _PIE1bits 008C                          _PIR1bits 000C                   _Timer_Interrupt 0769  
                    ?_Start_Timer 0070              __size_of_Init_Relays 0025                       ??_Read_Byte 0070  
                   ??i1_Set_Relay 0071                       ??_Set_Relay 0021        SendTelegram@CommandCounter 0038  
                        _Telegram 00C8                        _CMCON0bits 0019        __size_of_Handle_Interrupts 0056  
                _Init_Transmitter 0FAA                          __ptext10 0FE4                          __ptext11 0731  
                        __ptext20 0392                          __ptext12 0217                          __ptext21 0FCA  
                        __ptext13 0547                          __ptext22 0F8A                          __ptext14 06A2  
                        __ptext15 07A0                          __ptext16 0F7C                          __ptext17 0769  
                        __ptext18 0428                          __ptext19 04BC                     __size_of_main 0066  
            __size_of_SetStopTime 0075               __end_ofi1_Set_Relay 0428           __end_of_Timer_Interrupt 07A0  
           __end_of_CheckStopTime 0392              Handle_Telegram@error 0052          SetStopTime@RelayStopTime 0025  
            Handle_Telegram@state 0053          HandleTelegramByte@Lenght 0060                        _INTCONbits 000B  
                        intlevel1 0000               AddByteToBuffer@Byte 0021              SetStopTime@Time100ms 0022  
            SetStopTime@Time10sec 0020                        _OSCCONbits 008F          __end_of_HandleConfigByte 0547  
      __end_of_HandleTelegramByte 04BC              __size_of_Start_Timer 000B               SetStopTime@Time1sec 0021  
          HandleTelegramByte@Byte 0074                       i1_Set_Relay 0392                     _Counter_100ms 005C  
              __CFG_FOSC$INTOSCIO 0000                     _Counter_10sec 0058            __size_of_Init_Receiver 000D  
                ?_Timer_Interrupt 0070  
