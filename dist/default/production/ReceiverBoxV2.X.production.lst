

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Jan 19 13:23:33 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F688 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   100                           PORTC equ 07h ;# 
   101  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   116                           BAUDCTL equ 011h ;# 
   117  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   118                           SPBRGH equ 012h ;# 
   119  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   120                           SPBRG equ 013h ;# 
   121  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   122                           RCREG equ 014h ;# 
   123  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   124                           TXREG equ 015h ;# 
   125  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   126                           TXSTA equ 016h ;# 
   127  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   128                           RCSTA equ 017h ;# 
   129  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   130                           WDTCON equ 018h ;# 
   131  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   132                           CMCON0 equ 019h ;# 
   133  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   134                           CMCON1 equ 01Ah ;# 
   135  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   136                           ADRESH equ 01Eh ;# 
   137  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   138                           ADCON0 equ 01Fh ;# 
   139  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   140                           OPTION_REG equ 081h ;# 
   141  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   142                           TRISA equ 085h ;# 
   143  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   144                           TRISC equ 087h ;# 
   145  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   146                           PIE1 equ 08Ch ;# 
   147  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   148                           PCON equ 08Eh ;# 
   149  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   150                           OSCCON equ 08Fh ;# 
   151  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   152                           OSCTUNE equ 090h ;# 
   153  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   154                           ANSEL equ 091h ;# 
   155  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   156                           WPUA equ 095h ;# 
   157  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   158                           WPU equ 095h ;# 
   159  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   160                           IOCA equ 096h ;# 
   161  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   162                           IOC equ 096h ;# 
   163  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   164                           EEDATH equ 097h ;# 
   165  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   166                           EEADRH equ 098h ;# 
   167  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   168                           VRCON equ 099h ;# 
   169  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   170                           EEDAT equ 09Ah ;# 
   171  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   172                           EEDATA equ 09Ah ;# 
   173  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   174                           EEADR equ 09Bh ;# 
   175  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   176                           EECON1 equ 09Ch ;# 
   177  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   178                           EECON2 equ 09Dh ;# 
   179  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   180                           ADRESL equ 09Eh ;# 
   181  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   182                           ADCON1 equ 09Fh ;# 
   183  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   184                           INDF equ 00h ;# 
   185  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   186                           TMR0 equ 01h ;# 
   187  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   188                           PCL equ 02h ;# 
   189  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   190                           STATUS equ 03h ;# 
   191  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   192                           FSR equ 04h ;# 
   193  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   194                           PORTA equ 05h ;# 
   195  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   196                           PORTC equ 07h ;# 
   197  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   198                           PCLATH equ 0Ah ;# 
   199  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   200                           INTCON equ 0Bh ;# 
   201  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   202                           PIR1 equ 0Ch ;# 
   203  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   204                           TMR1 equ 0Eh ;# 
   205  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   206                           TMR1L equ 0Eh ;# 
   207  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   208                           TMR1H equ 0Fh ;# 
   209  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   210                           T1CON equ 010h ;# 
   211  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   212                           BAUDCTL equ 011h ;# 
   213  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   214                           SPBRGH equ 012h ;# 
   215  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   216                           SPBRG equ 013h ;# 
   217  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   218                           RCREG equ 014h ;# 
   219  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   220                           TXREG equ 015h ;# 
   221  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   222                           TXSTA equ 016h ;# 
   223  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   224                           RCSTA equ 017h ;# 
   225  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   226                           WDTCON equ 018h ;# 
   227  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   228                           CMCON0 equ 019h ;# 
   229  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   230                           CMCON1 equ 01Ah ;# 
   231  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   232                           ADRESH equ 01Eh ;# 
   233  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   234                           ADCON0 equ 01Fh ;# 
   235  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   236                           OPTION_REG equ 081h ;# 
   237  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   238                           TRISA equ 085h ;# 
   239  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   240                           TRISC equ 087h ;# 
   241  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   242                           PIE1 equ 08Ch ;# 
   243  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   244                           PCON equ 08Eh ;# 
   245  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   246                           OSCCON equ 08Fh ;# 
   247  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   248                           OSCTUNE equ 090h ;# 
   249  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   250                           ANSEL equ 091h ;# 
   251  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   252                           WPUA equ 095h ;# 
   253  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   254                           WPU equ 095h ;# 
   255  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   256                           IOCA equ 096h ;# 
   257  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   258                           IOC equ 096h ;# 
   259  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   260                           EEDATH equ 097h ;# 
   261  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   262                           EEADRH equ 098h ;# 
   263  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   264                           VRCON equ 099h ;# 
   265  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   266                           EEDAT equ 09Ah ;# 
   267  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   268                           EEDATA equ 09Ah ;# 
   269  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   270                           EEADR equ 09Bh ;# 
   271  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   272                           EECON1 equ 09Ch ;# 
   273  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   274                           EECON2 equ 09Dh ;# 
   275  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   276                           ADRESL equ 09Eh ;# 
   277  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   278                           ADCON1 equ 09Fh ;# 
   279  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   280                           INDF equ 00h ;# 
   281  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   282                           TMR0 equ 01h ;# 
   283  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   284                           PCL equ 02h ;# 
   285  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   286                           STATUS equ 03h ;# 
   287  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   288                           FSR equ 04h ;# 
   289  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   290                           PORTA equ 05h ;# 
   291  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   292                           PORTC equ 07h ;# 
   293  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   294                           PCLATH equ 0Ah ;# 
   295  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   296                           INTCON equ 0Bh ;# 
   297  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   298                           PIR1 equ 0Ch ;# 
   299  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   300                           TMR1 equ 0Eh ;# 
   301  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   302                           TMR1L equ 0Eh ;# 
   303  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   304                           TMR1H equ 0Fh ;# 
   305  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   306                           T1CON equ 010h ;# 
   307  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   308                           BAUDCTL equ 011h ;# 
   309  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   310                           SPBRGH equ 012h ;# 
   311  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   312                           SPBRG equ 013h ;# 
   313  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   314                           RCREG equ 014h ;# 
   315  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   316                           TXREG equ 015h ;# 
   317  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   318                           TXSTA equ 016h ;# 
   319  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   320                           RCSTA equ 017h ;# 
   321  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   322                           WDTCON equ 018h ;# 
   323  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   324                           CMCON0 equ 019h ;# 
   325  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   326                           CMCON1 equ 01Ah ;# 
   327  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   328                           ADRESH equ 01Eh ;# 
   329  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   330                           ADCON0 equ 01Fh ;# 
   331  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   332                           OPTION_REG equ 081h ;# 
   333  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   334                           TRISA equ 085h ;# 
   335  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   336                           TRISC equ 087h ;# 
   337  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   338                           PIE1 equ 08Ch ;# 
   339  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   340                           PCON equ 08Eh ;# 
   341  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   342                           OSCCON equ 08Fh ;# 
   343  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   344                           OSCTUNE equ 090h ;# 
   345  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   346                           ANSEL equ 091h ;# 
   347  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   348                           WPUA equ 095h ;# 
   349  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   350                           WPU equ 095h ;# 
   351  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   352                           IOCA equ 096h ;# 
   353  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   354                           IOC equ 096h ;# 
   355  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   356                           EEDATH equ 097h ;# 
   357  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   358                           EEADRH equ 098h ;# 
   359  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   360                           VRCON equ 099h ;# 
   361  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   362                           EEDAT equ 09Ah ;# 
   363  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   364                           EEDATA equ 09Ah ;# 
   365  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   366                           EEADR equ 09Bh ;# 
   367  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   368                           EECON1 equ 09Ch ;# 
   369  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   370                           EECON2 equ 09Dh ;# 
   371  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   372                           ADRESL equ 09Eh ;# 
   373  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   374                           ADCON1 equ 09Fh ;# 
   375  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   376                           INDF equ 00h ;# 
   377  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   378                           TMR0 equ 01h ;# 
   379  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   380                           PCL equ 02h ;# 
   381  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   382                           STATUS equ 03h ;# 
   383  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   384                           FSR equ 04h ;# 
   385  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   386                           PORTA equ 05h ;# 
   387  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   388                           PORTC equ 07h ;# 
   389  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   390                           PCLATH equ 0Ah ;# 
   391  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   392                           INTCON equ 0Bh ;# 
   393  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   394                           PIR1 equ 0Ch ;# 
   395  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   396                           TMR1 equ 0Eh ;# 
   397  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   398                           TMR1L equ 0Eh ;# 
   399  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   400                           TMR1H equ 0Fh ;# 
   401  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   402                           T1CON equ 010h ;# 
   403  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   404                           BAUDCTL equ 011h ;# 
   405  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   406                           SPBRGH equ 012h ;# 
   407  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   408                           SPBRG equ 013h ;# 
   409  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   410                           RCREG equ 014h ;# 
   411  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   412                           TXREG equ 015h ;# 
   413  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   414                           TXSTA equ 016h ;# 
   415  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   416                           RCSTA equ 017h ;# 
   417  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   418                           WDTCON equ 018h ;# 
   419  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   420                           CMCON0 equ 019h ;# 
   421  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   422                           CMCON1 equ 01Ah ;# 
   423  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   424                           ADRESH equ 01Eh ;# 
   425  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   426                           ADCON0 equ 01Fh ;# 
   427  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   428                           OPTION_REG equ 081h ;# 
   429  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   430                           TRISA equ 085h ;# 
   431  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   432                           TRISC equ 087h ;# 
   433  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   434                           PIE1 equ 08Ch ;# 
   435  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   436                           PCON equ 08Eh ;# 
   437  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   438                           OSCCON equ 08Fh ;# 
   439  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   440                           OSCTUNE equ 090h ;# 
   441  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   442                           ANSEL equ 091h ;# 
   443  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   444                           WPUA equ 095h ;# 
   445  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   446                           WPU equ 095h ;# 
   447  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   448                           IOCA equ 096h ;# 
   449  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   450                           IOC equ 096h ;# 
   451  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   452                           EEDATH equ 097h ;# 
   453  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   454                           EEADRH equ 098h ;# 
   455  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   456                           VRCON equ 099h ;# 
   457  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   458                           EEDAT equ 09Ah ;# 
   459  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   460                           EEDATA equ 09Ah ;# 
   461  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   462                           EEADR equ 09Bh ;# 
   463  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   464                           EECON1 equ 09Ch ;# 
   465  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   466                           EECON2 equ 09Dh ;# 
   467  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   468                           ADRESL equ 09Eh ;# 
   469  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   470                           ADCON1 equ 09Fh ;# 
   471  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   472                           INDF equ 00h ;# 
   473  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   474                           TMR0 equ 01h ;# 
   475  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   476                           PCL equ 02h ;# 
   477  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   478                           STATUS equ 03h ;# 
   479  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   480                           FSR equ 04h ;# 
   481  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   482                           PORTA equ 05h ;# 
   483  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   484                           PORTC equ 07h ;# 
   485  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   486                           PCLATH equ 0Ah ;# 
   487  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   488                           INTCON equ 0Bh ;# 
   489  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   490                           PIR1 equ 0Ch ;# 
   491  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   492                           TMR1 equ 0Eh ;# 
   493  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   494                           TMR1L equ 0Eh ;# 
   495  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   496                           TMR1H equ 0Fh ;# 
   497  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   498                           T1CON equ 010h ;# 
   499  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   500                           BAUDCTL equ 011h ;# 
   501  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   502                           SPBRGH equ 012h ;# 
   503  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   504                           SPBRG equ 013h ;# 
   505  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   506                           RCREG equ 014h ;# 
   507  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   508                           TXREG equ 015h ;# 
   509  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   510                           TXSTA equ 016h ;# 
   511  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   512                           RCSTA equ 017h ;# 
   513  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   514                           WDTCON equ 018h ;# 
   515  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   516                           CMCON0 equ 019h ;# 
   517  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   518                           CMCON1 equ 01Ah ;# 
   519  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   520                           ADRESH equ 01Eh ;# 
   521  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   522                           ADCON0 equ 01Fh ;# 
   523  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   524                           OPTION_REG equ 081h ;# 
   525  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   526                           TRISA equ 085h ;# 
   527  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   528                           TRISC equ 087h ;# 
   529  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   530                           PIE1 equ 08Ch ;# 
   531  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   532                           PCON equ 08Eh ;# 
   533  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   534                           OSCCON equ 08Fh ;# 
   535  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   536                           OSCTUNE equ 090h ;# 
   537  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   538                           ANSEL equ 091h ;# 
   539  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   540                           WPUA equ 095h ;# 
   541  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   542                           WPU equ 095h ;# 
   543  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   544                           IOCA equ 096h ;# 
   545  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   546                           IOC equ 096h ;# 
   547  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   548                           EEDATH equ 097h ;# 
   549  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   550                           EEADRH equ 098h ;# 
   551  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   552                           VRCON equ 099h ;# 
   553  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   554                           EEDAT equ 09Ah ;# 
   555  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   556                           EEDATA equ 09Ah ;# 
   557  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   558                           EEADR equ 09Bh ;# 
   559  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   560                           EECON1 equ 09Ch ;# 
   561  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   562                           EECON2 equ 09Dh ;# 
   563  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   564                           ADRESL equ 09Eh ;# 
   565  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   566                           ADCON1 equ 09Fh ;# 
   567  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   568                           INDF equ 00h ;# 
   569  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   570                           TMR0 equ 01h ;# 
   571  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   572                           PCL equ 02h ;# 
   573  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   574                           STATUS equ 03h ;# 
   575  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   576                           FSR equ 04h ;# 
   577  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   578                           PORTA equ 05h ;# 
   579  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   580                           PORTC equ 07h ;# 
   581  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   582                           PCLATH equ 0Ah ;# 
   583  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   584                           INTCON equ 0Bh ;# 
   585  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   586                           PIR1 equ 0Ch ;# 
   587  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   588                           TMR1 equ 0Eh ;# 
   589  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   590                           TMR1L equ 0Eh ;# 
   591  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   592                           TMR1H equ 0Fh ;# 
   593  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   594                           T1CON equ 010h ;# 
   595  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   596                           BAUDCTL equ 011h ;# 
   597  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   598                           SPBRGH equ 012h ;# 
   599  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   600                           SPBRG equ 013h ;# 
   601  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   602                           RCREG equ 014h ;# 
   603  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   604                           TXREG equ 015h ;# 
   605  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   606                           TXSTA equ 016h ;# 
   607  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   608                           RCSTA equ 017h ;# 
   609  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   610                           WDTCON equ 018h ;# 
   611  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   612                           CMCON0 equ 019h ;# 
   613  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   614                           CMCON1 equ 01Ah ;# 
   615  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   616                           ADRESH equ 01Eh ;# 
   617  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   618                           ADCON0 equ 01Fh ;# 
   619  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   620                           OPTION_REG equ 081h ;# 
   621  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   622                           TRISA equ 085h ;# 
   623  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   624                           TRISC equ 087h ;# 
   625  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   626                           PIE1 equ 08Ch ;# 
   627  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   628                           PCON equ 08Eh ;# 
   629  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   630                           OSCCON equ 08Fh ;# 
   631  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   632                           OSCTUNE equ 090h ;# 
   633  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   634                           ANSEL equ 091h ;# 
   635  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   636                           WPUA equ 095h ;# 
   637  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   638                           WPU equ 095h ;# 
   639  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   640                           IOCA equ 096h ;# 
   641  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   642                           IOC equ 096h ;# 
   643  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   644                           EEDATH equ 097h ;# 
   645  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   646                           EEADRH equ 098h ;# 
   647  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   648                           VRCON equ 099h ;# 
   649  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   650                           EEDAT equ 09Ah ;# 
   651  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   652                           EEDATA equ 09Ah ;# 
   653  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   654                           EEADR equ 09Bh ;# 
   655  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   656                           EECON1 equ 09Ch ;# 
   657  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   658                           EECON2 equ 09Dh ;# 
   659  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   660                           ADRESL equ 09Eh ;# 
   661  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   662                           ADCON1 equ 09Fh ;# 
   663  009F                     	FNCALL	_main,_AddByteToBuffer
   664                           	FNCALL	_main,_CheckStopTime
   665                           	FNCALL	_main,_Handle_Telegram
   666                           	FNCALL	_main,_Init_Ports
   667                           	FNCALL	_main,_Init_Receiver
   668                           	FNCALL	_main,_Init_Relays
   669                           	FNCALL	_main,_Init_Timer
   670                           	FNCALL	_main,_Init_Transmitter
   671                           	FNCALL	_main,_Start_Timer
   672                           	FNCALL	_Handle_Telegram,_Read_Relay
   673                           	FNCALL	_Handle_Telegram,_SendTelegram
   674                           	FNCALL	_Handle_Telegram,_SetStopTime
   675                           	FNCALL	_Handle_Telegram,_Set_Relay
   676                           	FNCALL	_SendTelegram,_AddByteToBuffer
   677                           	FNCALL	_CheckStopTime,_Set_Relay
   678                           	FNROOT	_main
   679                           	FNCALL	_Handle_Interrupts,_HandleConfigByte
   680                           	FNCALL	_Handle_Interrupts,_HandleTelegramByte
   681                           	FNCALL	_Handle_Interrupts,_Timer_Interrupt
   682                           	FNCALL	_Handle_Interrupts,_WriteByteFromBuffer
   683                           	FNCALL	_WriteByteFromBuffer,_Write_Byte
   684                           	FNCALL	_HandleTelegramByte,_Read_Byte
   685                           	FNCALL	_HandleConfigByte,_Read_Byte
   686                           	FNCALL	_HandleConfigByte,i1_AddByteToBuffer
   687                           	FNCALL	_HandleConfigByte,i1_Set_Relay
   688                           	FNCALL	intlevel1,_Handle_Interrupts
   689                           	global	intlevel1
   690                           	FNROOT	intlevel1
   691                           	global	_BufferHead
   692                           	global	_Counter_10sec
   693                           	global	_Counter_1sec
   694                           	global	_Counter_100ms
   695                           	global	_TelegramReadyFlag
   696                           	global	HandleTelegramByte@CommandCounter
   697                           	global	HandleTelegramByte@ByteCounter
   698                           	global	_BufferTail
   699                           	global	HandleConfigByte@ByteCounter
   700                           	global	_CurrentMode
   701                           	global	_StopRelay6OnTime
   702                           	global	_StopRelay5OnTime
   703                           	global	_StopRelay4OnTime
   704                           	global	_StopRelay3OnTime
   705                           	global	_StopRelay2OnTime
   706                           	global	_StopRelay1OnTime
   707                           	global	_Relay1StopTime
   708                           	global	_SendBuffer
   709                           	global	_Telegram
   710                           	global	_Relay6StopTime
   711                           	global	_Relay5StopTime
   712                           	global	_Relay4StopTime
   713                           	global	_Relay3StopTime
   714                           	global	_Relay2StopTime
   715                           	global	_PORTCbits
   716                           _PORTCbits	set	0x7
   717  0007                     	global	_RCREG
   718                           _RCREG	set	0x14
   719  0014                     	global	_TXREG
   720                           _TXREG	set	0x15
   721  0015                     	global	_SPBRG
   722                           _SPBRG	set	0x13
   723  0013                     	global	_BAUDCTLbits
   724                           _BAUDCTLbits	set	0x11
   725  0011                     	global	_RCSTAbits
   726                           _RCSTAbits	set	0x17
   727  0017                     	global	_TXSTAbits
   728                           _TXSTAbits	set	0x16
   729  0016                     	global	_PORTA
   730                           _PORTA	set	0x5
   731  0005                     	global	_PORTAbits
   732                           _PORTAbits	set	0x5
   733  0005                     	global	_CMCON0bits
   734                           _CMCON0bits	set	0x19
   735  0019                     	global	_TMR1L
   736                           _TMR1L	set	0xE
   737  000E                     	global	_TMR1H
   738                           _TMR1H	set	0xF
   739  000F                     	global	_PIR1bits
   740                           _PIR1bits	set	0xC
   741  000C                     	global	_INTCONbits
   742                           _INTCONbits	set	0xB
   743  000B                     	global	_T1CONbits
   744                           _T1CONbits	set	0x10
   745  0010                     	global	_OSCCONbits
   746                           _OSCCONbits	set	0x8F
   747  008F                     	global	_IOCAbits
   748                           _IOCAbits	set	0x96
   749  0096                     	global	_ANSEL
   750                           _ANSEL	set	0x91
   751  0091                     	global	_TRISCbits
   752                           _TRISCbits	set	0x87
   753  0087                     	global	_TRISAbits
   754                           _TRISAbits	set	0x85
   755  0085                     	global	_PIE1bits
   756                           _PIE1bits	set	0x8C
   757  008C                     ; #config settings
   758                           global __CFG_FOSC$INTOSCIO
   759                           __CFG_FOSC$INTOSCIO equ 0x0
   760  0000                     global __CFG_WDTE$OFF
   761                           __CFG_WDTE$OFF equ 0x0
   762  0000                     global __CFG_MCLRE$OFF
   763                           __CFG_MCLRE$OFF equ 0x0
   764  0000                     	file	"C:\Users\Bendixen\AppData\Local\Temp\s818."
   765                           	line	#
   766                           psect cinit,class=CODE,delta=2
   767                           global start_initialization
   768                           start_initialization:
   769  000F                     
   770                           global __initialization
   771                           __initialization:
   772  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   773                           global __pbssCOMMON
   774                           __pbssCOMMON:
   775  007D                     _BufferHead:
   776  007D                            ds      1
   777  007D                     
   778                           psect	bssBANK0,class=BANK0,space=1,noexec
   779                           global __pbssBANK0
   780                           __pbssBANK0:
   781  0058                     _Counter_10sec:
   782  0058                            ds      2
   783  0058                     
   784                           _Counter_1sec:
   785  005A                            ds      2
   786  005A                     
   787                           _Counter_100ms:
   788  005C                            ds      2
   789  005C                     
   790                           _TelegramReadyFlag:
   791  005E                            ds      2
   792  005E                     
   793                           HandleTelegramByte@Lenght:
   794  0060                            ds      1
   795  0060                     
   796                           HandleTelegramByte@CommandCounter:
   797  0061                            ds      1
   798  0061                     
   799                           HandleTelegramByte@ByteCounter:
   800  0062                            ds      1
   801  0062                     
   802                           _BufferTail:
   803  0063                            ds      1
   804  0063                     
   805                           HandleConfigByte@ByteCounter:
   806  0064                            ds      1
   807  0064                     
   808                           _CurrentMode:
   809  0065                            ds      1
   810  0065                     
   811                           _StopRelay6OnTime:
   812  0066                            ds      1
   813  0066                     
   814                           _StopRelay5OnTime:
   815  0067                            ds      1
   816  0067                     
   817                           _StopRelay4OnTime:
   818  0068                            ds      1
   819  0068                     
   820                           _StopRelay3OnTime:
   821  0069                            ds      1
   822  0069                     
   823                           _StopRelay2OnTime:
   824  006A                            ds      1
   825  006A                     
   826                           _StopRelay1OnTime:
   827  006B                            ds      1
   828  006B                     
   829                           _Relay1StopTime:
   830  006C                            ds      3
   831  006C                     
   832                           psect	bssBANK1,class=BANK1,space=1,noexec
   833                           global __pbssBANK1
   834                           __pbssBANK1:
   835  00A0                     _SendBuffer:
   836  00A0                            ds      40
   837  00A0                     
   838                           _Telegram:
   839  00C8                            ds      21
   840  00C8                     
   841                           _Stop_Ignition_Flag:
   842  00DD                            ds      2
   843  00DD                     
   844                           _Relay6StopTime:
   845  00DF                            ds      3
   846  00DF                     
   847                           _Relay5StopTime:
   848  00E2                            ds      3
   849  00E2                     
   850                           _Relay4StopTime:
   851  00E5                            ds      3
   852  00E5                     
   853                           _Relay3StopTime:
   854  00E8                            ds      3
   855  00E8                     
   856                           _Relay2StopTime:
   857  00EB                            ds      3
   858  00EB                     
   859                           	file	"C:\Users\Bendixen\AppData\Local\Temp\s818."
   860                           	line	#
   861                           psect clrtext,class=CODE,delta=2
   862                           global clear_ram0
   863                           ;	Called with FSR containing the base address, and
   864                           ;	W with the last address+1
   865                           clear_ram0:
   866  0F6C                     	clrwdt			;clear the watchdog before getting into this loop
   867  0F6C  0064               clrloop0:
   868  0F6D                     	clrf	indf		;clear RAM location pointed to by FSR
   869  0F6D  0180               	incf	fsr,f		;increment pointer
   870  0F6E  0A84               	xorwf	fsr,w		;XOR with final address
   871  0F6F  0604               	btfsc	status,2	;have we reached the end yet?
   872  0F70  1903               	retlw	0		;all done for this memory range, return
   873  0F71  3400               	xorwf	fsr,w		;XOR again to restore value
   874  0F72  0604               	goto	clrloop0		;do the next byte
   875  0F73  2F6D               
   876                           ; Clear objects allocated to COMMON
   877                           psect cinit,class=CODE,delta=2,merge=1
   878                           	clrf	((__pbssCOMMON)+0)&07Fh
   879  000F  01FD               ; Clear objects allocated to BANK0
   880                           psect cinit,class=CODE,delta=2,merge=1
   881                           	bcf	status, 7	;select IRP bank0
   882  0010  1383               	movlw	low(__pbssBANK0)
   883  0011  3058               	movwf	fsr
   884  0012  0084               	movlw	low((__pbssBANK0)+017h)
   885  0013  306F               	fcall	clear_ram0
   886  0014  158A  276C  118A   ; Clear objects allocated to BANK1
   887                           psect cinit,class=CODE,delta=2,merge=1
   888                           	movlw	low(__pbssBANK1)
   889  0017  30A0               	movwf	fsr
   890  0018  0084               	movlw	low((__pbssBANK1)+04Eh)
   891  0019  30EE               	fcall	clear_ram0
   892  001A  158A  276C  118A   psect cinit,class=CODE,delta=2,merge=1
   893                           global end_of_initialization,__end_of__initialization
   894                           
   895                           ;End of C runtime variable initialization code
   896                           
   897                           end_of_initialization:
   898  001D                     __end_of__initialization:
   899  001D                     clrf status
   900  001D  0183               ljmp _main	;jump to C main() function
   901  001E  118A  2E54         psect	cstackCOMMON,class=COMMON,space=1,noexec
   902                           global __pcstackCOMMON
   903                           __pcstackCOMMON:
   904  0070                     ?_Init_Ports:	; 1 bytes @ 0x0
   905  0070                     ?_Init_Relays:	; 1 bytes @ 0x0
   906  0070                     ?_Init_Transmitter:	; 1 bytes @ 0x0
   907  0070                     ?_Init_Receiver:	; 1 bytes @ 0x0
   908  0070                     ?_AddByteToBuffer:	; 1 bytes @ 0x0
   909  0070                     ?_CheckStopTime:	; 1 bytes @ 0x0
   910  0070                     ?_Read_Relay:	; 1 bytes @ 0x0
   911  0070                     ?_Read_Byte:	; 1 bytes @ 0x0
   912  0070                     ??_Read_Byte:	; 1 bytes @ 0x0
   913  0070                     ?_WriteByteFromBuffer:	; 1 bytes @ 0x0
   914  0070                     ?_HandleTelegramByte:	; 1 bytes @ 0x0
   915  0070                     ?_Init_Timer:	; 1 bytes @ 0x0
   916  0070                     ?_Start_Timer:	; 1 bytes @ 0x0
   917  0070                     ?_Timer_Interrupt:	; 1 bytes @ 0x0
   918  0070                     ??_Timer_Interrupt:	; 1 bytes @ 0x0
   919  0070                     ?_main:	; 1 bytes @ 0x0
   920  0070                     ?_HandleConfigByte:	; 1 bytes @ 0x0
   921  0070                     ?_Handle_Interrupts:	; 1 bytes @ 0x0
   922  0070                     ?_Write_Byte:	; 1 bytes @ 0x0
   923  0070                     ??_Write_Byte:	; 1 bytes @ 0x0
   924  0070                     ?i1_AddByteToBuffer:	; 1 bytes @ 0x0
   925  0070                     ??i1_AddByteToBuffer:	; 1 bytes @ 0x0
   926  0070                     ?i1_Set_Relay:	; 1 bytes @ 0x0
   927  0070                     	global	Write_Byte@Data
   928                           Write_Byte@Data:	; 1 bytes @ 0x0
   929  0070                     	global	i1Set_Relay@State
   930                           i1Set_Relay@State:	; 1 bytes @ 0x0
   931  0070                     	ds	1
   932  0070                     ??_WriteByteFromBuffer:	; 1 bytes @ 0x1
   933  0071                     ??i1_Set_Relay:	; 1 bytes @ 0x1
   934  0071                     	global	Read_Byte@Data
   935                           Read_Byte@Data:	; 1 bytes @ 0x1
   936  0071                     	global	i1AddByteToBuffer@Byte
   937                           i1AddByteToBuffer@Byte:	; 1 bytes @ 0x1
   938  0071                     	ds	1
   939  0071                     ??_HandleTelegramByte:	; 1 bytes @ 0x2
   940  0072                     	ds	1
   941  0072                     	global	i1Set_Relay@Relay
   942                           i1Set_Relay@Relay:	; 1 bytes @ 0x3
   943  0073                     	ds	1
   944  0073                     ??_HandleConfigByte:	; 1 bytes @ 0x4
   945  0074                     	global	HandleTelegramByte@Byte
   946                           HandleTelegramByte@Byte:	; 1 bytes @ 0x4
   947  0074                     	ds	2
   948  0074                     	global	HandleConfigByte@Byte
   949                           HandleConfigByte@Byte:	; 1 bytes @ 0x6
   950  0076                     	ds	1
   951  0076                     ??_Handle_Interrupts:	; 1 bytes @ 0x7
   952  0077                     	ds	5
   953  0077                     	global	Handle_Interrupts@dummy
   954                           Handle_Interrupts@dummy:	; 1 bytes @ 0xC
   955  007C                     	ds	1
   956  007C                     psect	cstackBANK0,class=BANK0,space=1,noexec
   957                           global __pcstackBANK0
   958                           __pcstackBANK0:
   959  0020                     ??_Init_Ports:	; 1 bytes @ 0x0
   960  0020                     ??_Init_Relays:	; 1 bytes @ 0x0
   961  0020                     ??_Init_Transmitter:	; 1 bytes @ 0x0
   962  0020                     ??_Init_Receiver:	; 1 bytes @ 0x0
   963  0020                     ??_AddByteToBuffer:	; 1 bytes @ 0x0
   964  0020                     ?_Set_Relay:	; 1 bytes @ 0x0
   965  0020                     ??_Read_Relay:	; 1 bytes @ 0x0
   966  0020                     ??_Init_Timer:	; 1 bytes @ 0x0
   967  0020                     ??_Start_Timer:	; 1 bytes @ 0x0
   968  0020                     ?_SetStopTime:	; 1 bytes @ 0x0
   969  0020                     	global	SetStopTime@Time10sec
   970                           SetStopTime@Time10sec:	; 1 bytes @ 0x0
   971  0020                     	global	Set_Relay@State
   972                           Set_Relay@State:	; 1 bytes @ 0x0
   973  0020                     	ds	1
   974  0020                     ??_Set_Relay:	; 1 bytes @ 0x1
   975  0021                     	global	SetStopTime@Time1sec
   976                           SetStopTime@Time1sec:	; 1 bytes @ 0x1
   977  0021                     	global	AddByteToBuffer@Byte
   978                           AddByteToBuffer@Byte:	; 1 bytes @ 0x1
   979  0021                     	ds	1
   980  0021                     ?_SendTelegram:	; 1 bytes @ 0x2
   981  0022                     	global	SetStopTime@Time100ms
   982                           SetStopTime@Time100ms:	; 1 bytes @ 0x2
   983  0022                     	global	Read_Relay@Relay
   984                           Read_Relay@Relay:	; 1 bytes @ 0x2
   985  0022                     	global	SendTelegram@MyTelegram
   986                           SendTelegram@MyTelegram:	; 21 bytes @ 0x2
   987  0022                     	ds	1
   988  0022                     ??_SetStopTime:	; 1 bytes @ 0x3
   989  0023                     	global	Set_Relay@Relay
   990                           Set_Relay@Relay:	; 1 bytes @ 0x3
   991  0023                     	ds	1
   992  0023                     ??_CheckStopTime:	; 1 bytes @ 0x4
   993  0024                     	ds	1
   994  0024                     	global	SetStopTime@RelayStopTime
   995                           SetStopTime@RelayStopTime:	; 1 bytes @ 0x5
   996  0025                     	ds	18
   997  0025                     ??_SendTelegram:	; 1 bytes @ 0x17
   998  0037                     	ds	1
   999  0037                     	global	SendTelegram@CommandCounter
  1000                           SendTelegram@CommandCounter:	; 1 bytes @ 0x18
  1001  0038                     	ds	1
  1002  0038                     ?_Handle_Telegram:	; 1 bytes @ 0x19
  1003  0039                     	global	Handle_Telegram@ThisTelegram
  1004                           Handle_Telegram@ThisTelegram:	; 21 bytes @ 0x19
  1005  0039                     	ds	21
  1006  0039                     ??_Handle_Telegram:	; 1 bytes @ 0x2E
  1007  004E                     	ds	4
  1008  004E                     	global	Handle_Telegram@error
  1009                           Handle_Telegram@error:	; 1 bytes @ 0x32
  1010  0052                     	ds	1
  1011  0052                     	global	Handle_Telegram@state
  1012                           Handle_Telegram@state:	; 1 bytes @ 0x33
  1013  0053                     	ds	1
  1014  0053                     ??_main:	; 1 bytes @ 0x34
  1015  0054                     	ds	4
  1016  0054                     ;!
  1017                           ;!Data Sizes:
  1018                           ;!    Strings     0
  1019                           ;!    Constant    0
  1020                           ;!    Data        0
  1021                           ;!    BSS         102
  1022                           ;!    Persistent  0
  1023                           ;!    Stack       0
  1024                           ;!
  1025                           ;!Auto Spaces:
  1026                           ;!    Space          Size  Autos    Used
  1027                           ;!    COMMON           14     13      14
  1028                           ;!    BANK0            80     56      79
  1029                           ;!    BANK1            80      0      78
  1030                           ;!    BANK2            80      0       0
  1031                           
  1032                           ;!
  1033                           ;!Pointer List with Targets:
  1034                           ;!
  1035                           ;!    SetStopTime@RelayStopTime	PTR unsigned char  size(1) Largest target is 3
  1036                           ;!		 -> Relay6StopTime(BANK1[3]), Relay5StopTime(BANK1[3]), Relay4StopTime(BANK1[3]), Re
                                 lay3StopTime(BANK1[3]), 
  1037                           ;!		 -> Relay2StopTime(BANK1[3]), Relay1StopTime(BANK0[3]), 
  1038                           ;!
  1039                           
  1040                           
  1041                           ;!
  1042                           ;!Critical Paths under _main in COMMON
  1043                           ;!
  1044                           ;!    None.
  1045                           ;!
  1046                           ;!Critical Paths under _Handle_Interrupts in COMMON
  1047                           ;!
  1048                           ;!    _Handle_Interrupts->_HandleConfigByte
  1049                           ;!    _WriteByteFromBuffer->_Write_Byte
  1050                           ;!    _HandleTelegramByte->_Read_Byte
  1051                           ;!    _HandleConfigByte->i1_Set_Relay
  1052                           ;!
  1053                           ;!Critical Paths under _main in BANK0
  1054                           ;!
  1055                           ;!    _main->_Handle_Telegram
  1056                           ;!    _Handle_Telegram->_SendTelegram
  1057                           ;!    _SendTelegram->_AddByteToBuffer
  1058                           ;!    _CheckStopTime->_Set_Relay
  1059                           ;!
  1060                           ;!Critical Paths under _Handle_Interrupts in BANK0
  1061                           ;!
  1062                           ;!    None.
  1063                           ;!
  1064                           ;!Critical Paths under _main in BANK1
  1065                           ;!
  1066                           ;!    None.
  1067                           ;!
  1068                           ;!Critical Paths under _Handle_Interrupts in BANK1
  1069                           ;!
  1070                           ;!    None.
  1071                           ;!
  1072                           ;!Critical Paths under _main in BANK2
  1073                           ;!
  1074                           ;!    None.
  1075                           ;!
  1076                           ;!Critical Paths under _Handle_Interrupts in BANK2
  1077                           ;!
  1078                           ;!    None.
  1079                           
  1080 ;;
  1081 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1082 ;;
  1083                           
  1084                           ;!
  1085                           ;!Call Graph Tables:
  1086                           ;!
  1087                           ;! ---------------------------------------------------------------------------------
  1088                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1089                           ;! ---------------------------------------------------------------------------------
  1090                           ;! (0) _main                                                 4     4      0    7572
  1091                           ;!                                             52 BANK0      4     4      0
  1092                           ;!                    _AddByteToBuffer
  1093                           ;!                      _CheckStopTime
  1094                           ;!                    _Handle_Telegram
  1095                           ;!                         _Init_Ports
  1096                           ;!                      _Init_Receiver
  1097                           ;!                        _Init_Relays
  1098                           ;!                         _Init_Timer
  1099                           ;!                   _Init_Transmitter
  1100                           ;!                        _Start_Timer
  1101                           ;! ---------------------------------------------------------------------------------
  1102                           ;! (1) _Start_Timer                                          0     0      0       0
  1103                           ;! ---------------------------------------------------------------------------------
  1104                           ;! (1) _Init_Transmitter                                     0     0      0       0
  1105                           ;! ---------------------------------------------------------------------------------
  1106                           ;! (1) _Init_Timer                                           0     0      0       0
  1107                           ;! ---------------------------------------------------------------------------------
  1108                           ;! (1) _Init_Relays                                          0     0      0       0
  1109                           ;! ---------------------------------------------------------------------------------
  1110                           ;! (1) _Init_Receiver                                        0     0      0       0
  1111                           ;! ---------------------------------------------------------------------------------
  1112                           ;! (1) _Init_Ports                                           0     0      0       0
  1113                           ;! ---------------------------------------------------------------------------------
  1114                           ;! (1) _Handle_Telegram                                     27     6     21    5596
  1115                           ;!                                             25 BANK0     27     6     21
  1116                           ;!                         _Read_Relay
  1117                           ;!                       _SendTelegram
  1118                           ;!                        _SetStopTime
  1119                           ;!                          _Set_Relay
  1120                           ;! ---------------------------------------------------------------------------------
  1121                           ;! (2) _SetStopTime                                          6     3      3    1942
  1122                           ;!                                              0 BANK0      6     3      3
  1123                           ;! ---------------------------------------------------------------------------------
  1124                           ;! (2) _SendTelegram                                        24     3     21     380
  1125                           ;!                                              2 BANK0     23     2     21
  1126                           ;!                    _AddByteToBuffer
  1127                           ;! ---------------------------------------------------------------------------------
  1128                           ;! (3) _AddByteToBuffer                                      2     2      0      22
  1129                           ;!                                              0 BANK0      2     2      0
  1130                           ;! ---------------------------------------------------------------------------------
  1131                           ;! (2) _Read_Relay                                           3     3      0      22
  1132                           ;!                                              0 BANK0      3     3      0
  1133                           ;! ---------------------------------------------------------------------------------
  1134                           ;! (1) _CheckStopTime                                        2     2      0    1954
  1135                           ;!                                              4 BANK0      2     2      0
  1136                           ;!                          _Set_Relay
  1137                           ;! ---------------------------------------------------------------------------------
  1138                           ;! (2) _Set_Relay                                            4     3      1    1954
  1139                           ;!                                              0 BANK0      4     3      1
  1140                           ;! ---------------------------------------------------------------------------------
  1141                           ;! Estimated maximum stack depth 3
  1142                           ;! ---------------------------------------------------------------------------------
  1143                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1144                           ;! ---------------------------------------------------------------------------------
  1145                           ;! (4) _Handle_Interrupts                                    6     6      0     711
  1146                           ;!                                              7 COMMON     6     6      0
  1147                           ;!                   _HandleConfigByte
  1148                           ;!                 _HandleTelegramByte
  1149                           ;!                    _Timer_Interrupt
  1150                           ;!                _WriteByteFromBuffer
  1151                           ;! ---------------------------------------------------------------------------------
  1152                           ;! (5) _WriteByteFromBuffer                                  1     1      0      22
  1153                           ;!                                              1 COMMON     1     1      0
  1154                           ;!                         _Write_Byte
  1155                           ;! ---------------------------------------------------------------------------------
  1156                           ;! (6) _Write_Byte                                           1     1      0      22
  1157                           ;!                                              0 COMMON     1     1      0
  1158                           ;! ---------------------------------------------------------------------------------
  1159                           ;! (5) _Timer_Interrupt                                      0     0      0       0
  1160                           ;! ---------------------------------------------------------------------------------
  1161                           ;! (5) _HandleTelegramByte                                   3     3      0     178
  1162                           ;!                                              2 COMMON     3     3      0
  1163                           ;!                          _Read_Byte
  1164                           ;! ---------------------------------------------------------------------------------
  1165                           ;! (5) _HandleConfigByte                                     3     3      0     510
  1166                           ;!                                              4 COMMON     3     3      0
  1167                           ;!                          _Read_Byte
  1168                           ;!                  i1_AddByteToBuffer
  1169                           ;!                        i1_Set_Relay
  1170                           ;! ---------------------------------------------------------------------------------
  1171                           ;! (6) i1_Set_Relay                                          4     3      1     442
  1172                           ;!                                              0 COMMON     4     3      1
  1173                           ;! ---------------------------------------------------------------------------------
  1174                           ;! (6) i1_AddByteToBuffer                                    2     2      0      22
  1175                           ;!                                              0 COMMON     2     2      0
  1176                           ;! ---------------------------------------------------------------------------------
  1177                           ;! (6) _Read_Byte                                            2     2      0      23
  1178                           ;!                                              0 COMMON     2     2      0
  1179                           ;! ---------------------------------------------------------------------------------
  1180                           ;! Estimated maximum stack depth 6
  1181                           ;! ---------------------------------------------------------------------------------
  1182                           ;!
  1183                           ;! Call Graph Graphs:
  1184                           ;!
  1185                           ;! _main (ROOT)
  1186                           ;!   _AddByteToBuffer
  1187                           ;!   _CheckStopTime
  1188                           ;!     _Set_Relay
  1189                           ;!   _Handle_Telegram
  1190                           ;!     _Read_Relay
  1191                           ;!     _SendTelegram
  1192                           ;!       _AddByteToBuffer
  1193                           ;!     _SetStopTime
  1194                           ;!     _Set_Relay
  1195                           ;!   _Init_Ports
  1196                           ;!   _Init_Receiver
  1197                           ;!   _Init_Relays
  1198                           ;!   _Init_Timer
  1199                           ;!   _Init_Transmitter
  1200                           ;!   _Start_Timer
  1201                           ;!
  1202                           ;! _Handle_Interrupts (ROOT)
  1203                           ;!   _HandleConfigByte
  1204                           ;!     _Read_Byte
  1205                           ;!     i1_AddByteToBuffer
  1206                           ;!     i1_Set_Relay
  1207                           ;!   _HandleTelegramByte
  1208                           ;!     _Read_Byte
  1209                           ;!   _Timer_Interrupt
  1210                           ;!   _WriteByteFromBuffer
  1211                           ;!     _Write_Byte
  1212                           ;!
  1213                           
  1214                           ;! Address spaces:
  1215                           
  1216                           ;!Name               Size   Autos  Total    Cost      Usage
  1217                           ;!BITCOMMON            E      0       0       0        0.0%
  1218                           ;!EEDATA             100      0       0       0        0.0%
  1219                           ;!NULL                 0      0       0       0        0.0%
  1220                           ;!CODE                 0      0       0       0        0.0%
  1221                           ;!COMMON               E      D       E       1      100.0%
  1222                           ;!BITSFR0              0      0       0       1        0.0%
  1223                           ;!SFR0                 0      0       0       1        0.0%
  1224                           ;!BITSFR1              0      0       0       2        0.0%
  1225                           ;!SFR1                 0      0       0       2        0.0%
  1226                           ;!STACK                0      0       0       2        0.0%
  1227                           ;!BANK0               50     38      4F       3       98.8%
  1228                           ;!BITBANK1            50      0       0       4        0.0%
  1229                           ;!BITSFR3              0      0       0       4        0.0%
  1230                           ;!SFR3                 0      0       0       4        0.0%
  1231                           ;!BANK1               50      0      4E       5       97.5%
  1232                           ;!BITSFR2              0      0       0       5        0.0%
  1233                           ;!SFR2                 0      0       0       5        0.0%
  1234                           ;!BITBANK2            50      0       0       6        0.0%
  1235                           ;!BANK2               50      0       0       7        0.0%
  1236                           ;!ABS                  0      0      AB       8        0.0%
  1237                           ;!BITBANK0            50      0       0       9        0.0%
  1238                           ;!DATA                 0      0      AB      10        0.0%
  1239                           
  1240                           	global	_main
  1241                           
  1242 ;; *************** function _main *****************
  1243 ;; Defined at:
  1244 ;;		line 59 in file "Main.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;		None
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : B00/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1258 ;;      Params:         0       0       0       0
  1259 ;;      Locals:         0       0       0       0
  1260 ;;      Temps:          0       4       0       0
  1261 ;;      Totals:         0       4       0       0
  1262 ;;Total ram usage:        4 bytes
  1263 ;; Hardware stack levels required when called:    6
  1264 ;; This function calls:
  1265 ;;		_AddByteToBuffer
  1266 ;;		_CheckStopTime
  1267 ;;		_Handle_Telegram
  1268 ;;		_Init_Ports
  1269 ;;		_Init_Receiver
  1270 ;;		_Init_Relays
  1271 ;;		_Init_Timer
  1272 ;;		_Init_Transmitter
  1273 ;;		_Start_Timer
  1274 ;; This function is called by:
  1275 ;;		Startup code after reset
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1279                           	file	"Main.c"
  1280                           	line	59
  1281                           global __pmaintext
  1282                           __pmaintext:	;psect for function _main
  1283  0654                     psect	maintext
  1284                           	file	"Main.c"
  1285                           	line	59
  1286                           	global	__size_of_main
  1287                           	__size_of_main	equ	__end_of_main-_main
  1288  0066                     	
  1289                           _main:	
  1290  0654                     ;incstack = 0
  1291                           	opt	stack 2
  1292                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1293                           	line	62
  1294                           	
  1295                           l2559:	
  1296  0654                     ;Main.c: 62:     Init_Ports();
  1297                           	fcall	_Init_Ports
  1298  0654  158A  27AD  118A   	line	63
  1299                           ;Main.c: 63:     Init_Timer();
  1300                           	fcall	_Init_Timer
  1301  0657  158A  2788  118A   	line	64
  1302                           	
  1303                           l2561:	
  1304  065A                     ;Main.c: 64:     Init_Relays();
  1305                           	fcall	_Init_Relays
  1306  065A  158A  27DB  118A   	line	65
  1307                           	
  1308                           l2563:	
  1309  065D                     ;Main.c: 65:     Init_Transmitter();
  1310                           	fcall	_Init_Transmitter
  1311  065D  158A  2794  118A   	line	66
  1312                           ;Main.c: 66:     Init_Receiver();
  1313                           	fcall	_Init_Receiver
  1314  0660  158A  27A0  118A   	line	67
  1315                           	
  1316                           l2565:	
  1317  0663                     ;Main.c: 67:     Start_Timer();
  1318                           	fcall	_Start_Timer
  1319  0663  158A  277D  118A   	line	69
  1320                           	
  1321                           l2567:	
  1322  0666                     ;Main.c: 69:     AddByteToBuffer('X');
  1323                           	movlw	low(058h)
  1324  0666  3058               	fcall	_AddByteToBuffer
  1325  0667  118A  27E3  118A   	line	72
  1326                           	
  1327                           l2569:	
  1328  066A                     ;Main.c: 72:     CurrentMode = Running;
  1329                           	bcf	status, 5	;RP0=0, select bank0
  1330  066A  1283               	bcf	status, 6	;RP1=0, select bank0
  1331  066B  1303               	clrf	(_CurrentMode)
  1332  066C  01E5               	goto	l2571
  1333  066D  2E6E               	line	74
  1334                           ;Main.c: 74:     while (1)
  1335                           	
  1336                           l158:	
  1337  066E                     	line	78
  1338                           	
  1339                           l2571:	
  1340  066E                     ;Main.c: 75:     {;Main.c: 78:         if (StopRelay1OnTime == 1 || StopRelay2OnTime == 
                                 1 || StopRelay3OnTime == 1 || StopRelay4OnTime == 1 || StopRelay5OnTime == 1 || StopRela
                                 y6OnTime == 1)
  1341                           	bcf	status, 5	;RP0=0, select bank0
  1342  066E  1283               	bcf	status, 6	;RP1=0, select bank0
  1343  066F  1303               		decf	((_StopRelay1OnTime)),w
  1344  0670  036B               	btfsc	status,2
  1345  0671  1903               	goto	u1621
  1346  0672  2E74               	goto	u1620
  1347  0673  2E75               u1621:
  1348  0674                     	goto	l2583
  1349  0674  2E8F               u1620:
  1350  0675                     	
  1351                           l2573:	
  1352  0675                     		decf	((_StopRelay2OnTime)),w
  1353  0675  036A               	btfsc	status,2
  1354  0676  1903               	goto	u1631
  1355  0677  2E79               	goto	u1630
  1356  0678  2E7A               u1631:
  1357  0679                     	goto	l2583
  1358  0679  2E8F               u1630:
  1359  067A                     	
  1360                           l2575:	
  1361  067A                     		decf	((_StopRelay3OnTime)),w
  1362  067A  0369               	btfsc	status,2
  1363  067B  1903               	goto	u1641
  1364  067C  2E7E               	goto	u1640
  1365  067D  2E7F               u1641:
  1366  067E                     	goto	l2583
  1367  067E  2E8F               u1640:
  1368  067F                     	
  1369                           l2577:	
  1370  067F                     		decf	((_StopRelay4OnTime)),w
  1371  067F  0368               	btfsc	status,2
  1372  0680  1903               	goto	u1651
  1373  0681  2E83               	goto	u1650
  1374  0682  2E84               u1651:
  1375  0683                     	goto	l2583
  1376  0683  2E8F               u1650:
  1377  0684                     	
  1378                           l2579:	
  1379  0684                     		decf	((_StopRelay5OnTime)),w
  1380  0684  0367               	btfsc	status,2
  1381  0685  1903               	goto	u1661
  1382  0686  2E88               	goto	u1660
  1383  0687  2E89               u1661:
  1384  0688                     	goto	l2583
  1385  0688  2E8F               u1660:
  1386  0689                     	
  1387                           l2581:	
  1388  0689                     		decf	((_StopRelay6OnTime)),w
  1389  0689  0366               	btfss	status,2
  1390  068A  1D03               	goto	u1671
  1391  068B  2E8D               	goto	u1670
  1392  068C  2E8E               u1671:
  1393  068D                     	goto	l2585
  1394  068D  2E93               u1670:
  1395  068E                     	goto	l2583
  1396  068E  2E8F               	
  1397                           l161:	
  1398  068F                     	line	80
  1399                           	
  1400                           l2583:	
  1401  068F                     ;Main.c: 79:         {;Main.c: 80:             CheckStopTime();
  1402                           	fcall	_CheckStopTime
  1403  068F  118A  222F  118A   	goto	l2585
  1404  0692  2E93               	line	81
  1405                           ;Main.c: 81:         }
  1406                           	
  1407                           l159:	
  1408  0693                     	line	83
  1409                           	
  1410                           l2585:	
  1411  0693                     ;Main.c: 83:         if (TelegramReadyFlag == 1)
  1412                           	bcf	status, 5	;RP0=0, select bank0
  1413  0693  1283               	bcf	status, 6	;RP1=0, select bank0
  1414  0694  1303               		decf	((_TelegramReadyFlag)),w
  1415  0695  035E               iorwf	((_TelegramReadyFlag+1)),w
  1416  0696  045F               	btfss	status,2
  1417  0697  1D03               	goto	u1681
  1418  0698  2E9A               	goto	u1680
  1419  0699  2E9B               u1681:
  1420  069A                     	goto	l2571
  1421  069A  2E6E               u1680:
  1422  069B                     	line	85
  1423                           	
  1424                           l2587:	
  1425  069B                     ;Main.c: 84:         {;Main.c: 85:             TelegramReadyFlag = 0;
  1426                           	clrf	(_TelegramReadyFlag)
  1427  069B  01DE               	clrf	(_TelegramReadyFlag+1)
  1428  069C  01DF               	line	86
  1429                           	
  1430                           l2589:	
  1431  069D                     ;Main.c: 86:             Handle_Telegram(Telegram);
  1432                           	movlw	(Handle_Telegram@ThisTelegram)&0ffh
  1433  069D  3039               	movwf	fsr0
  1434  069E  0084               	movlw	low(_Telegram)
  1435  069F  30C8               	movwf	(??_main+0)+0
  1436  06A0  00D4               	movf	fsr0,w
  1437  06A1  0804               	movwf	((??_main+0)+0+1)
  1438  06A2  00D5               	movlw	21
  1439  06A3  3015               	movwf	((??_main+0)+0+2)
  1440  06A4  00D6               u1690:
  1441  06A5                     	movf	(??_main+0)+0,w
  1442  06A5  0854               	movwf	fsr0
  1443  06A6  0084               	bcf	status, 7	;select IRP bank1
  1444  06A7  1383               	
  1445                           	movf	indf,w
  1446  06A8  0800               	movwf	((??_main+0)+0+3)
  1447  06A9  00D7               	incf	(??_main+0)+0,f
  1448  06AA  0AD4               	movf	((??_main+0)+0+1),w
  1449  06AB  0855               	movwf	fsr0
  1450  06AC  0084               	
  1451                           	movf	((??_main+0)+0+3),w
  1452  06AD  0857               	movwf	indf
  1453  06AE  0080               	incf	((??_main+0)+0+1),f
  1454  06AF  0AD5               	decfsz	((??_main+0)+0+2),f
  1455  06B0  0BD6               	goto	u1690
  1456  06B1  2EA5               	
  1457                           	fcall	_Handle_Telegram
  1458  06B2  118A  2020  118A   	goto	l2571
  1459  06B5  2E6E               	line	87
  1460                           ;Main.c: 87:         }
  1461                           	
  1462                           l162:	
  1463  06B6                     	goto	l2571
  1464  06B6  2E6E               	line	89
  1465                           ;Main.c: 89:     }
  1466                           	
  1467                           l163:	
  1468  06B7                     	goto	l2571
  1469  06B7  2E6E               	
  1470                           l164:	
  1471  06B8                     	line	90
  1472                           	
  1473                           l165:	
  1474  06B8                     	global	start
  1475                           	ljmp	start
  1476  06B8  118A  280D         	opt stack 0
  1477                           GLOBAL	__end_of_main
  1478                           	__end_of_main:
  1479  06BA                     	signat	_main,89
  1480                           	global	_Start_Timer
  1481                           
  1482 ;; *************** function _Start_Timer *****************
  1483 ;; Defined at:
  1484 ;;		line 53 in file "Timer.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1498 ;;      Params:         0       0       0       0
  1499 ;;      Locals:         0       0       0       0
  1500 ;;      Temps:          0       0       0       0
  1501 ;;      Totals:         0       0       0       0
  1502 ;;Total ram usage:        0 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    3
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1512                           	file	"Timer.c"
  1513                           	line	53
  1514                           global __ptext1
  1515                           __ptext1:	;psect for function _Start_Timer
  1516  0F7D                     psect	text1
  1517                           	file	"Timer.c"
  1518                           	line	53
  1519                           	global	__size_of_Start_Timer
  1520                           	__size_of_Start_Timer	equ	__end_of_Start_Timer-_Start_Timer
  1521  000B                     	
  1522                           _Start_Timer:	
  1523  0F7D                     ;incstack = 0
  1524                           	opt	stack 4
  1525                           ; Regs used in _Start_Timer: [wreg+status,2]
  1526                           	line	56
  1527                           	
  1528                           l2199:	
  1529  0F7D                     ;Timer.c: 56:     PIR1bits.TMR1IF = 0;
  1530                           	bcf	status, 5	;RP0=0, select bank0
  1531  0F7D  1283               	bcf	status, 6	;RP1=0, select bank0
  1532  0F7E  1303               	bcf	(12),0	;volatile
  1533  0F7F  100C               	line	59
  1534                           	
  1535                           l2201:	
  1536  0F80                     ;Timer.c: 59:     Counter_100ms = 0;
  1537                           	clrf	(_Counter_100ms)
  1538  0F80  01DC               	clrf	(_Counter_100ms+1)
  1539  0F81  01DD               	line	61
  1540                           	
  1541                           l2203:	
  1542  0F82                     ;Timer.c: 61:     TMR1H = 160;
  1543                           	movlw	low(0A0h)
  1544  0F82  30A0               	movwf	(15)	;volatile
  1545  0F83  008F               	line	62
  1546                           	
  1547                           l2205:	
  1548  0F84                     ;Timer.c: 62:     TMR1L = 138;
  1549                           	movlw	low(08Ah)
  1550  0F84  308A               	movwf	(14)	;volatile
  1551  0F85  008E               	line	65
  1552                           	
  1553                           l2207:	
  1554  0F86                     ;Timer.c: 65:     T1CONbits.TMR1ON = 1;
  1555                           	bsf	(16),0	;volatile
  1556  0F86  1410               	line	66
  1557                           	
  1558                           l54:	
  1559  0F87                     	return
  1560  0F87  0008               	opt stack 0
  1561                           GLOBAL	__end_of_Start_Timer
  1562                           	__end_of_Start_Timer:
  1563  0F88                     	signat	_Start_Timer,89
  1564                           	global	_Init_Transmitter
  1565                           
  1566 ;; *************** function _Init_Transmitter *****************
  1567 ;; Defined at:
  1568 ;;		line 35 in file "Eusart.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1582 ;;      Params:         0       0       0       0
  1583 ;;      Locals:         0       0       0       0
  1584 ;;      Temps:          0       0       0       0
  1585 ;;      Totals:         0       0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    3
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1596                           	file	"Eusart.c"
  1597                           	line	35
  1598                           global __ptext2
  1599                           __ptext2:	;psect for function _Init_Transmitter
  1600  0F94                     psect	text2
  1601                           	file	"Eusart.c"
  1602                           	line	35
  1603                           	global	__size_of_Init_Transmitter
  1604                           	__size_of_Init_Transmitter	equ	__end_of_Init_Transmitter-_Init_Transmitter
  1605  000C                     	
  1606                           _Init_Transmitter:	
  1607  0F94                     ;incstack = 0
  1608                           	opt	stack 4
  1609                           ; Regs used in _Init_Transmitter: [wreg+status,2]
  1610                           	line	38
  1611                           	
  1612                           l2247:	
  1613  0F94                     ;Eusart.c: 38:     TXSTAbits.SYNC = 0;
  1614                           	bcf	status, 5	;RP0=0, select bank0
  1615  0F94  1283               	bcf	status, 6	;RP1=0, select bank0
  1616  0F95  1303               	bcf	(22),4	;volatile
  1617  0F96  1216               	line	41
  1618                           ;Eusart.c: 41:     RCSTAbits.SPEN = 1;
  1619                           	bsf	(23),7	;volatile
  1620  0F97  1797               	line	44
  1621                           ;Eusart.c: 44:     TXSTAbits.TX9 = 0;
  1622                           	bcf	(22),6	;volatile
  1623  0F98  1316               	line	47
  1624                           ;Eusart.c: 47:     TXSTAbits.BRGH = 1;
  1625                           	bsf	(22),2	;volatile
  1626  0F99  1516               	line	50
  1627                           ;Eusart.c: 50:     BAUDCTLbits.BRG16 = 1;
  1628                           	bsf	(17),3	;volatile
  1629  0F9A  1591               	line	53
  1630                           	
  1631                           l2249:	
  1632  0F9B                     ;Eusart.c: 53:     SPBRG = 103;
  1633                           	movlw	low(067h)
  1634  0F9B  3067               	movwf	(19)	;volatile
  1635  0F9C  0093               	line	63
  1636                           	
  1637                           l2251:	
  1638  0F9D                     ;Eusart.c: 63:     TXREG = 0;
  1639                           	clrf	(21)	;volatile
  1640  0F9D  0195               	line	66
  1641                           	
  1642                           l2253:	
  1643  0F9E                     ;Eusart.c: 66:     TXSTAbits.TXEN = 1;
  1644                           	bsf	(22),5	;volatile
  1645  0F9E  1696               	line	67
  1646                           	
  1647                           l306:	
  1648  0F9F                     	return
  1649  0F9F  0008               	opt stack 0
  1650                           GLOBAL	__end_of_Init_Transmitter
  1651                           	__end_of_Init_Transmitter:
  1652  0FA0                     	signat	_Init_Transmitter,89
  1653                           	global	_Init_Timer
  1654                           
  1655 ;; *************** function _Init_Timer *****************
  1656 ;; Defined at:
  1657 ;;		line 31 in file "Timer.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1671 ;;      Params:         0       0       0       0
  1672 ;;      Locals:         0       0       0       0
  1673 ;;      Temps:          0       0       0       0
  1674 ;;      Totals:         0       0       0       0
  1675 ;;Total ram usage:        0 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    3
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_main
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1685                           	file	"Timer.c"
  1686                           	line	31
  1687                           global __ptext3
  1688                           __ptext3:	;psect for function _Init_Timer
  1689  0F88                     psect	text3
  1690                           	file	"Timer.c"
  1691                           	line	31
  1692                           	global	__size_of_Init_Timer
  1693                           	__size_of_Init_Timer	equ	__end_of_Init_Timer-_Init_Timer
  1694  000C                     	
  1695                           _Init_Timer:	
  1696  0F88                     ;incstack = 0
  1697                           	opt	stack 4
  1698                           ; Regs used in _Init_Timer: [wreg+status,2+status,0]
  1699                           	line	34
  1700                           	
  1701                           l2187:	
  1702  0F88                     ;Timer.c: 34:     T1CONbits.T1CKPS = 3;
  1703                           	movlw	(03h & ((1<<2)-1))<<4
  1704  0F88  3030               	bcf	status, 5	;RP0=0, select bank0
  1705  0F89  1283               	bcf	status, 6	;RP1=0, select bank0
  1706  0F8A  1303               	iorwf	(16),f	;volatile
  1707  0F8B  0490               	line	37
  1708                           	
  1709                           l2189:	
  1710  0F8C                     ;Timer.c: 37:     T1CONbits.T1OSCEN = 0;
  1711                           	bcf	(16),3	;volatile
  1712  0F8C  1190               	line	40
  1713                           	
  1714                           l2191:	
  1715  0F8D                     ;Timer.c: 40:     T1CONbits.TMR1CS = 0;
  1716                           	bcf	(16),1	;volatile
  1717  0F8D  1090               	line	43
  1718                           	
  1719                           l2193:	
  1720  0F8E                     ;Timer.c: 43:     INTCONbits.GIE = 1;
  1721                           	bsf	(11),7	;volatile
  1722  0F8E  178B               	line	46
  1723                           	
  1724                           l2195:	
  1725  0F8F                     ;Timer.c: 46:     INTCONbits.PEIE = 1;
  1726                           	bsf	(11),6	;volatile
  1727  0F8F  170B               	line	49
  1728                           	
  1729                           l2197:	
  1730  0F90                     ;Timer.c: 49:     PIE1bits.TMR1IE = 1;
  1731                           	bsf	status, 5	;RP0=1, select bank1
  1732  0F90  1683               	bcf	status, 6	;RP1=0, select bank1
  1733  0F91  1303               	bsf	(140)^080h,0	;volatile
  1734  0F92  140C               	line	51
  1735                           	
  1736                           l51:	
  1737  0F93                     	return
  1738  0F93  0008               	opt stack 0
  1739                           GLOBAL	__end_of_Init_Timer
  1740                           	__end_of_Init_Timer:
  1741  0F94                     	signat	_Init_Timer,89
  1742                           	global	_Init_Relays
  1743                           
  1744 ;; *************** function _Init_Relays *****************
  1745 ;; Defined at:
  1746 ;;		line 47 in file "RelayControl.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		None
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1760 ;;      Params:         0       0       0       0
  1761 ;;      Locals:         0       0       0       0
  1762 ;;      Temps:          0       0       0       0
  1763 ;;      Totals:         0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    3
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1774                           	file	"RelayControl.c"
  1775                           	line	47
  1776                           global __ptext4
  1777                           __ptext4:	;psect for function _Init_Relays
  1778  0FDB                     psect	text4
  1779                           	file	"RelayControl.c"
  1780                           	line	47
  1781                           	global	__size_of_Init_Relays
  1782                           	__size_of_Init_Relays	equ	__end_of_Init_Relays-_Init_Relays
  1783  0025                     	
  1784                           _Init_Relays:	
  1785  0FDB                     ;incstack = 0
  1786                           	opt	stack 4
  1787                           ; Regs used in _Init_Relays: []
  1788                           	line	49
  1789                           	
  1790                           l2245:	
  1791  0FDB                     ;RelayControl.c: 49:     TRISAbits.TRISA0 = 0;
  1792                           	bsf	status, 5	;RP0=1, select bank1
  1793  0FDB  1683               	bcf	status, 6	;RP1=0, select bank1
  1794  0FDC  1303               	bcf	(133)^080h,0	;volatile
  1795  0FDD  1005               	line	50
  1796                           ;RelayControl.c: 50:     PORTAbits.RA0 = 0;
  1797                           	bcf	status, 5	;RP0=0, select bank0
  1798  0FDE  1283               	bcf	status, 6	;RP1=0, select bank0
  1799  0FDF  1303               	bcf	(5),0	;volatile
  1800  0FE0  1005               	line	51
  1801                           ;RelayControl.c: 51:     TRISAbits.TRISA1 = 0;
  1802                           	bsf	status, 5	;RP0=1, select bank1
  1803  0FE1  1683               	bcf	status, 6	;RP1=0, select bank1
  1804  0FE2  1303               	bcf	(133)^080h,1	;volatile
  1805  0FE3  1085               	line	52
  1806                           ;RelayControl.c: 52:     PORTAbits.RA1 = 0;
  1807                           	bcf	status, 5	;RP0=0, select bank0
  1808  0FE4  1283               	bcf	status, 6	;RP1=0, select bank0
  1809  0FE5  1303               	bcf	(5),1	;volatile
  1810  0FE6  1085               	line	53
  1811                           ;RelayControl.c: 53:     TRISAbits.TRISA2 = 0;
  1812                           	bsf	status, 5	;RP0=1, select bank1
  1813  0FE7  1683               	bcf	status, 6	;RP1=0, select bank1
  1814  0FE8  1303               	bcf	(133)^080h,2	;volatile
  1815  0FE9  1105               	line	54
  1816                           ;RelayControl.c: 54:     PORTAbits.RA2 = 0;
  1817                           	bcf	status, 5	;RP0=0, select bank0
  1818  0FEA  1283               	bcf	status, 6	;RP1=0, select bank0
  1819  0FEB  1303               	bcf	(5),2	;volatile
  1820  0FEC  1105               	line	55
  1821                           ;RelayControl.c: 55:     TRISCbits.TRISC0 = 0;
  1822                           	bsf	status, 5	;RP0=1, select bank1
  1823  0FED  1683               	bcf	status, 6	;RP1=0, select bank1
  1824  0FEE  1303               	bcf	(135)^080h,0	;volatile
  1825  0FEF  1007               	line	56
  1826                           ;RelayControl.c: 56:     PORTCbits.RC0 = 0;
  1827                           	bcf	status, 5	;RP0=0, select bank0
  1828  0FF0  1283               	bcf	status, 6	;RP1=0, select bank0
  1829  0FF1  1303               	bcf	(7),0	;volatile
  1830  0FF2  1007               	line	57
  1831                           ;RelayControl.c: 57:     TRISCbits.TRISC1 = 0;
  1832                           	bsf	status, 5	;RP0=1, select bank1
  1833  0FF3  1683               	bcf	status, 6	;RP1=0, select bank1
  1834  0FF4  1303               	bcf	(135)^080h,1	;volatile
  1835  0FF5  1087               	line	58
  1836                           ;RelayControl.c: 58:     PORTCbits.RC1 = 0;
  1837                           	bcf	status, 5	;RP0=0, select bank0
  1838  0FF6  1283               	bcf	status, 6	;RP1=0, select bank0
  1839  0FF7  1303               	bcf	(7),1	;volatile
  1840  0FF8  1087               	line	59
  1841                           ;RelayControl.c: 59:     TRISCbits.TRISC2 = 0;
  1842                           	bsf	status, 5	;RP0=1, select bank1
  1843  0FF9  1683               	bcf	status, 6	;RP1=0, select bank1
  1844  0FFA  1303               	bcf	(135)^080h,2	;volatile
  1845  0FFB  1107               	line	60
  1846                           ;RelayControl.c: 60:     PORTCbits.RC2 = 0;
  1847                           	bcf	status, 5	;RP0=0, select bank0
  1848  0FFC  1283               	bcf	status, 6	;RP1=0, select bank0
  1849  0FFD  1303               	bcf	(7),2	;volatile
  1850  0FFE  1107               	line	62
  1851                           	
  1852                           l374:	
  1853  0FFF                     	return
  1854  0FFF  0008               	opt stack 0
  1855                           GLOBAL	__end_of_Init_Relays
  1856                           	__end_of_Init_Relays:
  1857  1000                     	signat	_Init_Relays,89
  1858                           	global	_Init_Receiver
  1859                           
  1860 ;; *************** function _Init_Receiver *****************
  1861 ;; Defined at:
  1862 ;;		line 69 in file "Eusart.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		status,2
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1876 ;;      Params:         0       0       0       0
  1877 ;;      Locals:         0       0       0       0
  1878 ;;      Temps:          0       0       0       0
  1879 ;;      Totals:         0       0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    3
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1890                           	file	"Eusart.c"
  1891                           	line	69
  1892                           global __ptext5
  1893                           __ptext5:	;psect for function _Init_Receiver
  1894  0FA0                     psect	text5
  1895                           	file	"Eusart.c"
  1896                           	line	69
  1897                           	global	__size_of_Init_Receiver
  1898                           	__size_of_Init_Receiver	equ	__end_of_Init_Receiver-_Init_Receiver
  1899  000D                     	
  1900                           _Init_Receiver:	
  1901  0FA0                     ;incstack = 0
  1902                           	opt	stack 4
  1903                           ; Regs used in _Init_Receiver: [status,2]
  1904                           	line	75
  1905                           	
  1906                           l2255:	
  1907  0FA0                     ;Eusart.c: 75:     RCSTAbits.RX9 = 0;
  1908                           	bcf	status, 5	;RP0=0, select bank0
  1909  0FA0  1283               	bcf	status, 6	;RP1=0, select bank0
  1910  0FA1  1303               	bcf	(23),6	;volatile
  1911  0FA2  1317               	line	91
  1912                           ;Eusart.c: 91:     PIE1bits.RCIE = 1;
  1913                           	bsf	status, 5	;RP0=1, select bank1
  1914  0FA3  1683               	bcf	status, 6	;RP1=0, select bank1
  1915  0FA4  1303               	bsf	(140)^080h,5	;volatile
  1916  0FA5  168C               	line	94
  1917                           ;Eusart.c: 94:     INTCONbits.PEIE = 1;
  1918                           	bsf	(11),6	;volatile
  1919  0FA6  170B               	line	97
  1920                           ;Eusart.c: 97:     INTCONbits.GIE = 1;
  1921                           	bsf	(11),7	;volatile
  1922  0FA7  178B               	line	100
  1923                           	
  1924                           l2257:	
  1925  0FA8                     ;Eusart.c: 100:     RCREG = 0;
  1926                           	bcf	status, 5	;RP0=0, select bank0
  1927  0FA8  1283               	bcf	status, 6	;RP1=0, select bank0
  1928  0FA9  1303               	clrf	(20)	;volatile
  1929  0FAA  0194               	line	103
  1930                           	
  1931                           l2259:	
  1932  0FAB                     ;Eusart.c: 103:     RCSTAbits.CREN = 1;
  1933                           	bsf	(23),4	;volatile
  1934  0FAB  1617               	line	104
  1935                           	
  1936                           l309:	
  1937  0FAC                     	return
  1938  0FAC  0008               	opt stack 0
  1939                           GLOBAL	__end_of_Init_Receiver
  1940                           	__end_of_Init_Receiver:
  1941  0FAD                     	signat	_Init_Receiver,89
  1942                           	global	_Init_Ports
  1943                           
  1944 ;; *************** function _Init_Ports *****************
  1945 ;; Defined at:
  1946 ;;		line 109 in file "Main.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1960 ;;      Params:         0       0       0       0
  1961 ;;      Locals:         0       0       0       0
  1962 ;;      Temps:          0       0       0       0
  1963 ;;      Totals:         0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    3
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  1974                           	file	"Main.c"
  1975                           	line	109
  1976                           global __ptext6
  1977                           __ptext6:	;psect for function _Init_Ports
  1978  0FAD                     psect	text6
  1979                           	file	"Main.c"
  1980                           	line	109
  1981                           	global	__size_of_Init_Ports
  1982                           	__size_of_Init_Ports	equ	__end_of_Init_Ports-_Init_Ports
  1983  0014                     	
  1984                           _Init_Ports:	
  1985  0FAD                     ;incstack = 0
  1986                           	opt	stack 4
  1987                           ; Regs used in _Init_Ports: [wreg+status,2+status,0]
  1988                           	line	113
  1989                           	
  1990                           l2227:	
  1991  0FAD                     ;Main.c: 113:     TRISAbits.TRISA4 = 1;
  1992                           	bsf	status, 5	;RP0=1, select bank1
  1993  0FAD  1683               	bcf	status, 6	;RP1=0, select bank1
  1994  0FAE  1303               	bsf	(133)^080h,4	;volatile
  1995  0FAF  1605               	line	117
  1996                           ;Main.c: 117:     TRISAbits.TRISA5 = 1;
  1997                           	bsf	(133)^080h,5	;volatile
  1998  0FB0  1685               	line	120
  1999                           ;Main.c: 120:     TRISCbits.TRISC4 = 1;
  2000                           	bsf	(135)^080h,4	;volatile
  2001  0FB1  1607               	line	123
  2002                           ;Main.c: 123:     TRISCbits.TRISC5 = 1;
  2003                           	bsf	(135)^080h,5	;volatile
  2004  0FB2  1687               	line	127
  2005                           	
  2006                           l2229:	
  2007  0FB3                     ;Main.c: 127:     CMCON0bits.CM = 7;
  2008                           	movlw	(07h & ((1<<3)-1))<<0
  2009  0FB3  3007               	bcf	status, 5	;RP0=0, select bank0
  2010  0FB4  1283               	bcf	status, 6	;RP1=0, select bank0
  2011  0FB5  1303               	iorwf	(25),f	;volatile
  2012  0FB6  0499               	line	130
  2013                           	
  2014                           l2231:	
  2015  0FB7                     ;Main.c: 130:     ANSEL = 0;
  2016                           	bsf	status, 5	;RP0=1, select bank1
  2017  0FB7  1683               	bcf	status, 6	;RP1=0, select bank1
  2018  0FB8  1303               	clrf	(145)^080h	;volatile
  2019  0FB9  0191               	line	133
  2020                           	
  2021                           l2233:	
  2022  0FBA                     ;Main.c: 133:     INTCONbits.RAIE = 1;
  2023                           	bsf	(11),3	;volatile
  2024  0FBA  158B               	line	136
  2025                           	
  2026                           l2235:	
  2027  0FBB                     ;Main.c: 136:     IOCAbits.IOC4 = 1;
  2028                           	bsf	(150)^080h,4	;volatile
  2029  0FBB  1616               	line	139
  2030                           	
  2031                           l2237:	
  2032  0FBC                     ;Main.c: 139:     INTCONbits.RAIF = 0;
  2033                           	bcf	(11),0	;volatile
  2034  0FBC  100B               	line	142
  2035                           	
  2036                           l2239:	
  2037  0FBD                     ;Main.c: 142:     OSCCONbits.IRCF2 = 1;
  2038                           	bsf	(143)^080h,6	;volatile
  2039  0FBD  170F               	line	143
  2040                           	
  2041                           l2241:	
  2042  0FBE                     ;Main.c: 143:     OSCCONbits.IRCF1 = 1;
  2043                           	bsf	(143)^080h,5	;volatile
  2044  0FBE  168F               	line	144
  2045                           	
  2046                           l2243:	
  2047  0FBF                     ;Main.c: 144:     OSCCONbits.IRCF0 = 1;
  2048                           	bsf	(143)^080h,4	;volatile
  2049  0FBF  160F               	line	145
  2050                           	
  2051                           l171:	
  2052  0FC0                     	return
  2053  0FC0  0008               	opt stack 0
  2054                           GLOBAL	__end_of_Init_Ports
  2055                           	__end_of_Init_Ports:
  2056  0FC1                     	signat	_Init_Ports,89
  2057                           	global	_Handle_Telegram
  2058                           
  2059 ;; *************** function _Handle_Telegram *****************
  2060 ;; Defined at:
  2061 ;;		line 244 in file "Main.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  ThisTelegram   21   25[BANK0 ] struct .
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  state           1   51[BANK0 ] unsigned char 
  2066 ;;  error           1   50[BANK0 ] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2076 ;;      Params:         0      21       0       0
  2077 ;;      Locals:         0       2       0       0
  2078 ;;      Temps:          0       4       0       0
  2079 ;;      Totals:         0      27       0       0
  2080 ;;Total ram usage:       27 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    5
  2083 ;; This function calls:
  2084 ;;		_Read_Relay
  2085 ;;		_SendTelegram
  2086 ;;		_SetStopTime
  2087 ;;		_Set_Relay
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2093                           	line	244
  2094                           global __ptext7
  2095                           __ptext7:	;psect for function _Handle_Telegram
  2096  0020                     psect	text7
  2097                           	file	"Main.c"
  2098                           	line	244
  2099                           	global	__size_of_Handle_Telegram
  2100                           	__size_of_Handle_Telegram	equ	__end_of_Handle_Telegram-_Handle_Telegram
  2101  020F                     	
  2102                           _Handle_Telegram:	
  2103  0020                     ;incstack = 0
  2104                           	opt	stack 2
  2105                           ; Regs used in _Handle_Telegram: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2106                           	line	246
  2107                           	
  2108                           l2333:	
  2109  0020                     ;Main.c: 244: void Handle_Telegram (TelegramType ThisTelegram);Main.c: 245: {;Main.c: 24
                                 6:     unsigned char state = 255;
  2110                           	movlw	low(0FFh)
  2111  0020  30FF               	bcf	status, 5	;RP0=0, select bank0
  2112  0021  1283               	bcf	status, 6	;RP1=0, select bank0
  2113  0022  1303               	movwf	(??_Handle_Telegram+0)+0
  2114  0023  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2115  0024  084E               	movwf	(Handle_Telegram@state)
  2116  0025  00D3               	line	247
  2117                           	
  2118                           l2335:	
  2119  0026                     ;Main.c: 247:     unsigned char error = 0;
  2120                           	clrf	(Handle_Telegram@error)
  2121  0026  01D2               	line	249
  2122                           	
  2123                           l2337:	
  2124  0027                     ;Main.c: 249:     if (ThisTelegram.Command[0] == 'A')
  2125                           		movlw	65
  2126  0027  3041               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2127  0028  063C               	btfss	status,2
  2128  0029  1D03               	goto	u1451
  2129  002A  282C               	goto	u1450
  2130  002B  282D               u1451:
  2131  002C                     	goto	l2341
  2132  002C  2830               u1450:
  2133  002D                     	line	251
  2134                           	
  2135                           l2339:	
  2136  002D                     ;Main.c: 250:     {;Main.c: 251:         state = On;
  2137                           	clrf	(Handle_Telegram@state)
  2138  002D  01D3               	incf	(Handle_Telegram@state),f
  2139  002E  0AD3               	line	252
  2140                           ;Main.c: 252:     }
  2141                           	goto	l2369
  2142  002F  28A4               	line	253
  2143                           ;Main.c: 253:     else if (ThisTelegram.Command[0] == 'B')
  2144                           	
  2145                           l192:	
  2146  0030                     	
  2147                           l2341:	
  2148  0030                     		movlw	66
  2149  0030  3042               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2150  0031  063C               	btfss	status,2
  2151  0032  1D03               	goto	u1461
  2152  0033  2835               	goto	u1460
  2153  0034  2836               u1461:
  2154  0035                     	goto	l2345
  2155  0035  2838               u1460:
  2156  0036                     	line	255
  2157                           	
  2158                           l2343:	
  2159  0036                     ;Main.c: 254:     {;Main.c: 255:         state = Off;
  2160                           	clrf	(Handle_Telegram@state)
  2161  0036  01D3               	line	256
  2162                           ;Main.c: 256:     }
  2163                           	goto	l2369
  2164  0037  28A4               	line	257
  2165                           ;Main.c: 257:     else if (ThisTelegram.Command[0] == 'S')
  2166                           	
  2167                           l194:	
  2168  0038                     	
  2169                           l2345:	
  2170  0038                     		movlw	83
  2171  0038  3053               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2172  0039  063C               	btfss	status,2
  2173  003A  1D03               	goto	u1471
  2174  003B  283D               	goto	u1470
  2175  003C  283E               u1471:
  2176  003D                     	goto	l2363
  2177  003D  2885               u1470:
  2178  003E                     	line	259
  2179                           	
  2180                           l2347:	
  2181  003E                     ;Main.c: 258:     {;Main.c: 259:         ThisTelegram.Commandlength = 7;
  2182                           	movlw	low(07h)
  2183  003E  3007               	movwf	(??_Handle_Telegram+0)+0
  2184  003F  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2185  0040  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+02h
  2186  0041  00BB               	line	260
  2187                           ;Main.c: 260:         ThisTelegram.Command[0] = 'S';
  2188                           	movlw	low(053h)
  2189  0042  3053               	movwf	(??_Handle_Telegram+0)+0
  2190  0043  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2191  0044  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+03h
  2192  0045  00BC               	line	261
  2193                           	
  2194                           l2349:	
  2195  0046                     ;Main.c: 261:         ThisTelegram.Command[1] = (Read_Relay(Relay1) + 48);
  2196                           	movlw	low(0)
  2197  0046  3000               	fcall	_Read_Relay
  2198  0047  118A  2749  118A   	addlw	030h
  2199  004A  3E30               	bcf	status, 5	;RP0=0, select bank0
  2200  004B  1283               	bcf	status, 6	;RP1=0, select bank0
  2201  004C  1303               	movwf	(??_Handle_Telegram+0)+0
  2202  004D  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2203  004E  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+04h
  2204  004F  00BD               	line	262
  2205                           	
  2206                           l2351:	
  2207  0050                     ;Main.c: 262:         ThisTelegram.Command[2] = (Read_Relay(Relay2) + 48);
  2208                           	movlw	low(01h)
  2209  0050  3001               	fcall	_Read_Relay
  2210  0051  118A  2749  118A   	addlw	030h
  2211  0054  3E30               	bcf	status, 5	;RP0=0, select bank0
  2212  0055  1283               	bcf	status, 6	;RP1=0, select bank0
  2213  0056  1303               	movwf	(??_Handle_Telegram+0)+0
  2214  0057  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2215  0058  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+05h
  2216  0059  00BE               	line	263
  2217                           	
  2218                           l2353:	
  2219  005A                     ;Main.c: 263:         ThisTelegram.Command[3] = (Read_Relay(Relay3) + 48);
  2220                           	movlw	low(02h)
  2221  005A  3002               	fcall	_Read_Relay
  2222  005B  118A  2749  118A   	addlw	030h
  2223  005E  3E30               	bcf	status, 5	;RP0=0, select bank0
  2224  005F  1283               	bcf	status, 6	;RP1=0, select bank0
  2225  0060  1303               	movwf	(??_Handle_Telegram+0)+0
  2226  0061  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2227  0062  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+06h
  2228  0063  00BF               	line	264
  2229                           	
  2230                           l2355:	
  2231  0064                     ;Main.c: 264:         ThisTelegram.Command[4] = (Read_Relay(Relay4) + 48);
  2232                           	movlw	low(03h)
  2233  0064  3003               	fcall	_Read_Relay
  2234  0065  118A  2749  118A   	addlw	030h
  2235  0068  3E30               	bcf	status, 5	;RP0=0, select bank0
  2236  0069  1283               	bcf	status, 6	;RP1=0, select bank0
  2237  006A  1303               	movwf	(??_Handle_Telegram+0)+0
  2238  006B  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2239  006C  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+07h
  2240  006D  00C0               	line	265
  2241                           	
  2242                           l2357:	
  2243  006E                     ;Main.c: 265:         ThisTelegram.Command[5] = (Read_Relay(Relay5) + 48);
  2244                           	movlw	low(04h)
  2245  006E  3004               	fcall	_Read_Relay
  2246  006F  118A  2749  118A   	addlw	030h
  2247  0072  3E30               	bcf	status, 5	;RP0=0, select bank0
  2248  0073  1283               	bcf	status, 6	;RP1=0, select bank0
  2249  0074  1303               	movwf	(??_Handle_Telegram+0)+0
  2250  0075  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2251  0076  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+08h
  2252  0077  00C1               	line	266
  2253                           	
  2254                           l2359:	
  2255  0078                     ;Main.c: 266:         ThisTelegram.Command[6] = (Read_Relay(Relay6) + 48);
  2256                           	movlw	low(05h)
  2257  0078  3005               	fcall	_Read_Relay
  2258  0079  118A  2749  118A   	addlw	030h
  2259  007C  3E30               	bcf	status, 5	;RP0=0, select bank0
  2260  007D  1283               	bcf	status, 6	;RP1=0, select bank0
  2261  007E  1303               	movwf	(??_Handle_Telegram+0)+0
  2262  007F  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2263  0080  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+09h
  2264  0081  00C2               	line	268
  2265                           	
  2266                           l2361:	
  2267  0082                     ;Main.c: 268:         error = 1;
  2268                           	clrf	(Handle_Telegram@error)
  2269  0082  01D2               	incf	(Handle_Telegram@error),f
  2270  0083  0AD2               	line	269
  2271                           ;Main.c: 269:     }
  2272                           	goto	l2369
  2273  0084  28A4               	line	270
  2274                           ;Main.c: 270:     else if (ThisTelegram.Command[0] == 'W')
  2275                           	
  2276                           l196:	
  2277  0085                     	
  2278                           l2363:	
  2279  0085                     		movlw	87
  2280  0085  3057               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2281  0086  063C               	btfss	status,2
  2282  0087  1D03               	goto	u1481
  2283  0088  288A               	goto	u1480
  2284  0089  288B               u1481:
  2285  008A                     	goto	l2367
  2286  008A  289C               u1480:
  2287  008B                     	line	272
  2288                           	
  2289                           l2365:	
  2290  008B                     ;Main.c: 271:     {;Main.c: 272:         ThisTelegram.Commandlength = 2;
  2291                           	movlw	low(02h)
  2292  008B  3002               	movwf	(??_Handle_Telegram+0)+0
  2293  008C  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2294  008D  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+02h
  2295  008E  00BB               	line	273
  2296                           ;Main.c: 273:         ThisTelegram.Command[0] = 'R';
  2297                           	movlw	low(052h)
  2298  008F  3052               	movwf	(??_Handle_Telegram+0)+0
  2299  0090  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2300  0091  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+03h
  2301  0092  00BC               	line	274
  2302                           ;Main.c: 274:         ThisTelegram.Command[1] = 'B';
  2303                           	movlw	low(042h)
  2304  0093  3042               	movwf	(??_Handle_Telegram+0)+0
  2305  0094  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2306  0095  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+04h
  2307  0096  00BD               	line	276
  2308                           ;Main.c: 276:         error = 2;
  2309                           	movlw	low(02h)
  2310  0097  3002               	movwf	(??_Handle_Telegram+0)+0
  2311  0098  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2312  0099  084E               	movwf	(Handle_Telegram@error)
  2313  009A  00D2               	line	277
  2314                           ;Main.c: 277:     }
  2315                           	goto	l2369
  2316  009B  28A4               	line	278
  2317                           ;Main.c: 278:     else
  2318                           	
  2319                           l198:	
  2320  009C                     	line	280
  2321                           	
  2322                           l2367:	
  2323  009C                     ;Main.c: 279:     {;Main.c: 280:         error = 4;
  2324                           	movlw	low(04h)
  2325  009C  3004               	movwf	(??_Handle_Telegram+0)+0
  2326  009D  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2327  009E  084E               	movwf	(Handle_Telegram@error)
  2328  009F  00D2               	goto	l2369
  2329  00A0  28A4               	line	281
  2330                           ;Main.c: 281:     }
  2331                           	
  2332                           l199:	
  2333  00A1                     	goto	l2369
  2334  00A1  28A4               	
  2335                           l197:	
  2336  00A2                     	goto	l2369
  2337  00A2  28A4               	
  2338                           l195:	
  2339  00A3                     	goto	l2369
  2340  00A3  28A4               	
  2341                           l193:	
  2342  00A4                     	line	283
  2343                           	
  2344                           l2369:	
  2345  00A4                     ;Main.c: 283:     SendTelegram(ThisTelegram);
  2346                           	movlw	(SendTelegram@MyTelegram)&0ffh
  2347  00A4  3022               	movwf	fsr0
  2348  00A5  0084               	movlw	low(Handle_Telegram@ThisTelegram)
  2349  00A6  3039               	movwf	(??_Handle_Telegram+0)+0
  2350  00A7  00CE               	movf	fsr0,w
  2351  00A8  0804               	movwf	((??_Handle_Telegram+0)+0+1)
  2352  00A9  00CF               	movlw	21
  2353  00AA  3015               	movwf	((??_Handle_Telegram+0)+0+2)
  2354  00AB  00D0               u1490:
  2355  00AC                     	movf	(??_Handle_Telegram+0)+0,w
  2356  00AC  084E               	movwf	fsr0
  2357  00AD  0084               	bcf	status, 7	;select IRP bank0
  2358  00AE  1383               	
  2359                           	movf	indf,w
  2360  00AF  0800               	movwf	((??_Handle_Telegram+0)+0+3)
  2361  00B0  00D1               	incf	(??_Handle_Telegram+0)+0,f
  2362  00B1  0ACE               	movf	((??_Handle_Telegram+0)+0+1),w
  2363  00B2  084F               	movwf	fsr0
  2364  00B3  0084               	
  2365                           	movf	((??_Handle_Telegram+0)+0+3),w
  2366  00B4  0851               	movwf	indf
  2367  00B5  0080               	incf	((??_Handle_Telegram+0)+0+1),f
  2368  00B6  0ACF               	decfsz	((??_Handle_Telegram+0)+0+2),f
  2369  00B7  0BD0               	goto	u1490
  2370  00B8  28AC               	
  2371                           	fcall	_SendTelegram
  2372  00B9  118A  2710  118A   	line	285
  2373                           	
  2374                           l2371:	
  2375  00BC                     ;Main.c: 285:     if (error == 0)
  2376                           	bcf	status, 5	;RP0=0, select bank0
  2377  00BC  1283               	bcf	status, 6	;RP1=0, select bank0
  2378  00BD  1303               	movf	((Handle_Telegram@error)),w
  2379  00BE  0852               	btfss	status,2
  2380  00BF  1D03               	goto	u1501
  2381  00C0  28C2               	goto	u1500
  2382  00C1  28C3               u1501:
  2383  00C2                     	goto	l221
  2384  00C2  2A2E               u1500:
  2385  00C3                     	line	287
  2386                           	
  2387                           l2373:	
  2388  00C3                     ;Main.c: 286:     {;Main.c: 287:         if (state == On && (ThisTelegram.Command[1] !='
                                 0' || ThisTelegram.Command[2] !='0' || ThisTelegram.Command[3] !='0'))
  2389                           		decf	((Handle_Telegram@state)),w
  2390  00C3  0353               	btfss	status,2
  2391  00C4  1D03               	goto	u1511
  2392  00C5  28C7               	goto	u1510
  2393  00C6  28C8               u1511:
  2394  00C7                     	goto	l2435
  2395  00C7  2A10               u1510:
  2396  00C8                     	
  2397                           l2375:	
  2398  00C8                     		movlw	48
  2399  00C8  3030               	xorwf	(0+(Handle_Telegram@ThisTelegram)+04h),w
  2400  00C9  063D               	btfss	status,2
  2401  00CA  1D03               	goto	u1521
  2402  00CB  28CD               	goto	u1520
  2403  00CC  28CE               u1521:
  2404  00CD                     	goto	l2407
  2405  00CD  29A7               u1520:
  2406  00CE                     	
  2407                           l2377:	
  2408  00CE                     		movlw	48
  2409  00CE  3030               	xorwf	(0+(Handle_Telegram@ThisTelegram)+05h),w
  2410  00CF  063E               	btfss	status,2
  2411  00D0  1D03               	goto	u1531
  2412  00D1  28D3               	goto	u1530
  2413  00D2  28D4               u1531:
  2414  00D3                     	goto	l2407
  2415  00D3  29A7               u1530:
  2416  00D4                     	
  2417                           l2379:	
  2418  00D4                     		movlw	48
  2419  00D4  3030               	xorwf	(0+(Handle_Telegram@ThisTelegram)+06h),w
  2420  00D5  063F               	btfsc	status,2
  2421  00D6  1903               	goto	u1541
  2422  00D7  28D9               	goto	u1540
  2423  00D8  28DA               u1541:
  2424  00D9                     	goto	l2435
  2425  00D9  2A10               u1540:
  2426  00DA                     	goto	l2407
  2427  00DA  29A7               	
  2428                           l203:	
  2429  00DB                     	line	289
  2430                           ;Main.c: 288:         {;Main.c: 289:             switch (ThisTelegram.Address)
  2431                           	goto	l2407
  2432  00DB  29A7               	line	291
  2433                           ;Main.c: 290:             {;Main.c: 291:                 case '1':
  2434                           	
  2435                           l205:	
  2436  00DC                     	line	292
  2437                           	
  2438                           l2381:	
  2439  00DC                     ;Main.c: 292:                     Set_Relay(Relay1, state);
  2440                           	movf	(Handle_Telegram@state),w
  2441  00DC  0853               	movwf	(??_Handle_Telegram+0)+0
  2442  00DD  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2443  00DE  084E               	movwf	(Set_Relay@State)
  2444  00DF  00A0               	movlw	low(0)
  2445  00E0  3000               	fcall	_Set_Relay
  2446  00E1  118A  255F  118A   	line	293
  2447                           	
  2448                           l2383:	
  2449  00E4                     ;Main.c: 293:                     StopRelay1OnTime = 1;
  2450                           	bcf	status, 5	;RP0=0, select bank0
  2451  00E4  1283               	bcf	status, 6	;RP1=0, select bank0
  2452  00E5  1303               	clrf	(_StopRelay1OnTime)
  2453  00E6  01EB               	incf	(_StopRelay1OnTime),f
  2454  00E7  0AEB               	line	294
  2455                           ;Main.c: 294:                     SetStopTime(Relay1StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2456                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2457  00E8  083D               	addlw	0D0h
  2458  00E9  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2459  00EA  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2460  00EB  084E               	movwf	(SetStopTime@Time10sec)
  2461  00EC  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2462  00ED  083E               	addlw	0D0h
  2463  00EE  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2464  00EF  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2465  00F0  084F               	movwf	(SetStopTime@Time1sec)
  2466  00F1  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2467  00F2  083F               	addlw	0D0h
  2468  00F3  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2469  00F4  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2470  00F5  0850               	movwf	(SetStopTime@Time100ms)
  2471  00F6  00A2               	movlw	(low(_Relay1StopTime|((0x0)<<8)))&0ffh
  2472  00F7  306C               	fcall	_SetStopTime
  2473  00F8  118A  25DF  118A   	line	295
  2474                           ;Main.c: 295:                     break;
  2475                           	goto	l221
  2476  00FB  2A2E               	line	297
  2477                           ;Main.c: 297:                 case '2':
  2478                           	
  2479                           l207:	
  2480  00FC                     	line	298
  2481                           	
  2482                           l2385:	
  2483  00FC                     ;Main.c: 298:                     Set_Relay(Relay2, state);
  2484                           	bcf	status, 5	;RP0=0, select bank0
  2485  00FC  1283               	bcf	status, 6	;RP1=0, select bank0
  2486  00FD  1303               	movf	(Handle_Telegram@state),w
  2487  00FE  0853               	movwf	(??_Handle_Telegram+0)+0
  2488  00FF  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2489  0100  084E               	movwf	(Set_Relay@State)
  2490  0101  00A0               	movlw	low(01h)
  2491  0102  3001               	fcall	_Set_Relay
  2492  0103  118A  255F  118A   	line	299
  2493                           	
  2494                           l2387:	
  2495  0106                     ;Main.c: 299:                     StopRelay2OnTime = 1;
  2496                           	bcf	status, 5	;RP0=0, select bank0
  2497  0106  1283               	bcf	status, 6	;RP1=0, select bank0
  2498  0107  1303               	clrf	(_StopRelay2OnTime)
  2499  0108  01EA               	incf	(_StopRelay2OnTime),f
  2500  0109  0AEA               	line	300
  2501                           ;Main.c: 300:                     SetStopTime(Relay2StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2502                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2503  010A  083D               	addlw	0D0h
  2504  010B  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2505  010C  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2506  010D  084E               	movwf	(SetStopTime@Time10sec)
  2507  010E  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2508  010F  083E               	addlw	0D0h
  2509  0110  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2510  0111  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2511  0112  084F               	movwf	(SetStopTime@Time1sec)
  2512  0113  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2513  0114  083F               	addlw	0D0h
  2514  0115  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2515  0116  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2516  0117  0850               	movwf	(SetStopTime@Time100ms)
  2517  0118  00A2               	movlw	(low(_Relay2StopTime|((0x0)<<8)))&0ffh
  2518  0119  30EB               	fcall	_SetStopTime
  2519  011A  118A  25DF  118A   	line	301
  2520                           ;Main.c: 301:                     break;
  2521                           	goto	l221
  2522  011D  2A2E               	line	303
  2523                           ;Main.c: 303:                 case '3':
  2524                           	
  2525                           l208:	
  2526  011E                     	line	304
  2527                           	
  2528                           l2389:	
  2529  011E                     ;Main.c: 304:                     Set_Relay(Relay3, state);
  2530                           	bcf	status, 5	;RP0=0, select bank0
  2531  011E  1283               	bcf	status, 6	;RP1=0, select bank0
  2532  011F  1303               	movf	(Handle_Telegram@state),w
  2533  0120  0853               	movwf	(??_Handle_Telegram+0)+0
  2534  0121  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2535  0122  084E               	movwf	(Set_Relay@State)
  2536  0123  00A0               	movlw	low(02h)
  2537  0124  3002               	fcall	_Set_Relay
  2538  0125  118A  255F  118A   	line	305
  2539                           	
  2540                           l2391:	
  2541  0128                     ;Main.c: 305:                     StopRelay3OnTime = 1;
  2542                           	bcf	status, 5	;RP0=0, select bank0
  2543  0128  1283               	bcf	status, 6	;RP1=0, select bank0
  2544  0129  1303               	clrf	(_StopRelay3OnTime)
  2545  012A  01E9               	incf	(_StopRelay3OnTime),f
  2546  012B  0AE9               	line	306
  2547                           ;Main.c: 306:                     SetStopTime(Relay3StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2548                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2549  012C  083D               	addlw	0D0h
  2550  012D  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2551  012E  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2552  012F  084E               	movwf	(SetStopTime@Time10sec)
  2553  0130  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2554  0131  083E               	addlw	0D0h
  2555  0132  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2556  0133  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2557  0134  084F               	movwf	(SetStopTime@Time1sec)
  2558  0135  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2559  0136  083F               	addlw	0D0h
  2560  0137  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2561  0138  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2562  0139  0850               	movwf	(SetStopTime@Time100ms)
  2563  013A  00A2               	movlw	(low(_Relay3StopTime|((0x0)<<8)))&0ffh
  2564  013B  30E8               	fcall	_SetStopTime
  2565  013C  118A  25DF  118A   	line	307
  2566                           ;Main.c: 307:                     break;
  2567                           	goto	l221
  2568  013F  2A2E               	line	309
  2569                           ;Main.c: 309:                 case '4':
  2570                           	
  2571                           l209:	
  2572  0140                     	line	310
  2573                           	
  2574                           l2393:	
  2575  0140                     ;Main.c: 310:                     Set_Relay(Relay4, state);
  2576                           	bcf	status, 5	;RP0=0, select bank0
  2577  0140  1283               	bcf	status, 6	;RP1=0, select bank0
  2578  0141  1303               	movf	(Handle_Telegram@state),w
  2579  0142  0853               	movwf	(??_Handle_Telegram+0)+0
  2580  0143  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2581  0144  084E               	movwf	(Set_Relay@State)
  2582  0145  00A0               	movlw	low(03h)
  2583  0146  3003               	fcall	_Set_Relay
  2584  0147  118A  255F  118A   	line	311
  2585                           	
  2586                           l2395:	
  2587  014A                     ;Main.c: 311:                     StopRelay4OnTime = 1;
  2588                           	bcf	status, 5	;RP0=0, select bank0
  2589  014A  1283               	bcf	status, 6	;RP1=0, select bank0
  2590  014B  1303               	clrf	(_StopRelay4OnTime)
  2591  014C  01E8               	incf	(_StopRelay4OnTime),f
  2592  014D  0AE8               	line	312
  2593                           ;Main.c: 312:                     SetStopTime(Relay4StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2594                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2595  014E  083D               	addlw	0D0h
  2596  014F  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2597  0150  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2598  0151  084E               	movwf	(SetStopTime@Time10sec)
  2599  0152  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2600  0153  083E               	addlw	0D0h
  2601  0154  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2602  0155  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2603  0156  084F               	movwf	(SetStopTime@Time1sec)
  2604  0157  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2605  0158  083F               	addlw	0D0h
  2606  0159  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2607  015A  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2608  015B  0850               	movwf	(SetStopTime@Time100ms)
  2609  015C  00A2               	movlw	(low(_Relay4StopTime|((0x0)<<8)))&0ffh
  2610  015D  30E5               	fcall	_SetStopTime
  2611  015E  118A  25DF  118A   	line	313
  2612                           ;Main.c: 313:                     break;
  2613                           	goto	l221
  2614  0161  2A2E               	line	315
  2615                           ;Main.c: 315:                 case '5':
  2616                           	
  2617                           l210:	
  2618  0162                     	line	316
  2619                           	
  2620                           l2397:	
  2621  0162                     ;Main.c: 316:                     Set_Relay(Relay5, state);
  2622                           	bcf	status, 5	;RP0=0, select bank0
  2623  0162  1283               	bcf	status, 6	;RP1=0, select bank0
  2624  0163  1303               	movf	(Handle_Telegram@state),w
  2625  0164  0853               	movwf	(??_Handle_Telegram+0)+0
  2626  0165  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2627  0166  084E               	movwf	(Set_Relay@State)
  2628  0167  00A0               	movlw	low(04h)
  2629  0168  3004               	fcall	_Set_Relay
  2630  0169  118A  255F  118A   	line	317
  2631                           	
  2632                           l2399:	
  2633  016C                     ;Main.c: 317:                     StopRelay5OnTime = 1;
  2634                           	bcf	status, 5	;RP0=0, select bank0
  2635  016C  1283               	bcf	status, 6	;RP1=0, select bank0
  2636  016D  1303               	clrf	(_StopRelay5OnTime)
  2637  016E  01E7               	incf	(_StopRelay5OnTime),f
  2638  016F  0AE7               	line	318
  2639                           ;Main.c: 318:                     SetStopTime(Relay5StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2640                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2641  0170  083D               	addlw	0D0h
  2642  0171  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2643  0172  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2644  0173  084E               	movwf	(SetStopTime@Time10sec)
  2645  0174  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2646  0175  083E               	addlw	0D0h
  2647  0176  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2648  0177  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2649  0178  084F               	movwf	(SetStopTime@Time1sec)
  2650  0179  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2651  017A  083F               	addlw	0D0h
  2652  017B  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2653  017C  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2654  017D  0850               	movwf	(SetStopTime@Time100ms)
  2655  017E  00A2               	movlw	(low(_Relay5StopTime|((0x0)<<8)))&0ffh
  2656  017F  30E2               	fcall	_SetStopTime
  2657  0180  118A  25DF  118A   	line	319
  2658                           ;Main.c: 319:                     break;
  2659                           	goto	l221
  2660  0183  2A2E               	line	321
  2661                           ;Main.c: 321:                 case '6':
  2662                           	
  2663                           l211:	
  2664  0184                     	line	322
  2665                           	
  2666                           l2401:	
  2667  0184                     ;Main.c: 322:                     Set_Relay(Relay6, state);
  2668                           	bcf	status, 5	;RP0=0, select bank0
  2669  0184  1283               	bcf	status, 6	;RP1=0, select bank0
  2670  0185  1303               	movf	(Handle_Telegram@state),w
  2671  0186  0853               	movwf	(??_Handle_Telegram+0)+0
  2672  0187  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2673  0188  084E               	movwf	(Set_Relay@State)
  2674  0189  00A0               	movlw	low(05h)
  2675  018A  3005               	fcall	_Set_Relay
  2676  018B  118A  255F  118A   	line	323
  2677                           	
  2678                           l2403:	
  2679  018E                     ;Main.c: 323:                     StopRelay6OnTime = 1;
  2680                           	bcf	status, 5	;RP0=0, select bank0
  2681  018E  1283               	bcf	status, 6	;RP1=0, select bank0
  2682  018F  1303               	clrf	(_StopRelay6OnTime)
  2683  0190  01E6               	incf	(_StopRelay6OnTime),f
  2684  0191  0AE6               	line	324
  2685                           ;Main.c: 324:                     SetStopTime(Relay6StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2686                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2687  0192  083D               	addlw	0D0h
  2688  0193  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2689  0194  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2690  0195  084E               	movwf	(SetStopTime@Time10sec)
  2691  0196  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2692  0197  083E               	addlw	0D0h
  2693  0198  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2694  0199  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2695  019A  084F               	movwf	(SetStopTime@Time1sec)
  2696  019B  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2697  019C  083F               	addlw	0D0h
  2698  019D  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2699  019E  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2700  019F  0850               	movwf	(SetStopTime@Time100ms)
  2701  01A0  00A2               	movlw	(low(_Relay6StopTime|((0x0)<<8)))&0ffh
  2702  01A1  30DF               	fcall	_SetStopTime
  2703  01A2  118A  25DF  118A   	line	325
  2704                           ;Main.c: 325:                     break;
  2705                           	goto	l221
  2706  01A5  2A2E               	line	326
  2707                           	
  2708                           l2405:	
  2709  01A6                     ;Main.c: 326:             }
  2710                           	goto	l221
  2711  01A6  2A2E               	
  2712                           l204:	
  2713  01A7                     	
  2714                           l2407:	
  2715  01A7                     	bcf	status, 5	;RP0=0, select bank0
  2716  01A7  1283               	bcf	status, 6	;RP1=0, select bank0
  2717  01A8  1303               	movf	0+(Handle_Telegram@ThisTelegram)+01h,w
  2718  01A9  083A               	movwf	(??_Handle_Telegram+0)+0
  2719  01AA  00CE               	clrf	(??_Handle_Telegram+0)+0+1
  2720  01AB  01CF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2721                           ; Switch size 1, requested type "space"
  2722                           ; Number of cases is 1, Range of values is 0 to 0
  2723                           ; switch strategies available:
  2724                           ; Name         Instructions Cycles
  2725                           ; simple_byte            4     3 (average)
  2726                           ; direct_byte            9     7 (fixed)
  2727                           ; jumptable            260     6 (fixed)
  2728                           ;	Chosen strategy is simple_byte
  2729                           
  2730                           	movf 1+(??_Handle_Telegram+0)+0,w
  2731  01AC  084F               	opt asmopt_push
  2732                           	opt asmopt_off
  2733                           	xorlw	0^0	; case 0
  2734  01AD  3A00               	skipnz
  2735  01AE  1903               	goto	l2893
  2736  01AF  29B1               	goto	l221
  2737  01B0  2A2E               	opt asmopt_pop
  2738                           	
  2739                           l2893:	
  2740  01B1                     ; Switch size 1, requested type "space"
  2741                           ; Number of cases is 6, Range of values is 49 to 54
  2742                           ; switch strategies available:
  2743                           ; Name         Instructions Cycles
  2744                           ; simple_byte           19    10 (average)
  2745                           ; direct_byte           22    10 (fixed)
  2746                           ; jumptable            263     9 (fixed)
  2747                           ;	Chosen strategy is simple_byte
  2748                           
  2749                           	movf 0+(??_Handle_Telegram+0)+0,w
  2750  01B1  084E               	opt asmopt_push
  2751                           	opt asmopt_off
  2752                           	xorlw	49^0	; case 49
  2753  01B2  3A31               	skipnz
  2754  01B3  1903               	goto	l2381
  2755  01B4  28DC               	xorlw	50^49	; case 50
  2756  01B5  3A03               	skipnz
  2757  01B6  1903               	goto	l2385
  2758  01B7  28FC               	xorlw	51^50	; case 51
  2759  01B8  3A01               	skipnz
  2760  01B9  1903               	goto	l2389
  2761  01BA  291E               	xorlw	52^51	; case 52
  2762  01BB  3A07               	skipnz
  2763  01BC  1903               	goto	l2393
  2764  01BD  2940               	xorlw	53^52	; case 53
  2765  01BE  3A01               	skipnz
  2766  01BF  1903               	goto	l2397
  2767  01C0  2962               	xorlw	54^53	; case 54
  2768  01C1  3A03               	skipnz
  2769  01C2  1903               	goto	l2401
  2770  01C3  2984               	goto	l221
  2771  01C4  2A2E               	opt asmopt_pop
  2772                           
  2773                           	
  2774                           l206:	
  2775  01C5                     	line	327
  2776                           ;Main.c: 327:         }
  2777                           	goto	l221
  2778  01C5  2A2E               	line	328
  2779                           ;Main.c: 328:         else
  2780                           	
  2781                           l201:	
  2782  01C6                     	line	330
  2783                           ;Main.c: 329:         {;Main.c: 330:             switch (ThisTelegram.Address)
  2784                           	goto	l2435
  2785  01C6  2A10               	line	332
  2786                           ;Main.c: 331:             {;Main.c: 332:                 case '1':
  2787                           	
  2788                           l214:	
  2789  01C7                     	line	333
  2790                           	
  2791                           l2409:	
  2792  01C7                     ;Main.c: 333:                     Set_Relay(Relay1, state);
  2793                           	movf	(Handle_Telegram@state),w
  2794  01C7  0853               	movwf	(??_Handle_Telegram+0)+0
  2795  01C8  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2796  01C9  084E               	movwf	(Set_Relay@State)
  2797  01CA  00A0               	movlw	low(0)
  2798  01CB  3000               	fcall	_Set_Relay
  2799  01CC  118A  255F  118A   	line	334
  2800                           	
  2801                           l2411:	
  2802  01CF                     ;Main.c: 334:                     StopRelay1OnTime = 0;
  2803                           	bcf	status, 5	;RP0=0, select bank0
  2804  01CF  1283               	bcf	status, 6	;RP1=0, select bank0
  2805  01D0  1303               	clrf	(_StopRelay1OnTime)
  2806  01D1  01EB               	line	336
  2807                           ;Main.c: 336:                     break;
  2808                           	goto	l221
  2809  01D2  2A2E               	line	338
  2810                           ;Main.c: 338:                 case '2':
  2811                           	
  2812                           l216:	
  2813  01D3                     	line	339
  2814                           	
  2815                           l2413:	
  2816  01D3                     ;Main.c: 339:                     Set_Relay(Relay2, state);
  2817                           	movf	(Handle_Telegram@state),w
  2818  01D3  0853               	movwf	(??_Handle_Telegram+0)+0
  2819  01D4  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2820  01D5  084E               	movwf	(Set_Relay@State)
  2821  01D6  00A0               	movlw	low(01h)
  2822  01D7  3001               	fcall	_Set_Relay
  2823  01D8  118A  255F  118A   	line	340
  2824                           	
  2825                           l2415:	
  2826  01DB                     ;Main.c: 340:                     StopRelay2OnTime = 0;
  2827                           	bcf	status, 5	;RP0=0, select bank0
  2828  01DB  1283               	bcf	status, 6	;RP1=0, select bank0
  2829  01DC  1303               	clrf	(_StopRelay2OnTime)
  2830  01DD  01EA               	line	341
  2831                           ;Main.c: 341:                     break;
  2832                           	goto	l221
  2833  01DE  2A2E               	line	343
  2834                           ;Main.c: 343:                 case '3':
  2835                           	
  2836                           l217:	
  2837  01DF                     	line	344
  2838                           	
  2839                           l2417:	
  2840  01DF                     ;Main.c: 344:                     Set_Relay(Relay3, state);
  2841                           	movf	(Handle_Telegram@state),w
  2842  01DF  0853               	movwf	(??_Handle_Telegram+0)+0
  2843  01E0  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2844  01E1  084E               	movwf	(Set_Relay@State)
  2845  01E2  00A0               	movlw	low(02h)
  2846  01E3  3002               	fcall	_Set_Relay
  2847  01E4  118A  255F  118A   	line	345
  2848                           	
  2849                           l2419:	
  2850  01E7                     ;Main.c: 345:                     StopRelay3OnTime = 0;
  2851                           	bcf	status, 5	;RP0=0, select bank0
  2852  01E7  1283               	bcf	status, 6	;RP1=0, select bank0
  2853  01E8  1303               	clrf	(_StopRelay3OnTime)
  2854  01E9  01E9               	line	346
  2855                           ;Main.c: 346:                     break;
  2856                           	goto	l221
  2857  01EA  2A2E               	line	348
  2858                           ;Main.c: 348:                 case '4':
  2859                           	
  2860                           l218:	
  2861  01EB                     	line	349
  2862                           	
  2863                           l2421:	
  2864  01EB                     ;Main.c: 349:                     Set_Relay(Relay4, state);
  2865                           	movf	(Handle_Telegram@state),w
  2866  01EB  0853               	movwf	(??_Handle_Telegram+0)+0
  2867  01EC  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2868  01ED  084E               	movwf	(Set_Relay@State)
  2869  01EE  00A0               	movlw	low(03h)
  2870  01EF  3003               	fcall	_Set_Relay
  2871  01F0  118A  255F  118A   	line	350
  2872                           	
  2873                           l2423:	
  2874  01F3                     ;Main.c: 350:                     StopRelay4OnTime = 0;
  2875                           	bcf	status, 5	;RP0=0, select bank0
  2876  01F3  1283               	bcf	status, 6	;RP1=0, select bank0
  2877  01F4  1303               	clrf	(_StopRelay4OnTime)
  2878  01F5  01E8               	line	351
  2879                           ;Main.c: 351:                     break;
  2880                           	goto	l221
  2881  01F6  2A2E               	line	353
  2882                           ;Main.c: 353:                 case '5':
  2883                           	
  2884                           l219:	
  2885  01F7                     	line	354
  2886                           	
  2887                           l2425:	
  2888  01F7                     ;Main.c: 354:                     Set_Relay(Relay5, state);
  2889                           	movf	(Handle_Telegram@state),w
  2890  01F7  0853               	movwf	(??_Handle_Telegram+0)+0
  2891  01F8  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2892  01F9  084E               	movwf	(Set_Relay@State)
  2893  01FA  00A0               	movlw	low(04h)
  2894  01FB  3004               	fcall	_Set_Relay
  2895  01FC  118A  255F  118A   	line	355
  2896                           	
  2897                           l2427:	
  2898  01FF                     ;Main.c: 355:                     StopRelay5OnTime = 0;
  2899                           	bcf	status, 5	;RP0=0, select bank0
  2900  01FF  1283               	bcf	status, 6	;RP1=0, select bank0
  2901  0200  1303               	clrf	(_StopRelay5OnTime)
  2902  0201  01E7               	line	356
  2903                           ;Main.c: 356:                     break;
  2904                           	goto	l221
  2905  0202  2A2E               	line	358
  2906                           ;Main.c: 358:                 case '6':
  2907                           	
  2908                           l220:	
  2909  0203                     	line	359
  2910                           	
  2911                           l2429:	
  2912  0203                     ;Main.c: 359:                     Set_Relay(Relay6, state);
  2913                           	movf	(Handle_Telegram@state),w
  2914  0203  0853               	movwf	(??_Handle_Telegram+0)+0
  2915  0204  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2916  0205  084E               	movwf	(Set_Relay@State)
  2917  0206  00A0               	movlw	low(05h)
  2918  0207  3005               	fcall	_Set_Relay
  2919  0208  118A  255F  118A   	line	360
  2920                           	
  2921                           l2431:	
  2922  020B                     ;Main.c: 360:                     StopRelay6OnTime = 0;
  2923                           	bcf	status, 5	;RP0=0, select bank0
  2924  020B  1283               	bcf	status, 6	;RP1=0, select bank0
  2925  020C  1303               	clrf	(_StopRelay6OnTime)
  2926  020D  01E6               	line	361
  2927                           ;Main.c: 361:                     break;
  2928                           	goto	l221
  2929  020E  2A2E               	line	363
  2930                           	
  2931                           l2433:	
  2932  020F                     ;Main.c: 363:             }
  2933                           	goto	l221
  2934  020F  2A2E               	
  2935                           l213:	
  2936  0210                     	
  2937                           l2435:	
  2938  0210                     	movf	0+(Handle_Telegram@ThisTelegram)+01h,w
  2939  0210  083A               	movwf	(??_Handle_Telegram+0)+0
  2940  0211  00CE               	clrf	(??_Handle_Telegram+0)+0+1
  2941  0212  01CF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2942                           ; Switch size 1, requested type "space"
  2943                           ; Number of cases is 1, Range of values is 0 to 0
  2944                           ; switch strategies available:
  2945                           ; Name         Instructions Cycles
  2946                           ; simple_byte            4     3 (average)
  2947                           ; direct_byte            9     7 (fixed)
  2948                           ; jumptable            260     6 (fixed)
  2949                           ;	Chosen strategy is simple_byte
  2950                           
  2951                           	movf 1+(??_Handle_Telegram+0)+0,w
  2952  0213  084F               	opt asmopt_push
  2953                           	opt asmopt_off
  2954                           	xorlw	0^0	; case 0
  2955  0214  3A00               	skipnz
  2956  0215  1903               	goto	l2895
  2957  0216  2A18               	goto	l221
  2958  0217  2A2E               	opt asmopt_pop
  2959                           	
  2960                           l2895:	
  2961  0218                     ; Switch size 1, requested type "space"
  2962                           ; Number of cases is 6, Range of values is 49 to 54
  2963                           ; switch strategies available:
  2964                           ; Name         Instructions Cycles
  2965                           ; simple_byte           19    10 (average)
  2966                           ; direct_byte           22    10 (fixed)
  2967                           ; jumptable            263     9 (fixed)
  2968                           ;	Chosen strategy is simple_byte
  2969                           
  2970                           	movf 0+(??_Handle_Telegram+0)+0,w
  2971  0218  084E               	opt asmopt_push
  2972                           	opt asmopt_off
  2973                           	xorlw	49^0	; case 49
  2974  0219  3A31               	skipnz
  2975  021A  1903               	goto	l2409
  2976  021B  29C7               	xorlw	50^49	; case 50
  2977  021C  3A03               	skipnz
  2978  021D  1903               	goto	l2413
  2979  021E  29D3               	xorlw	51^50	; case 51
  2980  021F  3A01               	skipnz
  2981  0220  1903               	goto	l2417
  2982  0221  29DF               	xorlw	52^51	; case 52
  2983  0222  3A07               	skipnz
  2984  0223  1903               	goto	l2421
  2985  0224  29EB               	xorlw	53^52	; case 53
  2986  0225  3A01               	skipnz
  2987  0226  1903               	goto	l2425
  2988  0227  29F7               	xorlw	54^53	; case 54
  2989  0228  3A03               	skipnz
  2990  0229  1903               	goto	l2429
  2991  022A  2A03               	goto	l221
  2992  022B  2A2E               	opt asmopt_pop
  2993                           
  2994                           	
  2995                           l215:	
  2996  022C                     	goto	l221
  2997  022C  2A2E               	line	365
  2998                           ;Main.c: 365:         }
  2999                           	
  3000                           l212:	
  3001  022D                     	goto	l221
  3002  022D  2A2E               	line	366
  3003                           ;Main.c: 366:     }
  3004                           	
  3005                           l200:	
  3006  022E                     	line	367
  3007                           	
  3008                           l221:	
  3009  022E                     	return
  3010  022E  0008               	opt stack 0
  3011                           GLOBAL	__end_of_Handle_Telegram
  3012                           	__end_of_Handle_Telegram:
  3013  022F                     	signat	_Handle_Telegram,4217
  3014                           	global	_SetStopTime
  3015                           
  3016 ;; *************** function _SetStopTime *****************
  3017 ;; Defined at:
  3018 ;;		line 187 in file "Main.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  RelayStopTim    1    wreg     PTR unsigned char 
  3021 ;;		 -> Relay6StopTime(3), Relay5StopTime(3), Relay4StopTime(3), Relay3StopTime(3), 
  3022 ;;		 -> Relay2StopTime(3), Relay1StopTime(3), 
  3023 ;;  Time10sec       1    0[BANK0 ] unsigned char 
  3024 ;;  Time1sec        1    1[BANK0 ] unsigned char 
  3025 ;;  Time100ms       1    2[BANK0 ] unsigned char 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  RelayStopTim    1    5[BANK0 ] PTR unsigned char 
  3028 ;;		 -> Relay6StopTime(3), Relay5StopTime(3), Relay4StopTime(3), Relay3StopTime(3), 
  3029 ;;		 -> Relay2StopTime(3), Relay1StopTime(3), 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3039 ;;      Params:         0       3       0       0
  3040 ;;      Locals:         0       1       0       0
  3041 ;;      Temps:          0       2       0       0
  3042 ;;      Totals:         0       6       0       0
  3043 ;;Total ram usage:        6 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    3
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_Handle_Telegram
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3053                           	line	187
  3054                           global __ptext8
  3055                           __ptext8:	;psect for function _SetStopTime
  3056  05DF                     psect	text8
  3057                           	file	"Main.c"
  3058                           	line	187
  3059                           	global	__size_of_SetStopTime
  3060                           	__size_of_SetStopTime	equ	__end_of_SetStopTime-_SetStopTime
  3061  0075                     	
  3062                           _SetStopTime:	
  3063  05DF                     ;incstack = 0
  3064                           	opt	stack 3
  3065                           ; Regs used in _SetStopTime: [wreg-fsr0h+status,2+status,0]
  3066                           ;SetStopTime@RelayStopTime stored from wreg
  3067                           	bcf	status, 5	;RP0=0, select bank0
  3068  05DF  1283               	bcf	status, 6	;RP1=0, select bank0
  3069  05E0  1303               	movwf	(SetStopTime@RelayStopTime)
  3070  05E1  00A5               	line	189
  3071                           	
  3072                           l2041:	
  3073  05E2                     ;Main.c: 187: void SetStopTime(unsigned char *RelayStopTime, unsigned char Time10sec, un
                                 signed char Time1sec, unsigned char Time100ms);Main.c: 188: {;Main.c: 189:     if (Count
                                 er_100ms + Time100ms >= 10)
  3074                           	movf	(SetStopTime@Time100ms),w
  3075  05E2  0822               	addwf	(_Counter_100ms),w
  3076  05E3  075C               	movwf	(??_SetStopTime+0)+0
  3077  05E4  00A3               	movf	(_Counter_100ms+1),w
  3078  05E5  085D               	skipnc
  3079  05E6  1803               	incf	(_Counter_100ms+1),w
  3080  05E7  0A5D               	movwf	((??_SetStopTime+0)+0)+1
  3081  05E8  00A4               	movlw	0
  3082  05E9  3000               	subwf	1+(??_SetStopTime+0)+0,w
  3083  05EA  0224               	movlw	0Ah
  3084  05EB  300A               	skipnz
  3085  05EC  1903               	subwf	0+(??_SetStopTime+0)+0,w
  3086  05ED  0223               	skipc
  3087  05EE  1C03               	goto	u1021
  3088  05EF  2DF1               	goto	u1020
  3089  05F0  2DF2               u1021:
  3090  05F1                     	goto	l2047
  3091  05F1  2E02               u1020:
  3092  05F2                     	line	191
  3093                           	
  3094                           l2043:	
  3095  05F2                     ;Main.c: 190:     {;Main.c: 191:         *(RelayStopTime + 2) = Counter_100ms + Time100m
                                 s - 10;
  3096                           	movf	(_Counter_100ms),w
  3097  05F2  085C               	addwf	(SetStopTime@Time100ms),w
  3098  05F3  0722               	addlw	0F6h
  3099  05F4  3EF6               	movwf	(??_SetStopTime+0)+0
  3100  05F5  00A3               	movf	(SetStopTime@RelayStopTime),w
  3101  05F6  0825               	addlw	02h
  3102  05F7  3E02               	movwf	fsr0
  3103  05F8  0084               	movf	(??_SetStopTime+0)+0,w
  3104  05F9  0823               	bcf	status, 7	;select IRP bank0
  3105  05FA  1383               	movwf	indf
  3106  05FB  0080               	line	193
  3107                           	
  3108                           l2045:	
  3109  05FC                     ;Main.c: 193:         Time1sec = Time1sec + 1;
  3110                           	movf	(SetStopTime@Time1sec),w
  3111  05FC  0821               	addlw	01h
  3112  05FD  3E01               	movwf	(??_SetStopTime+0)+0
  3113  05FE  00A3               	movf	(??_SetStopTime+0)+0,w
  3114  05FF  0823               	movwf	(SetStopTime@Time1sec)
  3115  0600  00A1               	line	194
  3116                           ;Main.c: 194:     }
  3117                           	goto	l2049
  3118  0601  2E0C               	line	195
  3119                           ;Main.c: 195:     else
  3120                           	
  3121                           l183:	
  3122  0602                     	line	197
  3123                           	
  3124                           l2047:	
  3125  0602                     ;Main.c: 196:     {;Main.c: 197:         *(RelayStopTime + 2) = Counter_100ms + Time100m
                                 s;
  3126                           	movf	(_Counter_100ms),w
  3127  0602  085C               	addwf	(SetStopTime@Time100ms),w
  3128  0603  0722               	movwf	(??_SetStopTime+0)+0
  3129  0604  00A3               	movf	(SetStopTime@RelayStopTime),w
  3130  0605  0825               	addlw	02h
  3131  0606  3E02               	movwf	fsr0
  3132  0607  0084               	movf	(??_SetStopTime+0)+0,w
  3133  0608  0823               	bcf	status, 7	;select IRP bank0
  3134  0609  1383               	movwf	indf
  3135  060A  0080               	goto	l2049
  3136  060B  2E0C               	line	198
  3137                           ;Main.c: 198:     }
  3138                           	
  3139                           l184:	
  3140  060C                     	line	200
  3141                           	
  3142                           l2049:	
  3143  060C                     ;Main.c: 200:     if (Counter_1sec + Time1sec >= 10)
  3144                           	movf	(SetStopTime@Time1sec),w
  3145  060C  0821               	addwf	(_Counter_1sec),w
  3146  060D  075A               	movwf	(??_SetStopTime+0)+0
  3147  060E  00A3               	movf	(_Counter_1sec+1),w
  3148  060F  085B               	skipnc
  3149  0610  1803               	incf	(_Counter_1sec+1),w
  3150  0611  0A5B               	movwf	((??_SetStopTime+0)+0)+1
  3151  0612  00A4               	movlw	0
  3152  0613  3000               	subwf	1+(??_SetStopTime+0)+0,w
  3153  0614  0224               	movlw	0Ah
  3154  0615  300A               	skipnz
  3155  0616  1903               	subwf	0+(??_SetStopTime+0)+0,w
  3156  0617  0223               	skipc
  3157  0618  1C03               	goto	u1031
  3158  0619  2E1B               	goto	u1030
  3159  061A  2E1C               u1031:
  3160  061B                     	goto	l2055
  3161  061B  2E2A               u1030:
  3162  061C                     	line	202
  3163                           	
  3164                           l2051:	
  3165  061C                     ;Main.c: 201:     {;Main.c: 202:         *(RelayStopTime + 1) = Counter_1sec + Time1sec 
                                 - 10;
  3166                           	movf	(_Counter_1sec),w
  3167  061C  085A               	addwf	(SetStopTime@Time1sec),w
  3168  061D  0721               	addlw	0F6h
  3169  061E  3EF6               	movwf	(??_SetStopTime+0)+0
  3170  061F  00A3               	incf	(SetStopTime@RelayStopTime),w
  3171  0620  0A25               	movwf	fsr0
  3172  0621  0084               	movf	(??_SetStopTime+0)+0,w
  3173  0622  0823               	movwf	indf
  3174  0623  0080               	line	204
  3175                           	
  3176                           l2053:	
  3177  0624                     ;Main.c: 204:         Time10sec = Time10sec + 1;
  3178                           	movf	(SetStopTime@Time10sec),w
  3179  0624  0820               	addlw	01h
  3180  0625  3E01               	movwf	(??_SetStopTime+0)+0
  3181  0626  00A3               	movf	(??_SetStopTime+0)+0,w
  3182  0627  0823               	movwf	(SetStopTime@Time10sec)
  3183  0628  00A0               	line	205
  3184                           ;Main.c: 205:     }
  3185                           	goto	l2057
  3186  0629  2E32               	line	206
  3187                           ;Main.c: 206:     else
  3188                           	
  3189                           l185:	
  3190  062A                     	line	208
  3191                           	
  3192                           l2055:	
  3193  062A                     ;Main.c: 207:     {;Main.c: 208:         *(RelayStopTime + 1) = Counter_1sec + Time1sec;
                                 
  3194                           	movf	(_Counter_1sec),w
  3195  062A  085A               	addwf	(SetStopTime@Time1sec),w
  3196  062B  0721               	movwf	(??_SetStopTime+0)+0
  3197  062C  00A3               	incf	(SetStopTime@RelayStopTime),w
  3198  062D  0A25               	movwf	fsr0
  3199  062E  0084               	movf	(??_SetStopTime+0)+0,w
  3200  062F  0823               	movwf	indf
  3201  0630  0080               	goto	l2057
  3202  0631  2E32               	line	209
  3203                           ;Main.c: 209:     }
  3204                           	
  3205                           l186:	
  3206  0632                     	line	211
  3207                           	
  3208                           l2057:	
  3209  0632                     ;Main.c: 211:     if (Counter_10sec + Time10sec >= 10)
  3210                           	movf	(SetStopTime@Time10sec),w
  3211  0632  0820               	addwf	(_Counter_10sec),w
  3212  0633  0758               	movwf	(??_SetStopTime+0)+0
  3213  0634  00A3               	movf	(_Counter_10sec+1),w
  3214  0635  0859               	skipnc
  3215  0636  1803               	incf	(_Counter_10sec+1),w
  3216  0637  0A59               	movwf	((??_SetStopTime+0)+0)+1
  3217  0638  00A4               	movlw	0
  3218  0639  3000               	subwf	1+(??_SetStopTime+0)+0,w
  3219  063A  0224               	movlw	0Ah
  3220  063B  300A               	skipnz
  3221  063C  1903               	subwf	0+(??_SetStopTime+0)+0,w
  3222  063D  0223               	skipc
  3223  063E  1C03               	goto	u1041
  3224  063F  2E41               	goto	u1040
  3225  0640  2E42               u1041:
  3226  0641                     	goto	l2061
  3227  0641  2E4B               u1040:
  3228  0642                     	line	213
  3229                           	
  3230                           l2059:	
  3231  0642                     ;Main.c: 212:     {;Main.c: 213:         *(RelayStopTime + 0) = Counter_10sec + Time10se
                                 c - 10;
  3232                           	movf	(_Counter_10sec),w
  3233  0642  0858               	addwf	(SetStopTime@Time10sec),w
  3234  0643  0720               	addlw	0F6h
  3235  0644  3EF6               	movwf	(??_SetStopTime+0)+0
  3236  0645  00A3               	movf	(SetStopTime@RelayStopTime),w
  3237  0646  0825               	movwf	fsr0
  3238  0647  0084               	movf	(??_SetStopTime+0)+0,w
  3239  0648  0823               	movwf	indf
  3240  0649  0080               	line	214
  3241                           ;Main.c: 214:     }
  3242                           	goto	l189
  3243  064A  2E53               	line	215
  3244                           ;Main.c: 215:     else
  3245                           	
  3246                           l187:	
  3247  064B                     	line	217
  3248                           	
  3249                           l2061:	
  3250  064B                     ;Main.c: 216:     {;Main.c: 217:         *(RelayStopTime + 0) = Counter_10sec + Time10se
                                 c;
  3251                           	movf	(_Counter_10sec),w
  3252  064B  0858               	addwf	(SetStopTime@Time10sec),w
  3253  064C  0720               	movwf	(??_SetStopTime+0)+0
  3254  064D  00A3               	movf	(SetStopTime@RelayStopTime),w
  3255  064E  0825               	movwf	fsr0
  3256  064F  0084               	movf	(??_SetStopTime+0)+0,w
  3257  0650  0823               	movwf	indf
  3258  0651  0080               	goto	l189
  3259  0652  2E53               	line	218
  3260                           ;Main.c: 218:     }
  3261                           	
  3262                           l188:	
  3263  0653                     	line	240
  3264                           	
  3265                           l189:	
  3266  0653                     	return
  3267  0653  0008               	opt stack 0
  3268                           GLOBAL	__end_of_SetStopTime
  3269                           	__end_of_SetStopTime:
  3270  0654                     	signat	_SetStopTime,16505
  3271                           	global	_SendTelegram
  3272                           
  3273 ;; *************** function _SendTelegram *****************
  3274 ;; Defined at:
  3275 ;;		line 56 in file "TelegramInterpreter.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  MyTelegram     21    2[BANK0 ] struct .
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  CommandCount    1   24[BANK0 ] unsigned char 
  3280 ;;  MacCounter      1    0        unsigned char 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      void 
  3283 ;; Registers used:
  3284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3290 ;;      Params:         0      21       0       0
  3291 ;;      Locals:         0       1       0       0
  3292 ;;      Temps:          0       1       0       0
  3293 ;;      Totals:         0      23       0       0
  3294 ;;Total ram usage:       23 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    4
  3297 ;; This function calls:
  3298 ;;		_AddByteToBuffer
  3299 ;; This function is called by:
  3300 ;;		_Handle_Telegram
  3301 ;;		_Say_Hello
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3305                           	file	"TelegramInterpreter.c"
  3306                           	line	56
  3307                           global __ptext9
  3308                           __ptext9:	;psect for function _SendTelegram
  3309  0710                     psect	text9
  3310                           	file	"TelegramInterpreter.c"
  3311                           	line	56
  3312                           	global	__size_of_SendTelegram
  3313                           	__size_of_SendTelegram	equ	__end_of_SendTelegram-_SendTelegram
  3314  0039                     	
  3315                           _SendTelegram:	
  3316  0710                     ;incstack = 0
  3317                           	opt	stack 2
  3318                           ; Regs used in _SendTelegram: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3319                           	line	63
  3320                           	
  3321                           l1963:	
  3322  0710                     ;TelegramInterpreter.c: 56: void SendTelegram(TelegramType MyTelegram);TelegramInterpret
                                 er.c: 57: {;TelegramInterpreter.c: 60:     unsigned char MacCounter;;TelegramInterpreter
                                 .c: 61:     unsigned char CommandCounter;;TelegramInterpreter.c: 63:     AddByteToBuffer
                                 (MyTelegram.Start);
  3323                           	bcf	status, 5	;RP0=0, select bank0
  3324  0710  1283               	bcf	status, 6	;RP1=0, select bank0
  3325  0711  1303               	movf	(SendTelegram@MyTelegram),w
  3326  0712  0822               	fcall	_AddByteToBuffer
  3327  0713  118A  27E3  118A   	line	65
  3328                           ;TelegramInterpreter.c: 65:     AddByteToBuffer(MyTelegram.Address);
  3329                           	bcf	status, 5	;RP0=0, select bank0
  3330  0716  1283               	bcf	status, 6	;RP1=0, select bank0
  3331  0717  1303               	movf	0+(SendTelegram@MyTelegram)+01h,w
  3332  0718  0823               	fcall	_AddByteToBuffer
  3333  0719  118A  27E3  118A   	line	66
  3334                           ;TelegramInterpreter.c: 66:     AddByteToBuffer(MyTelegram.Commandlength + 48);
  3335                           	bcf	status, 5	;RP0=0, select bank0
  3336  071C  1283               	bcf	status, 6	;RP1=0, select bank0
  3337  071D  1303               	movf	0+(SendTelegram@MyTelegram)+02h,w
  3338  071E  0824               	addlw	030h
  3339  071F  3E30               	fcall	_AddByteToBuffer
  3340  0720  118A  27E3  118A   	line	69
  3341                           	
  3342                           l1965:	
  3343  0723                     ;TelegramInterpreter.c: 69:     for (CommandCounter = 0; CommandCounter < MyTelegram.Com
                                 mandlength; CommandCounter ++)
  3344                           	bcf	status, 5	;RP0=0, select bank0
  3345  0723  1283               	bcf	status, 6	;RP1=0, select bank0
  3346  0724  1303               	clrf	(SendTelegram@CommandCounter)
  3347  0725  01B8               	goto	l1971
  3348  0726  2F37               	
  3349                           l484:	
  3350  0727                     	line	71
  3351                           	
  3352                           l1967:	
  3353  0727                     ;TelegramInterpreter.c: 70:     {;TelegramInterpreter.c: 71:         AddByteToBuffer(MyT
                                 elegram.Command[CommandCounter]);
  3354                           	movf	(SendTelegram@CommandCounter),w
  3355  0727  0838               	addlw	03h
  3356  0728  3E03               	addlw	low(SendTelegram@MyTelegram|((0x0)<<8))&0ffh
  3357  0729  3E22               	movwf	fsr0
  3358  072A  0084               	bcf	status, 7	;select IRP bank0
  3359  072B  1383               	movf	indf,w
  3360  072C  0800               	fcall	_AddByteToBuffer
  3361  072D  118A  27E3  118A   	line	72
  3362                           	
  3363                           l1969:	
  3364  0730                     ;TelegramInterpreter.c: 72:     }
  3365                           	movlw	low(01h)
  3366  0730  3001               	bcf	status, 5	;RP0=0, select bank0
  3367  0731  1283               	bcf	status, 6	;RP1=0, select bank0
  3368  0732  1303               	movwf	(??_SendTelegram+0)+0
  3369  0733  00B7               	movf	(??_SendTelegram+0)+0,w
  3370  0734  0837               	addwf	(SendTelegram@CommandCounter),f
  3371  0735  07B8               	goto	l1971
  3372  0736  2F37               	
  3373                           l483:	
  3374  0737                     	
  3375                           l1971:	
  3376  0737                     	movf	0+(SendTelegram@MyTelegram)+02h,w
  3377  0737  0824               	subwf	(SendTelegram@CommandCounter),w
  3378  0738  0238               	skipc
  3379  0739  1C03               	goto	u891
  3380  073A  2F3C               	goto	u890
  3381  073B  2F3D               u891:
  3382  073C                     	goto	l1967
  3383  073C  2F27               u890:
  3384  073D                     	goto	l1973
  3385  073D  2F3E               	
  3386                           l485:	
  3387  073E                     	line	74
  3388                           	
  3389                           l1973:	
  3390  073E                     ;TelegramInterpreter.c: 74:     AddByteToBuffer(MyTelegram.End[0]);
  3391                           	movf	0+(SendTelegram@MyTelegram)+013h,w
  3392  073E  0835               	fcall	_AddByteToBuffer
  3393  073F  118A  27E3  118A   	line	75
  3394                           ;TelegramInterpreter.c: 75:     AddByteToBuffer(MyTelegram.End[1]);
  3395                           	bcf	status, 5	;RP0=0, select bank0
  3396  0742  1283               	bcf	status, 6	;RP1=0, select bank0
  3397  0743  1303               	movf	0+(SendTelegram@MyTelegram)+014h,w
  3398  0744  0836               	fcall	_AddByteToBuffer
  3399  0745  118A  27E3  118A   	line	77
  3400                           	
  3401                           l486:	
  3402  0748                     	return
  3403  0748  0008               	opt stack 0
  3404                           GLOBAL	__end_of_SendTelegram
  3405                           	__end_of_SendTelegram:
  3406  0749                     	signat	_SendTelegram,4217
  3407                           	global	_AddByteToBuffer
  3408                           
  3409 ;; *************** function _AddByteToBuffer *****************
  3410 ;; Defined at:
  3411 ;;		line 120 in file "Eusart.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  Byte            1    wreg     unsigned char 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  Byte            1    1[BANK0 ] unsigned char 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3425 ;;      Params:         0       0       0       0
  3426 ;;      Locals:         0       1       0       0
  3427 ;;      Temps:          0       1       0       0
  3428 ;;      Totals:         0       2       0       0
  3429 ;;Total ram usage:        2 bytes
  3430 ;; Hardware stack levels used:    1
  3431 ;; Hardware stack levels required when called:    3
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_main
  3436 ;;		_SendTelegram
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3440                           	file	"Eusart.c"
  3441                           	line	120
  3442                           global __ptext10
  3443                           __ptext10:	;psect for function _AddByteToBuffer
  3444  07E3                     psect	text10
  3445                           	file	"Eusart.c"
  3446                           	line	120
  3447                           	global	__size_of_AddByteToBuffer
  3448                           	__size_of_AddByteToBuffer	equ	__end_of_AddByteToBuffer-_AddByteToBuffer
  3449  001C                     	
  3450                           _AddByteToBuffer:	
  3451  07E3                     ;incstack = 0
  3452                           	opt	stack 2
  3453                           ; Regs used in _AddByteToBuffer: [wreg-fsr0h+status,2+status,0]
  3454                           ;AddByteToBuffer@Byte stored from wreg
  3455                           	bcf	status, 5	;RP0=0, select bank0
  3456  07E3  1283               	bcf	status, 6	;RP1=0, select bank0
  3457  07E4  1303               	movwf	(AddByteToBuffer@Byte)
  3458  07E5  00A1               	line	122
  3459                           	
  3460                           l1953:	
  3461  07E6                     ;Eusart.c: 120: void AddByteToBuffer (unsigned char Byte);Eusart.c: 121: {;Eusart.c: 122
                                 :     SendBuffer[BufferHead] = Byte;
  3462                           	movf	(AddByteToBuffer@Byte),w
  3463  07E6  0821               	movwf	(??_AddByteToBuffer+0)+0
  3464  07E7  00A0               	movf	(_BufferHead),w
  3465  07E8  087D               	addlw	low(_SendBuffer|((0x0)<<8))&0ffh
  3466  07E9  3EA0               	movwf	fsr0
  3467  07EA  0084               	movf	(??_AddByteToBuffer+0)+0,w
  3468  07EB  0820               	bcf	status, 7	;select IRP bank1
  3469  07EC  1383               	movwf	indf
  3470  07ED  0080               	line	124
  3471                           	
  3472                           l1955:	
  3473  07EE                     ;Eusart.c: 124:     if (BufferHead == 39)
  3474                           		movlw	39
  3475  07EE  3027               	xorwf	((_BufferHead)),w
  3476  07EF  067D               	btfss	status,2
  3477  07F0  1D03               	goto	u881
  3478  07F1  2FF3               	goto	u880
  3479  07F2  2FF4               u881:
  3480  07F3                     	goto	l1959
  3481  07F3  2FF6               u880:
  3482  07F4                     	line	126
  3483                           	
  3484                           l1957:	
  3485  07F4                     ;Eusart.c: 125:     {;Eusart.c: 126:         BufferHead = 0;
  3486                           	clrf	(_BufferHead)
  3487  07F4  01FD               	line	127
  3488                           ;Eusart.c: 127:     }
  3489                           	goto	l1961
  3490  07F5  2FFB               	line	128
  3491                           ;Eusart.c: 128:     else
  3492                           	
  3493                           l318:	
  3494  07F6                     	line	130
  3495                           	
  3496                           l1959:	
  3497  07F6                     ;Eusart.c: 129:     {;Eusart.c: 130:         BufferHead++;
  3498                           	movlw	low(01h)
  3499  07F6  3001               	movwf	(??_AddByteToBuffer+0)+0
  3500  07F7  00A0               	movf	(??_AddByteToBuffer+0)+0,w
  3501  07F8  0820               	addwf	(_BufferHead),f
  3502  07F9  07FD               	goto	l1961
  3503  07FA  2FFB               	line	131
  3504                           ;Eusart.c: 131:     }
  3505                           	
  3506                           l319:	
  3507  07FB                     	line	134
  3508                           	
  3509                           l1961:	
  3510  07FB                     ;Eusart.c: 134:     PIE1bits.TXIE = 1;
  3511                           	bsf	status, 5	;RP0=1, select bank1
  3512  07FB  1683               	bcf	status, 6	;RP1=0, select bank1
  3513  07FC  1303               	bsf	(140)^080h,1	;volatile
  3514  07FD  148C               	line	136
  3515                           	
  3516                           l320:	
  3517  07FE                     	return
  3518  07FE  0008               	opt stack 0
  3519                           GLOBAL	__end_of_AddByteToBuffer
  3520                           	__end_of_AddByteToBuffer:
  3521  07FF                     	signat	_AddByteToBuffer,4217
  3522                           	global	_Read_Relay
  3523                           
  3524 ;; *************** function _Read_Relay *****************
  3525 ;; Defined at:
  3526 ;;		line 161 in file "RelayControl.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  Relay           1    wreg     unsigned char 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  Relay           1    2[BANK0 ] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      unsigned char 
  3533 ;; Registers used:
  3534 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3540 ;;      Params:         0       0       0       0
  3541 ;;      Locals:         0       1       0       0
  3542 ;;      Temps:          0       2       0       0
  3543 ;;      Totals:         0       3       0       0
  3544 ;;Total ram usage:        3 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    3
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		_Handle_Telegram
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3554                           	file	"RelayControl.c"
  3555                           	line	161
  3556                           global __ptext11
  3557                           __ptext11:	;psect for function _Read_Relay
  3558  0749                     psect	text11
  3559                           	file	"RelayControl.c"
  3560                           	line	161
  3561                           	global	__size_of_Read_Relay
  3562                           	__size_of_Read_Relay	equ	__end_of_Read_Relay-_Read_Relay
  3563  0038                     	
  3564                           _Read_Relay:	
  3565  0749                     ;incstack = 0
  3566                           	opt	stack 3
  3567                           ; Regs used in _Read_Relay: [wreg-fsr0h+status,2+status,0]
  3568                           ;Read_Relay@Relay stored from wreg
  3569                           	bcf	status, 5	;RP0=0, select bank0
  3570  0749  1283               	bcf	status, 6	;RP1=0, select bank0
  3571  074A  1303               	movwf	(Read_Relay@Relay)
  3572  074B  00A2               	line	163
  3573                           	
  3574                           l2063:	
  3575  074C                     ;RelayControl.c: 161: unsigned char Read_Relay (unsigned char Relay);RelayControl.c: 162
                                 :     {;RelayControl.c: 163:         switch (Relay)
  3576                           	goto	l2091
  3577  074C  2F6A               	line	165
  3578                           ;RelayControl.c: 164:         {;RelayControl.c: 165:             case Relay1:
  3579                           	
  3580                           l413:	
  3581  074D                     	line	166
  3582                           	
  3583                           l2065:	
  3584  074D                     ;RelayControl.c: 166:                 return PORTAbits.RA0;
  3585                           	movf	(5),w	;volatile
  3586  074D  0805               	andlw	(1<<1)-1
  3587  074E  3901               	goto	l414
  3588  074F  2F80               	
  3589                           l2067:	
  3590  0750                     	goto	l414
  3591  0750  2F80               	line	168
  3592                           ;RelayControl.c: 168:             case Relay2:
  3593                           	
  3594                           l415:	
  3595  0751                     	line	169
  3596                           	
  3597                           l2069:	
  3598  0751                     ;RelayControl.c: 169:                 return PORTAbits.RA1;
  3599                           	rrf	(5),w	;volatile
  3600  0751  0C05               	andlw	(1<<1)-1
  3601  0752  3901               	goto	l414
  3602  0753  2F80               	
  3603                           l2071:	
  3604  0754                     	goto	l414
  3605  0754  2F80               	line	171
  3606                           ;RelayControl.c: 171:             case Relay3:
  3607                           	
  3608                           l416:	
  3609  0755                     	line	172
  3610                           	
  3611                           l2073:	
  3612  0755                     ;RelayControl.c: 172:                 return PORTAbits.RA2;
  3613                           	rrf	(5),w	;volatile
  3614  0755  0C05               	movwf	(??_Read_Relay+0)+0
  3615  0756  00A0               	rrf	(??_Read_Relay+0)+0,w
  3616  0757  0C20               	andlw	(1<<1)-1
  3617  0758  3901               	goto	l414
  3618  0759  2F80               	
  3619                           l2075:	
  3620  075A                     	goto	l414
  3621  075A  2F80               	line	174
  3622                           ;RelayControl.c: 174:             case Relay4:
  3623                           	
  3624                           l417:	
  3625  075B                     	line	175
  3626                           	
  3627                           l2077:	
  3628  075B                     ;RelayControl.c: 175:                 return PORTCbits.RC0;
  3629                           	movf	(7),w	;volatile
  3630  075B  0807               	andlw	(1<<1)-1
  3631  075C  3901               	goto	l414
  3632  075D  2F80               	
  3633                           l2079:	
  3634  075E                     	goto	l414
  3635  075E  2F80               	line	177
  3636                           ;RelayControl.c: 177:             case Relay5:
  3637                           	
  3638                           l418:	
  3639  075F                     	line	178
  3640                           	
  3641                           l2081:	
  3642  075F                     ;RelayControl.c: 178:                 return PORTCbits.RC1;
  3643                           	rrf	(7),w	;volatile
  3644  075F  0C07               	andlw	(1<<1)-1
  3645  0760  3901               	goto	l414
  3646  0761  2F80               	
  3647                           l2083:	
  3648  0762                     	goto	l414
  3649  0762  2F80               	line	180
  3650                           ;RelayControl.c: 180:             case Relay6:
  3651                           	
  3652                           l419:	
  3653  0763                     	line	181
  3654                           	
  3655                           l2085:	
  3656  0763                     ;RelayControl.c: 181:                 return PORTCbits.RC2;
  3657                           	rrf	(7),w	;volatile
  3658  0763  0C07               	movwf	(??_Read_Relay+0)+0
  3659  0764  00A0               	rrf	(??_Read_Relay+0)+0,w
  3660  0765  0C20               	andlw	(1<<1)-1
  3661  0766  3901               	goto	l414
  3662  0767  2F80               	
  3663                           l2087:	
  3664  0768                     	goto	l414
  3665  0768  2F80               	line	182
  3666                           	
  3667                           l2089:	
  3668  0769                     ;RelayControl.c: 182:         }
  3669                           	goto	l2093
  3670  0769  2F7E               	
  3671                           l412:	
  3672  076A                     	
  3673                           l2091:	
  3674  076A                     	movf	(Read_Relay@Relay),w
  3675  076A  0822               	movwf	(??_Read_Relay+0)+0
  3676  076B  00A0               	clrf	(??_Read_Relay+0)+0+1
  3677  076C  01A1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3678                           ; Switch size 1, requested type "space"
  3679                           ; Number of cases is 1, Range of values is 0 to 0
  3680                           ; switch strategies available:
  3681                           ; Name         Instructions Cycles
  3682                           ; simple_byte            4     3 (average)
  3683                           ; direct_byte            9     7 (fixed)
  3684                           ; jumptable            260     6 (fixed)
  3685                           ;	Chosen strategy is simple_byte
  3686                           
  3687                           	movf 1+(??_Read_Relay+0)+0,w
  3688  076D  0821               	opt asmopt_push
  3689                           	opt asmopt_off
  3690                           	xorlw	0^0	; case 0
  3691  076E  3A00               	skipnz
  3692  076F  1903               	goto	l2897
  3693  0770  2F72               	goto	l2093
  3694  0771  2F7E               	opt asmopt_pop
  3695                           	
  3696                           l2897:	
  3697  0772                     ; Switch size 1, requested type "space"
  3698                           ; Number of cases is 6, Range of values is 0 to 5
  3699                           ; switch strategies available:
  3700                           ; Name         Instructions Cycles
  3701                           ; direct_byte           19     7 (fixed)
  3702                           ; simple_byte           19    10 (average)
  3703                           ; jumptable            260     6 (fixed)
  3704                           ;	Chosen strategy is direct_byte
  3705                           
  3706                           	movf 0+(??_Read_Relay+0)+0,w
  3707  0772  0820               	movwf fsr
  3708  0773  0084               	movlw	6
  3709  0774  3006               	subwf	fsr,w
  3710  0775  0204               skipnc
  3711  0776  1803               goto l2093
  3712  0777  2F7E               movlw high(S2899)
  3713  0778  3008               movwf pclath
  3714  0779  008A               	clrc
  3715  077A  1003               	rlf fsr,w
  3716  077B  0D04               	addlw low(S2899)
  3717  077C  3E00               	movwf pc
  3718  077D  0082               psect	swtext1,local,class=CONST,delta=2
  3719                           global __pswtext1
  3720                           __pswtext1:
  3721  0800                     S2899:
  3722  0800                     	ljmp	l2065
  3723  0800  118A  2F4D         	ljmp	l2069
  3724  0802  118A  2F51         	ljmp	l2073
  3725  0804  118A  2F55         	ljmp	l2077
  3726  0806  118A  2F5B         	ljmp	l2081
  3727  0808  118A  2F5F         	ljmp	l2085
  3728  080A  118A  2F63         psect	text11
  3729                           
  3730                           	
  3731                           l420:	
  3732  077E                     	line	183
  3733                           	
  3734                           l2093:	
  3735  077E                     ;RelayControl.c: 183:         return(255);
  3736                           	movlw	low(0FFh)
  3737  077E  30FF               	goto	l414
  3738  077F  2F80               	
  3739                           l2095:	
  3740  0780                     	line	184
  3741                           	
  3742                           l414:	
  3743  0780                     	return
  3744  0780  0008               	opt stack 0
  3745                           GLOBAL	__end_of_Read_Relay
  3746                           	__end_of_Read_Relay:
  3747  0781                     	signat	_Read_Relay,4217
  3748                           	global	_CheckStopTime
  3749                           
  3750 ;; *************** function _CheckStopTime *****************
  3751 ;; Defined at:
  3752 ;;		line 148 in file "Main.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;		None
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;		None
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3766 ;;      Params:         0       0       0       0
  3767 ;;      Locals:         0       0       0       0
  3768 ;;      Temps:          0       2       0       0
  3769 ;;      Totals:         0       2       0       0
  3770 ;;Total ram usage:        2 bytes
  3771 ;; Hardware stack levels used:    1
  3772 ;; Hardware stack levels required when called:    4
  3773 ;; This function calls:
  3774 ;;		_Set_Relay
  3775 ;; This function is called by:
  3776 ;;		_main
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3780                           	file	"Main.c"
  3781                           	line	148
  3782                           global __ptext12
  3783                           __ptext12:	;psect for function _CheckStopTime
  3784  022F                     psect	text12
  3785                           	file	"Main.c"
  3786                           	line	148
  3787                           	global	__size_of_CheckStopTime
  3788                           	__size_of_CheckStopTime	equ	__end_of_CheckStopTime-_CheckStopTime
  3789  017B                     	
  3790                           _CheckStopTime:	
  3791  022F                     ;incstack = 0
  3792                           	opt	stack 3
  3793                           ; Regs used in _CheckStopTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3794                           	line	150
  3795                           	
  3796                           l2261:	
  3797  022F                     ;Main.c: 150:     if (StopRelay1OnTime == 1 && Relay1StopTime[0] == Counter_10sec && Rel
                                 ay1StopTime[1] == Counter_1sec && Relay1StopTime[2] == Counter_100ms)
  3798                           	bcf	status, 5	;RP0=0, select bank0
  3799  022F  1283               	bcf	status, 6	;RP1=0, select bank0
  3800  0230  1303               		decf	((_StopRelay1OnTime)),w
  3801  0231  036B               	btfss	status,2
  3802  0232  1D03               	goto	u1211
  3803  0233  2A35               	goto	u1210
  3804  0234  2A36               u1211:
  3805  0235                     	goto	l2273
  3806  0235  2A64               u1210:
  3807  0236                     	
  3808                           l2263:	
  3809  0236                     	movf	(_Relay1StopTime),w
  3810  0236  086C               	movwf	(??_CheckStopTime+0)+0
  3811  0237  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3812  0238  01A5               	movf	(_Counter_10sec+1),w
  3813  0239  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  3814  023A  0625               	skipz
  3815  023B  1D03               	goto	u1225
  3816  023C  2A3F               	movf	(_Counter_10sec),w
  3817  023D  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  3818  023E  0624               u1225:
  3819  023F                     
  3820                           	skipz
  3821  023F  1D03               	goto	u1221
  3822  0240  2A42               	goto	u1220
  3823  0241  2A43               u1221:
  3824  0242                     	goto	l2273
  3825  0242  2A64               u1220:
  3826  0243                     	
  3827                           l2265:	
  3828  0243                     	movf	0+(_Relay1StopTime)+01h,w
  3829  0243  086D               	movwf	(??_CheckStopTime+0)+0
  3830  0244  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3831  0245  01A5               	movf	(_Counter_1sec+1),w
  3832  0246  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  3833  0247  0625               	skipz
  3834  0248  1D03               	goto	u1235
  3835  0249  2A4C               	movf	(_Counter_1sec),w
  3836  024A  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  3837  024B  0624               u1235:
  3838  024C                     
  3839                           	skipz
  3840  024C  1D03               	goto	u1231
  3841  024D  2A4F               	goto	u1230
  3842  024E  2A50               u1231:
  3843  024F                     	goto	l2273
  3844  024F  2A64               u1230:
  3845  0250                     	
  3846                           l2267:	
  3847  0250                     	movf	0+(_Relay1StopTime)+02h,w
  3848  0250  086E               	movwf	(??_CheckStopTime+0)+0
  3849  0251  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3850  0252  01A5               	movf	(_Counter_100ms+1),w
  3851  0253  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  3852  0254  0625               	skipz
  3853  0255  1D03               	goto	u1245
  3854  0256  2A59               	movf	(_Counter_100ms),w
  3855  0257  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  3856  0258  0624               u1245:
  3857  0259                     
  3858                           	skipz
  3859  0259  1D03               	goto	u1241
  3860  025A  2A5C               	goto	u1240
  3861  025B  2A5D               u1241:
  3862  025C                     	goto	l2273
  3863  025C  2A64               u1240:
  3864  025D                     	line	152
  3865                           	
  3866                           l2269:	
  3867  025D                     ;Main.c: 151:     {;Main.c: 152:         StopRelay1OnTime = 0;
  3868                           	clrf	(_StopRelay1OnTime)
  3869  025D  01EB               	line	153
  3870                           	
  3871                           l2271:	
  3872  025E                     ;Main.c: 153:         Set_Relay(Relay1, Off);
  3873                           	clrf	(Set_Relay@State)
  3874  025E  01A0               	movlw	low(0)
  3875  025F  3000               	fcall	_Set_Relay
  3876  0260  118A  255F  118A   	goto	l2273
  3877  0263  2A64               	line	154
  3878                           ;Main.c: 154:     }
  3879                           	
  3880                           l174:	
  3881  0264                     	line	156
  3882                           	
  3883                           l2273:	
  3884  0264                     ;Main.c: 156:     if (StopRelay2OnTime == 1 && Relay2StopTime[0] == Counter_10sec && Rel
                                 ay2StopTime[1] == Counter_1sec && Relay2StopTime[2] == Counter_100ms)
  3885                           	bcf	status, 5	;RP0=0, select bank0
  3886  0264  1283               	bcf	status, 6	;RP1=0, select bank0
  3887  0265  1303               		decf	((_StopRelay2OnTime)),w
  3888  0266  036A               	btfss	status,2
  3889  0267  1D03               	goto	u1251
  3890  0268  2A6A               	goto	u1250
  3891  0269  2A6B               u1251:
  3892  026A                     	goto	l2285
  3893  026A  2AA5               u1250:
  3894  026B                     	
  3895                           l2275:	
  3896  026B                     	bsf	status, 5	;RP0=1, select bank1
  3897  026B  1683               	bcf	status, 6	;RP1=0, select bank1
  3898  026C  1303               	movf	(_Relay2StopTime)^080h,w
  3899  026D  086B               	bcf	status, 5	;RP0=0, select bank0
  3900  026E  1283               	bcf	status, 6	;RP1=0, select bank0
  3901  026F  1303               	movwf	(??_CheckStopTime+0)+0
  3902  0270  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3903  0271  01A5               	movf	(_Counter_10sec+1),w
  3904  0272  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  3905  0273  0625               	skipz
  3906  0274  1D03               	goto	u1265
  3907  0275  2A78               	movf	(_Counter_10sec),w
  3908  0276  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  3909  0277  0624               u1265:
  3910  0278                     
  3911                           	skipz
  3912  0278  1D03               	goto	u1261
  3913  0279  2A7B               	goto	u1260
  3914  027A  2A7C               u1261:
  3915  027B                     	goto	l2285
  3916  027B  2AA5               u1260:
  3917  027C                     	
  3918                           l2277:	
  3919  027C                     	bsf	status, 5	;RP0=1, select bank1
  3920  027C  1683               	bcf	status, 6	;RP1=0, select bank1
  3921  027D  1303               	movf	0+(_Relay2StopTime)^080h+01h,w
  3922  027E  086C               	bcf	status, 5	;RP0=0, select bank0
  3923  027F  1283               	bcf	status, 6	;RP1=0, select bank0
  3924  0280  1303               	movwf	(??_CheckStopTime+0)+0
  3925  0281  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3926  0282  01A5               	movf	(_Counter_1sec+1),w
  3927  0283  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  3928  0284  0625               	skipz
  3929  0285  1D03               	goto	u1275
  3930  0286  2A89               	movf	(_Counter_1sec),w
  3931  0287  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  3932  0288  0624               u1275:
  3933  0289                     
  3934                           	skipz
  3935  0289  1D03               	goto	u1271
  3936  028A  2A8C               	goto	u1270
  3937  028B  2A8D               u1271:
  3938  028C                     	goto	l2285
  3939  028C  2AA5               u1270:
  3940  028D                     	
  3941                           l2279:	
  3942  028D                     	bsf	status, 5	;RP0=1, select bank1
  3943  028D  1683               	bcf	status, 6	;RP1=0, select bank1
  3944  028E  1303               	movf	0+(_Relay2StopTime)^080h+02h,w
  3945  028F  086D               	bcf	status, 5	;RP0=0, select bank0
  3946  0290  1283               	bcf	status, 6	;RP1=0, select bank0
  3947  0291  1303               	movwf	(??_CheckStopTime+0)+0
  3948  0292  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3949  0293  01A5               	movf	(_Counter_100ms+1),w
  3950  0294  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  3951  0295  0625               	skipz
  3952  0296  1D03               	goto	u1285
  3953  0297  2A9A               	movf	(_Counter_100ms),w
  3954  0298  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  3955  0299  0624               u1285:
  3956  029A                     
  3957                           	skipz
  3958  029A  1D03               	goto	u1281
  3959  029B  2A9D               	goto	u1280
  3960  029C  2A9E               u1281:
  3961  029D                     	goto	l2285
  3962  029D  2AA5               u1280:
  3963  029E                     	line	158
  3964                           	
  3965                           l2281:	
  3966  029E                     ;Main.c: 157:     {;Main.c: 158:         StopRelay2OnTime = 0;
  3967                           	clrf	(_StopRelay2OnTime)
  3968  029E  01EA               	line	159
  3969                           	
  3970                           l2283:	
  3971  029F                     ;Main.c: 159:         Set_Relay(Relay2, Off);
  3972                           	clrf	(Set_Relay@State)
  3973  029F  01A0               	movlw	low(01h)
  3974  02A0  3001               	fcall	_Set_Relay
  3975  02A1  118A  255F  118A   	goto	l2285
  3976  02A4  2AA5               	line	160
  3977                           ;Main.c: 160:     }
  3978                           	
  3979                           l175:	
  3980  02A5                     	line	162
  3981                           	
  3982                           l2285:	
  3983  02A5                     ;Main.c: 162:     if (StopRelay3OnTime == 1 && Relay3StopTime[0] == Counter_10sec && Rel
                                 ay3StopTime[1] == Counter_1sec && Relay3StopTime[2] == Counter_100ms)
  3984                           	bcf	status, 5	;RP0=0, select bank0
  3985  02A5  1283               	bcf	status, 6	;RP1=0, select bank0
  3986  02A6  1303               		decf	((_StopRelay3OnTime)),w
  3987  02A7  0369               	btfss	status,2
  3988  02A8  1D03               	goto	u1291
  3989  02A9  2AAB               	goto	u1290
  3990  02AA  2AAC               u1291:
  3991  02AB                     	goto	l2297
  3992  02AB  2AE6               u1290:
  3993  02AC                     	
  3994                           l2287:	
  3995  02AC                     	bsf	status, 5	;RP0=1, select bank1
  3996  02AC  1683               	bcf	status, 6	;RP1=0, select bank1
  3997  02AD  1303               	movf	(_Relay3StopTime)^080h,w
  3998  02AE  0868               	bcf	status, 5	;RP0=0, select bank0
  3999  02AF  1283               	bcf	status, 6	;RP1=0, select bank0
  4000  02B0  1303               	movwf	(??_CheckStopTime+0)+0
  4001  02B1  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4002  02B2  01A5               	movf	(_Counter_10sec+1),w
  4003  02B3  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4004  02B4  0625               	skipz
  4005  02B5  1D03               	goto	u1305
  4006  02B6  2AB9               	movf	(_Counter_10sec),w
  4007  02B7  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4008  02B8  0624               u1305:
  4009  02B9                     
  4010                           	skipz
  4011  02B9  1D03               	goto	u1301
  4012  02BA  2ABC               	goto	u1300
  4013  02BB  2ABD               u1301:
  4014  02BC                     	goto	l2297
  4015  02BC  2AE6               u1300:
  4016  02BD                     	
  4017                           l2289:	
  4018  02BD                     	bsf	status, 5	;RP0=1, select bank1
  4019  02BD  1683               	bcf	status, 6	;RP1=0, select bank1
  4020  02BE  1303               	movf	0+(_Relay3StopTime)^080h+01h,w
  4021  02BF  0869               	bcf	status, 5	;RP0=0, select bank0
  4022  02C0  1283               	bcf	status, 6	;RP1=0, select bank0
  4023  02C1  1303               	movwf	(??_CheckStopTime+0)+0
  4024  02C2  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4025  02C3  01A5               	movf	(_Counter_1sec+1),w
  4026  02C4  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4027  02C5  0625               	skipz
  4028  02C6  1D03               	goto	u1315
  4029  02C7  2ACA               	movf	(_Counter_1sec),w
  4030  02C8  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4031  02C9  0624               u1315:
  4032  02CA                     
  4033                           	skipz
  4034  02CA  1D03               	goto	u1311
  4035  02CB  2ACD               	goto	u1310
  4036  02CC  2ACE               u1311:
  4037  02CD                     	goto	l2297
  4038  02CD  2AE6               u1310:
  4039  02CE                     	
  4040                           l2291:	
  4041  02CE                     	bsf	status, 5	;RP0=1, select bank1
  4042  02CE  1683               	bcf	status, 6	;RP1=0, select bank1
  4043  02CF  1303               	movf	0+(_Relay3StopTime)^080h+02h,w
  4044  02D0  086A               	bcf	status, 5	;RP0=0, select bank0
  4045  02D1  1283               	bcf	status, 6	;RP1=0, select bank0
  4046  02D2  1303               	movwf	(??_CheckStopTime+0)+0
  4047  02D3  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4048  02D4  01A5               	movf	(_Counter_100ms+1),w
  4049  02D5  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4050  02D6  0625               	skipz
  4051  02D7  1D03               	goto	u1325
  4052  02D8  2ADB               	movf	(_Counter_100ms),w
  4053  02D9  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4054  02DA  0624               u1325:
  4055  02DB                     
  4056                           	skipz
  4057  02DB  1D03               	goto	u1321
  4058  02DC  2ADE               	goto	u1320
  4059  02DD  2ADF               u1321:
  4060  02DE                     	goto	l2297
  4061  02DE  2AE6               u1320:
  4062  02DF                     	line	164
  4063                           	
  4064                           l2293:	
  4065  02DF                     ;Main.c: 163:     {;Main.c: 164:         StopRelay3OnTime = 0;
  4066                           	clrf	(_StopRelay3OnTime)
  4067  02DF  01E9               	line	165
  4068                           	
  4069                           l2295:	
  4070  02E0                     ;Main.c: 165:         Set_Relay(Relay3, Off);
  4071                           	clrf	(Set_Relay@State)
  4072  02E0  01A0               	movlw	low(02h)
  4073  02E1  3002               	fcall	_Set_Relay
  4074  02E2  118A  255F  118A   	goto	l2297
  4075  02E5  2AE6               	line	166
  4076                           ;Main.c: 166:     }
  4077                           	
  4078                           l176:	
  4079  02E6                     	line	168
  4080                           	
  4081                           l2297:	
  4082  02E6                     ;Main.c: 168:     if (StopRelay4OnTime == 1 && Relay4StopTime[0] == Counter_10sec && Rel
                                 ay4StopTime[1] == Counter_1sec && Relay4StopTime[2] == Counter_100ms)
  4083                           	bcf	status, 5	;RP0=0, select bank0
  4084  02E6  1283               	bcf	status, 6	;RP1=0, select bank0
  4085  02E7  1303               		decf	((_StopRelay4OnTime)),w
  4086  02E8  0368               	btfss	status,2
  4087  02E9  1D03               	goto	u1331
  4088  02EA  2AEC               	goto	u1330
  4089  02EB  2AED               u1331:
  4090  02EC                     	goto	l2309
  4091  02EC  2B27               u1330:
  4092  02ED                     	
  4093                           l2299:	
  4094  02ED                     	bsf	status, 5	;RP0=1, select bank1
  4095  02ED  1683               	bcf	status, 6	;RP1=0, select bank1
  4096  02EE  1303               	movf	(_Relay4StopTime)^080h,w
  4097  02EF  0865               	bcf	status, 5	;RP0=0, select bank0
  4098  02F0  1283               	bcf	status, 6	;RP1=0, select bank0
  4099  02F1  1303               	movwf	(??_CheckStopTime+0)+0
  4100  02F2  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4101  02F3  01A5               	movf	(_Counter_10sec+1),w
  4102  02F4  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4103  02F5  0625               	skipz
  4104  02F6  1D03               	goto	u1345
  4105  02F7  2AFA               	movf	(_Counter_10sec),w
  4106  02F8  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4107  02F9  0624               u1345:
  4108  02FA                     
  4109                           	skipz
  4110  02FA  1D03               	goto	u1341
  4111  02FB  2AFD               	goto	u1340
  4112  02FC  2AFE               u1341:
  4113  02FD                     	goto	l2309
  4114  02FD  2B27               u1340:
  4115  02FE                     	
  4116                           l2301:	
  4117  02FE                     	bsf	status, 5	;RP0=1, select bank1
  4118  02FE  1683               	bcf	status, 6	;RP1=0, select bank1
  4119  02FF  1303               	movf	0+(_Relay4StopTime)^080h+01h,w
  4120  0300  0866               	bcf	status, 5	;RP0=0, select bank0
  4121  0301  1283               	bcf	status, 6	;RP1=0, select bank0
  4122  0302  1303               	movwf	(??_CheckStopTime+0)+0
  4123  0303  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4124  0304  01A5               	movf	(_Counter_1sec+1),w
  4125  0305  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4126  0306  0625               	skipz
  4127  0307  1D03               	goto	u1355
  4128  0308  2B0B               	movf	(_Counter_1sec),w
  4129  0309  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4130  030A  0624               u1355:
  4131  030B                     
  4132                           	skipz
  4133  030B  1D03               	goto	u1351
  4134  030C  2B0E               	goto	u1350
  4135  030D  2B0F               u1351:
  4136  030E                     	goto	l2309
  4137  030E  2B27               u1350:
  4138  030F                     	
  4139                           l2303:	
  4140  030F                     	bsf	status, 5	;RP0=1, select bank1
  4141  030F  1683               	bcf	status, 6	;RP1=0, select bank1
  4142  0310  1303               	movf	0+(_Relay4StopTime)^080h+02h,w
  4143  0311  0867               	bcf	status, 5	;RP0=0, select bank0
  4144  0312  1283               	bcf	status, 6	;RP1=0, select bank0
  4145  0313  1303               	movwf	(??_CheckStopTime+0)+0
  4146  0314  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4147  0315  01A5               	movf	(_Counter_100ms+1),w
  4148  0316  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4149  0317  0625               	skipz
  4150  0318  1D03               	goto	u1365
  4151  0319  2B1C               	movf	(_Counter_100ms),w
  4152  031A  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4153  031B  0624               u1365:
  4154  031C                     
  4155                           	skipz
  4156  031C  1D03               	goto	u1361
  4157  031D  2B1F               	goto	u1360
  4158  031E  2B20               u1361:
  4159  031F                     	goto	l2309
  4160  031F  2B27               u1360:
  4161  0320                     	line	170
  4162                           	
  4163                           l2305:	
  4164  0320                     ;Main.c: 169:     {;Main.c: 170:         StopRelay4OnTime = 0;
  4165                           	clrf	(_StopRelay4OnTime)
  4166  0320  01E8               	line	171
  4167                           	
  4168                           l2307:	
  4169  0321                     ;Main.c: 171:         Set_Relay(Relay4, Off);
  4170                           	clrf	(Set_Relay@State)
  4171  0321  01A0               	movlw	low(03h)
  4172  0322  3003               	fcall	_Set_Relay
  4173  0323  118A  255F  118A   	goto	l2309
  4174  0326  2B27               	line	172
  4175                           ;Main.c: 172:     }
  4176                           	
  4177                           l177:	
  4178  0327                     	line	174
  4179                           	
  4180                           l2309:	
  4181  0327                     ;Main.c: 174:     if (StopRelay5OnTime == 1 && Relay5StopTime[0] == Counter_10sec && Rel
                                 ay5StopTime[1] == Counter_1sec && Relay5StopTime[2] == Counter_100ms)
  4182                           	bcf	status, 5	;RP0=0, select bank0
  4183  0327  1283               	bcf	status, 6	;RP1=0, select bank0
  4184  0328  1303               		decf	((_StopRelay5OnTime)),w
  4185  0329  0367               	btfss	status,2
  4186  032A  1D03               	goto	u1371
  4187  032B  2B2D               	goto	u1370
  4188  032C  2B2E               u1371:
  4189  032D                     	goto	l2321
  4190  032D  2B68               u1370:
  4191  032E                     	
  4192                           l2311:	
  4193  032E                     	bsf	status, 5	;RP0=1, select bank1
  4194  032E  1683               	bcf	status, 6	;RP1=0, select bank1
  4195  032F  1303               	movf	(_Relay5StopTime)^080h,w
  4196  0330  0862               	bcf	status, 5	;RP0=0, select bank0
  4197  0331  1283               	bcf	status, 6	;RP1=0, select bank0
  4198  0332  1303               	movwf	(??_CheckStopTime+0)+0
  4199  0333  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4200  0334  01A5               	movf	(_Counter_10sec+1),w
  4201  0335  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4202  0336  0625               	skipz
  4203  0337  1D03               	goto	u1385
  4204  0338  2B3B               	movf	(_Counter_10sec),w
  4205  0339  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4206  033A  0624               u1385:
  4207  033B                     
  4208                           	skipz
  4209  033B  1D03               	goto	u1381
  4210  033C  2B3E               	goto	u1380
  4211  033D  2B3F               u1381:
  4212  033E                     	goto	l2321
  4213  033E  2B68               u1380:
  4214  033F                     	
  4215                           l2313:	
  4216  033F                     	bsf	status, 5	;RP0=1, select bank1
  4217  033F  1683               	bcf	status, 6	;RP1=0, select bank1
  4218  0340  1303               	movf	0+(_Relay5StopTime)^080h+01h,w
  4219  0341  0863               	bcf	status, 5	;RP0=0, select bank0
  4220  0342  1283               	bcf	status, 6	;RP1=0, select bank0
  4221  0343  1303               	movwf	(??_CheckStopTime+0)+0
  4222  0344  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4223  0345  01A5               	movf	(_Counter_1sec+1),w
  4224  0346  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4225  0347  0625               	skipz
  4226  0348  1D03               	goto	u1395
  4227  0349  2B4C               	movf	(_Counter_1sec),w
  4228  034A  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4229  034B  0624               u1395:
  4230  034C                     
  4231                           	skipz
  4232  034C  1D03               	goto	u1391
  4233  034D  2B4F               	goto	u1390
  4234  034E  2B50               u1391:
  4235  034F                     	goto	l2321
  4236  034F  2B68               u1390:
  4237  0350                     	
  4238                           l2315:	
  4239  0350                     	bsf	status, 5	;RP0=1, select bank1
  4240  0350  1683               	bcf	status, 6	;RP1=0, select bank1
  4241  0351  1303               	movf	0+(_Relay5StopTime)^080h+02h,w
  4242  0352  0864               	bcf	status, 5	;RP0=0, select bank0
  4243  0353  1283               	bcf	status, 6	;RP1=0, select bank0
  4244  0354  1303               	movwf	(??_CheckStopTime+0)+0
  4245  0355  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4246  0356  01A5               	movf	(_Counter_100ms+1),w
  4247  0357  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4248  0358  0625               	skipz
  4249  0359  1D03               	goto	u1405
  4250  035A  2B5D               	movf	(_Counter_100ms),w
  4251  035B  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4252  035C  0624               u1405:
  4253  035D                     
  4254                           	skipz
  4255  035D  1D03               	goto	u1401
  4256  035E  2B60               	goto	u1400
  4257  035F  2B61               u1401:
  4258  0360                     	goto	l2321
  4259  0360  2B68               u1400:
  4260  0361                     	line	176
  4261                           	
  4262                           l2317:	
  4263  0361                     ;Main.c: 175:     {;Main.c: 176:         StopRelay5OnTime = 0;
  4264                           	clrf	(_StopRelay5OnTime)
  4265  0361  01E7               	line	177
  4266                           	
  4267                           l2319:	
  4268  0362                     ;Main.c: 177:         Set_Relay(Relay5, Off);
  4269                           	clrf	(Set_Relay@State)
  4270  0362  01A0               	movlw	low(04h)
  4271  0363  3004               	fcall	_Set_Relay
  4272  0364  118A  255F  118A   	goto	l2321
  4273  0367  2B68               	line	178
  4274                           ;Main.c: 178:     }
  4275                           	
  4276                           l178:	
  4277  0368                     	line	180
  4278                           	
  4279                           l2321:	
  4280  0368                     ;Main.c: 180:     if (StopRelay6OnTime == 1 && Relay6StopTime[0] == Counter_10sec && Rel
                                 ay6StopTime[1] == Counter_1sec && Relay6StopTime[2] == Counter_100ms)
  4281                           	bcf	status, 5	;RP0=0, select bank0
  4282  0368  1283               	bcf	status, 6	;RP1=0, select bank0
  4283  0369  1303               		decf	((_StopRelay6OnTime)),w
  4284  036A  0366               	btfss	status,2
  4285  036B  1D03               	goto	u1411
  4286  036C  2B6E               	goto	u1410
  4287  036D  2B6F               u1411:
  4288  036E                     	goto	l180
  4289  036E  2BA9               u1410:
  4290  036F                     	
  4291                           l2323:	
  4292  036F                     	bsf	status, 5	;RP0=1, select bank1
  4293  036F  1683               	bcf	status, 6	;RP1=0, select bank1
  4294  0370  1303               	movf	(_Relay6StopTime)^080h,w
  4295  0371  085F               	bcf	status, 5	;RP0=0, select bank0
  4296  0372  1283               	bcf	status, 6	;RP1=0, select bank0
  4297  0373  1303               	movwf	(??_CheckStopTime+0)+0
  4298  0374  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4299  0375  01A5               	movf	(_Counter_10sec+1),w
  4300  0376  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4301  0377  0625               	skipz
  4302  0378  1D03               	goto	u1425
  4303  0379  2B7C               	movf	(_Counter_10sec),w
  4304  037A  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4305  037B  0624               u1425:
  4306  037C                     
  4307                           	skipz
  4308  037C  1D03               	goto	u1421
  4309  037D  2B7F               	goto	u1420
  4310  037E  2B80               u1421:
  4311  037F                     	goto	l180
  4312  037F  2BA9               u1420:
  4313  0380                     	
  4314                           l2325:	
  4315  0380                     	bsf	status, 5	;RP0=1, select bank1
  4316  0380  1683               	bcf	status, 6	;RP1=0, select bank1
  4317  0381  1303               	movf	0+(_Relay6StopTime)^080h+01h,w
  4318  0382  0860               	bcf	status, 5	;RP0=0, select bank0
  4319  0383  1283               	bcf	status, 6	;RP1=0, select bank0
  4320  0384  1303               	movwf	(??_CheckStopTime+0)+0
  4321  0385  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4322  0386  01A5               	movf	(_Counter_1sec+1),w
  4323  0387  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4324  0388  0625               	skipz
  4325  0389  1D03               	goto	u1435
  4326  038A  2B8D               	movf	(_Counter_1sec),w
  4327  038B  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4328  038C  0624               u1435:
  4329  038D                     
  4330                           	skipz
  4331  038D  1D03               	goto	u1431
  4332  038E  2B90               	goto	u1430
  4333  038F  2B91               u1431:
  4334  0390                     	goto	l180
  4335  0390  2BA9               u1430:
  4336  0391                     	
  4337                           l2327:	
  4338  0391                     	bsf	status, 5	;RP0=1, select bank1
  4339  0391  1683               	bcf	status, 6	;RP1=0, select bank1
  4340  0392  1303               	movf	0+(_Relay6StopTime)^080h+02h,w
  4341  0393  0861               	bcf	status, 5	;RP0=0, select bank0
  4342  0394  1283               	bcf	status, 6	;RP1=0, select bank0
  4343  0395  1303               	movwf	(??_CheckStopTime+0)+0
  4344  0396  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4345  0397  01A5               	movf	(_Counter_100ms+1),w
  4346  0398  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4347  0399  0625               	skipz
  4348  039A  1D03               	goto	u1445
  4349  039B  2B9E               	movf	(_Counter_100ms),w
  4350  039C  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4351  039D  0624               u1445:
  4352  039E                     
  4353                           	skipz
  4354  039E  1D03               	goto	u1441
  4355  039F  2BA1               	goto	u1440
  4356  03A0  2BA2               u1441:
  4357  03A1                     	goto	l180
  4358  03A1  2BA9               u1440:
  4359  03A2                     	line	182
  4360                           	
  4361                           l2329:	
  4362  03A2                     ;Main.c: 181:     {;Main.c: 182:         StopRelay6OnTime = 0;
  4363                           	clrf	(_StopRelay6OnTime)
  4364  03A2  01E6               	line	183
  4365                           	
  4366                           l2331:	
  4367  03A3                     ;Main.c: 183:         Set_Relay(Relay6, Off);
  4368                           	clrf	(Set_Relay@State)
  4369  03A3  01A0               	movlw	low(05h)
  4370  03A4  3005               	fcall	_Set_Relay
  4371  03A5  118A  255F  118A   	goto	l180
  4372  03A8  2BA9               	line	184
  4373                           ;Main.c: 184:     }
  4374                           	
  4375                           l179:	
  4376  03A9                     	line	185
  4377                           	
  4378                           l180:	
  4379  03A9                     	return
  4380  03A9  0008               	opt stack 0
  4381                           GLOBAL	__end_of_CheckStopTime
  4382                           	__end_of_CheckStopTime:
  4383  03AA                     	signat	_CheckStopTime,89
  4384                           	global	_Set_Relay
  4385                           
  4386 ;; *************** function _Set_Relay *****************
  4387 ;; Defined at:
  4388 ;;		line 64 in file "RelayControl.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  Relay           1    wreg     unsigned char 
  4391 ;;  State           1    0[BANK0 ] unsigned char 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  Relay           1    3[BANK0 ] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  1    wreg      void 
  4396 ;; Registers used:
  4397 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4403 ;;      Params:         0       1       0       0
  4404 ;;      Locals:         0       1       0       0
  4405 ;;      Temps:          0       2       0       0
  4406 ;;      Totals:         0       4       0       0
  4407 ;;Total ram usage:        4 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    3
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_CheckStopTime
  4414 ;;		_Handle_Telegram
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4418                           	file	"RelayControl.c"
  4419                           	line	64
  4420                           global __ptext13
  4421                           __ptext13:	;psect for function _Set_Relay
  4422  055F                     psect	text13
  4423                           	file	"RelayControl.c"
  4424                           	line	64
  4425                           	global	__size_of_Set_Relay
  4426                           	__size_of_Set_Relay	equ	__end_of_Set_Relay-_Set_Relay
  4427  0080                     	
  4428                           _Set_Relay:	
  4429  055F                     ;incstack = 0
  4430                           	opt	stack 3
  4431                           ; Regs used in _Set_Relay: [wreg-fsr0h+status,2+status,0]
  4432                           ;Set_Relay@Relay stored from wreg
  4433                           	bcf	status, 5	;RP0=0, select bank0
  4434  055F  1283               	bcf	status, 6	;RP1=0, select bank0
  4435  0560  1303               	movwf	(Set_Relay@Relay)
  4436  0561  00A3               	line	66
  4437                           	
  4438                           l1975:	
  4439  0562                     ;RelayControl.c: 64: void Set_Relay (unsigned char Relay, unsigned char State);RelayCont
                                 rol.c: 65: {;RelayControl.c: 66:     switch (Relay)
  4440                           	goto	l2027
  4441  0562  2DCA               	line	68
  4442                           ;RelayControl.c: 67:     {;RelayControl.c: 68:         case Relay1:
  4443                           	
  4444                           l378:	
  4445  0563                     	line	69
  4446                           	
  4447                           l1977:	
  4448  0563                     ;RelayControl.c: 69:         if (State == On)
  4449                           		decf	((Set_Relay@State)),w
  4450  0563  0320               	btfss	status,2
  4451  0564  1D03               	goto	u901
  4452  0565  2D67               	goto	u900
  4453  0566  2D68               u901:
  4454  0567                     	goto	l1981
  4455  0567  2D6A               u900:
  4456  0568                     	line	71
  4457                           	
  4458                           l1979:	
  4459  0568                     ;RelayControl.c: 70:         {;RelayControl.c: 71:             PORTAbits.RA0 = 1;
  4460                           	bsf	(5),0	;volatile
  4461  0568  1405               	line	72
  4462                           ;RelayControl.c: 72:         }
  4463                           	goto	l409
  4464  0569  2DDE               	line	73
  4465                           ;RelayControl.c: 73:         else if (State == Off)
  4466                           	
  4467                           l379:	
  4468  056A                     	
  4469                           l1981:	
  4470  056A                     	movf	((Set_Relay@State)),w
  4471  056A  0820               	btfss	status,2
  4472  056B  1D03               	goto	u911
  4473  056C  2D6E               	goto	u910
  4474  056D  2D6F               u911:
  4475  056E                     	goto	l409
  4476  056E  2DDE               u910:
  4477  056F                     	line	75
  4478                           	
  4479                           l1983:	
  4480  056F                     ;RelayControl.c: 74:         {;RelayControl.c: 75:             PORTAbits.RA0 = 0;
  4481                           	bcf	(5),0	;volatile
  4482  056F  1005               	line	76
  4483                           ;RelayControl.c: 76:         }
  4484                           	goto	l409
  4485  0570  2DDE               	line	77
  4486                           ;RelayControl.c: 77:         else
  4487                           	
  4488                           l381:	
  4489  0571                     	goto	l409
  4490  0571  2DDE               	line	80
  4491                           ;RelayControl.c: 78:         {;RelayControl.c: 80:         }
  4492                           	
  4493                           l382:	
  4494  0572                     	goto	l409
  4495  0572  2DDE               	
  4496                           l380:	
  4497  0573                     	line	81
  4498                           ;RelayControl.c: 81:         break;
  4499                           	goto	l409
  4500  0573  2DDE               	line	83
  4501                           ;RelayControl.c: 83:         case Relay2:
  4502                           	
  4503                           l384:	
  4504  0574                     	line	84
  4505                           	
  4506                           l1985:	
  4507  0574                     ;RelayControl.c: 84:         if (State == On)
  4508                           		decf	((Set_Relay@State)),w
  4509  0574  0320               	btfss	status,2
  4510  0575  1D03               	goto	u921
  4511  0576  2D78               	goto	u920
  4512  0577  2D79               u921:
  4513  0578                     	goto	l1989
  4514  0578  2D7B               u920:
  4515  0579                     	line	86
  4516                           	
  4517                           l1987:	
  4518  0579                     ;RelayControl.c: 85:         {;RelayControl.c: 86:             PORTAbits.RA1 = 1;
  4519                           	bsf	(5),1	;volatile
  4520  0579  1485               	line	87
  4521                           ;RelayControl.c: 87:         }
  4522                           	goto	l409
  4523  057A  2DDE               	line	88
  4524                           ;RelayControl.c: 88:         else if (State == Off)
  4525                           	
  4526                           l385:	
  4527  057B                     	
  4528                           l1989:	
  4529  057B                     	movf	((Set_Relay@State)),w
  4530  057B  0820               	btfss	status,2
  4531  057C  1D03               	goto	u931
  4532  057D  2D7F               	goto	u930
  4533  057E  2D80               u931:
  4534  057F                     	goto	l409
  4535  057F  2DDE               u930:
  4536  0580                     	line	90
  4537                           	
  4538                           l1991:	
  4539  0580                     ;RelayControl.c: 89:         {;RelayControl.c: 90:             PORTAbits.RA1 = 0;
  4540                           	bcf	(5),1	;volatile
  4541  0580  1085               	line	91
  4542                           ;RelayControl.c: 91:         }
  4543                           	goto	l409
  4544  0581  2DDE               	line	92
  4545                           ;RelayControl.c: 92:         else
  4546                           	
  4547                           l387:	
  4548  0582                     	goto	l409
  4549  0582  2DDE               	line	95
  4550                           ;RelayControl.c: 93:         {;RelayControl.c: 95:         }
  4551                           	
  4552                           l388:	
  4553  0583                     	goto	l409
  4554  0583  2DDE               	
  4555                           l386:	
  4556  0584                     	line	96
  4557                           ;RelayControl.c: 96:         break;
  4558                           	goto	l409
  4559  0584  2DDE               	line	98
  4560                           ;RelayControl.c: 98:         case Relay3:
  4561                           	
  4562                           l389:	
  4563  0585                     	line	99
  4564                           	
  4565                           l1993:	
  4566  0585                     ;RelayControl.c: 99:         if (State == On)
  4567                           		decf	((Set_Relay@State)),w
  4568  0585  0320               	btfss	status,2
  4569  0586  1D03               	goto	u941
  4570  0587  2D89               	goto	u940
  4571  0588  2D8A               u941:
  4572  0589                     	goto	l1997
  4573  0589  2D8C               u940:
  4574  058A                     	line	101
  4575                           	
  4576                           l1995:	
  4577  058A                     ;RelayControl.c: 100:         {;RelayControl.c: 101:             PORTAbits.RA2 = 1;
  4578                           	bsf	(5),2	;volatile
  4579  058A  1505               	line	102
  4580                           ;RelayControl.c: 102:         }
  4581                           	goto	l409
  4582  058B  2DDE               	line	103
  4583                           ;RelayControl.c: 103:         else if (State == Off)
  4584                           	
  4585                           l390:	
  4586  058C                     	
  4587                           l1997:	
  4588  058C                     	movf	((Set_Relay@State)),w
  4589  058C  0820               	btfss	status,2
  4590  058D  1D03               	goto	u951
  4591  058E  2D90               	goto	u950
  4592  058F  2D91               u951:
  4593  0590                     	goto	l409
  4594  0590  2DDE               u950:
  4595  0591                     	line	105
  4596                           	
  4597                           l1999:	
  4598  0591                     ;RelayControl.c: 104:         {;RelayControl.c: 105:             PORTAbits.RA2 = 0;
  4599                           	bcf	(5),2	;volatile
  4600  0591  1105               	line	106
  4601                           ;RelayControl.c: 106:         }
  4602                           	goto	l409
  4603  0592  2DDE               	line	107
  4604                           ;RelayControl.c: 107:         else
  4605                           	
  4606                           l392:	
  4607  0593                     	goto	l409
  4608  0593  2DDE               	line	110
  4609                           ;RelayControl.c: 108:         {;RelayControl.c: 110:         }
  4610                           	
  4611                           l393:	
  4612  0594                     	goto	l409
  4613  0594  2DDE               	
  4614                           l391:	
  4615  0595                     	line	111
  4616                           ;RelayControl.c: 111:         break;
  4617                           	goto	l409
  4618  0595  2DDE               	line	113
  4619                           ;RelayControl.c: 113:         case Relay4:
  4620                           	
  4621                           l394:	
  4622  0596                     	line	114
  4623                           	
  4624                           l2001:	
  4625  0596                     ;RelayControl.c: 114:         if (State == On)
  4626                           		decf	((Set_Relay@State)),w
  4627  0596  0320               	btfss	status,2
  4628  0597  1D03               	goto	u961
  4629  0598  2D9A               	goto	u960
  4630  0599  2D9B               u961:
  4631  059A                     	goto	l2005
  4632  059A  2D9D               u960:
  4633  059B                     	line	116
  4634                           	
  4635                           l2003:	
  4636  059B                     ;RelayControl.c: 115:         {;RelayControl.c: 116:             PORTCbits.RC0 = 1;
  4637                           	bsf	(7),0	;volatile
  4638  059B  1407               	line	117
  4639                           ;RelayControl.c: 117:         }
  4640                           	goto	l409
  4641  059C  2DDE               	line	118
  4642                           ;RelayControl.c: 118:         else if (State == Off)
  4643                           	
  4644                           l395:	
  4645  059D                     	
  4646                           l2005:	
  4647  059D                     	movf	((Set_Relay@State)),w
  4648  059D  0820               	btfss	status,2
  4649  059E  1D03               	goto	u971
  4650  059F  2DA1               	goto	u970
  4651  05A0  2DA2               u971:
  4652  05A1                     	goto	l409
  4653  05A1  2DDE               u970:
  4654  05A2                     	line	120
  4655                           	
  4656                           l2007:	
  4657  05A2                     ;RelayControl.c: 119:         {;RelayControl.c: 120:             PORTCbits.RC0 = 0;
  4658                           	bcf	(7),0	;volatile
  4659  05A2  1007               	line	121
  4660                           ;RelayControl.c: 121:         }
  4661                           	goto	l409
  4662  05A3  2DDE               	line	122
  4663                           ;RelayControl.c: 122:         else
  4664                           	
  4665                           l397:	
  4666  05A4                     	goto	l409
  4667  05A4  2DDE               	line	125
  4668                           ;RelayControl.c: 123:         {;RelayControl.c: 125:         }
  4669                           	
  4670                           l398:	
  4671  05A5                     	goto	l409
  4672  05A5  2DDE               	
  4673                           l396:	
  4674  05A6                     	line	126
  4675                           ;RelayControl.c: 126:         break;
  4676                           	goto	l409
  4677  05A6  2DDE               	line	128
  4678                           ;RelayControl.c: 128:         case Relay5:
  4679                           	
  4680                           l399:	
  4681  05A7                     	line	129
  4682                           	
  4683                           l2009:	
  4684  05A7                     ;RelayControl.c: 129:         if (State == On)
  4685                           		decf	((Set_Relay@State)),w
  4686  05A7  0320               	btfss	status,2
  4687  05A8  1D03               	goto	u981
  4688  05A9  2DAB               	goto	u980
  4689  05AA  2DAC               u981:
  4690  05AB                     	goto	l2013
  4691  05AB  2DAE               u980:
  4692  05AC                     	line	131
  4693                           	
  4694                           l2011:	
  4695  05AC                     ;RelayControl.c: 130:         {;RelayControl.c: 131:             PORTCbits.RC1 = 1;
  4696                           	bsf	(7),1	;volatile
  4697  05AC  1487               	line	132
  4698                           ;RelayControl.c: 132:         }
  4699                           	goto	l409
  4700  05AD  2DDE               	line	133
  4701                           ;RelayControl.c: 133:         else if (State == Off)
  4702                           	
  4703                           l400:	
  4704  05AE                     	
  4705                           l2013:	
  4706  05AE                     	movf	((Set_Relay@State)),w
  4707  05AE  0820               	btfss	status,2
  4708  05AF  1D03               	goto	u991
  4709  05B0  2DB2               	goto	u990
  4710  05B1  2DB3               u991:
  4711  05B2                     	goto	l409
  4712  05B2  2DDE               u990:
  4713  05B3                     	line	135
  4714                           	
  4715                           l2015:	
  4716  05B3                     ;RelayControl.c: 134:         {;RelayControl.c: 135:             PORTCbits.RC1 = 0;
  4717                           	bcf	(7),1	;volatile
  4718  05B3  1087               	line	136
  4719                           ;RelayControl.c: 136:         }
  4720                           	goto	l409
  4721  05B4  2DDE               	line	137
  4722                           ;RelayControl.c: 137:         else
  4723                           	
  4724                           l402:	
  4725  05B5                     	goto	l409
  4726  05B5  2DDE               	line	140
  4727                           ;RelayControl.c: 138:         {;RelayControl.c: 140:         }
  4728                           	
  4729                           l403:	
  4730  05B6                     	goto	l409
  4731  05B6  2DDE               	
  4732                           l401:	
  4733  05B7                     	line	141
  4734                           ;RelayControl.c: 141:         break;
  4735                           	goto	l409
  4736  05B7  2DDE               	line	143
  4737                           ;RelayControl.c: 143:         case Relay6:
  4738                           	
  4739                           l404:	
  4740  05B8                     	line	144
  4741                           	
  4742                           l2017:	
  4743  05B8                     ;RelayControl.c: 144:         if (State == On)
  4744                           		decf	((Set_Relay@State)),w
  4745  05B8  0320               	btfss	status,2
  4746  05B9  1D03               	goto	u1001
  4747  05BA  2DBC               	goto	u1000
  4748  05BB  2DBD               u1001:
  4749  05BC                     	goto	l2021
  4750  05BC  2DBF               u1000:
  4751  05BD                     	line	146
  4752                           	
  4753                           l2019:	
  4754  05BD                     ;RelayControl.c: 145:         {;RelayControl.c: 146:             PORTCbits.RC2 = 1;
  4755                           	bsf	(7),2	;volatile
  4756  05BD  1507               	line	147
  4757                           ;RelayControl.c: 147:         }
  4758                           	goto	l409
  4759  05BE  2DDE               	line	148
  4760                           ;RelayControl.c: 148:         else if (State == Off)
  4761                           	
  4762                           l405:	
  4763  05BF                     	
  4764                           l2021:	
  4765  05BF                     	movf	((Set_Relay@State)),w
  4766  05BF  0820               	btfss	status,2
  4767  05C0  1D03               	goto	u1011
  4768  05C1  2DC3               	goto	u1010
  4769  05C2  2DC4               u1011:
  4770  05C3                     	goto	l409
  4771  05C3  2DDE               u1010:
  4772  05C4                     	line	150
  4773                           	
  4774                           l2023:	
  4775  05C4                     ;RelayControl.c: 149:         {;RelayControl.c: 150:             PORTCbits.RC2 = 0;
  4776                           	bcf	(7),2	;volatile
  4777  05C4  1107               	line	151
  4778                           ;RelayControl.c: 151:         }
  4779                           	goto	l409
  4780  05C5  2DDE               	line	152
  4781                           ;RelayControl.c: 152:         else
  4782                           	
  4783                           l407:	
  4784  05C6                     	goto	l409
  4785  05C6  2DDE               	line	155
  4786                           ;RelayControl.c: 153:         {;RelayControl.c: 155:         }
  4787                           	
  4788                           l408:	
  4789  05C7                     	goto	l409
  4790  05C7  2DDE               	
  4791                           l406:	
  4792  05C8                     	line	156
  4793                           ;RelayControl.c: 156:         break;
  4794                           	goto	l409
  4795  05C8  2DDE               	line	157
  4796                           	
  4797                           l2025:	
  4798  05C9                     ;RelayControl.c: 157:     }
  4799                           	goto	l409
  4800  05C9  2DDE               	
  4801                           l377:	
  4802  05CA                     	
  4803                           l2027:	
  4804  05CA                     	movf	(Set_Relay@Relay),w
  4805  05CA  0823               	movwf	(??_Set_Relay+0)+0
  4806  05CB  00A1               	clrf	(??_Set_Relay+0)+0+1
  4807  05CC  01A2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4808                           ; Switch size 1, requested type "space"
  4809                           ; Number of cases is 1, Range of values is 0 to 0
  4810                           ; switch strategies available:
  4811                           ; Name         Instructions Cycles
  4812                           ; simple_byte            4     3 (average)
  4813                           ; direct_byte            9     7 (fixed)
  4814                           ; jumptable            260     6 (fixed)
  4815                           ;	Chosen strategy is simple_byte
  4816                           
  4817                           	movf 1+(??_Set_Relay+0)+0,w
  4818  05CD  0822               	opt asmopt_push
  4819                           	opt asmopt_off
  4820                           	xorlw	0^0	; case 0
  4821  05CE  3A00               	skipnz
  4822  05CF  1903               	goto	l2901
  4823  05D0  2DD2               	goto	l409
  4824  05D1  2DDE               	opt asmopt_pop
  4825                           	
  4826                           l2901:	
  4827  05D2                     ; Switch size 1, requested type "space"
  4828                           ; Number of cases is 6, Range of values is 0 to 5
  4829                           ; switch strategies available:
  4830                           ; Name         Instructions Cycles
  4831                           ; direct_byte           19     7 (fixed)
  4832                           ; simple_byte           19    10 (average)
  4833                           ; jumptable            260     6 (fixed)
  4834                           ;	Chosen strategy is direct_byte
  4835                           
  4836                           	movf 0+(??_Set_Relay+0)+0,w
  4837  05D2  0821               	movwf fsr
  4838  05D3  0084               	movlw	6
  4839  05D4  3006               	subwf	fsr,w
  4840  05D5  0204               skipnc
  4841  05D6  1803               goto l409
  4842  05D7  2DDE               movlw high(S2903)
  4843  05D8  3008               movwf pclath
  4844  05D9  008A               	clrc
  4845  05DA  1003               	rlf fsr,w
  4846  05DB  0D04               	addlw low(S2903)
  4847  05DC  3E0C               	movwf pc
  4848  05DD  0082               psect	swtext2,local,class=CONST,delta=2
  4849                           global __pswtext2
  4850                           __pswtext2:
  4851  080C                     S2903:
  4852  080C                     	ljmp	l1977
  4853  080C  118A  2D63         	ljmp	l1985
  4854  080E  118A  2D74         	ljmp	l1993
  4855  0810  118A  2D85         	ljmp	l2001
  4856  0812  118A  2D96         	ljmp	l2009
  4857  0814  118A  2DA7         	ljmp	l2017
  4858  0816  118A  2DB8         psect	text13
  4859                           
  4860                           	
  4861                           l383:	
  4862  05DE                     	line	159
  4863                           	
  4864                           l409:	
  4865  05DE                     	return
  4866  05DE  0008               	opt stack 0
  4867                           GLOBAL	__end_of_Set_Relay
  4868                           	__end_of_Set_Relay:
  4869  05DF                     	signat	_Set_Relay,8313
  4870                           	global	_Handle_Interrupts
  4871                           
  4872 ;; *************** function _Handle_Interrupts *****************
  4873 ;; Defined at:
  4874 ;;		line 440 in file "Main.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;		None
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;  dummy           1   12[COMMON] unsigned char 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      void 
  4881 ;; Registers used:
  4882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4888 ;;      Params:         0       0       0       0
  4889 ;;      Locals:         1       0       0       0
  4890 ;;      Temps:          5       0       0       0
  4891 ;;      Totals:         6       0       0       0
  4892 ;;Total ram usage:        6 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    2
  4895 ;; This function calls:
  4896 ;;		_HandleConfigByte
  4897 ;;		_HandleTelegramByte
  4898 ;;		_Timer_Interrupt
  4899 ;;		_WriteByteFromBuffer
  4900 ;; This function is called by:
  4901 ;;		Interrupt level 1
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4905                           	file	"Main.c"
  4906                           	line	440
  4907                           global __ptext14
  4908                           __ptext14:	;psect for function _Handle_Interrupts
  4909  06BA                     psect	text14
  4910                           	file	"Main.c"
  4911                           	line	440
  4912                           	global	__size_of_Handle_Interrupts
  4913                           	__size_of_Handle_Interrupts	equ	__end_of_Handle_Interrupts-_Handle_Interrupts
  4914  0056                     	
  4915                           _Handle_Interrupts:	
  4916  06BA                     ;incstack = 0
  4917                           	opt	stack 2
  4918                           ; Regs used in _Handle_Interrupts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4919                           psect	intentry,class=CODE,delta=2
  4920                           global __pintentry
  4921                           __pintentry:
  4922  0004                     global interrupt_function
  4923                           interrupt_function:
  4924  0004                     	global saved_w
  4925                           	saved_w	set	btemp+0
  4926  007E                     	movwf	saved_w
  4927  0004  00FE               	swapf	status,w
  4928  0005  0E03               	movwf	(??_Handle_Interrupts+2)
  4929  0006  00F9               	movf	fsr0,w
  4930  0007  0804               	movwf	(??_Handle_Interrupts+3)
  4931  0008  00FA               	movf	pclath,w
  4932  0009  080A               	movwf	(??_Handle_Interrupts+4)
  4933  000A  00FB               	ljmp	_Handle_Interrupts
  4934  000B  118A  2EBA         psect	text14
  4935                           	line	442
  4936                           	
  4937                           i1l2595:	
  4938  06BA                     ;Main.c: 442:     if (PIR1bits.TXIF)
  4939                           	bcf	status, 5	;RP0=0, select bank0
  4940  06BA  1283               	bcf	status, 6	;RP1=0, select bank0
  4941  06BB  1303               	btfss	(12),1	;volatile
  4942  06BC  1C8C               	goto	u171_21
  4943  06BD  2EBF               	goto	u171_20
  4944  06BE  2EC0               u171_21:
  4945  06BF                     	goto	i1l2599
  4946  06BF  2EC4               u171_20:
  4947  06C0                     	line	444
  4948                           	
  4949                           i1l2597:	
  4950  06C0                     ;Main.c: 443:     {;Main.c: 444:         WriteByteFromBuffer();
  4951                           	fcall	_WriteByteFromBuffer
  4952  06C0  118A  27B8  118A   	goto	i1l2599
  4953  06C3  2EC4               	line	445
  4954                           ;Main.c: 445:     }
  4955                           	
  4956                           i1l237:	
  4957  06C4                     	line	447
  4958                           	
  4959                           i1l2599:	
  4960  06C4                     ;Main.c: 447:     if (PIR1bits.RCIF)
  4961                           	bcf	status, 5	;RP0=0, select bank0
  4962  06C4  1283               	bcf	status, 6	;RP1=0, select bank0
  4963  06C5  1303               	btfss	(12),5	;volatile
  4964  06C6  1E8C               	goto	u172_21
  4965  06C7  2EC9               	goto	u172_20
  4966  06C8  2ECA               u172_21:
  4967  06C9                     	goto	i1l238
  4968  06C9  2EE7               u172_20:
  4969  06CA                     	goto	i1l2609
  4970  06CA  2ED5               	line	449
  4971                           	
  4972                           i1l2601:	
  4973  06CB                     ;Main.c: 448:     {;Main.c: 449:         switch (CurrentMode)
  4974                           	goto	i1l2609
  4975  06CB  2ED5               	line	451
  4976                           ;Main.c: 450:         {;Main.c: 451:             case Running:
  4977                           	
  4978                           i1l240:	
  4979  06CC                     	line	452
  4980                           	
  4981                           i1l2603:	
  4982  06CC                     ;Main.c: 452:                 HandleTelegramByte();
  4983                           	fcall	_HandleTelegramByte
  4984  06CC  118A  2440  118A   	line	453
  4985                           ;Main.c: 453:                 break;
  4986                           	goto	i1l238
  4987  06CF  2EE7               	line	455
  4988                           ;Main.c: 455:             case Config:
  4989                           	
  4990                           i1l242:	
  4991  06D0                     	line	456
  4992                           	
  4993                           i1l2605:	
  4994  06D0                     ;Main.c: 456:                 HandleConfigByte();
  4995                           	fcall	_HandleConfigByte
  4996  06D0  118A  24D4  118A   	line	457
  4997                           ;Main.c: 457:                 break;
  4998                           	goto	i1l238
  4999  06D3  2EE7               	line	458
  5000                           	
  5001                           i1l2607:	
  5002  06D4                     ;Main.c: 458:         }
  5003                           	goto	i1l238
  5004  06D4  2EE7               	
  5005                           i1l239:	
  5006  06D5                     	
  5007                           i1l2609:	
  5008  06D5                     	bcf	status, 5	;RP0=0, select bank0
  5009  06D5  1283               	bcf	status, 6	;RP1=0, select bank0
  5010  06D6  1303               	movf	(_CurrentMode),w
  5011  06D7  0865               	movwf	(??_Handle_Interrupts+0)+0
  5012  06D8  00F7               	clrf	(??_Handle_Interrupts+0)+0+1
  5013  06D9  01F8               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5014                           ; Switch size 1, requested type "space"
  5015                           ; Number of cases is 1, Range of values is 0 to 0
  5016                           ; switch strategies available:
  5017                           ; Name         Instructions Cycles
  5018                           ; simple_byte            4     3 (average)
  5019                           ; direct_byte            9     7 (fixed)
  5020                           ; jumptable            260     6 (fixed)
  5021                           ;	Chosen strategy is simple_byte
  5022                           
  5023                           	movf 1+(??_Handle_Interrupts+0)+0,w
  5024  06DA  0878               	opt asmopt_push
  5025                           	opt asmopt_off
  5026                           	xorlw	0^0	; case 0
  5027  06DB  3A00               	skipnz
  5028  06DC  1903               	goto	i1l2905
  5029  06DD  2EDF               	goto	i1l238
  5030  06DE  2EE7               	opt asmopt_pop
  5031                           	
  5032                           i1l2905:	
  5033  06DF                     ; Switch size 1, requested type "space"
  5034                           ; Number of cases is 2, Range of values is 0 to 1
  5035                           ; switch strategies available:
  5036                           ; Name         Instructions Cycles
  5037                           ; simple_byte            7     4 (average)
  5038                           ; direct_byte           11     7 (fixed)
  5039                           ; jumptable            260     6 (fixed)
  5040                           ;	Chosen strategy is simple_byte
  5041                           
  5042                           	movf 0+(??_Handle_Interrupts+0)+0,w
  5043  06DF  0877               	opt asmopt_push
  5044                           	opt asmopt_off
  5045                           	xorlw	0^0	; case 0
  5046  06E0  3A00               	skipnz
  5047  06E1  1903               	goto	i1l2603
  5048  06E2  2ECC               	xorlw	1^0	; case 1
  5049  06E3  3A01               	skipnz
  5050  06E4  1903               	goto	i1l2605
  5051  06E5  2ED0               	goto	i1l238
  5052  06E6  2EE7               	opt asmopt_pop
  5053                           
  5054                           	
  5055                           i1l241:	
  5056  06E7                     	line	460
  5057                           ;Main.c: 460:     }
  5058                           	
  5059                           i1l238:	
  5060  06E7                     	line	462
  5061                           ;Main.c: 462:     if (INTCONbits.RAIF)
  5062                           	btfss	(11),0	;volatile
  5063  06E7  1C0B               	goto	u173_21
  5064  06E8  2EEA               	goto	u173_20
  5065  06E9  2EEB               u173_21:
  5066  06EA                     	goto	i1l2623
  5067  06EA  2EFC               u173_20:
  5068  06EB                     	line	465
  5069                           	
  5070                           i1l2611:	
  5071  06EB                     ;Main.c: 463:     {;Main.c: 465:         INTCONbits.RAIE = 0;
  5072                           	bcf	(11),3	;volatile
  5073  06EB  118B               	line	466
  5074                           	
  5075                           i1l2613:	
  5076  06EC                     ;Main.c: 466:         unsigned char dummy = PORTA;
  5077                           	bcf	status, 5	;RP0=0, select bank0
  5078  06EC  1283               	bcf	status, 6	;RP1=0, select bank0
  5079  06ED  1303               	movf	(5),w	;volatile
  5080  06EE  0805               	movwf	(??_Handle_Interrupts+0)+0
  5081  06EF  00F7               	movf	(??_Handle_Interrupts+0)+0,w
  5082  06F0  0877               	movwf	(Handle_Interrupts@dummy)
  5083  06F1  00FC               	line	467
  5084                           	
  5085                           i1l2615:	
  5086  06F2                     ;Main.c: 467:         INTCONbits.RAIF = 0;
  5087                           	bcf	(11),0	;volatile
  5088  06F2  100B               	line	470
  5089                           	
  5090                           i1l2617:	
  5091  06F3                     ;Main.c: 470:         CurrentMode = Config;
  5092                           	clrf	(_CurrentMode)
  5093  06F3  01E5               	incf	(_CurrentMode),f
  5094  06F4  0AE5               	line	473
  5095                           	
  5096                           i1l2619:	
  5097  06F5                     ;Main.c: 473:         TRISAbits.TRISA5 = 0;
  5098                           	bsf	status, 5	;RP0=1, select bank1
  5099  06F5  1683               	bcf	status, 6	;RP1=0, select bank1
  5100  06F6  1303               	bcf	(133)^080h,5	;volatile
  5101  06F7  1285               	line	475
  5102                           	
  5103                           i1l2621:	
  5104  06F8                     ;Main.c: 475:         PORTAbits.RA5 = 0;
  5105                           	bcf	status, 5	;RP0=0, select bank0
  5106  06F8  1283               	bcf	status, 6	;RP1=0, select bank0
  5107  06F9  1303               	bcf	(5),5	;volatile
  5108  06FA  1285               	goto	i1l2623
  5109  06FB  2EFC               	line	477
  5110                           ;Main.c: 477:     }
  5111                           	
  5112                           i1l243:	
  5113  06FC                     	line	479
  5114                           	
  5115                           i1l2623:	
  5116  06FC                     ;Main.c: 479:     if (PIR1bits.TMR1IF)
  5117                           	bcf	status, 5	;RP0=0, select bank0
  5118  06FC  1283               	bcf	status, 6	;RP1=0, select bank0
  5119  06FD  1303               	btfss	(12),0	;volatile
  5120  06FE  1C0C               	goto	u174_21
  5121  06FF  2F01               	goto	u174_20
  5122  0700  2F02               u174_21:
  5123  0701                     	goto	i1l245
  5124  0701  2F07               u174_20:
  5125  0702                     	line	481
  5126                           	
  5127                           i1l2625:	
  5128  0702                     ;Main.c: 480:     {;Main.c: 481:         PIR1bits.TMR1IF = 0;
  5129                           	bcf	(12),0	;volatile
  5130  0702  100C               	line	482
  5131                           	
  5132                           i1l2627:	
  5133  0703                     ;Main.c: 482:         Timer_Interrupt();
  5134                           	fcall	_Timer_Interrupt
  5135  0703  118A  2781  118A   	goto	i1l245
  5136  0706  2F07               	line	484
  5137                           ;Main.c: 484:     }
  5138                           	
  5139                           i1l244:	
  5140  0707                     	line	485
  5141                           	
  5142                           i1l245:	
  5143  0707                     	movf	(??_Handle_Interrupts+4),w
  5144  0707  087B               	movwf	pclath
  5145  0708  008A               	movf	(??_Handle_Interrupts+3),w
  5146  0709  087A               	movwf	fsr0
  5147  070A  0084               	swapf	(??_Handle_Interrupts+2)^0FFFFFF80h,w
  5148  070B  0E79               	movwf	status
  5149  070C  0083               	swapf	saved_w,f
  5150  070D  0EFE               	swapf	saved_w,w
  5151  070E  0E7E               	retfie
  5152  070F  0009               	opt stack 0
  5153                           GLOBAL	__end_of_Handle_Interrupts
  5154                           	__end_of_Handle_Interrupts:
  5155  0710                     	signat	_Handle_Interrupts,89
  5156                           	global	_WriteByteFromBuffer
  5157                           
  5158 ;; *************** function _WriteByteFromBuffer *****************
  5159 ;; Defined at:
  5160 ;;		line 138 in file "Eusart.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;		None
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;		None
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  1    wreg      void 
  5167 ;; Registers used:
  5168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5174 ;;      Params:         0       0       0       0
  5175 ;;      Locals:         0       0       0       0
  5176 ;;      Temps:          1       0       0       0
  5177 ;;      Totals:         1       0       0       0
  5178 ;;Total ram usage:        1 bytes
  5179 ;; Hardware stack levels used:    1
  5180 ;; Hardware stack levels required when called:    1
  5181 ;; This function calls:
  5182 ;;		_Write_Byte
  5183 ;; This function is called by:
  5184 ;;		_Handle_Interrupts
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5188                           	file	"Eusart.c"
  5189                           	line	138
  5190                           global __ptext15
  5191                           __ptext15:	;psect for function _WriteByteFromBuffer
  5192  07B8                     psect	text15
  5193                           	file	"Eusart.c"
  5194                           	line	138
  5195                           	global	__size_of_WriteByteFromBuffer
  5196                           	__size_of_WriteByteFromBuffer	equ	__end_of_WriteByteFromBuffer-_WriteByteFromBuffer
  5197  002B                     	
  5198                           _WriteByteFromBuffer:	
  5199  07B8                     ;incstack = 0
  5200                           	opt	stack 2
  5201                           ; Regs used in _WriteByteFromBuffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5202                           	line	140
  5203                           	
  5204                           i1l2505:	
  5205  07B8                     ;Eusart.c: 140:     if (BufferHead != BufferTail)
  5206                           	movf	(_BufferHead),w
  5207  07B8  087D               	bcf	status, 5	;RP0=0, select bank0
  5208  07B9  1283               	bcf	status, 6	;RP1=0, select bank0
  5209  07BA  1303               	xorwf	(_BufferTail),w
  5210  07BB  0663               	skipnz
  5211  07BC  1903               	goto	u156_21
  5212  07BD  2FBF               	goto	u156_20
  5213  07BE  2FC0               u156_21:
  5214  07BF                     	goto	i1l2515
  5215  07BF  2FD8               u156_20:
  5216  07C0                     	line	142
  5217                           	
  5218                           i1l2507:	
  5219  07C0                     ;Eusart.c: 141:     {;Eusart.c: 142:         Write_Byte(SendBuffer[BufferTail]);
  5220                           	movf	(_BufferTail),w
  5221  07C0  0863               	addlw	low(_SendBuffer|((0x0)<<8))&0ffh
  5222  07C1  3EA0               	movwf	fsr0
  5223  07C2  0084               	bcf	status, 7	;select IRP bank1
  5224  07C3  1383               	movf	indf,w
  5225  07C4  0800               	fcall	_Write_Byte
  5226  07C5  158A  2766  118A   	line	144
  5227                           	
  5228                           i1l2509:	
  5229  07C8                     ;Eusart.c: 144:         if (BufferTail == 39)
  5230                           		movlw	39
  5231  07C8  3027               	bcf	status, 5	;RP0=0, select bank0
  5232  07C9  1283               	bcf	status, 6	;RP1=0, select bank0
  5233  07CA  1303               	xorwf	((_BufferTail)),w
  5234  07CB  0663               	btfss	status,2
  5235  07CC  1D03               	goto	u157_21
  5236  07CD  2FCF               	goto	u157_20
  5237  07CE  2FD0               u157_21:
  5238  07CF                     	goto	i1l2513
  5239  07CF  2FD2               u157_20:
  5240  07D0                     	line	146
  5241                           	
  5242                           i1l2511:	
  5243  07D0                     ;Eusart.c: 145:         {;Eusart.c: 146:             BufferTail = 0;
  5244                           	clrf	(_BufferTail)
  5245  07D0  01E3               	line	147
  5246                           ;Eusart.c: 147:         }
  5247                           	goto	i1l2515
  5248  07D1  2FD8               	line	148
  5249                           ;Eusart.c: 148:         else
  5250                           	
  5251                           i1l324:	
  5252  07D2                     	line	150
  5253                           	
  5254                           i1l2513:	
  5255  07D2                     ;Eusart.c: 149:         {;Eusart.c: 150:             BufferTail++;
  5256                           	movlw	low(01h)
  5257  07D2  3001               	movwf	(??_WriteByteFromBuffer+0)+0
  5258  07D3  00F1               	movf	(??_WriteByteFromBuffer+0)+0,w
  5259  07D4  0871               	addwf	(_BufferTail),f
  5260  07D5  07E3               	goto	i1l2515
  5261  07D6  2FD8               	line	151
  5262                           ;Eusart.c: 151:         }
  5263                           	
  5264                           i1l325:	
  5265  07D7                     	goto	i1l2515
  5266  07D7  2FD8               	line	153
  5267                           ;Eusart.c: 153:     }
  5268                           	
  5269                           i1l323:	
  5270  07D8                     	line	155
  5271                           	
  5272                           i1l2515:	
  5273  07D8                     ;Eusart.c: 155:     if (BufferHead == BufferTail)
  5274                           	movf	(_BufferHead),w
  5275  07D8  087D               	xorwf	(_BufferTail),w
  5276  07D9  0663               	skipz
  5277  07DA  1D03               	goto	u158_21
  5278  07DB  2FDD               	goto	u158_20
  5279  07DC  2FDE               u158_21:
  5280  07DD                     	goto	i1l327
  5281  07DD  2FE2               u158_20:
  5282  07DE                     	line	157
  5283                           	
  5284                           i1l2517:	
  5285  07DE                     ;Eusart.c: 156:     {;Eusart.c: 157:         PIE1bits.TXIE = 0;
  5286                           	bsf	status, 5	;RP0=1, select bank1
  5287  07DE  1683               	bcf	status, 6	;RP1=0, select bank1
  5288  07DF  1303               	bcf	(140)^080h,1	;volatile
  5289  07E0  108C               	goto	i1l327
  5290  07E1  2FE2               	line	158
  5291                           ;Eusart.c: 158:     }
  5292                           	
  5293                           i1l326:	
  5294  07E2                     	line	160
  5295                           	
  5296                           i1l327:	
  5297  07E2                     	return
  5298  07E2  0008               	opt stack 0
  5299                           GLOBAL	__end_of_WriteByteFromBuffer
  5300                           	__end_of_WriteByteFromBuffer:
  5301  07E3                     	signat	_WriteByteFromBuffer,89
  5302                           	global	_Write_Byte
  5303                           
  5304 ;; *************** function _Write_Byte *****************
  5305 ;; Defined at:
  5306 ;;		line 113 in file "Eusart.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  Data            1    wreg     unsigned char 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  Data            1    0[COMMON] unsigned char 
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  1    wreg      void 
  5313 ;; Registers used:
  5314 ;;		wreg
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5320 ;;      Params:         0       0       0       0
  5321 ;;      Locals:         1       0       0       0
  5322 ;;      Temps:          0       0       0       0
  5323 ;;      Totals:         1       0       0       0
  5324 ;;Total ram usage:        1 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; This function calls:
  5327 ;;		Nothing
  5328 ;; This function is called by:
  5329 ;;		_WriteByteFromBuffer
  5330 ;; This function uses a non-reentrant model
  5331 ;;
  5332                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5333                           	line	113
  5334                           global __ptext16
  5335                           __ptext16:	;psect for function _Write_Byte
  5336  0F66                     psect	text16
  5337                           	file	"Eusart.c"
  5338                           	line	113
  5339                           	global	__size_of_Write_Byte
  5340                           	__size_of_Write_Byte	equ	__end_of_Write_Byte-_Write_Byte
  5341  0006                     	
  5342                           _Write_Byte:	
  5343  0F66                     ;incstack = 0
  5344                           	opt	stack 2
  5345                           ; Regs used in _Write_Byte: [wreg]
  5346                           ;Write_Byte@Data stored from wreg
  5347                           	movwf	(Write_Byte@Data)
  5348  0F66  00F0               	line	117
  5349                           	
  5350                           i1l2113:	
  5351  0F67                     ;Eusart.c: 113: void Write_Byte (unsigned char Data);Eusart.c: 114: {;Eusart.c: 117:    
                                  TXREG = Data;
  5352                           	movf	(Write_Byte@Data),w
  5353  0F67  0870               	bcf	status, 5	;RP0=0, select bank0
  5354  0F68  1283               	bcf	status, 6	;RP1=0, select bank0
  5355  0F69  1303               	movwf	(21)	;volatile
  5356  0F6A  0095               	line	118
  5357                           	
  5358                           i1l315:	
  5359  0F6B                     	return
  5360  0F6B  0008               	opt stack 0
  5361                           GLOBAL	__end_of_Write_Byte
  5362                           	__end_of_Write_Byte:
  5363  0F6C                     	signat	_Write_Byte,4217
  5364                           	global	_Timer_Interrupt
  5365                           
  5366 ;; *************** function _Timer_Interrupt *****************
  5367 ;; Defined at:
  5368 ;;		line 74 in file "Timer.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;		None
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;		None
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      void 
  5375 ;; Registers used:
  5376 ;;		wreg, status,2, status,0
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5382 ;;      Params:         0       0       0       0
  5383 ;;      Locals:         0       0       0       0
  5384 ;;      Temps:          0       0       0       0
  5385 ;;      Totals:         0       0       0       0
  5386 ;;Total ram usage:        0 bytes
  5387 ;; Hardware stack levels used:    1
  5388 ;; This function calls:
  5389 ;;		Nothing
  5390 ;; This function is called by:
  5391 ;;		_Handle_Interrupts
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5395                           	file	"Timer.c"
  5396                           	line	74
  5397                           global __ptext17
  5398                           __ptext17:	;psect for function _Timer_Interrupt
  5399  0781                     psect	text17
  5400                           	file	"Timer.c"
  5401                           	line	74
  5402                           	global	__size_of_Timer_Interrupt
  5403                           	__size_of_Timer_Interrupt	equ	__end_of_Timer_Interrupt-_Timer_Interrupt
  5404  0037                     	
  5405                           _Timer_Interrupt:	
  5406  0781                     ;incstack = 0
  5407                           	opt	stack 3
  5408                           ; Regs used in _Timer_Interrupt: [wreg+status,2+status,0]
  5409                           	line	76
  5410                           	
  5411                           i1l2209:	
  5412  0781                     ;Timer.c: 76:     TMR1H = 160;
  5413                           	movlw	low(0A0h)
  5414  0781  30A0               	bcf	status, 5	;RP0=0, select bank0
  5415  0782  1283               	bcf	status, 6	;RP1=0, select bank0
  5416  0783  1303               	movwf	(15)	;volatile
  5417  0784  008F               	line	77
  5418                           ;Timer.c: 77:     TMR1L = 138;
  5419                           	movlw	low(08Ah)
  5420  0785  308A               	movwf	(14)	;volatile
  5421  0786  008E               	line	78
  5422                           ;Timer.c: 78:     Counter_100ms++;
  5423                           	movlw	01h
  5424  0787  3001               	addwf	(_Counter_100ms),f
  5425  0788  07DC               	skipnc
  5426  0789  1803               	incf	(_Counter_100ms+1),f
  5427  078A  0ADD               	movlw	0
  5428  078B  3000               	addwf	(_Counter_100ms+1),f
  5429  078C  07DD               	line	82
  5430                           	
  5431                           i1l2211:	
  5432  078D                     ;Timer.c: 82:     if (Counter_100ms == 10)
  5433                           		movlw	10
  5434  078D  300A               	xorwf	((_Counter_100ms)),w
  5435  078E  065C               iorwf	((_Counter_100ms+1)),w
  5436  078F  045D               	btfss	status,2
  5437  0790  1D03               	goto	u118_21
  5438  0791  2F93               	goto	u118_20
  5439  0792  2F94               u118_21:
  5440  0793                     	goto	i1l63
  5441  0793  2FB7               u118_20:
  5442  0794                     	line	85
  5443                           	
  5444                           i1l2213:	
  5445  0794                     ;Timer.c: 83:     {;Timer.c: 85:         Counter_100ms = 0;
  5446                           	clrf	(_Counter_100ms)
  5447  0794  01DC               	clrf	(_Counter_100ms+1)
  5448  0795  01DD               	line	86
  5449                           	
  5450                           i1l2215:	
  5451  0796                     ;Timer.c: 86:         Counter_1sec ++;
  5452                           	movlw	01h
  5453  0796  3001               	addwf	(_Counter_1sec),f
  5454  0797  07DA               	skipnc
  5455  0798  1803               	incf	(_Counter_1sec+1),f
  5456  0799  0ADB               	movlw	0
  5457  079A  3000               	addwf	(_Counter_1sec+1),f
  5458  079B  07DB               	line	88
  5459                           	
  5460                           i1l2217:	
  5461  079C                     ;Timer.c: 88:         if (Counter_1sec == 10)
  5462                           		movlw	10
  5463  079C  300A               	xorwf	((_Counter_1sec)),w
  5464  079D  065A               iorwf	((_Counter_1sec+1)),w
  5465  079E  045B               	btfss	status,2
  5466  079F  1D03               	goto	u119_21
  5467  07A0  2FA2               	goto	u119_20
  5468  07A1  2FA3               u119_21:
  5469  07A2                     	goto	i1l63
  5470  07A2  2FB7               u119_20:
  5471  07A3                     	line	91
  5472                           	
  5473                           i1l2219:	
  5474  07A3                     ;Timer.c: 89:         {;Timer.c: 91:             Counter_1sec = 0;
  5475                           	clrf	(_Counter_1sec)
  5476  07A3  01DA               	clrf	(_Counter_1sec+1)
  5477  07A4  01DB               	line	92
  5478                           	
  5479                           i1l2221:	
  5480  07A5                     ;Timer.c: 92:             Counter_10sec ++;
  5481                           	movlw	01h
  5482  07A5  3001               	addwf	(_Counter_10sec),f
  5483  07A6  07D8               	skipnc
  5484  07A7  1803               	incf	(_Counter_10sec+1),f
  5485  07A8  0AD9               	movlw	0
  5486  07A9  3000               	addwf	(_Counter_10sec+1),f
  5487  07AA  07D9               	line	94
  5488                           	
  5489                           i1l2223:	
  5490  07AB                     ;Timer.c: 94:             if (Counter_10sec == 10)
  5491                           		movlw	10
  5492  07AB  300A               	xorwf	((_Counter_10sec)),w
  5493  07AC  0658               iorwf	((_Counter_10sec+1)),w
  5494  07AD  0459               	btfss	status,2
  5495  07AE  1D03               	goto	u120_21
  5496  07AF  2FB1               	goto	u120_20
  5497  07B0  2FB2               u120_21:
  5498  07B1                     	goto	i1l63
  5499  07B1  2FB7               u120_20:
  5500  07B2                     	line	97
  5501                           	
  5502                           i1l2225:	
  5503  07B2                     ;Timer.c: 95:             {;Timer.c: 97:                 Counter_10sec = 0;
  5504                           	clrf	(_Counter_10sec)
  5505  07B2  01D8               	clrf	(_Counter_10sec+1)
  5506  07B3  01D9               	goto	i1l63
  5507  07B4  2FB7               	line	98
  5508                           ;Timer.c: 98:             }
  5509                           	
  5510                           i1l62:	
  5511  07B5                     	goto	i1l63
  5512  07B5  2FB7               	line	100
  5513                           ;Timer.c: 100:         }
  5514                           	
  5515                           i1l61:	
  5516  07B6                     	goto	i1l63
  5517  07B6  2FB7               	line	102
  5518                           ;Timer.c: 102:     }
  5519                           	
  5520                           i1l60:	
  5521  07B7                     	line	103
  5522                           	
  5523                           i1l63:	
  5524  07B7                     	return
  5525  07B7  0008               	opt stack 0
  5526                           GLOBAL	__end_of_Timer_Interrupt
  5527                           	__end_of_Timer_Interrupt:
  5528  07B8                     	signat	_Timer_Interrupt,89
  5529                           	global	_HandleTelegramByte
  5530                           
  5531 ;; *************** function _HandleTelegramByte *****************
  5532 ;; Defined at:
  5533 ;;		line 3 in file "TelegramInterpreter.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;		None
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;  Byte            1    4[COMMON] unsigned char 
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  1    wreg      void 
  5540 ;; Registers used:
  5541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5547 ;;      Params:         0       0       0       0
  5548 ;;      Locals:         1       0       0       0
  5549 ;;      Temps:          2       0       0       0
  5550 ;;      Totals:         3       0       0       0
  5551 ;;Total ram usage:        3 bytes
  5552 ;; Hardware stack levels used:    1
  5553 ;; Hardware stack levels required when called:    1
  5554 ;; This function calls:
  5555 ;;		_Read_Byte
  5556 ;; This function is called by:
  5557 ;;		_Handle_Interrupts
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5561                           	file	"TelegramInterpreter.c"
  5562                           	line	3
  5563                           global __ptext18
  5564                           __ptext18:	;psect for function _HandleTelegramByte
  5565  0440                     psect	text18
  5566                           	file	"TelegramInterpreter.c"
  5567                           	line	3
  5568                           	global	__size_of_HandleTelegramByte
  5569                           	__size_of_HandleTelegramByte	equ	__end_of_HandleTelegramByte-_HandleTelegramByte
  5570  0094                     	
  5571                           _HandleTelegramByte:	
  5572  0440                     ;incstack = 0
  5573                           	opt	stack 2
  5574                           ; Regs used in _HandleTelegramByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5575                           	line	10
  5576                           	
  5577                           i1l2519:	
  5578  0440                     ;TelegramInterpreter.c: 5:     unsigned char Byte;;TelegramInterpreter.c: 6:     static 
                                 unsigned char ByteCounter = Idle;;TelegramInterpreter.c: 7:     static unsigned char Com
                                 mandCounter = 0;;TelegramInterpreter.c: 8:     static unsigned char Lenght;;TelegramInte
                                 rpreter.c: 10:     Byte = Read_Byte();
  5579                           	fcall	_Read_Byte
  5580  0440  158A  2774  118A   	movwf	(??_HandleTelegramByte+0)+0
  5581  0443  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5582  0444  0872               	movwf	(HandleTelegramByte@Byte)
  5583  0445  00F4               	line	12
  5584                           	
  5585                           i1l2521:	
  5586  0446                     ;TelegramInterpreter.c: 12:     if (Byte == ':')
  5587                           		movlw	58
  5588  0446  303A               	xorwf	((HandleTelegramByte@Byte)),w
  5589  0447  0674               	btfss	status,2
  5590  0448  1D03               	goto	u159_21
  5591  0449  2C4B               	goto	u159_20
  5592  044A  2C4C               u159_21:
  5593  044B                     	goto	i1l2525
  5594  044B  2C59               u159_20:
  5595  044C                     	line	14
  5596                           	
  5597                           i1l2523:	
  5598  044C                     ;TelegramInterpreter.c: 13:     {;TelegramInterpreter.c: 14:         Telegram.Start = By
                                 te;
  5599                           	movf	(HandleTelegramByte@Byte),w
  5600  044C  0874               	movwf	(??_HandleTelegramByte+0)+0
  5601  044D  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5602  044E  0872               	bsf	status, 5	;RP0=1, select bank1
  5603  044F  1683               	bcf	status, 6	;RP1=0, select bank1
  5604  0450  1303               	movwf	(_Telegram)^080h
  5605  0451  00C8               	line	15
  5606                           ;TelegramInterpreter.c: 15:         ByteCounter = Address;
  5607                           	movlw	low(02h)
  5608  0452  3002               	movwf	(??_HandleTelegramByte+0)+0
  5609  0453  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5610  0454  0872               	bcf	status, 5	;RP0=0, select bank0
  5611  0455  1283               	bcf	status, 6	;RP1=0, select bank0
  5612  0456  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5613  0457  00E2               	line	16
  5614                           ;TelegramInterpreter.c: 16:     }
  5615                           	goto	i1l480
  5616  0458  2CD3               	line	17
  5617                           ;TelegramInterpreter.c: 17:     else if (ByteCounter > Start)
  5618                           	
  5619                           i1l469:	
  5620  0459                     	
  5621                           i1l2525:	
  5622  0459                     	movlw	low(02h)
  5623  0459  3002               	bcf	status, 5	;RP0=0, select bank0
  5624  045A  1283               	bcf	status, 6	;RP1=0, select bank0
  5625  045B  1303               	subwf	(HandleTelegramByte@ByteCounter),w
  5626  045C  0262               	skipc
  5627  045D  1C03               	goto	u160_21
  5628  045E  2C60               	goto	u160_20
  5629  045F  2C61               u160_21:
  5630  0460                     	goto	i1l480
  5631  0460  2CD3               u160_20:
  5632  0461                     	goto	i1l2553
  5633  0461  2CB8               	line	19
  5634                           	
  5635                           i1l2527:	
  5636  0462                     ;TelegramInterpreter.c: 18:     {;TelegramInterpreter.c: 19:         switch (ByteCounter
                                 )
  5637                           	goto	i1l2553
  5638  0462  2CB8               	line	21
  5639                           ;TelegramInterpreter.c: 20:         {;TelegramInterpreter.c: 21:             case Addres
                                 s:
  5640                           	
  5641                           i1l473:	
  5642  0463                     	line	22
  5643                           	
  5644                           i1l2529:	
  5645  0463                     ;TelegramInterpreter.c: 22:                 Telegram.Address = Byte;
  5646                           	movf	(HandleTelegramByte@Byte),w
  5647  0463  0874               	movwf	(??_HandleTelegramByte+0)+0
  5648  0464  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5649  0465  0872               	bsf	status, 5	;RP0=1, select bank1
  5650  0466  1683               	bcf	status, 6	;RP1=0, select bank1
  5651  0467  1303               	movwf	0+(_Telegram)^080h+01h
  5652  0468  00C9               	line	23
  5653                           ;TelegramInterpreter.c: 23:                 ByteCounter = Commandlength;
  5654                           	movlw	low(03h)
  5655  0469  3003               	movwf	(??_HandleTelegramByte+0)+0
  5656  046A  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5657  046B  0872               	bcf	status, 5	;RP0=0, select bank0
  5658  046C  1283               	bcf	status, 6	;RP1=0, select bank0
  5659  046D  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5660  046E  00E2               	line	24
  5661                           ;TelegramInterpreter.c: 24:                 break;
  5662                           	goto	i1l480
  5663  046F  2CD3               	line	26
  5664                           ;TelegramInterpreter.c: 26:             case Commandlength:
  5665                           	
  5666                           i1l475:	
  5667  0470                     	line	27
  5668                           	
  5669                           i1l2531:	
  5670  0470                     ;TelegramInterpreter.c: 27:                 Telegram.Commandlength = Byte - 48;
  5671                           	movf	(HandleTelegramByte@Byte),w
  5672  0470  0874               	addlw	0D0h
  5673  0471  3ED0               	movwf	(??_HandleTelegramByte+0)+0
  5674  0472  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5675  0473  0872               	bsf	status, 5	;RP0=1, select bank1
  5676  0474  1683               	bcf	status, 6	;RP1=0, select bank1
  5677  0475  1303               	movwf	0+(_Telegram)^080h+02h
  5678  0476  00CA               	line	28
  5679                           	
  5680                           i1l2533:	
  5681  0477                     ;TelegramInterpreter.c: 28:                 ByteCounter = Command;
  5682                           	movlw	low(04h)
  5683  0477  3004               	movwf	(??_HandleTelegramByte+0)+0
  5684  0478  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5685  0479  0872               	bcf	status, 5	;RP0=0, select bank0
  5686  047A  1283               	bcf	status, 6	;RP1=0, select bank0
  5687  047B  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5688  047C  00E2               	line	29
  5689                           	
  5690                           i1l2535:	
  5691  047D                     ;TelegramInterpreter.c: 29:                 CommandCounter = 0;
  5692                           	clrf	(HandleTelegramByte@CommandCounter)
  5693  047D  01E1               	line	30
  5694                           ;TelegramInterpreter.c: 30:                 break;
  5695                           	goto	i1l480
  5696  047E  2CD3               	line	32
  5697                           ;TelegramInterpreter.c: 32:             case Command:
  5698                           	
  5699                           i1l476:	
  5700  047F                     	line	33
  5701                           	
  5702                           i1l2537:	
  5703  047F                     ;TelegramInterpreter.c: 33:                 Telegram.Command[CommandCounter] = Byte;
  5704                           	movf	(HandleTelegramByte@Byte),w
  5705  047F  0874               	movwf	(??_HandleTelegramByte+0)+0
  5706  0480  00F2               	movf	(HandleTelegramByte@CommandCounter),w
  5707  0481  0861               	addlw	low(_Telegram|((0x0)<<8)+03h)&0ffh
  5708  0482  3ECB               	movwf	fsr0
  5709  0483  0084               	movf	(??_HandleTelegramByte+0)+0,w
  5710  0484  0872               	bcf	status, 7	;select IRP bank1
  5711  0485  1383               	movwf	indf
  5712  0486  0080               	line	34
  5713                           	
  5714                           i1l2539:	
  5715  0487                     ;TelegramInterpreter.c: 34:                 CommandCounter ++;
  5716                           	movlw	low(01h)
  5717  0487  3001               	movwf	(??_HandleTelegramByte+0)+0
  5718  0488  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5719  0489  0872               	addwf	(HandleTelegramByte@CommandCounter),f
  5720  048A  07E1               	line	35
  5721                           	
  5722                           i1l2541:	
  5723  048B                     ;TelegramInterpreter.c: 35:                 if (CommandCounter >= Telegram.Commandlength
                                 )
  5724                           	bsf	status, 5	;RP0=1, select bank1
  5725  048B  1683               	bcf	status, 6	;RP1=0, select bank1
  5726  048C  1303               	movf	0+(_Telegram)^080h+02h,w
  5727  048D  084A               	bcf	status, 5	;RP0=0, select bank0
  5728  048E  1283               	bcf	status, 6	;RP1=0, select bank0
  5729  048F  1303               	subwf	(HandleTelegramByte@CommandCounter),w
  5730  0490  0261               	skipc
  5731  0491  1C03               	goto	u161_21
  5732  0492  2C94               	goto	u161_20
  5733  0493  2C95               u161_21:
  5734  0494                     	goto	i1l480
  5735  0494  2CD3               u161_20:
  5736  0495                     	line	37
  5737                           	
  5738                           i1l2543:	
  5739  0495                     ;TelegramInterpreter.c: 36:                 {;TelegramInterpreter.c: 37:                
                                      ByteCounter = End1;
  5740                           	movlw	low(05h)
  5741  0495  3005               	movwf	(??_HandleTelegramByte+0)+0
  5742  0496  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5743  0497  0872               	movwf	(HandleTelegramByte@ByteCounter)
  5744  0498  00E2               	goto	i1l480
  5745  0499  2CD3               	line	38
  5746                           ;TelegramInterpreter.c: 38:                 }
  5747                           	
  5748                           i1l477:	
  5749  049A                     	line	39
  5750                           ;TelegramInterpreter.c: 39:                 break;
  5751                           	goto	i1l480
  5752  049A  2CD3               	line	41
  5753                           ;TelegramInterpreter.c: 41:             case End1:
  5754                           	
  5755                           i1l478:	
  5756  049B                     	line	42
  5757                           	
  5758                           i1l2545:	
  5759  049B                     ;TelegramInterpreter.c: 42:                 Telegram.End[0] = Byte;
  5760                           	movf	(HandleTelegramByte@Byte),w
  5761  049B  0874               	movwf	(??_HandleTelegramByte+0)+0
  5762  049C  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5763  049D  0872               	bsf	status, 5	;RP0=1, select bank1
  5764  049E  1683               	bcf	status, 6	;RP1=0, select bank1
  5765  049F  1303               	movwf	0+(_Telegram)^080h+013h
  5766  04A0  00DB               	line	43
  5767                           ;TelegramInterpreter.c: 43:                 ByteCounter = End2;
  5768                           	movlw	low(06h)
  5769  04A1  3006               	movwf	(??_HandleTelegramByte+0)+0
  5770  04A2  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5771  04A3  0872               	bcf	status, 5	;RP0=0, select bank0
  5772  04A4  1283               	bcf	status, 6	;RP1=0, select bank0
  5773  04A5  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5774  04A6  00E2               	line	44
  5775                           ;TelegramInterpreter.c: 44:                 break;
  5776                           	goto	i1l480
  5777  04A7  2CD3               	line	46
  5778                           ;TelegramInterpreter.c: 46:             case End2:
  5779                           	
  5780                           i1l479:	
  5781  04A8                     	line	47
  5782                           	
  5783                           i1l2547:	
  5784  04A8                     ;TelegramInterpreter.c: 47:                 Telegram.End[1] = Byte;
  5785                           	movf	(HandleTelegramByte@Byte),w
  5786  04A8  0874               	movwf	(??_HandleTelegramByte+0)+0
  5787  04A9  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5788  04AA  0872               	bsf	status, 5	;RP0=1, select bank1
  5789  04AB  1683               	bcf	status, 6	;RP1=0, select bank1
  5790  04AC  1303               	movwf	0+(_Telegram)^080h+014h
  5791  04AD  00DC               	line	48
  5792                           	
  5793                           i1l2549:	
  5794  04AE                     ;TelegramInterpreter.c: 48:                 ByteCounter = Start;
  5795                           	bcf	status, 5	;RP0=0, select bank0
  5796  04AE  1283               	bcf	status, 6	;RP1=0, select bank0
  5797  04AF  1303               	clrf	(HandleTelegramByte@ByteCounter)
  5798  04B0  01E2               	incf	(HandleTelegramByte@ByteCounter),f
  5799  04B1  0AE2               	line	50
  5800                           ;TelegramInterpreter.c: 50:                 TelegramReadyFlag = 1;
  5801                           	movlw	01h
  5802  04B2  3001               	movwf	(_TelegramReadyFlag)
  5803  04B3  00DE               	movlw	0
  5804  04B4  3000               	movwf	((_TelegramReadyFlag))+1
  5805  04B5  00DF               	line	51
  5806                           ;TelegramInterpreter.c: 51:                 break;
  5807                           	goto	i1l480
  5808  04B6  2CD3               	line	52
  5809                           	
  5810                           i1l2551:	
  5811  04B7                     ;TelegramInterpreter.c: 52:         }
  5812                           	goto	i1l480
  5813  04B7  2CD3               	
  5814                           i1l472:	
  5815  04B8                     	
  5816                           i1l2553:	
  5817  04B8                     	movf	(HandleTelegramByte@ByteCounter),w
  5818  04B8  0862               	movwf	(??_HandleTelegramByte+0)+0
  5819  04B9  00F2               	clrf	(??_HandleTelegramByte+0)+0+1
  5820  04BA  01F3               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5821                           ; Switch size 1, requested type "space"
  5822                           ; Number of cases is 1, Range of values is 0 to 0
  5823                           ; switch strategies available:
  5824                           ; Name         Instructions Cycles
  5825                           ; simple_byte            4     3 (average)
  5826                           ; direct_byte            9     7 (fixed)
  5827                           ; jumptable            260     6 (fixed)
  5828                           ;	Chosen strategy is simple_byte
  5829                           
  5830                           	movf 1+(??_HandleTelegramByte+0)+0,w
  5831  04BB  0873               	opt asmopt_push
  5832                           	opt asmopt_off
  5833                           	xorlw	0^0	; case 0
  5834  04BC  3A00               	skipnz
  5835  04BD  1903               	goto	i1l2907
  5836  04BE  2CC0               	goto	i1l480
  5837  04BF  2CD3               	opt asmopt_pop
  5838                           	
  5839                           i1l2907:	
  5840  04C0                     ; Switch size 1, requested type "space"
  5841                           ; Number of cases is 5, Range of values is 2 to 6
  5842                           ; switch strategies available:
  5843                           ; Name         Instructions Cycles
  5844                           ; simple_byte           16     9 (average)
  5845                           ; direct_byte           20    10 (fixed)
  5846                           ; jumptable            263     9 (fixed)
  5847                           ;	Chosen strategy is simple_byte
  5848                           
  5849                           	movf 0+(??_HandleTelegramByte+0)+0,w
  5850  04C0  0872               	opt asmopt_push
  5851                           	opt asmopt_off
  5852                           	xorlw	2^0	; case 2
  5853  04C1  3A02               	skipnz
  5854  04C2  1903               	goto	i1l2529
  5855  04C3  2C63               	xorlw	3^2	; case 3
  5856  04C4  3A01               	skipnz
  5857  04C5  1903               	goto	i1l2531
  5858  04C6  2C70               	xorlw	4^3	; case 4
  5859  04C7  3A07               	skipnz
  5860  04C8  1903               	goto	i1l2537
  5861  04C9  2C7F               	xorlw	5^4	; case 5
  5862  04CA  3A01               	skipnz
  5863  04CB  1903               	goto	i1l2545
  5864  04CC  2C9B               	xorlw	6^5	; case 6
  5865  04CD  3A03               	skipnz
  5866  04CE  1903               	goto	i1l2547
  5867  04CF  2CA8               	goto	i1l480
  5868  04D0  2CD3               	opt asmopt_pop
  5869                           
  5870                           	
  5871                           i1l474:	
  5872  04D1                     	goto	i1l480
  5873  04D1  2CD3               	line	53
  5874                           ;TelegramInterpreter.c: 53:     }
  5875                           	
  5876                           i1l471:	
  5877  04D2                     	goto	i1l480
  5878  04D2  2CD3               	
  5879                           i1l470:	
  5880  04D3                     	line	54
  5881                           	
  5882                           i1l480:	
  5883  04D3                     	return
  5884  04D3  0008               	opt stack 0
  5885                           GLOBAL	__end_of_HandleTelegramByte
  5886                           	__end_of_HandleTelegramByte:
  5887  04D4                     	signat	_HandleTelegramByte,89
  5888                           	global	_HandleConfigByte
  5889                           
  5890 ;; *************** function _HandleConfigByte *****************
  5891 ;; Defined at:
  5892 ;;		line 369 in file "Main.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;		None
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;  Byte            1    6[COMMON] unsigned char 
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  1    wreg      void 
  5899 ;; Registers used:
  5900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5906 ;;      Params:         0       0       0       0
  5907 ;;      Locals:         1       0       0       0
  5908 ;;      Temps:          2       0       0       0
  5909 ;;      Totals:         3       0       0       0
  5910 ;;Total ram usage:        3 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:    1
  5913 ;; This function calls:
  5914 ;;		_Read_Byte
  5915 ;;		i1_AddByteToBuffer
  5916 ;;		i1_Set_Relay
  5917 ;; This function is called by:
  5918 ;;		_Handle_Interrupts
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5922                           	file	"Main.c"
  5923                           	line	369
  5924                           global __ptext19
  5925                           __ptext19:	;psect for function _HandleConfigByte
  5926  04D4                     psect	text19
  5927                           	file	"Main.c"
  5928                           	line	369
  5929                           	global	__size_of_HandleConfigByte
  5930                           	__size_of_HandleConfigByte	equ	__end_of_HandleConfigByte-_HandleConfigByte
  5931  008B                     	
  5932                           _HandleConfigByte:	
  5933  04D4                     ;incstack = 0
  5934                           	opt	stack 2
  5935                           ; Regs used in _HandleConfigByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5936                           	line	374
  5937                           	
  5938                           i1l2445:	
  5939  04D4                     ;Main.c: 371:     static unsigned char ByteCounter = 0;;Main.c: 373:     unsigned char B
                                 yte;;Main.c: 374:     Byte = Read_Byte();
  5940                           	fcall	_Read_Byte
  5941  04D4  158A  2774  118A   	movwf	(??_HandleConfigByte+0)+0
  5942  04D7  00F4               	movf	(??_HandleConfigByte+0)+0,w
  5943  04D8  0874               	movwf	(HandleConfigByte@Byte)
  5944  04D9  00F6               	line	376
  5945                           	
  5946                           i1l2447:	
  5947  04DA                     ;Main.c: 376:     if (Byte == '>')
  5948                           		movlw	62
  5949  04DA  303E               	xorwf	((HandleConfigByte@Byte)),w
  5950  04DB  0676               	btfss	status,2
  5951  04DC  1D03               	goto	u155_21
  5952  04DD  2CDF               	goto	u155_20
  5953  04DE  2CE0               u155_21:
  5954  04DF                     	goto	i1l232
  5955  04DF  2D5E               u155_20:
  5956  04E0                     	goto	i1l2499
  5957  04E0  2D48               	line	378
  5958                           	
  5959                           i1l2449:	
  5960  04E1                     ;Main.c: 377:     {;Main.c: 378:         switch (ByteCounter)
  5961                           	goto	i1l2499
  5962  04E1  2D48               	line	380
  5963                           ;Main.c: 379:         {;Main.c: 380:             case 0:
  5964                           	
  5965                           i1l228:	
  5966  04E2                     	line	381
  5967                           	
  5968                           i1l2451:	
  5969  04E2                     ;Main.c: 381:                 ByteCounter = ByteCounter + 1;
  5970                           	bcf	status, 5	;RP0=0, select bank0
  5971  04E2  1283               	bcf	status, 6	;RP1=0, select bank0
  5972  04E3  1303               	movf	(HandleConfigByte@ByteCounter),w
  5973  04E4  0864               	addlw	01h
  5974  04E5  3E01               	movwf	(??_HandleConfigByte+0)+0
  5975  04E6  00F4               	movf	(??_HandleConfigByte+0)+0,w
  5976  04E7  0874               	movwf	(HandleConfigByte@ByteCounter)
  5977  04E8  00E4               	line	385
  5978                           	
  5979                           i1l2453:	
  5980  04E9                     ;Main.c: 385:                 PORTAbits.RA5 = 1;
  5981                           	bsf	(5),5	;volatile
  5982  04E9  1685               	line	386
  5983                           	
  5984                           i1l2455:	
  5985  04EA                     ;Main.c: 386:                 TRISAbits.TRISA5 = 1;
  5986                           	bsf	status, 5	;RP0=1, select bank1
  5987  04EA  1683               	bcf	status, 6	;RP1=0, select bank1
  5988  04EB  1303               	bsf	(133)^080h,5	;volatile
  5989  04EC  1685               	line	389
  5990                           	
  5991                           i1l2457:	
  5992  04ED                     ;Main.c: 389:                 AddByteToBuffer('M');
  5993                           	movlw	low(04Dh)
  5994  04ED  304D               	fcall	i1_AddByteToBuffer
  5995  04EE  158A  27C1  118A   	line	390
  5996                           ;Main.c: 390:                 break;
  5997                           	goto	i1l232
  5998  04F1  2D5E               	line	392
  5999                           ;Main.c: 392:             case 1:
  6000                           	
  6001                           i1l230:	
  6002  04F2                     	line	393
  6003                           	
  6004                           i1l2459:	
  6005  04F2                     ;Main.c: 393:                 ByteCounter = ByteCounter + 1;
  6006                           	bcf	status, 5	;RP0=0, select bank0
  6007  04F2  1283               	bcf	status, 6	;RP1=0, select bank0
  6008  04F3  1303               	movf	(HandleConfigByte@ByteCounter),w
  6009  04F4  0864               	addlw	01h
  6010  04F5  3E01               	movwf	(??_HandleConfigByte+0)+0
  6011  04F6  00F4               	movf	(??_HandleConfigByte+0)+0,w
  6012  04F7  0874               	movwf	(HandleConfigByte@ByteCounter)
  6013  04F8  00E4               	line	396
  6014                           	
  6015                           i1l2461:	
  6016  04F9                     ;Main.c: 396:                 AddByteToBuffer(0x31);
  6017                           	movlw	low(031h)
  6018  04F9  3031               	fcall	i1_AddByteToBuffer
  6019  04FA  158A  27C1  118A   	line	397
  6020                           	
  6021                           i1l2463:	
  6022  04FD                     ;Main.c: 397:                 AddByteToBuffer(0x01);
  6023                           	movlw	low(01h)
  6024  04FD  3001               	fcall	i1_AddByteToBuffer
  6025  04FE  158A  27C1  118A   	line	400
  6026                           	
  6027                           i1l2465:	
  6028  0501                     ;Main.c: 400:                 AddByteToBuffer(0x32);
  6029                           	movlw	low(032h)
  6030  0501  3032               	fcall	i1_AddByteToBuffer
  6031  0502  158A  27C1  118A   	line	401
  6032                           	
  6033                           i1l2467:	
  6034  0505                     ;Main.c: 401:                 AddByteToBuffer(0x00);
  6035                           	movlw	low(0)
  6036  0505  3000               	fcall	i1_AddByteToBuffer
  6037  0506  158A  27C1  118A   	line	404
  6038                           	
  6039                           i1l2469:	
  6040  0509                     ;Main.c: 404:                 AddByteToBuffer(0x33);
  6041                           	movlw	low(033h)
  6042  0509  3033               	fcall	i1_AddByteToBuffer
  6043  050A  158A  27C1  118A   	line	405
  6044                           	
  6045                           i1l2471:	
  6046  050D                     ;Main.c: 405:                 AddByteToBuffer(0x00);
  6047                           	movlw	low(0)
  6048  050D  3000               	fcall	i1_AddByteToBuffer
  6049  050E  158A  27C1  118A   	line	408
  6050                           	
  6051                           i1l2473:	
  6052  0511                     ;Main.c: 408:                 AddByteToBuffer(0x34);
  6053                           	movlw	low(034h)
  6054  0511  3034               	fcall	i1_AddByteToBuffer
  6055  0512  158A  27C1  118A   	line	409
  6056                           	
  6057                           i1l2475:	
  6058  0515                     ;Main.c: 409:                 AddByteToBuffer(0x00);
  6059                           	movlw	low(0)
  6060  0515  3000               	fcall	i1_AddByteToBuffer
  6061  0516  158A  27C1  118A   	line	412
  6062                           	
  6063                           i1l2477:	
  6064  0519                     ;Main.c: 412:                 AddByteToBuffer(0xFF);
  6065                           	movlw	low(0FFh)
  6066  0519  30FF               	fcall	i1_AddByteToBuffer
  6067  051A  158A  27C1  118A   	line	413
  6068                           ;Main.c: 413:                 break;
  6069                           	goto	i1l232
  6070  051D  2D5E               	line	415
  6071                           ;Main.c: 415:             case 2:
  6072                           	
  6073                           i1l231:	
  6074  051E                     	line	417
  6075                           	
  6076                           i1l2479:	
  6077  051E                     ;Main.c: 417:                 ByteCounter = 0;
  6078                           	bcf	status, 5	;RP0=0, select bank0
  6079  051E  1283               	bcf	status, 6	;RP1=0, select bank0
  6080  051F  1303               	clrf	(HandleConfigByte@ByteCounter)
  6081  0520  01E4               	line	420
  6082                           	
  6083                           i1l2481:	
  6084  0521                     ;Main.c: 420:                 AddByteToBuffer('X');
  6085                           	movlw	low(058h)
  6086  0521  3058               	fcall	i1_AddByteToBuffer
  6087  0522  158A  27C1  118A   	line	422
  6088                           	
  6089                           i1l2483:	
  6090  0525                     ;Main.c: 422:                 Set_Relay(Relay1, Off);
  6091                           	clrf	(i1Set_Relay@State)
  6092  0525  01F0               	movlw	low(0)
  6093  0526  3000               	fcall	i1_Set_Relay
  6094  0527  118A  23AA  118A   	line	423
  6095                           	
  6096                           i1l2485:	
  6097  052A                     ;Main.c: 423:                 Set_Relay(Relay2, Off);
  6098                           	clrf	(i1Set_Relay@State)
  6099  052A  01F0               	movlw	low(01h)
  6100  052B  3001               	fcall	i1_Set_Relay
  6101  052C  118A  23AA  118A   	line	424
  6102                           	
  6103                           i1l2487:	
  6104  052F                     ;Main.c: 424:                 Set_Relay(Relay3, Off);
  6105                           	clrf	(i1Set_Relay@State)
  6106  052F  01F0               	movlw	low(02h)
  6107  0530  3002               	fcall	i1_Set_Relay
  6108  0531  118A  23AA  118A   	line	425
  6109                           	
  6110                           i1l2489:	
  6111  0534                     ;Main.c: 425:                 Set_Relay(Relay4, Off);
  6112                           	clrf	(i1Set_Relay@State)
  6113  0534  01F0               	movlw	low(03h)
  6114  0535  3003               	fcall	i1_Set_Relay
  6115  0536  118A  23AA  118A   	line	426
  6116                           	
  6117                           i1l2491:	
  6118  0539                     ;Main.c: 426:                 Set_Relay(Relay5, Off);
  6119                           	clrf	(i1Set_Relay@State)
  6120  0539  01F0               	movlw	low(04h)
  6121  053A  3004               	fcall	i1_Set_Relay
  6122  053B  118A  23AA  118A   	line	427
  6123                           	
  6124                           i1l2493:	
  6125  053E                     ;Main.c: 427:                 Set_Relay(Relay6, Off);
  6126                           	clrf	(i1Set_Relay@State)
  6127  053E  01F0               	movlw	low(05h)
  6128  053F  3005               	fcall	i1_Set_Relay
  6129  0540  118A  23AA  118A   	line	429
  6130                           	
  6131                           i1l2495:	
  6132  0543                     ;Main.c: 429:                 CurrentMode = Running;
  6133                           	bcf	status, 5	;RP0=0, select bank0
  6134  0543  1283               	bcf	status, 6	;RP1=0, select bank0
  6135  0544  1303               	clrf	(_CurrentMode)
  6136  0545  01E5               	line	432
  6137                           	
  6138                           i1l2497:	
  6139  0546                     ;Main.c: 432:                 INTCONbits.RAIE = 1;
  6140                           	bsf	(11),3	;volatile
  6141  0546  158B               	line	434
  6142                           ;Main.c: 434:         }
  6143                           	goto	i1l232
  6144  0547  2D5E               	
  6145                           i1l227:	
  6146  0548                     	
  6147                           i1l2499:	
  6148  0548                     	bcf	status, 5	;RP0=0, select bank0
  6149  0548  1283               	bcf	status, 6	;RP1=0, select bank0
  6150  0549  1303               	movf	(HandleConfigByte@ByteCounter),w
  6151  054A  0864               	movwf	(??_HandleConfigByte+0)+0
  6152  054B  00F4               	clrf	(??_HandleConfigByte+0)+0+1
  6153  054C  01F5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6154                           ; Switch size 1, requested type "space"
  6155                           ; Number of cases is 1, Range of values is 0 to 0
  6156                           ; switch strategies available:
  6157                           ; Name         Instructions Cycles
  6158                           ; simple_byte            4     3 (average)
  6159                           ; direct_byte            9     7 (fixed)
  6160                           ; jumptable            260     6 (fixed)
  6161                           ;	Chosen strategy is simple_byte
  6162                           
  6163                           	movf 1+(??_HandleConfigByte+0)+0,w
  6164  054D  0875               	opt asmopt_push
  6165                           	opt asmopt_off
  6166                           	xorlw	0^0	; case 0
  6167  054E  3A00               	skipnz
  6168  054F  1903               	goto	i1l2909
  6169  0550  2D52               	goto	i1l232
  6170  0551  2D5E               	opt asmopt_pop
  6171                           	
  6172                           i1l2909:	
  6173  0552                     ; Switch size 1, requested type "space"
  6174                           ; Number of cases is 3, Range of values is 0 to 2
  6175                           ; switch strategies available:
  6176                           ; Name         Instructions Cycles
  6177                           ; simple_byte           10     6 (average)
  6178                           ; direct_byte           13     7 (fixed)
  6179                           ; jumptable            260     6 (fixed)
  6180                           ;	Chosen strategy is simple_byte
  6181                           
  6182                           	movf 0+(??_HandleConfigByte+0)+0,w
  6183  0552  0874               	opt asmopt_push
  6184                           	opt asmopt_off
  6185                           	xorlw	0^0	; case 0
  6186  0553  3A00               	skipnz
  6187  0554  1903               	goto	i1l2451
  6188  0555  2CE2               	xorlw	1^0	; case 1
  6189  0556  3A01               	skipnz
  6190  0557  1903               	goto	i1l2459
  6191  0558  2CF2               	xorlw	2^1	; case 2
  6192  0559  3A03               	skipnz
  6193  055A  1903               	goto	i1l2479
  6194  055B  2D1E               	goto	i1l232
  6195  055C  2D5E               	opt asmopt_pop
  6196                           
  6197                           	
  6198                           i1l229:	
  6199  055D                     	goto	i1l232
  6200  055D  2D5E               	line	436
  6201                           ;Main.c: 436:     }
  6202                           	
  6203                           i1l226:	
  6204  055E                     	line	438
  6205                           	
  6206                           i1l232:	
  6207  055E                     	return
  6208  055E  0008               	opt stack 0
  6209                           GLOBAL	__end_of_HandleConfigByte
  6210                           	__end_of_HandleConfigByte:
  6211  055F                     	signat	_HandleConfigByte,89
  6212                           	global	i1_Set_Relay
  6213                           
  6214 ;; *************** function i1_Set_Relay *****************
  6215 ;; Defined at:
  6216 ;;		line 64 in file "RelayControl.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;  Relay           1    wreg     unsigned char 
  6219 ;;  State           1    0[COMMON] unsigned char 
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;  Relay           1    3[COMMON] unsigned char 
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  1    wreg      void 
  6224 ;; Registers used:
  6225 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6231 ;;      Params:         1       0       0       0
  6232 ;;      Locals:         1       0       0       0
  6233 ;;      Temps:          2       0       0       0
  6234 ;;      Totals:         4       0       0       0
  6235 ;;Total ram usage:        4 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; This function calls:
  6238 ;;		Nothing
  6239 ;; This function is called by:
  6240 ;;		_HandleConfigByte
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6244                           	file	"RelayControl.c"
  6245                           	line	64
  6246                           global __ptext20
  6247                           __ptext20:	;psect for function i1_Set_Relay
  6248  03AA                     psect	text20
  6249                           	file	"RelayControl.c"
  6250                           	line	64
  6251                           	global	__size_ofi1_Set_Relay
  6252                           	__size_ofi1_Set_Relay	equ	__end_ofi1_Set_Relay-i1_Set_Relay
  6253  0096                     	
  6254                           i1_Set_Relay:	
  6255  03AA                     ;incstack = 0
  6256                           	opt	stack 2
  6257                           ; Regs used in i1_Set_Relay: [wreg-fsr0h+status,2+status,0]
  6258                           ;i1Set_Relay@Relay stored from wreg
  6259                           	movwf	(i1Set_Relay@Relay)
  6260  03AA  00F3               	line	66
  6261                           	
  6262                           i1l2125:	
  6263  03AB                     ;RelayControl.c: 64: void Set_Relay (unsigned char Relay, unsigned char State);RelayCont
                                 rol.c: 65: {;RelayControl.c: 66:     switch (Relay)
  6264                           	goto	i1l2177
  6265  03AB  2C2B               	line	68
  6266                           ;RelayControl.c: 67:     {;RelayControl.c: 68:         case Relay1:
  6267                           	
  6268                           i1l378:	
  6269  03AC                     	line	69
  6270                           	
  6271                           i1l2127:	
  6272  03AC                     ;RelayControl.c: 69:         if (State == On)
  6273                           		decf	((i1Set_Relay@State)),w
  6274  03AC  0370               	btfss	status,2
  6275  03AD  1D03               	goto	u106_21
  6276  03AE  2BB0               	goto	u106_20
  6277  03AF  2BB1               u106_21:
  6278  03B0                     	goto	i1l2131
  6279  03B0  2BB5               u106_20:
  6280  03B1                     	line	71
  6281                           	
  6282                           i1l2129:	
  6283  03B1                     ;RelayControl.c: 70:         {;RelayControl.c: 71:             PORTAbits.RA0 = 1;
  6284                           	bcf	status, 5	;RP0=0, select bank0
  6285  03B1  1283               	bcf	status, 6	;RP1=0, select bank0
  6286  03B2  1303               	bsf	(5),0	;volatile
  6287  03B3  1405               	line	72
  6288                           ;RelayControl.c: 72:         }
  6289                           	goto	i1l409
  6290  03B4  2C3F               	line	73
  6291                           ;RelayControl.c: 73:         else if (State == Off)
  6292                           	
  6293                           i1l379:	
  6294  03B5                     	
  6295                           i1l2131:	
  6296  03B5                     	movf	((i1Set_Relay@State)),w
  6297  03B5  0870               	btfss	status,2
  6298  03B6  1D03               	goto	u107_21
  6299  03B7  2BB9               	goto	u107_20
  6300  03B8  2BBA               u107_21:
  6301  03B9                     	goto	i1l409
  6302  03B9  2C3F               u107_20:
  6303  03BA                     	line	75
  6304                           	
  6305                           i1l2133:	
  6306  03BA                     ;RelayControl.c: 74:         {;RelayControl.c: 75:             PORTAbits.RA0 = 0;
  6307                           	bcf	status, 5	;RP0=0, select bank0
  6308  03BA  1283               	bcf	status, 6	;RP1=0, select bank0
  6309  03BB  1303               	bcf	(5),0	;volatile
  6310  03BC  1005               	line	76
  6311                           ;RelayControl.c: 76:         }
  6312                           	goto	i1l409
  6313  03BD  2C3F               	line	77
  6314                           ;RelayControl.c: 77:         else
  6315                           	
  6316                           i1l381:	
  6317  03BE                     	goto	i1l409
  6318  03BE  2C3F               	line	80
  6319                           ;RelayControl.c: 78:         {;RelayControl.c: 80:         }
  6320                           	
  6321                           i1l382:	
  6322  03BF                     	goto	i1l409
  6323  03BF  2C3F               	
  6324                           i1l380:	
  6325  03C0                     	line	81
  6326                           ;RelayControl.c: 81:         break;
  6327                           	goto	i1l409
  6328  03C0  2C3F               	line	83
  6329                           ;RelayControl.c: 83:         case Relay2:
  6330                           	
  6331                           i1l384:	
  6332  03C1                     	line	84
  6333                           	
  6334                           i1l2135:	
  6335  03C1                     ;RelayControl.c: 84:         if (State == On)
  6336                           		decf	((i1Set_Relay@State)),w
  6337  03C1  0370               	btfss	status,2
  6338  03C2  1D03               	goto	u108_21
  6339  03C3  2BC5               	goto	u108_20
  6340  03C4  2BC6               u108_21:
  6341  03C5                     	goto	i1l2139
  6342  03C5  2BCA               u108_20:
  6343  03C6                     	line	86
  6344                           	
  6345                           i1l2137:	
  6346  03C6                     ;RelayControl.c: 85:         {;RelayControl.c: 86:             PORTAbits.RA1 = 1;
  6347                           	bcf	status, 5	;RP0=0, select bank0
  6348  03C6  1283               	bcf	status, 6	;RP1=0, select bank0
  6349  03C7  1303               	bsf	(5),1	;volatile
  6350  03C8  1485               	line	87
  6351                           ;RelayControl.c: 87:         }
  6352                           	goto	i1l409
  6353  03C9  2C3F               	line	88
  6354                           ;RelayControl.c: 88:         else if (State == Off)
  6355                           	
  6356                           i1l385:	
  6357  03CA                     	
  6358                           i1l2139:	
  6359  03CA                     	movf	((i1Set_Relay@State)),w
  6360  03CA  0870               	btfss	status,2
  6361  03CB  1D03               	goto	u109_21
  6362  03CC  2BCE               	goto	u109_20
  6363  03CD  2BCF               u109_21:
  6364  03CE                     	goto	i1l409
  6365  03CE  2C3F               u109_20:
  6366  03CF                     	line	90
  6367                           	
  6368                           i1l2141:	
  6369  03CF                     ;RelayControl.c: 89:         {;RelayControl.c: 90:             PORTAbits.RA1 = 0;
  6370                           	bcf	status, 5	;RP0=0, select bank0
  6371  03CF  1283               	bcf	status, 6	;RP1=0, select bank0
  6372  03D0  1303               	bcf	(5),1	;volatile
  6373  03D1  1085               	line	91
  6374                           ;RelayControl.c: 91:         }
  6375                           	goto	i1l409
  6376  03D2  2C3F               	line	92
  6377                           ;RelayControl.c: 92:         else
  6378                           	
  6379                           i1l387:	
  6380  03D3                     	goto	i1l409
  6381  03D3  2C3F               	line	95
  6382                           ;RelayControl.c: 93:         {;RelayControl.c: 95:         }
  6383                           	
  6384                           i1l388:	
  6385  03D4                     	goto	i1l409
  6386  03D4  2C3F               	
  6387                           i1l386:	
  6388  03D5                     	line	96
  6389                           ;RelayControl.c: 96:         break;
  6390                           	goto	i1l409
  6391  03D5  2C3F               	line	98
  6392                           ;RelayControl.c: 98:         case Relay3:
  6393                           	
  6394                           i1l389:	
  6395  03D6                     	line	99
  6396                           	
  6397                           i1l2143:	
  6398  03D6                     ;RelayControl.c: 99:         if (State == On)
  6399                           		decf	((i1Set_Relay@State)),w
  6400  03D6  0370               	btfss	status,2
  6401  03D7  1D03               	goto	u110_21
  6402  03D8  2BDA               	goto	u110_20
  6403  03D9  2BDB               u110_21:
  6404  03DA                     	goto	i1l2147
  6405  03DA  2BDF               u110_20:
  6406  03DB                     	line	101
  6407                           	
  6408                           i1l2145:	
  6409  03DB                     ;RelayControl.c: 100:         {;RelayControl.c: 101:             PORTAbits.RA2 = 1;
  6410                           	bcf	status, 5	;RP0=0, select bank0
  6411  03DB  1283               	bcf	status, 6	;RP1=0, select bank0
  6412  03DC  1303               	bsf	(5),2	;volatile
  6413  03DD  1505               	line	102
  6414                           ;RelayControl.c: 102:         }
  6415                           	goto	i1l409
  6416  03DE  2C3F               	line	103
  6417                           ;RelayControl.c: 103:         else if (State == Off)
  6418                           	
  6419                           i1l390:	
  6420  03DF                     	
  6421                           i1l2147:	
  6422  03DF                     	movf	((i1Set_Relay@State)),w
  6423  03DF  0870               	btfss	status,2
  6424  03E0  1D03               	goto	u111_21
  6425  03E1  2BE3               	goto	u111_20
  6426  03E2  2BE4               u111_21:
  6427  03E3                     	goto	i1l409
  6428  03E3  2C3F               u111_20:
  6429  03E4                     	line	105
  6430                           	
  6431                           i1l2149:	
  6432  03E4                     ;RelayControl.c: 104:         {;RelayControl.c: 105:             PORTAbits.RA2 = 0;
  6433                           	bcf	status, 5	;RP0=0, select bank0
  6434  03E4  1283               	bcf	status, 6	;RP1=0, select bank0
  6435  03E5  1303               	bcf	(5),2	;volatile
  6436  03E6  1105               	line	106
  6437                           ;RelayControl.c: 106:         }
  6438                           	goto	i1l409
  6439  03E7  2C3F               	line	107
  6440                           ;RelayControl.c: 107:         else
  6441                           	
  6442                           i1l392:	
  6443  03E8                     	goto	i1l409
  6444  03E8  2C3F               	line	110
  6445                           ;RelayControl.c: 108:         {;RelayControl.c: 110:         }
  6446                           	
  6447                           i1l393:	
  6448  03E9                     	goto	i1l409
  6449  03E9  2C3F               	
  6450                           i1l391:	
  6451  03EA                     	line	111
  6452                           ;RelayControl.c: 111:         break;
  6453                           	goto	i1l409
  6454  03EA  2C3F               	line	113
  6455                           ;RelayControl.c: 113:         case Relay4:
  6456                           	
  6457                           i1l394:	
  6458  03EB                     	line	114
  6459                           	
  6460                           i1l2151:	
  6461  03EB                     ;RelayControl.c: 114:         if (State == On)
  6462                           		decf	((i1Set_Relay@State)),w
  6463  03EB  0370               	btfss	status,2
  6464  03EC  1D03               	goto	u112_21
  6465  03ED  2BEF               	goto	u112_20
  6466  03EE  2BF0               u112_21:
  6467  03EF                     	goto	i1l2155
  6468  03EF  2BF4               u112_20:
  6469  03F0                     	line	116
  6470                           	
  6471                           i1l2153:	
  6472  03F0                     ;RelayControl.c: 115:         {;RelayControl.c: 116:             PORTCbits.RC0 = 1;
  6473                           	bcf	status, 5	;RP0=0, select bank0
  6474  03F0  1283               	bcf	status, 6	;RP1=0, select bank0
  6475  03F1  1303               	bsf	(7),0	;volatile
  6476  03F2  1407               	line	117
  6477                           ;RelayControl.c: 117:         }
  6478                           	goto	i1l409
  6479  03F3  2C3F               	line	118
  6480                           ;RelayControl.c: 118:         else if (State == Off)
  6481                           	
  6482                           i1l395:	
  6483  03F4                     	
  6484                           i1l2155:	
  6485  03F4                     	movf	((i1Set_Relay@State)),w
  6486  03F4  0870               	btfss	status,2
  6487  03F5  1D03               	goto	u113_21
  6488  03F6  2BF8               	goto	u113_20
  6489  03F7  2BF9               u113_21:
  6490  03F8                     	goto	i1l409
  6491  03F8  2C3F               u113_20:
  6492  03F9                     	line	120
  6493                           	
  6494                           i1l2157:	
  6495  03F9                     ;RelayControl.c: 119:         {;RelayControl.c: 120:             PORTCbits.RC0 = 0;
  6496                           	bcf	status, 5	;RP0=0, select bank0
  6497  03F9  1283               	bcf	status, 6	;RP1=0, select bank0
  6498  03FA  1303               	bcf	(7),0	;volatile
  6499  03FB  1007               	line	121
  6500                           ;RelayControl.c: 121:         }
  6501                           	goto	i1l409
  6502  03FC  2C3F               	line	122
  6503                           ;RelayControl.c: 122:         else
  6504                           	
  6505                           i1l397:	
  6506  03FD                     	goto	i1l409
  6507  03FD  2C3F               	line	125
  6508                           ;RelayControl.c: 123:         {;RelayControl.c: 125:         }
  6509                           	
  6510                           i1l398:	
  6511  03FE                     	goto	i1l409
  6512  03FE  2C3F               	
  6513                           i1l396:	
  6514  03FF                     	line	126
  6515                           ;RelayControl.c: 126:         break;
  6516                           	goto	i1l409
  6517  03FF  2C3F               	line	128
  6518                           ;RelayControl.c: 128:         case Relay5:
  6519                           	
  6520                           i1l399:	
  6521  0400                     	line	129
  6522                           	
  6523                           i1l2159:	
  6524  0400                     ;RelayControl.c: 129:         if (State == On)
  6525                           		decf	((i1Set_Relay@State)),w
  6526  0400  0370               	btfss	status,2
  6527  0401  1D03               	goto	u114_21
  6528  0402  2C04               	goto	u114_20
  6529  0403  2C05               u114_21:
  6530  0404                     	goto	i1l2163
  6531  0404  2C09               u114_20:
  6532  0405                     	line	131
  6533                           	
  6534                           i1l2161:	
  6535  0405                     ;RelayControl.c: 130:         {;RelayControl.c: 131:             PORTCbits.RC1 = 1;
  6536                           	bcf	status, 5	;RP0=0, select bank0
  6537  0405  1283               	bcf	status, 6	;RP1=0, select bank0
  6538  0406  1303               	bsf	(7),1	;volatile
  6539  0407  1487               	line	132
  6540                           ;RelayControl.c: 132:         }
  6541                           	goto	i1l409
  6542  0408  2C3F               	line	133
  6543                           ;RelayControl.c: 133:         else if (State == Off)
  6544                           	
  6545                           i1l400:	
  6546  0409                     	
  6547                           i1l2163:	
  6548  0409                     	movf	((i1Set_Relay@State)),w
  6549  0409  0870               	btfss	status,2
  6550  040A  1D03               	goto	u115_21
  6551  040B  2C0D               	goto	u115_20
  6552  040C  2C0E               u115_21:
  6553  040D                     	goto	i1l409
  6554  040D  2C3F               u115_20:
  6555  040E                     	line	135
  6556                           	
  6557                           i1l2165:	
  6558  040E                     ;RelayControl.c: 134:         {;RelayControl.c: 135:             PORTCbits.RC1 = 0;
  6559                           	bcf	status, 5	;RP0=0, select bank0
  6560  040E  1283               	bcf	status, 6	;RP1=0, select bank0
  6561  040F  1303               	bcf	(7),1	;volatile
  6562  0410  1087               	line	136
  6563                           ;RelayControl.c: 136:         }
  6564                           	goto	i1l409
  6565  0411  2C3F               	line	137
  6566                           ;RelayControl.c: 137:         else
  6567                           	
  6568                           i1l402:	
  6569  0412                     	goto	i1l409
  6570  0412  2C3F               	line	140
  6571                           ;RelayControl.c: 138:         {;RelayControl.c: 140:         }
  6572                           	
  6573                           i1l403:	
  6574  0413                     	goto	i1l409
  6575  0413  2C3F               	
  6576                           i1l401:	
  6577  0414                     	line	141
  6578                           ;RelayControl.c: 141:         break;
  6579                           	goto	i1l409
  6580  0414  2C3F               	line	143
  6581                           ;RelayControl.c: 143:         case Relay6:
  6582                           	
  6583                           i1l404:	
  6584  0415                     	line	144
  6585                           	
  6586                           i1l2167:	
  6587  0415                     ;RelayControl.c: 144:         if (State == On)
  6588                           		decf	((i1Set_Relay@State)),w
  6589  0415  0370               	btfss	status,2
  6590  0416  1D03               	goto	u116_21
  6591  0417  2C19               	goto	u116_20
  6592  0418  2C1A               u116_21:
  6593  0419                     	goto	i1l2171
  6594  0419  2C1E               u116_20:
  6595  041A                     	line	146
  6596                           	
  6597                           i1l2169:	
  6598  041A                     ;RelayControl.c: 145:         {;RelayControl.c: 146:             PORTCbits.RC2 = 1;
  6599                           	bcf	status, 5	;RP0=0, select bank0
  6600  041A  1283               	bcf	status, 6	;RP1=0, select bank0
  6601  041B  1303               	bsf	(7),2	;volatile
  6602  041C  1507               	line	147
  6603                           ;RelayControl.c: 147:         }
  6604                           	goto	i1l409
  6605  041D  2C3F               	line	148
  6606                           ;RelayControl.c: 148:         else if (State == Off)
  6607                           	
  6608                           i1l405:	
  6609  041E                     	
  6610                           i1l2171:	
  6611  041E                     	movf	((i1Set_Relay@State)),w
  6612  041E  0870               	btfss	status,2
  6613  041F  1D03               	goto	u117_21
  6614  0420  2C22               	goto	u117_20
  6615  0421  2C23               u117_21:
  6616  0422                     	goto	i1l409
  6617  0422  2C3F               u117_20:
  6618  0423                     	line	150
  6619                           	
  6620                           i1l2173:	
  6621  0423                     ;RelayControl.c: 149:         {;RelayControl.c: 150:             PORTCbits.RC2 = 0;
  6622                           	bcf	status, 5	;RP0=0, select bank0
  6623  0423  1283               	bcf	status, 6	;RP1=0, select bank0
  6624  0424  1303               	bcf	(7),2	;volatile
  6625  0425  1107               	line	151
  6626                           ;RelayControl.c: 151:         }
  6627                           	goto	i1l409
  6628  0426  2C3F               	line	152
  6629                           ;RelayControl.c: 152:         else
  6630                           	
  6631                           i1l407:	
  6632  0427                     	goto	i1l409
  6633  0427  2C3F               	line	155
  6634                           ;RelayControl.c: 153:         {;RelayControl.c: 155:         }
  6635                           	
  6636                           i1l408:	
  6637  0428                     	goto	i1l409
  6638  0428  2C3F               	
  6639                           i1l406:	
  6640  0429                     	line	156
  6641                           ;RelayControl.c: 156:         break;
  6642                           	goto	i1l409
  6643  0429  2C3F               	line	157
  6644                           	
  6645                           i1l2175:	
  6646  042A                     ;RelayControl.c: 157:     }
  6647                           	goto	i1l409
  6648  042A  2C3F               	
  6649                           i1l377:	
  6650  042B                     	
  6651                           i1l2177:	
  6652  042B                     	movf	(i1Set_Relay@Relay),w
  6653  042B  0873               	movwf	(??i1_Set_Relay+0)+0
  6654  042C  00F1               	clrf	(??i1_Set_Relay+0)+0+1
  6655  042D  01F2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6656                           ; Switch size 1, requested type "space"
  6657                           ; Number of cases is 1, Range of values is 0 to 0
  6658                           ; switch strategies available:
  6659                           ; Name         Instructions Cycles
  6660                           ; simple_byte            4     3 (average)
  6661                           ; direct_byte            9     7 (fixed)
  6662                           ; jumptable            260     6 (fixed)
  6663                           ;	Chosen strategy is simple_byte
  6664                           
  6665                           	movf 1+(??i1_Set_Relay+0)+0,w
  6666  042E  0872               	opt asmopt_push
  6667                           	opt asmopt_off
  6668                           	xorlw	0^0	; case 0
  6669  042F  3A00               	skipnz
  6670  0430  1903               	goto	i1l2911
  6671  0431  2C33               	goto	i1l409
  6672  0432  2C3F               	opt asmopt_pop
  6673                           	
  6674                           i1l2911:	
  6675  0433                     ; Switch size 1, requested type "space"
  6676                           ; Number of cases is 6, Range of values is 0 to 5
  6677                           ; switch strategies available:
  6678                           ; Name         Instructions Cycles
  6679                           ; direct_byte           19     7 (fixed)
  6680                           ; simple_byte           19    10 (average)
  6681                           ; jumptable            260     6 (fixed)
  6682                           ;	Chosen strategy is direct_byte
  6683                           
  6684                           	movf 0+(??i1_Set_Relay+0)+0,w
  6685  0433  0871               	movwf fsr
  6686  0434  0084               	movlw	6
  6687  0435  3006               	subwf	fsr,w
  6688  0436  0204               skipnc
  6689  0437  1803               goto i1l409
  6690  0438  2C3F               movlw high(i1S2913)
  6691  0439  3008               movwf pclath
  6692  043A  008A               	clrc
  6693  043B  1003               	rlf fsr,w
  6694  043C  0D04               	addlw low(i1S2913)
  6695  043D  3E18               	movwf pc
  6696  043E  0082               psect	swtext3,local,class=CONST,delta=2
  6697                           global __pswtext3
  6698                           __pswtext3:
  6699  0818                     i1S2913:
  6700  0818                     	ljmp	i1l2127
  6701  0818  118A  2BAC         	ljmp	i1l2135
  6702  081A  118A  2BC1         	ljmp	i1l2143
  6703  081C  118A  2BD6         	ljmp	i1l2151
  6704  081E  118A  2BEB         	ljmp	i1l2159
  6705  0820  118A  2C00         	ljmp	i1l2167
  6706  0822  118A  2C15         psect	text20
  6707                           
  6708                           	
  6709                           i1l383:	
  6710  043F                     	line	159
  6711                           	
  6712                           i1l409:	
  6713  043F                     	return
  6714  043F  0008               	opt stack 0
  6715                           GLOBAL	__end_ofi1_Set_Relay
  6716                           	__end_ofi1_Set_Relay:
  6717  0440                     	signat	i1_Set_Relay,89
  6718                           	global	i1_AddByteToBuffer
  6719                           
  6720 ;; *************** function i1_AddByteToBuffer *****************
  6721 ;; Defined at:
  6722 ;;		line 120 in file "Eusart.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  Byte            1    wreg     unsigned char 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  Byte            1    1[COMMON] unsigned char 
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  1    wreg      void 
  6729 ;; Registers used:
  6730 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6736 ;;      Params:         0       0       0       0
  6737 ;;      Locals:         1       0       0       0
  6738 ;;      Temps:          1       0       0       0
  6739 ;;      Totals:         2       0       0       0
  6740 ;;Total ram usage:        2 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; This function calls:
  6743 ;;		Nothing
  6744 ;; This function is called by:
  6745 ;;		_HandleConfigByte
  6746 ;; This function uses a non-reentrant model
  6747 ;;
  6748                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6749                           	file	"Eusart.c"
  6750                           	line	120
  6751                           global __ptext21
  6752                           __ptext21:	;psect for function i1_AddByteToBuffer
  6753  0FC1                     psect	text21
  6754                           	file	"Eusart.c"
  6755                           	line	120
  6756                           	global	__size_ofi1_AddByteToBuffer
  6757                           	__size_ofi1_AddByteToBuffer	equ	__end_ofi1_AddByteToBuffer-i1_AddByteToBuffer
  6758  001A                     	
  6759                           i1_AddByteToBuffer:	
  6760  0FC1                     ;incstack = 0
  6761                           	opt	stack 2
  6762                           ; Regs used in i1_AddByteToBuffer: [wreg-fsr0h+status,2+status,0]
  6763                           ;i1AddByteToBuffer@Byte stored from wreg
  6764                           	movwf	(i1AddByteToBuffer@Byte)
  6765  0FC1  00F1               	line	122
  6766                           	
  6767                           i1l2115:	
  6768  0FC2                     ;Eusart.c: 120: void AddByteToBuffer (unsigned char Byte);Eusart.c: 121: {;Eusart.c: 122
                                 :     SendBuffer[BufferHead] = Byte;
  6769                           	movf	(i1AddByteToBuffer@Byte),w
  6770  0FC2  0871               	movwf	(??i1_AddByteToBuffer+0)+0
  6771  0FC3  00F0               	movf	(_BufferHead),w
  6772  0FC4  087D               	addlw	low(_SendBuffer|((0x0)<<8))&0ffh
  6773  0FC5  3EA0               	movwf	fsr0
  6774  0FC6  0084               	movf	(??i1_AddByteToBuffer+0)+0,w
  6775  0FC7  0870               	bcf	status, 7	;select IRP bank1
  6776  0FC8  1383               	movwf	indf
  6777  0FC9  0080               	line	124
  6778                           	
  6779                           i1l2117:	
  6780  0FCA                     ;Eusart.c: 124:     if (BufferHead == 39)
  6781                           		movlw	39
  6782  0FCA  3027               	xorwf	((_BufferHead)),w
  6783  0FCB  067D               	btfss	status,2
  6784  0FCC  1D03               	goto	u105_21
  6785  0FCD  2FCF               	goto	u105_20
  6786  0FCE  2FD0               u105_21:
  6787  0FCF                     	goto	i1l2121
  6788  0FCF  2FD2               u105_20:
  6789  0FD0                     	line	126
  6790                           	
  6791                           i1l2119:	
  6792  0FD0                     ;Eusart.c: 125:     {;Eusart.c: 126:         BufferHead = 0;
  6793                           	clrf	(_BufferHead)
  6794  0FD0  01FD               	line	127
  6795                           ;Eusart.c: 127:     }
  6796                           	goto	i1l2123
  6797  0FD1  2FD7               	line	128
  6798                           ;Eusart.c: 128:     else
  6799                           	
  6800                           i1l318:	
  6801  0FD2                     	line	130
  6802                           	
  6803                           i1l2121:	
  6804  0FD2                     ;Eusart.c: 129:     {;Eusart.c: 130:         BufferHead++;
  6805                           	movlw	low(01h)
  6806  0FD2  3001               	movwf	(??i1_AddByteToBuffer+0)+0
  6807  0FD3  00F0               	movf	(??i1_AddByteToBuffer+0)+0,w
  6808  0FD4  0870               	addwf	(_BufferHead),f
  6809  0FD5  07FD               	goto	i1l2123
  6810  0FD6  2FD7               	line	131
  6811                           ;Eusart.c: 131:     }
  6812                           	
  6813                           i1l319:	
  6814  0FD7                     	line	134
  6815                           	
  6816                           i1l2123:	
  6817  0FD7                     ;Eusart.c: 134:     PIE1bits.TXIE = 1;
  6818                           	bsf	status, 5	;RP0=1, select bank1
  6819  0FD7  1683               	bcf	status, 6	;RP1=0, select bank1
  6820  0FD8  1303               	bsf	(140)^080h,1	;volatile
  6821  0FD9  148C               	line	136
  6822                           	
  6823                           i1l320:	
  6824  0FDA                     	return
  6825  0FDA  0008               	opt stack 0
  6826                           GLOBAL	__end_ofi1_AddByteToBuffer
  6827                           	__end_ofi1_AddByteToBuffer:
  6828  0FDB                     	signat	i1_AddByteToBuffer,89
  6829                           	global	_Read_Byte
  6830                           
  6831 ;; *************** function _Read_Byte *****************
  6832 ;; Defined at:
  6833 ;;		line 106 in file "Eusart.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;		None
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;  Data            1    1[COMMON] unsigned char 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      unsigned char 
  6840 ;; Registers used:
  6841 ;;		wreg
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6847 ;;      Params:         0       0       0       0
  6848 ;;      Locals:         1       0       0       0
  6849 ;;      Temps:          1       0       0       0
  6850 ;;      Totals:         2       0       0       0
  6851 ;;Total ram usage:        2 bytes
  6852 ;; Hardware stack levels used:    1
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		_HandleConfigByte
  6857 ;;		_HandleTelegramByte
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6861                           	line	106
  6862                           global __ptext22
  6863                           __ptext22:	;psect for function _Read_Byte
  6864  0F74                     psect	text22
  6865                           	file	"Eusart.c"
  6866                           	line	106
  6867                           	global	__size_of_Read_Byte
  6868                           	__size_of_Read_Byte	equ	__end_of_Read_Byte-_Read_Byte
  6869  0009                     	
  6870                           _Read_Byte:	
  6871  0F74                     ;incstack = 0
  6872                           	opt	stack 2
  6873                           ; Regs used in _Read_Byte: [wreg]
  6874                           	line	108
  6875                           	
  6876                           i1l2109:	
  6877  0F74                     ;Eusart.c: 108:     unsigned char Data = RCREG;
  6878                           	bcf	status, 5	;RP0=0, select bank0
  6879  0F74  1283               	bcf	status, 6	;RP1=0, select bank0
  6880  0F75  1303               	movf	(20),w	;volatile
  6881  0F76  0814               	movwf	(??_Read_Byte+0)+0
  6882  0F77  00F0               	movf	(??_Read_Byte+0)+0,w
  6883  0F78  0870               	movwf	(Read_Byte@Data)
  6884  0F79  00F1               	line	110
  6885                           ;Eusart.c: 110:     return Data;
  6886                           	movf	(Read_Byte@Data),w
  6887  0F7A  0871               	goto	i1l312
  6888  0F7B  2F7C               	
  6889                           i1l2111:	
  6890  0F7C                     	line	111
  6891                           	
  6892                           i1l312:	
  6893  0F7C                     	return
  6894  0F7C  0008               	opt stack 0
  6895                           GLOBAL	__end_of_Read_Byte
  6896                           	__end_of_Read_Byte:
  6897  0F7D                     	signat	_Read_Byte,89
  6898                           global	___latbits
  6899                           ___latbits	equ	1
  6900  0001                     	global	btemp
  6901                           	btemp set 07Eh
  6902  007E                     
  6903                           	DABS	1,126,2	;btemp
  6904                           	global	wtemp0
  6905                           	wtemp0 set btemp+0
  6906  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     56      79
    BANK1            80      0      78
    BANK2            80      0       0

Pointer List with Targets:

    SetStopTime@RelayStopTime	PTR unsigned char  size(1) Largest target is 3
		 -> Relay6StopTime(BANK1[3]), Relay5StopTime(BANK1[3]), Relay4StopTime(BANK1[3]), Relay3StopTime(BANK1[3]), 
		 -> Relay2StopTime(BANK1[3]), Relay1StopTime(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handle_Interrupts in COMMON

    _Handle_Interrupts->_HandleConfigByte
    _WriteByteFromBuffer->_Write_Byte
    _HandleTelegramByte->_Read_Byte
    _HandleConfigByte->i1_Set_Relay

Critical Paths under _main in BANK0

    _main->_Handle_Telegram
    _Handle_Telegram->_SendTelegram
    _SendTelegram->_AddByteToBuffer
    _CheckStopTime->_Set_Relay

Critical Paths under _Handle_Interrupts in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handle_Interrupts in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handle_Interrupts in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    7572
                                             52 BANK0      4     4      0
                    _AddByteToBuffer
                      _CheckStopTime
                    _Handle_Telegram
                         _Init_Ports
                      _Init_Receiver
                        _Init_Relays
                         _Init_Timer
                   _Init_Transmitter
                        _Start_Timer
 ---------------------------------------------------------------------------------
 (1) _Start_Timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Transmitter                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Relays                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Receiver                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Handle_Telegram                                     27     6     21    5596
                                             25 BANK0     27     6     21
                         _Read_Relay
                       _SendTelegram
                        _SetStopTime
                          _Set_Relay
 ---------------------------------------------------------------------------------
 (2) _SetStopTime                                          6     3      3    1942
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _SendTelegram                                        24     3     21     380
                                              2 BANK0     23     2     21
                    _AddByteToBuffer
 ---------------------------------------------------------------------------------
 (3) _AddByteToBuffer                                      2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Read_Relay                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CheckStopTime                                        2     2      0    1954
                                              4 BANK0      2     2      0
                          _Set_Relay
 ---------------------------------------------------------------------------------
 (2) _Set_Relay                                            4     3      1    1954
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Handle_Interrupts                                    6     6      0     711
                                              7 COMMON     6     6      0
                   _HandleConfigByte
                 _HandleTelegramByte
                    _Timer_Interrupt
                _WriteByteFromBuffer
 ---------------------------------------------------------------------------------
 (5) _WriteByteFromBuffer                                  1     1      0      22
                                              1 COMMON     1     1      0
                         _Write_Byte
 ---------------------------------------------------------------------------------
 (6) _Write_Byte                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Timer_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HandleTelegramByte                                   3     3      0     178
                                              2 COMMON     3     3      0
                          _Read_Byte
 ---------------------------------------------------------------------------------
 (5) _HandleConfigByte                                     3     3      0     510
                                              4 COMMON     3     3      0
                          _Read_Byte
                  i1_AddByteToBuffer
                        i1_Set_Relay
 ---------------------------------------------------------------------------------
 (6) i1_Set_Relay                                          4     3      1     442
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) i1_AddByteToBuffer                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _Read_Byte                                            2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddByteToBuffer
   _CheckStopTime
     _Set_Relay
   _Handle_Telegram
     _Read_Relay
     _SendTelegram
       _AddByteToBuffer
     _SetStopTime
     _Set_Relay
   _Init_Ports
   _Init_Receiver
   _Init_Relays
   _Init_Timer
   _Init_Transmitter
   _Start_Timer

 _Handle_Interrupts (ROOT)
   _HandleConfigByte
     _Read_Byte
     i1_AddByteToBuffer
     i1_Set_Relay
   _HandleTelegramByte
     _Read_Byte
   _Timer_Interrupt
   _WriteByteFromBuffer
     _Write_Byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     38      4F       3       98.8%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      AB       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      AB      10        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Jan 19 13:23:33 2019

                               pc 0002                                l51 0F93                                l54 0F87  
                 Read_Relay@Relay 0022                                fsr 0004          __size_of_Handle_Telegram 020F  
     __end_of_WriteByteFromBuffer 07E3                               l200 022E                               l201 01C6  
                             l210 0162                               l211 0184                               l203 00DB  
                             l212 022D                               l220 0203                               l204 01A7  
                             l213 0210                               l205 00DC                               l221 022E  
                             l214 01C7                               l206 01C5                               l215 022C  
                             l207 00FC                               l400 05AE                               l320 07FE  
                             l216 01D3                               l208 011E                               l401 05B7  
                             l217 01DF                               l209 0140                               l161 068F  
                             l402 05B5                               l218 01EB                               l306 0F9F  
                             l162 06B6                               l403 05B6                               l219 01F7  
                             l171 0FC0                               l163 06B7                               l404 05B8  
                             l180 03A9                               l420 077E                               l412 076A  
                             l164 06B8                               l405 05BF                               l413 074D  
                             l309 0FAC                               l165 06B8                               l406 05C8  
                             l174 0264                               l414 0780                               l318 07F6  
                             l158 066E                               l407 05C6                               l175 02A5  
                             l415 0751                               l319 07FB                               l183 0602  
                             l159 0693                               l408 05C7                               l176 02E6  
                             l416 0755                               l184 060C                               l192 0030  
                             l409 05DE                               l177 0327                               l417 075B  
                             l185 062A                               l193 00A4                               l178 0368  
                             l418 075F                               l186 0632                               l194 0038  
                             l179 03A9                               l419 0763                               l187 064B  
                             l195 00A3                               l380 0573                               l188 0653  
                             l196 0085                               l381 0571                               l189 0653  
                             l197 00A2                               l390 058C                               l382 0572  
                             l198 009C                               l374 0FFF                               l383 05DE  
                             l391 0595                               l199 00A1                               l392 0593  
                             l384 0574                               l377 05CA                               l393 0594  
                             l385 057B                               l394 0596                               l386 0584  
                             l378 0563                               l395 059D                               l387 0582  
                             l379 056A                               l483 0737                               l396 05A6  
                             l388 0583                               l484 0727                               l397 05A4  
                             l389 0585                               l485 073E                               l398 05A5  
                             l486 0748                               l399 05A7                               u900 0568  
                             u901 0567                               u910 056F                               u911 056E  
                             u920 0579                               u921 0578                               u930 0580  
                             u931 057F                               u940 058A                               u941 0589  
                             u950 0591                               u951 0590                               u960 059B  
                             u880 07F4                               u961 059A                               u881 07F3  
                             u970 05A2                               u890 073D                               u971 05A1  
                             u891 073C                               u980 05AC                               u981 05AB  
                             u990 05B3                               u991 05B2                               fsr0 0004  
                             indf 0000                              S2903 080C                              S2899 0800  
HandleTelegramByte@CommandCounter 0061                              l2001 0596                              l2011 05AC  
                            l2003 059B                              l2021 05BF                              l2013 05AE  
                            l2005 059D                              l2023 05C4                              l2015 05B3  
                            l2007 05A2                              l2025 05C9                              l2017 05B8  
                            l2009 05A7                              l2041 05E2                              l2201 0F80  
                            l2019 05BD                              l2027 05CA                              l2051 061C  
                            l2043 05F2                              l2203 0F82                              l2301 02FE  
                            l2061 064B                              l2053 0624                              l2045 05FC  
                            l2205 0F84                              l2311 032E                              l2303 030F  
                            l2071 0754                              l2063 074C                              l2055 062A  
                            l2047 0602                              l2231 0FB7                              l2207 0F86  
                            l2313 033F                              l2321 0368                              l2305 0320  
                            l2081 075F                              l2073 0755                              l2065 074D  
                            l2057 0632                              l2049 060C                              l2401 0184  
                            l2241 0FBE                              l2233 0FBA                              l2331 03A3  
                            l2323 036F                              l2315 0350                              l2307 0321  
                            l2083 0762                              l2075 075A                              l2067 0750  
                            l2091 076A                              l2059 0642                              l2411 01CF  
                            l2403 018E                              l2243 0FBF                              l2235 0FBB  
                            l2227 0FAD                              l2251 0F9D                              l2325 0380  
                            l2317 0361                              l2309 0327                              l2261 022F  
                            l2093 077E                              l2085 0763                              l2077 075B  
                            l2069 0751                              l2421 01EB                              l2413 01D3  
                            l2405 01A6                              l2341 0030                              l2333 0020  
                            l2237 0FBC                              l2229 0FB3                              l2245 0FDB  
                            l2253 0F9E                              l2327 0391                              l2319 0362  
                            l2271 025E                              l2263 0236                              l2095 0780  
                            l2087 0768                              l2079 075E                              l2431 020B  
                            l2423 01F3                              l2415 01DB                              l2407 01A7  
                            l2351 0050                              l2343 0036                              l2335 0026  
                            l2239 0FBD                              l2255 0FA0                              l2191 0F8D  
                            l2247 0F94                              l2329 03A2                              l2281 029E  
                            l2265 0243                              l2273 0264                              l2089 0769  
                            l2433 020F                              l2425 01F7                              l2417 01DF  
                            l2409 01C7                              l2361 0082                              l2353 005A  
                            l2345 0038                              l2337 0027                              l2257 0FA8  
                            l2193 0F8E                              l2249 0F9B                              l2291 02CE  
                            l2283 029F                              l2275 026B                              l2267 0250  
                            l2427 01FF                              l2419 01E7                              l2435 0210  
                            l2371 00BC                              l2355 0064                              l2347 003E  
                            l2363 0085                              l2339 002D                              l2259 0FAB  
                            l2195 0F8F                              l2187 0F88                              l2293 02DF  
                            l2277 027C                              l2285 02A5                              l2269 025D  
                            l2429 0203                              l2381 00DC                              l2373 00C3  
                            l2365 008B                              l2357 006E                              l2349 0046  
                            l2197 0F90                              l2189 0F8C                              l2295 02E0  
                            l2287 02AC                              l2279 028D                              l2391 0128  
                            l2383 00E4                              l2375 00C8                              l2367 009C  
                            l2359 0078                              l2199 0F7D                              l2289 02BD  
                            l2297 02E6                              l2393 0140                              l2385 00FC  
                            l2377 00CE                              l2369 00A4                              l2561 065A  
                            l2299 02ED                              l2395 014A                              l2387 0106  
                            l2379 00D4                              l2571 066E                              l2563 065D  
                            l2901 05D2                              l2397 0162                              l2389 011E  
                            l2581 0689                              l2573 0675                              l2565 0663  
                            l2399 016C                              l2575 067A                              l2583 068F  
                            l2567 0666                              l2559 0654                              l1961 07FB  
                            l1953 07E6                              l2585 0693                              l2577 067F  
                            l2569 066A                              l1955 07EE                              l1971 0737  
                            l1963 0710                              l2587 069B                              l2579 0684  
                            l1981 056A                              l1957 07F4                              l1973 073E  
                            l1965 0723                              l2589 069D                              l1991 0580  
                            l1983 056F                              l1975 0562                              l1959 07F6  
                            l1967 0727                              l1993 0585                              l1985 0574  
                            l1977 0563                              l1969 0730                              l1995 058A  
                            l1987 0579                              l1979 0568                              l1997 058C  
                            l1989 057B                              l2893 01B1                              l1999 0591  
                            l2895 0218                              l2897 0772                              u1000 05BD  
                            u1001 05BC                              u1010 05C4                              u1011 05C3  
                            u1020 05F2                              u1021 05F1                              u1030 061C  
                            u1031 061B                              u1040 0642                              u1041 0641  
                            u1210 0236                              u1211 0235                              u1300 02BD  
                            u1220 0243                              u1301 02BC                              u1221 0242  
                            u1310 02CE                              u1230 0250                              u1311 02CD  
                            u1231 024F                              u1400 0361                              u1320 02DF  
                            u1240 025D                              u1401 0360                              u1321 02DE  
                            u1305 02B9                              u1241 025C                              u1225 023F  
                            u1410 036F                              u1330 02ED                              u1250 026B  
                            u1411 036E                              u1331 02EC                              u1315 02CA  
                            u1251 026A                              u1235 024C                              u1420 0380  
                            u1340 02FE                              u1260 027C                              u1500 00C3  
                            u1421 037F                              u1405 035D                              u1341 02FD  
                            u1325 02DB                              u1261 027B                              u1245 0259  
                            u1501 00C2                              u1430 0391                              u1350 030F  
                            u1270 028D                              u1510 00C8                              u1431 0390  
                            u1351 030E                              u1271 028C                              u1511 00C7  
                            u1440 03A2                              u1360 0320                              u1280 029E  
                            u1520 00CE                              u1441 03A1                              u1425 037C  
                            u1361 031F                              u1345 02FA                              u1281 029D  
                            u1265 0278                              u1521 00CD                              u1370 032E  
                            u1290 02AC                              u1530 00D4                              u1450 002D  
                            u1435 038D                              u1371 032D                              u1355 030B  
                            u1291 02AB                              u1275 0289                              u1531 00D3  
                            u1451 002C                              u1380 033F                              u1540 00DA  
                            u1460 0036                              u1620 0675                              u1445 039E  
                            u1381 033E                              u1365 031C                              u1285 029A  
                            u1541 00D9                              u1461 0035                              u1621 0674  
                            u1390 0350                              u1470 003E                              u1630 067A  
                            u1391 034F                              u1471 003D                              u1631 0679  
                            u1480 008B                              u1640 067F                              u1385 033B  
                            u1481 008A                              u1641 067E                              u1490 00AC  
                            u1650 0684                              u1395 034C                              u1651 0683  
                            u1660 0689                              u1661 0688                              u1670 068E  
                            u1671 068D                              u1680 069B                              u1681 069A  
                            u1690 06A5                              i1l60 07B7                              i1l61 07B6  
                            i1l62 07B5                              i1l63 07B7          __end_of_Init_Transmitter 0FA0  
               i1_AddByteToBuffer 0FC1                              _main 0654                              btemp 007E  
              ?i1_AddByteToBuffer 0070                              start 000D          __size_of_AddByteToBuffer 001C  
                   ??_Init_Relays 0020               ??i1_AddByteToBuffer 0070                     _Init_Receiver 0FA0  
                           ?_main 0070                     __CFG_WDTE$OFF 0000                             _ANSEL 0091  
                           i1l230 04F2                             i1l231 051E                             i1l312 0F7C  
                           i1l320 0FDA                             i1l400 0409                             i1l232 055E  
                           i1l240 06CC                             i1l401 0414                             i1l241 06E7  
                           i1l402 0412                             i1l226 055E                             i1l242 06D0  
                           i1l403 0413                             i1l227 0548                             i1l315 0F6B  
                           i1l323 07D8                             i1l243 06FC                             i1l404 0415  
                           i1l228 04E2                             i1l324 07D2                             i1l244 0707  
                           i1l405 041E                             i1l229 055D                             i1l325 07D7  
                           i1l245 0707                             i1l237 06C4                             i1l318 0FD2  
                           i1l406 0429                             i1l326 07E2                             i1l238 06E7  
                           i1l319 0FD7                             i1l407 0427                             i1l327 07E2  
                           i1l239 06D5                             i1l408 0428                             i1l409 043F  
                           i1l380 03C0                             i1l381 03BE                             i1l390 03DF  
                           i1l382 03BF                             i1l470 04D3                             i1l383 043F  
                           i1l391 03EA                             i1l471 04D2                             i1l392 03E8  
                           i1l384 03C1                             i1l472 04B8                             i1l480 04D3  
                           i1l377 042B                             i1l393 03E9                             i1l385 03CA  
                           i1l473 0463                             i1l394 03EB                             i1l386 03D5  
                           i1l378 03AC                             i1l474 04D1                             i1l395 03F4  
                           i1l387 03D3                             i1l379 03B5                             i1l475 0470  
                           i1l396 03FF                             i1l388 03D4                             i1l476 047F  
                           i1l397 03FD                             i1l389 03D6                             i1l477 049A  
                           i1l469 0459                             i1l398 03FE                             i1l478 049B  
                           i1l399 0400                             i1l479 04A8                             _RCREG 0014  
                      _BufferHead 007D                             _TMR1H 000F                             _TMR1L 000E  
                           _SPBRG 0013                             _PORTA 0005                        _BufferTail 0063  
                           _TXREG 0015         __end_ofi1_AddByteToBuffer 0FDB                             pclath 000A  
                           status 0003                             wtemp0 007E                  _StopRelay1OnTime 006B  
                _StopRelay2OnTime 006A                  _StopRelay3OnTime 0069                  _StopRelay4OnTime 0068  
                _StopRelay5OnTime 0067                  _StopRelay6OnTime 0066                    __CFG_MCLRE$OFF 0000  
                 __initialization 000F                        _Init_Timer 0F88                        _Init_Ports 0FAD  
                    __end_of_main 06BA                        _Read_Relay 0749                    ?_Init_Receiver 0070  
                          ??_main 0054               __end_of_Init_Relays 1000                 ??_Handle_Telegram 004E  
                      _SendBuffer 00A0                            i1S2913 0818                     ??_SetStopTime 0023  
                          u110_20 03DB                            u110_21 03DA                            i1l2111 0F7C  
                          u111_20 03E4                            i1l2121 0FD2                            u111_21 03E3  
                          i1l2113 0F67                            i1l2123 0FD7                            i1l2115 0FC2  
                          i1l2131 03B5                            i1l2211 078D                            i1l2109 0F74  
                          i1l2117 0FCA                            i1l2141 03CF                            i1l2133 03BA  
                          i1l2125 03AB                            i1l2221 07A5                            i1l2213 0794  
                          i1l2119 0FD0                            i1l2151 03EB                            i1l2143 03D6  
                          i1l2135 03C1                            i1l2127 03AC                            i1l2223 07AB  
                          i1l2215 0796                            u112_20 03F0                            u120_20 07B2  
                          i1l2161 0405                            i1l2153 03F0                            u112_21 03EF  
                          i1l2145 03DB                            i1l2137 03C6                            i1l2129 03B1  
                          i1l2225 07B2                            u120_21 07B1                            i1l2217 079C  
                          i1l2209 0781                            i1l2171 041E                            i1l2163 0409  
                          i1l2155 03F4                            i1l2147 03DF                            i1l2139 03CA  
                          i1l2219 07A3                            i1l2173 0423                            i1l2165 040E  
                          i1l2157 03F9                            i1l2149 03E4                            i1l2175 042A  
                          i1l2167 0415                            i1l2159 0400                            i1l2511 07D0  
                          u105_20 0FD0                            u113_20 03F9                            u105_21 0FCF  
                          i1l2169 041A                            u113_21 03F8                            i1l2177 042B  
                          i1l2521 0446                            i1l2513 07D2                            i1l2505 07B8  
                          i1l2601 06CB                            i1l2451 04E2                            i1l2531 0470  
                          i1l2523 044C                            i1l2507 07C0                            i1l2515 07D8  
                          i1l2611 06EB                            i1l2603 06CC                            i1l2461 04F9  
                          i1l2453 04E9                            i1l2445 04D4                            i1l2541 048B  
                          i1l2533 0477                            i1l2525 0459                            i1l2517 07DE  
                          i1l2509 07C8                            i1l2621 06F8                            i1l2613 06EC  
                          i1l2605 06D0                            i1l2471 050D                            i1l2463 04FD  
                          i1l2455 04EA                            i1l2447 04DA                            i1l2551 04B7  
                          i1l2543 0495                            i1l2535 047D                            i1l2527 0462  
                          i1l2519 0440                            i1l2615 06F2                            i1l2623 06FC  
                          i1l2607 06D4                            u114_20 0405                            u106_20 03B1  
                          u114_21 0404                            u106_21 03B0                            i1l2481 0521  
                          i1l2473 0511                            i1l2465 0501                            i1l2457 04ED  
                          i1l2449 04E1                            i1l2545 049B                            i1l2537 047F  
                          i1l2529 0463                            i1l2553 04B8                            i1l2625 0702  
                          i1l2617 06F3                            i1l2609 06D5                            i1l2491 0539  
                          i1l2483 0525                            i1l2475 0515                            i1l2467 0505  
                          i1l2459 04F2                            i1l2547 04A8                            i1l2539 0487  
                          i1l2627 0703                            i1l2619 06F5                            i1l2493 053E  
                          i1l2485 052A                            i1l2477 0519                            i1l2469 0509  
                          i1l2549 04AE                            i1l2911 0433                            i1l2495 0543  
                          i1l2487 052F                            i1l2479 051E                            u115_20 040E  
                          u107_20 03BA                            u115_21 040D                            u107_21 03B9  
                          i1l2497 0546                            i1l2489 0534                            i1l2905 06DF  
                          i1l2499 0548                            i1l2907 04C0                            i1l2595 06BA  
                          i1l2909 0552                            i1l2597 06C0                            i1l2599 06C4  
                          u116_20 041A                            u108_20 03C6                            u116_21 0419  
                          u108_21 03C5                            u117_20 0423                            u109_20 03CF  
                          u117_21 0422                            u109_21 03CE                            u118_20 0794  
                          u118_21 0793                            u119_20 07A3                            u119_21 07A2  
                          u160_20 0461                            u160_21 0460                            u161_20 0495  
                          u161_21 0494                            u155_20 04E0                            u171_20 06C0  
                          u155_21 04DF                            u171_21 06BF                            u156_20 07C0  
                          u172_20 06CA                            u156_21 07BF                            u172_21 06C9  
                          u157_20 07D0                            u173_20 06EB                            u157_21 07CF  
                          u173_21 06EA                            u158_20 07DE                            u174_20 0702  
                          u158_21 07DD                            u174_21 0701                            u159_20 044C  
                          u159_21 044B                __size_of_Read_Byte 0009       HandleConfigByte@ByteCounter 0064  
              __size_of_Set_Relay 0080                 ??_AddByteToBuffer 0020                 ?_HandleConfigByte 0070  
              ??_HandleConfigByte 0074                            saved_w 007E                     ?_SendTelegram 0022  
          __size_of_CheckStopTime 017B                _HandleTelegramByte 0440        __size_ofi1_AddByteToBuffer 001A  
                    ?i1_Set_Relay 0070           __end_of__initialization 001D               ?_HandleTelegramByte 0070  
             __end_of_SetStopTime 0654                    __pcstackCOMMON 0070                       ?_Init_Timer 0070  
                 ??_Init_Receiver 0020                       ?_Init_Ports 0070                       _Init_Relays 0FDB  
                     ?_Read_Relay 0070                        _Write_Byte 0F66                     ??_Start_Timer 0020  
            HandleConfigByte@Byte 0076                       _CurrentMode 0065              ??_HandleTelegramByte 0072  
               __end_of_Read_Byte 0F7D                    ??_SendTelegram 0037                    Write_Byte@Data 0070  
               __end_of_Set_Relay 05DF                        __pbssBANK0 0058                        __pbssBANK1 00A0  
               ?_Init_Transmitter 0070                ??_Init_Transmitter 0020                        __pmaintext 0654  
                   _CheckStopTime 022F                        __pintentry 0004                    Set_Relay@Relay 0023  
                  Set_Relay@State 0020          __size_of_Timer_Interrupt 0037               __end_of_Start_Timer 0F88  
    __size_of_WriteByteFromBuffer 002B               __size_of_Init_Timer 000C               __size_of_Init_Ports 0014  
             __size_of_Read_Relay 0038                       _SetStopTime 05DF             i1AddByteToBuffer@Byte 0071  
                  ?_CheckStopTime 0070                       ?_Write_Byte 0070                   _Handle_Telegram 0020  
                         __ptext1 0F7D                           __ptext2 0F94                           __ptext3 0F88  
                         __ptext4 0FDB                           __ptext5 0FA0                           __ptext6 0FAD  
                         __ptext7 0020                           __ptext8 05DF                           __ptext9 0710  
                       _T1CONbits 0010       Handle_Telegram@ThisTelegram 0039                           clrloop0 0F6D  
            end_of_initialization 001D              __size_ofi1_Set_Relay 0096                   _AddByteToBuffer 07E3  
            __end_of_SendTelegram 0749                         _RCSTAbits 0017                     Read_Byte@Data 0071  
                     _Start_Timer 0F7D            SendTelegram@MyTelegram 0022                         _PORTAbits 0005  
                       _PORTCbits 0007                      _Counter_1sec 005A                 ??_Timer_Interrupt 0070  
                       _TRISAbits 0085                         _TRISCbits 0087         __size_of_HandleConfigByte 008B  
             __size_of_Write_Byte 0006                         _TXSTAbits 0016                   ??_CheckStopTime 0024  
         __end_of_Handle_Telegram 022F                      ??_Init_Timer 0020                      ??_Init_Ports 0020  
                    ?_Init_Relays 0070                      ??_Read_Relay 0020                       _BAUDCTLbits 0011  
             start_initialization 000F                         _Read_Byte 0F74     HandleTelegramByte@ByteCounter 0062  
         __end_of_AddByteToBuffer 07FF                __end_of_Init_Timer 0F94                __end_of_Init_Ports 0FC1  
              __end_of_Read_Relay 0781                         _Set_Relay 055F               _WriteByteFromBuffer 07B8  
           __end_of_Init_Receiver 0FAD         __size_of_Init_Transmitter 000C                    _Relay1StopTime 006C  
               _Handle_Interrupts 06BA                    _Relay2StopTime 00EB                    _Relay3StopTime 00E8  
     __size_of_HandleTelegramByte 0094                ?_Handle_Interrupts 0070                    _Relay4StopTime 00E5  
                     __pbssCOMMON 007D                         ___latbits 0001                _Stop_Ignition_Flag 00DD  
                  _Relay5StopTime 00E2                     __pcstackBANK0 0020                        ?_Read_Byte 0070  
                  _Relay6StopTime 00DF              ?_WriteByteFromBuffer 0070                  i1Set_Relay@Relay 0073  
             ??_Handle_Interrupts 0077                  i1Set_Relay@State 0070                      ?_SetStopTime 0020  
               _TelegramReadyFlag 005E             __size_of_SendTelegram 0039                        ?_Set_Relay 0020  
                ?_Handle_Telegram 0039                      ??_Write_Byte 0070         __end_of_Handle_Interrupts 0710  
                       __pswtext1 0800                         __pswtext2 080C                         __pswtext3 0818  
          Handle_Interrupts@dummy 007C             ??_WriteByteFromBuffer 0071                      _SendTelegram 0710  
                ?_AddByteToBuffer 0070                  _HandleConfigByte 04D4                __end_of_Write_Byte 0F6C  
               interrupt_function 0004                          _IOCAbits 0096                         clear_ram0 0F6C  
                        _PIE1bits 008C                          _PIR1bits 000C                   _Timer_Interrupt 0781  
                    ?_Start_Timer 0070              __size_of_Init_Relays 0025                       ??_Read_Byte 0070  
                   ??i1_Set_Relay 0071                       ??_Set_Relay 0021        SendTelegram@CommandCounter 0038  
                        _Telegram 00C8                        _CMCON0bits 0019        __size_of_Handle_Interrupts 0056  
                _Init_Transmitter 0F94                          __ptext10 07E3                          __ptext11 0749  
                        __ptext20 03AA                          __ptext12 022F                          __ptext21 0FC1  
                        __ptext13 055F                          __ptext22 0F74                          __ptext14 06BA  
                        __ptext15 07B8                          __ptext16 0F66                          __ptext17 0781  
                        __ptext18 0440                          __ptext19 04D4                     __size_of_main 0066  
            __size_of_SetStopTime 0075               __end_ofi1_Set_Relay 0440           __end_of_Timer_Interrupt 07B8  
           __end_of_CheckStopTime 03AA              Handle_Telegram@error 0052          SetStopTime@RelayStopTime 0025  
            Handle_Telegram@state 0053          HandleTelegramByte@Lenght 0060                        _INTCONbits 000B  
                        intlevel1 0000               AddByteToBuffer@Byte 0021              SetStopTime@Time100ms 0022  
            SetStopTime@Time10sec 0020                        _OSCCONbits 008F          __end_of_HandleConfigByte 055F  
      __end_of_HandleTelegramByte 04D4              __size_of_Start_Timer 000B               SetStopTime@Time1sec 0021  
          HandleTelegramByte@Byte 0074                       i1_Set_Relay 03AA                     _Counter_100ms 005C  
              __CFG_FOSC$INTOSCIO 0000                     _Counter_10sec 0058            __size_of_Init_Receiver 000D  
                ?_Timer_Interrupt 0070  
