

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Jan 26 14:55:47 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F688 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   100                           PORTC equ 07h ;# 
   101  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   116                           BAUDCTL equ 011h ;# 
   117  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   118                           SPBRGH equ 012h ;# 
   119  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   120                           SPBRG equ 013h ;# 
   121  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   122                           RCREG equ 014h ;# 
   123  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   124                           TXREG equ 015h ;# 
   125  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   126                           TXSTA equ 016h ;# 
   127  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   128                           RCSTA equ 017h ;# 
   129  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   130                           WDTCON equ 018h ;# 
   131  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   132                           CMCON0 equ 019h ;# 
   133  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   134                           CMCON1 equ 01Ah ;# 
   135  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   136                           ADRESH equ 01Eh ;# 
   137  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   138                           ADCON0 equ 01Fh ;# 
   139  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   140                           OPTION_REG equ 081h ;# 
   141  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   142                           TRISA equ 085h ;# 
   143  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   144                           TRISC equ 087h ;# 
   145  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   146                           PIE1 equ 08Ch ;# 
   147  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   148                           PCON equ 08Eh ;# 
   149  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   150                           OSCCON equ 08Fh ;# 
   151  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   152                           OSCTUNE equ 090h ;# 
   153  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   154                           ANSEL equ 091h ;# 
   155  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   156                           WPUA equ 095h ;# 
   157  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   158                           WPU equ 095h ;# 
   159  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   160                           IOCA equ 096h ;# 
   161  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   162                           IOC equ 096h ;# 
   163  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   164                           EEDATH equ 097h ;# 
   165  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   166                           EEADRH equ 098h ;# 
   167  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   168                           VRCON equ 099h ;# 
   169  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   170                           EEDAT equ 09Ah ;# 
   171  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   172                           EEDATA equ 09Ah ;# 
   173  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   174                           EEADR equ 09Bh ;# 
   175  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   176                           EECON1 equ 09Ch ;# 
   177  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   178                           EECON2 equ 09Dh ;# 
   179  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   180                           ADRESL equ 09Eh ;# 
   181  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   182                           ADCON1 equ 09Fh ;# 
   183  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   184                           INDF equ 00h ;# 
   185  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   186                           TMR0 equ 01h ;# 
   187  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   188                           PCL equ 02h ;# 
   189  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   190                           STATUS equ 03h ;# 
   191  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   192                           FSR equ 04h ;# 
   193  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   194                           PORTA equ 05h ;# 
   195  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   196                           PORTC equ 07h ;# 
   197  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   198                           PCLATH equ 0Ah ;# 
   199  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   200                           INTCON equ 0Bh ;# 
   201  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   202                           PIR1 equ 0Ch ;# 
   203  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   204                           TMR1 equ 0Eh ;# 
   205  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   206                           TMR1L equ 0Eh ;# 
   207  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   208                           TMR1H equ 0Fh ;# 
   209  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   210                           T1CON equ 010h ;# 
   211  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   212                           BAUDCTL equ 011h ;# 
   213  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   214                           SPBRGH equ 012h ;# 
   215  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   216                           SPBRG equ 013h ;# 
   217  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   218                           RCREG equ 014h ;# 
   219  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   220                           TXREG equ 015h ;# 
   221  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   222                           TXSTA equ 016h ;# 
   223  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   224                           RCSTA equ 017h ;# 
   225  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   226                           WDTCON equ 018h ;# 
   227  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   228                           CMCON0 equ 019h ;# 
   229  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   230                           CMCON1 equ 01Ah ;# 
   231  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   232                           ADRESH equ 01Eh ;# 
   233  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   234                           ADCON0 equ 01Fh ;# 
   235  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   236                           OPTION_REG equ 081h ;# 
   237  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   238                           TRISA equ 085h ;# 
   239  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   240                           TRISC equ 087h ;# 
   241  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   242                           PIE1 equ 08Ch ;# 
   243  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   244                           PCON equ 08Eh ;# 
   245  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   246                           OSCCON equ 08Fh ;# 
   247  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   248                           OSCTUNE equ 090h ;# 
   249  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   250                           ANSEL equ 091h ;# 
   251  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   252                           WPUA equ 095h ;# 
   253  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   254                           WPU equ 095h ;# 
   255  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   256                           IOCA equ 096h ;# 
   257  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   258                           IOC equ 096h ;# 
   259  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   260                           EEDATH equ 097h ;# 
   261  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   262                           EEADRH equ 098h ;# 
   263  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   264                           VRCON equ 099h ;# 
   265  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   266                           EEDAT equ 09Ah ;# 
   267  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   268                           EEDATA equ 09Ah ;# 
   269  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   270                           EEADR equ 09Bh ;# 
   271  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   272                           EECON1 equ 09Ch ;# 
   273  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   274                           EECON2 equ 09Dh ;# 
   275  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   276                           ADRESL equ 09Eh ;# 
   277  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   278                           ADCON1 equ 09Fh ;# 
   279  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   280                           INDF equ 00h ;# 
   281  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   282                           TMR0 equ 01h ;# 
   283  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   284                           PCL equ 02h ;# 
   285  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   286                           STATUS equ 03h ;# 
   287  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   288                           FSR equ 04h ;# 
   289  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   290                           PORTA equ 05h ;# 
   291  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   292                           PORTC equ 07h ;# 
   293  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   294                           PCLATH equ 0Ah ;# 
   295  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   296                           INTCON equ 0Bh ;# 
   297  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   298                           PIR1 equ 0Ch ;# 
   299  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   300                           TMR1 equ 0Eh ;# 
   301  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   302                           TMR1L equ 0Eh ;# 
   303  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   304                           TMR1H equ 0Fh ;# 
   305  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   306                           T1CON equ 010h ;# 
   307  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   308                           BAUDCTL equ 011h ;# 
   309  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   310                           SPBRGH equ 012h ;# 
   311  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   312                           SPBRG equ 013h ;# 
   313  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   314                           RCREG equ 014h ;# 
   315  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   316                           TXREG equ 015h ;# 
   317  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   318                           TXSTA equ 016h ;# 
   319  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   320                           RCSTA equ 017h ;# 
   321  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   322                           WDTCON equ 018h ;# 
   323  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   324                           CMCON0 equ 019h ;# 
   325  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   326                           CMCON1 equ 01Ah ;# 
   327  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   328                           ADRESH equ 01Eh ;# 
   329  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   330                           ADCON0 equ 01Fh ;# 
   331  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   332                           OPTION_REG equ 081h ;# 
   333  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   334                           TRISA equ 085h ;# 
   335  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   336                           TRISC equ 087h ;# 
   337  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   338                           PIE1 equ 08Ch ;# 
   339  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   340                           PCON equ 08Eh ;# 
   341  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   342                           OSCCON equ 08Fh ;# 
   343  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   344                           OSCTUNE equ 090h ;# 
   345  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   346                           ANSEL equ 091h ;# 
   347  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   348                           WPUA equ 095h ;# 
   349  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   350                           WPU equ 095h ;# 
   351  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   352                           IOCA equ 096h ;# 
   353  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   354                           IOC equ 096h ;# 
   355  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   356                           EEDATH equ 097h ;# 
   357  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   358                           EEADRH equ 098h ;# 
   359  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   360                           VRCON equ 099h ;# 
   361  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   362                           EEDAT equ 09Ah ;# 
   363  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   364                           EEDATA equ 09Ah ;# 
   365  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   366                           EEADR equ 09Bh ;# 
   367  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   368                           EECON1 equ 09Ch ;# 
   369  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   370                           EECON2 equ 09Dh ;# 
   371  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   372                           ADRESL equ 09Eh ;# 
   373  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   374                           ADCON1 equ 09Fh ;# 
   375  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   376                           INDF equ 00h ;# 
   377  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   378                           TMR0 equ 01h ;# 
   379  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   380                           PCL equ 02h ;# 
   381  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   382                           STATUS equ 03h ;# 
   383  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   384                           FSR equ 04h ;# 
   385  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   386                           PORTA equ 05h ;# 
   387  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   388                           PORTC equ 07h ;# 
   389  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   390                           PCLATH equ 0Ah ;# 
   391  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   392                           INTCON equ 0Bh ;# 
   393  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   394                           PIR1 equ 0Ch ;# 
   395  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   396                           TMR1 equ 0Eh ;# 
   397  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   398                           TMR1L equ 0Eh ;# 
   399  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   400                           TMR1H equ 0Fh ;# 
   401  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   402                           T1CON equ 010h ;# 
   403  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   404                           BAUDCTL equ 011h ;# 
   405  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   406                           SPBRGH equ 012h ;# 
   407  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   408                           SPBRG equ 013h ;# 
   409  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   410                           RCREG equ 014h ;# 
   411  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   412                           TXREG equ 015h ;# 
   413  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   414                           TXSTA equ 016h ;# 
   415  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   416                           RCSTA equ 017h ;# 
   417  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   418                           WDTCON equ 018h ;# 
   419  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   420                           CMCON0 equ 019h ;# 
   421  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   422                           CMCON1 equ 01Ah ;# 
   423  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   424                           ADRESH equ 01Eh ;# 
   425  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   426                           ADCON0 equ 01Fh ;# 
   427  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   428                           OPTION_REG equ 081h ;# 
   429  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   430                           TRISA equ 085h ;# 
   431  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   432                           TRISC equ 087h ;# 
   433  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   434                           PIE1 equ 08Ch ;# 
   435  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   436                           PCON equ 08Eh ;# 
   437  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   438                           OSCCON equ 08Fh ;# 
   439  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   440                           OSCTUNE equ 090h ;# 
   441  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   442                           ANSEL equ 091h ;# 
   443  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   444                           WPUA equ 095h ;# 
   445  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   446                           WPU equ 095h ;# 
   447  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   448                           IOCA equ 096h ;# 
   449  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   450                           IOC equ 096h ;# 
   451  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   452                           EEDATH equ 097h ;# 
   453  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   454                           EEADRH equ 098h ;# 
   455  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   456                           VRCON equ 099h ;# 
   457  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   458                           EEDAT equ 09Ah ;# 
   459  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   460                           EEDATA equ 09Ah ;# 
   461  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   462                           EEADR equ 09Bh ;# 
   463  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   464                           EECON1 equ 09Ch ;# 
   465  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   466                           EECON2 equ 09Dh ;# 
   467  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   468                           ADRESL equ 09Eh ;# 
   469  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   470                           ADCON1 equ 09Fh ;# 
   471  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   472                           INDF equ 00h ;# 
   473  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   474                           TMR0 equ 01h ;# 
   475  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   476                           PCL equ 02h ;# 
   477  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   478                           STATUS equ 03h ;# 
   479  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   480                           FSR equ 04h ;# 
   481  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   482                           PORTA equ 05h ;# 
   483  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   484                           PORTC equ 07h ;# 
   485  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   486                           PCLATH equ 0Ah ;# 
   487  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   488                           INTCON equ 0Bh ;# 
   489  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   490                           PIR1 equ 0Ch ;# 
   491  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   492                           TMR1 equ 0Eh ;# 
   493  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   494                           TMR1L equ 0Eh ;# 
   495  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   496                           TMR1H equ 0Fh ;# 
   497  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   498                           T1CON equ 010h ;# 
   499  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   500                           BAUDCTL equ 011h ;# 
   501  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   502                           SPBRGH equ 012h ;# 
   503  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   504                           SPBRG equ 013h ;# 
   505  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   506                           RCREG equ 014h ;# 
   507  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   508                           TXREG equ 015h ;# 
   509  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   510                           TXSTA equ 016h ;# 
   511  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   512                           RCSTA equ 017h ;# 
   513  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   514                           WDTCON equ 018h ;# 
   515  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   516                           CMCON0 equ 019h ;# 
   517  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   518                           CMCON1 equ 01Ah ;# 
   519  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   520                           ADRESH equ 01Eh ;# 
   521  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   522                           ADCON0 equ 01Fh ;# 
   523  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   524                           OPTION_REG equ 081h ;# 
   525  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   526                           TRISA equ 085h ;# 
   527  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   528                           TRISC equ 087h ;# 
   529  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   530                           PIE1 equ 08Ch ;# 
   531  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   532                           PCON equ 08Eh ;# 
   533  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   534                           OSCCON equ 08Fh ;# 
   535  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   536                           OSCTUNE equ 090h ;# 
   537  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   538                           ANSEL equ 091h ;# 
   539  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   540                           WPUA equ 095h ;# 
   541  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   542                           WPU equ 095h ;# 
   543  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   544                           IOCA equ 096h ;# 
   545  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   546                           IOC equ 096h ;# 
   547  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   548                           EEDATH equ 097h ;# 
   549  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   550                           EEADRH equ 098h ;# 
   551  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   552                           VRCON equ 099h ;# 
   553  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   554                           EEDAT equ 09Ah ;# 
   555  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   556                           EEDATA equ 09Ah ;# 
   557  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   558                           EEADR equ 09Bh ;# 
   559  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   560                           EECON1 equ 09Ch ;# 
   561  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   562                           EECON2 equ 09Dh ;# 
   563  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   564                           ADRESL equ 09Eh ;# 
   565  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   566                           ADCON1 equ 09Fh ;# 
   567  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   568                           INDF equ 00h ;# 
   569  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   570                           TMR0 equ 01h ;# 
   571  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   572                           PCL equ 02h ;# 
   573  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   574                           STATUS equ 03h ;# 
   575  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   576                           FSR equ 04h ;# 
   577  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   578                           PORTA equ 05h ;# 
   579  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   580                           PORTC equ 07h ;# 
   581  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   582                           PCLATH equ 0Ah ;# 
   583  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   584                           INTCON equ 0Bh ;# 
   585  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   586                           PIR1 equ 0Ch ;# 
   587  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   588                           TMR1 equ 0Eh ;# 
   589  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   590                           TMR1L equ 0Eh ;# 
   591  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   592                           TMR1H equ 0Fh ;# 
   593  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   594                           T1CON equ 010h ;# 
   595  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   596                           BAUDCTL equ 011h ;# 
   597  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   598                           SPBRGH equ 012h ;# 
   599  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   600                           SPBRG equ 013h ;# 
   601  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   602                           RCREG equ 014h ;# 
   603  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   604                           TXREG equ 015h ;# 
   605  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   606                           TXSTA equ 016h ;# 
   607  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   608                           RCSTA equ 017h ;# 
   609  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   610                           WDTCON equ 018h ;# 
   611  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   612                           CMCON0 equ 019h ;# 
   613  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   614                           CMCON1 equ 01Ah ;# 
   615  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   616                           ADRESH equ 01Eh ;# 
   617  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   618                           ADCON0 equ 01Fh ;# 
   619  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   620                           OPTION_REG equ 081h ;# 
   621  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   622                           TRISA equ 085h ;# 
   623  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   624                           TRISC equ 087h ;# 
   625  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   626                           PIE1 equ 08Ch ;# 
   627  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   628                           PCON equ 08Eh ;# 
   629  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   630                           OSCCON equ 08Fh ;# 
   631  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   632                           OSCTUNE equ 090h ;# 
   633  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   634                           ANSEL equ 091h ;# 
   635  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   636                           WPUA equ 095h ;# 
   637  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   638                           WPU equ 095h ;# 
   639  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   640                           IOCA equ 096h ;# 
   641  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   642                           IOC equ 096h ;# 
   643  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   644                           EEDATH equ 097h ;# 
   645  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   646                           EEADRH equ 098h ;# 
   647  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   648                           VRCON equ 099h ;# 
   649  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   650                           EEDAT equ 09Ah ;# 
   651  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   652                           EEDATA equ 09Ah ;# 
   653  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   654                           EEADR equ 09Bh ;# 
   655  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   656                           EECON1 equ 09Ch ;# 
   657  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   658                           EECON2 equ 09Dh ;# 
   659  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   660                           ADRESL equ 09Eh ;# 
   661  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   662                           ADCON1 equ 09Fh ;# 
   663  009F                     	FNCALL	_main,_AddByteToBuffer
   664                           	FNCALL	_main,_CheckStopTime
   665                           	FNCALL	_main,_Handle_Telegram
   666                           	FNCALL	_main,_Init_Ports
   667                           	FNCALL	_main,_Init_Receiver
   668                           	FNCALL	_main,_Init_Relays
   669                           	FNCALL	_main,_Init_Timer
   670                           	FNCALL	_main,_Init_Transmitter
   671                           	FNCALL	_main,_Start_Timer
   672                           	FNCALL	_Handle_Telegram,_Read_Relay
   673                           	FNCALL	_Handle_Telegram,_SendTelegram
   674                           	FNCALL	_Handle_Telegram,_SetStopTime
   675                           	FNCALL	_Handle_Telegram,_Set_Relay
   676                           	FNCALL	_SendTelegram,_AddByteToBuffer
   677                           	FNCALL	_CheckStopTime,_Set_Relay
   678                           	FNROOT	_main
   679                           	FNCALL	_Handle_Interrupts,_HandleConfigByte
   680                           	FNCALL	_Handle_Interrupts,_HandleTelegramByte
   681                           	FNCALL	_Handle_Interrupts,_Timer_Interrupt
   682                           	FNCALL	_Handle_Interrupts,_WriteByteFromBuffer
   683                           	FNCALL	_WriteByteFromBuffer,_Write_Byte
   684                           	FNCALL	_HandleTelegramByte,_Read_Byte
   685                           	FNCALL	_HandleConfigByte,_Read_Byte
   686                           	FNCALL	_HandleConfigByte,i1_AddByteToBuffer
   687                           	FNCALL	_HandleConfigByte,i1_Set_Relay
   688                           	FNCALL	intlevel1,_Handle_Interrupts
   689                           	global	intlevel1
   690                           	FNROOT	intlevel1
   691                           	global	_BufferHead
   692                           	global	_Counter_10sec
   693                           	global	_Counter_1sec
   694                           	global	_Counter_100ms
   695                           	global	_TelegramReadyFlag
   696                           	global	HandleTelegramByte@CommandCounter
   697                           	global	HandleTelegramByte@ByteCounter
   698                           	global	_BufferTail
   699                           	global	HandleConfigByte@ByteCounter
   700                           	global	_CurrentMode
   701                           	global	_StopRelay6OnTime
   702                           	global	_StopRelay5OnTime
   703                           	global	_StopRelay4OnTime
   704                           	global	_StopRelay3OnTime
   705                           	global	_StopRelay2OnTime
   706                           	global	_StopRelay1OnTime
   707                           	global	_Relay1StopTime
   708                           	global	_SendBuffer
   709                           	global	_Telegram
   710                           	global	_Relay6StopTime
   711                           	global	_Relay5StopTime
   712                           	global	_Relay4StopTime
   713                           	global	_Relay3StopTime
   714                           	global	_Relay2StopTime
   715                           	global	_PORTCbits
   716                           _PORTCbits	set	0x7
   717  0007                     	global	_RCREG
   718                           _RCREG	set	0x14
   719  0014                     	global	_TXREG
   720                           _TXREG	set	0x15
   721  0015                     	global	_SPBRG
   722                           _SPBRG	set	0x13
   723  0013                     	global	_BAUDCTLbits
   724                           _BAUDCTLbits	set	0x11
   725  0011                     	global	_RCSTAbits
   726                           _RCSTAbits	set	0x17
   727  0017                     	global	_TXSTAbits
   728                           _TXSTAbits	set	0x16
   729  0016                     	global	_PORTA
   730                           _PORTA	set	0x5
   731  0005                     	global	_PORTAbits
   732                           _PORTAbits	set	0x5
   733  0005                     	global	_CMCON0bits
   734                           _CMCON0bits	set	0x19
   735  0019                     	global	_TMR1L
   736                           _TMR1L	set	0xE
   737  000E                     	global	_TMR1H
   738                           _TMR1H	set	0xF
   739  000F                     	global	_PIR1bits
   740                           _PIR1bits	set	0xC
   741  000C                     	global	_INTCONbits
   742                           _INTCONbits	set	0xB
   743  000B                     	global	_T1CONbits
   744                           _T1CONbits	set	0x10
   745  0010                     	global	_OSCCONbits
   746                           _OSCCONbits	set	0x8F
   747  008F                     	global	_IOCAbits
   748                           _IOCAbits	set	0x96
   749  0096                     	global	_ANSEL
   750                           _ANSEL	set	0x91
   751  0091                     	global	_TRISCbits
   752                           _TRISCbits	set	0x87
   753  0087                     	global	_TRISAbits
   754                           _TRISAbits	set	0x85
   755  0085                     	global	_PIE1bits
   756                           _PIE1bits	set	0x8C
   757  008C                     ; #config settings
   758                           global __CFG_FOSC$INTOSCIO
   759                           __CFG_FOSC$INTOSCIO equ 0x0
   760  0000                     global __CFG_WDTE$OFF
   761                           __CFG_WDTE$OFF equ 0x0
   762  0000                     global __CFG_MCLRE$OFF
   763                           __CFG_MCLRE$OFF equ 0x0
   764  0000                     	file	"C:\Users\Bendixen\AppData\Local\Temp\se58."
   765                           	line	#
   766                           psect cinit,class=CODE,delta=2
   767                           global start_initialization
   768                           start_initialization:
   769  000F                     
   770                           global __initialization
   771                           __initialization:
   772  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   773                           global __pbssCOMMON
   774                           __pbssCOMMON:
   775  007D                     _BufferHead:
   776  007D                            ds      1
   777  007D                     
   778                           psect	bssBANK0,class=BANK0,space=1,noexec
   779                           global __pbssBANK0
   780                           __pbssBANK0:
   781  0058                     _Counter_10sec:
   782  0058                            ds      2
   783  0058                     
   784                           _Counter_1sec:
   785  005A                            ds      2
   786  005A                     
   787                           _Counter_100ms:
   788  005C                            ds      2
   789  005C                     
   790                           _TelegramReadyFlag:
   791  005E                            ds      2
   792  005E                     
   793                           HandleTelegramByte@Lenght:
   794  0060                            ds      1
   795  0060                     
   796                           HandleTelegramByte@CommandCounter:
   797  0061                            ds      1
   798  0061                     
   799                           HandleTelegramByte@ByteCounter:
   800  0062                            ds      1
   801  0062                     
   802                           _BufferTail:
   803  0063                            ds      1
   804  0063                     
   805                           HandleConfigByte@ByteCounter:
   806  0064                            ds      1
   807  0064                     
   808                           _CurrentMode:
   809  0065                            ds      1
   810  0065                     
   811                           _StopRelay6OnTime:
   812  0066                            ds      1
   813  0066                     
   814                           _StopRelay5OnTime:
   815  0067                            ds      1
   816  0067                     
   817                           _StopRelay4OnTime:
   818  0068                            ds      1
   819  0068                     
   820                           _StopRelay3OnTime:
   821  0069                            ds      1
   822  0069                     
   823                           _StopRelay2OnTime:
   824  006A                            ds      1
   825  006A                     
   826                           _StopRelay1OnTime:
   827  006B                            ds      1
   828  006B                     
   829                           _Relay1StopTime:
   830  006C                            ds      3
   831  006C                     
   832                           psect	bssBANK1,class=BANK1,space=1,noexec
   833                           global __pbssBANK1
   834                           __pbssBANK1:
   835  00A0                     _SendBuffer:
   836  00A0                            ds      40
   837  00A0                     
   838                           _Telegram:
   839  00C8                            ds      21
   840  00C8                     
   841                           _Stop_Ignition_Flag:
   842  00DD                            ds      2
   843  00DD                     
   844                           _Relay6StopTime:
   845  00DF                            ds      3
   846  00DF                     
   847                           _Relay5StopTime:
   848  00E2                            ds      3
   849  00E2                     
   850                           _Relay4StopTime:
   851  00E5                            ds      3
   852  00E5                     
   853                           _Relay3StopTime:
   854  00E8                            ds      3
   855  00E8                     
   856                           _Relay2StopTime:
   857  00EB                            ds      3
   858  00EB                     
   859                           	file	"C:\Users\Bendixen\AppData\Local\Temp\se58."
   860                           	line	#
   861                           psect clrtext,class=CODE,delta=2
   862                           global clear_ram0
   863                           ;	Called with FSR containing the base address, and
   864                           ;	W with the last address+1
   865                           clear_ram0:
   866  0F6C                     	clrwdt			;clear the watchdog before getting into this loop
   867  0F6C  0064               clrloop0:
   868  0F6D                     	clrf	indf		;clear RAM location pointed to by FSR
   869  0F6D  0180               	incf	fsr,f		;increment pointer
   870  0F6E  0A84               	xorwf	fsr,w		;XOR with final address
   871  0F6F  0604               	btfsc	status,2	;have we reached the end yet?
   872  0F70  1903               	retlw	0		;all done for this memory range, return
   873  0F71  3400               	xorwf	fsr,w		;XOR again to restore value
   874  0F72  0604               	goto	clrloop0		;do the next byte
   875  0F73  2F6D               
   876                           ; Clear objects allocated to COMMON
   877                           psect cinit,class=CODE,delta=2,merge=1
   878                           	clrf	((__pbssCOMMON)+0)&07Fh
   879  000F  01FD               ; Clear objects allocated to BANK0
   880                           psect cinit,class=CODE,delta=2,merge=1
   881                           	bcf	status, 7	;select IRP bank0
   882  0010  1383               	movlw	low(__pbssBANK0)
   883  0011  3058               	movwf	fsr
   884  0012  0084               	movlw	low((__pbssBANK0)+017h)
   885  0013  306F               	fcall	clear_ram0
   886  0014  158A  276C  118A   ; Clear objects allocated to BANK1
   887                           psect cinit,class=CODE,delta=2,merge=1
   888                           	movlw	low(__pbssBANK1)
   889  0017  30A0               	movwf	fsr
   890  0018  0084               	movlw	low((__pbssBANK1)+04Eh)
   891  0019  30EE               	fcall	clear_ram0
   892  001A  158A  276C  118A   psect cinit,class=CODE,delta=2,merge=1
   893                           global end_of_initialization,__end_of__initialization
   894                           
   895                           ;End of C runtime variable initialization code
   896                           
   897                           end_of_initialization:
   898  001D                     __end_of__initialization:
   899  001D                     clrf status
   900  001D  0183               ljmp _main	;jump to C main() function
   901  001E  118A  2E54         psect	cstackCOMMON,class=COMMON,space=1,noexec
   902                           global __pcstackCOMMON
   903                           __pcstackCOMMON:
   904  0070                     ?_Init_Ports:	; 1 bytes @ 0x0
   905  0070                     ?_Init_Relays:	; 1 bytes @ 0x0
   906  0070                     ?_Init_Transmitter:	; 1 bytes @ 0x0
   907  0070                     ?_Init_Receiver:	; 1 bytes @ 0x0
   908  0070                     ?_AddByteToBuffer:	; 1 bytes @ 0x0
   909  0070                     ?_CheckStopTime:	; 1 bytes @ 0x0
   910  0070                     ?_Read_Relay:	; 1 bytes @ 0x0
   911  0070                     ?_Read_Byte:	; 1 bytes @ 0x0
   912  0070                     ??_Read_Byte:	; 1 bytes @ 0x0
   913  0070                     ?_WriteByteFromBuffer:	; 1 bytes @ 0x0
   914  0070                     ?_HandleTelegramByte:	; 1 bytes @ 0x0
   915  0070                     ?_Init_Timer:	; 1 bytes @ 0x0
   916  0070                     ?_Start_Timer:	; 1 bytes @ 0x0
   917  0070                     ?_Timer_Interrupt:	; 1 bytes @ 0x0
   918  0070                     ??_Timer_Interrupt:	; 1 bytes @ 0x0
   919  0070                     ?_main:	; 1 bytes @ 0x0
   920  0070                     ?_HandleConfigByte:	; 1 bytes @ 0x0
   921  0070                     ?_Handle_Interrupts:	; 1 bytes @ 0x0
   922  0070                     ?_Write_Byte:	; 1 bytes @ 0x0
   923  0070                     ??_Write_Byte:	; 1 bytes @ 0x0
   924  0070                     ?i1_AddByteToBuffer:	; 1 bytes @ 0x0
   925  0070                     ??i1_AddByteToBuffer:	; 1 bytes @ 0x0
   926  0070                     ?i1_Set_Relay:	; 1 bytes @ 0x0
   927  0070                     	global	Write_Byte@Data
   928                           Write_Byte@Data:	; 1 bytes @ 0x0
   929  0070                     	global	i1Set_Relay@State
   930                           i1Set_Relay@State:	; 1 bytes @ 0x0
   931  0070                     	ds	1
   932  0070                     ??_WriteByteFromBuffer:	; 1 bytes @ 0x1
   933  0071                     ??i1_Set_Relay:	; 1 bytes @ 0x1
   934  0071                     	global	Read_Byte@Data
   935                           Read_Byte@Data:	; 1 bytes @ 0x1
   936  0071                     	global	i1AddByteToBuffer@Byte
   937                           i1AddByteToBuffer@Byte:	; 1 bytes @ 0x1
   938  0071                     	ds	1
   939  0071                     ??_HandleTelegramByte:	; 1 bytes @ 0x2
   940  0072                     	ds	1
   941  0072                     	global	i1Set_Relay@Relay
   942                           i1Set_Relay@Relay:	; 1 bytes @ 0x3
   943  0073                     	ds	1
   944  0073                     ??_HandleConfigByte:	; 1 bytes @ 0x4
   945  0074                     	global	HandleTelegramByte@Byte
   946                           HandleTelegramByte@Byte:	; 1 bytes @ 0x4
   947  0074                     	ds	2
   948  0074                     	global	HandleConfigByte@Byte
   949                           HandleConfigByte@Byte:	; 1 bytes @ 0x6
   950  0076                     	ds	1
   951  0076                     ??_Handle_Interrupts:	; 1 bytes @ 0x7
   952  0077                     	ds	5
   953  0077                     	global	Handle_Interrupts@dummy
   954                           Handle_Interrupts@dummy:	; 1 bytes @ 0xC
   955  007C                     	ds	1
   956  007C                     psect	cstackBANK0,class=BANK0,space=1,noexec
   957                           global __pcstackBANK0
   958                           __pcstackBANK0:
   959  0020                     ??_Init_Ports:	; 1 bytes @ 0x0
   960  0020                     ??_Init_Relays:	; 1 bytes @ 0x0
   961  0020                     ??_Init_Transmitter:	; 1 bytes @ 0x0
   962  0020                     ??_Init_Receiver:	; 1 bytes @ 0x0
   963  0020                     ??_AddByteToBuffer:	; 1 bytes @ 0x0
   964  0020                     ?_Set_Relay:	; 1 bytes @ 0x0
   965  0020                     ??_Read_Relay:	; 1 bytes @ 0x0
   966  0020                     ??_Init_Timer:	; 1 bytes @ 0x0
   967  0020                     ??_Start_Timer:	; 1 bytes @ 0x0
   968  0020                     ?_SetStopTime:	; 1 bytes @ 0x0
   969  0020                     	global	SetStopTime@Time10sec
   970                           SetStopTime@Time10sec:	; 1 bytes @ 0x0
   971  0020                     	global	Set_Relay@State
   972                           Set_Relay@State:	; 1 bytes @ 0x0
   973  0020                     	ds	1
   974  0020                     ??_Set_Relay:	; 1 bytes @ 0x1
   975  0021                     	global	SetStopTime@Time1sec
   976                           SetStopTime@Time1sec:	; 1 bytes @ 0x1
   977  0021                     	global	AddByteToBuffer@Byte
   978                           AddByteToBuffer@Byte:	; 1 bytes @ 0x1
   979  0021                     	ds	1
   980  0021                     ?_SendTelegram:	; 1 bytes @ 0x2
   981  0022                     	global	SetStopTime@Time100ms
   982                           SetStopTime@Time100ms:	; 1 bytes @ 0x2
   983  0022                     	global	Read_Relay@Relay
   984                           Read_Relay@Relay:	; 1 bytes @ 0x2
   985  0022                     	global	SendTelegram@MyTelegram
   986                           SendTelegram@MyTelegram:	; 21 bytes @ 0x2
   987  0022                     	ds	1
   988  0022                     ??_SetStopTime:	; 1 bytes @ 0x3
   989  0023                     	global	Set_Relay@Relay
   990                           Set_Relay@Relay:	; 1 bytes @ 0x3
   991  0023                     	ds	1
   992  0023                     ??_CheckStopTime:	; 1 bytes @ 0x4
   993  0024                     	ds	1
   994  0024                     	global	SetStopTime@RelayStopTime
   995                           SetStopTime@RelayStopTime:	; 1 bytes @ 0x5
   996  0025                     	ds	18
   997  0025                     ??_SendTelegram:	; 1 bytes @ 0x17
   998  0037                     	ds	1
   999  0037                     	global	SendTelegram@CommandCounter
  1000                           SendTelegram@CommandCounter:	; 1 bytes @ 0x18
  1001  0038                     	ds	1
  1002  0038                     ?_Handle_Telegram:	; 1 bytes @ 0x19
  1003  0039                     	global	Handle_Telegram@ThisTelegram
  1004                           Handle_Telegram@ThisTelegram:	; 21 bytes @ 0x19
  1005  0039                     	ds	21
  1006  0039                     ??_Handle_Telegram:	; 1 bytes @ 0x2E
  1007  004E                     	ds	4
  1008  004E                     	global	Handle_Telegram@error
  1009                           Handle_Telegram@error:	; 1 bytes @ 0x32
  1010  0052                     	ds	1
  1011  0052                     	global	Handle_Telegram@state
  1012                           Handle_Telegram@state:	; 1 bytes @ 0x33
  1013  0053                     	ds	1
  1014  0053                     ??_main:	; 1 bytes @ 0x34
  1015  0054                     	ds	4
  1016  0054                     ;!
  1017                           ;!Data Sizes:
  1018                           ;!    Strings     0
  1019                           ;!    Constant    0
  1020                           ;!    Data        0
  1021                           ;!    BSS         102
  1022                           ;!    Persistent  0
  1023                           ;!    Stack       0
  1024                           ;!
  1025                           ;!Auto Spaces:
  1026                           ;!    Space          Size  Autos    Used
  1027                           ;!    COMMON           14     13      14
  1028                           ;!    BANK0            80     56      79
  1029                           ;!    BANK1            80      0      78
  1030                           ;!    BANK2            80      0       0
  1031                           
  1032                           ;!
  1033                           ;!Pointer List with Targets:
  1034                           ;!
  1035                           ;!    SetStopTime@RelayStopTime	PTR unsigned char  size(1) Largest target is 3
  1036                           ;!		 -> Relay6StopTime(BANK1[3]), Relay5StopTime(BANK1[3]), Relay4StopTime(BANK1[3]), Re
                                 lay3StopTime(BANK1[3]), 
  1037                           ;!		 -> Relay2StopTime(BANK1[3]), Relay1StopTime(BANK0[3]), 
  1038                           ;!
  1039                           
  1040                           
  1041                           ;!
  1042                           ;!Critical Paths under _main in COMMON
  1043                           ;!
  1044                           ;!    None.
  1045                           ;!
  1046                           ;!Critical Paths under _Handle_Interrupts in COMMON
  1047                           ;!
  1048                           ;!    _Handle_Interrupts->_HandleConfigByte
  1049                           ;!    _WriteByteFromBuffer->_Write_Byte
  1050                           ;!    _HandleTelegramByte->_Read_Byte
  1051                           ;!    _HandleConfigByte->i1_Set_Relay
  1052                           ;!
  1053                           ;!Critical Paths under _main in BANK0
  1054                           ;!
  1055                           ;!    _main->_Handle_Telegram
  1056                           ;!    _Handle_Telegram->_SendTelegram
  1057                           ;!    _SendTelegram->_AddByteToBuffer
  1058                           ;!    _CheckStopTime->_Set_Relay
  1059                           ;!
  1060                           ;!Critical Paths under _Handle_Interrupts in BANK0
  1061                           ;!
  1062                           ;!    None.
  1063                           ;!
  1064                           ;!Critical Paths under _main in BANK1
  1065                           ;!
  1066                           ;!    None.
  1067                           ;!
  1068                           ;!Critical Paths under _Handle_Interrupts in BANK1
  1069                           ;!
  1070                           ;!    None.
  1071                           ;!
  1072                           ;!Critical Paths under _main in BANK2
  1073                           ;!
  1074                           ;!    None.
  1075                           ;!
  1076                           ;!Critical Paths under _Handle_Interrupts in BANK2
  1077                           ;!
  1078                           ;!    None.
  1079                           
  1080 ;;
  1081 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1082 ;;
  1083                           
  1084                           ;!
  1085                           ;!Call Graph Tables:
  1086                           ;!
  1087                           ;! ---------------------------------------------------------------------------------
  1088                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1089                           ;! ---------------------------------------------------------------------------------
  1090                           ;! (0) _main                                                 4     4      0    7496
  1091                           ;!                                             52 BANK0      4     4      0
  1092                           ;!                    _AddByteToBuffer
  1093                           ;!                      _CheckStopTime
  1094                           ;!                    _Handle_Telegram
  1095                           ;!                         _Init_Ports
  1096                           ;!                      _Init_Receiver
  1097                           ;!                        _Init_Relays
  1098                           ;!                         _Init_Timer
  1099                           ;!                   _Init_Transmitter
  1100                           ;!                        _Start_Timer
  1101                           ;! ---------------------------------------------------------------------------------
  1102                           ;! (1) _Start_Timer                                          0     0      0       0
  1103                           ;! ---------------------------------------------------------------------------------
  1104                           ;! (1) _Init_Transmitter                                     0     0      0       0
  1105                           ;! ---------------------------------------------------------------------------------
  1106                           ;! (1) _Init_Timer                                           0     0      0       0
  1107                           ;! ---------------------------------------------------------------------------------
  1108                           ;! (1) _Init_Relays                                          0     0      0       0
  1109                           ;! ---------------------------------------------------------------------------------
  1110                           ;! (1) _Init_Receiver                                        0     0      0       0
  1111                           ;! ---------------------------------------------------------------------------------
  1112                           ;! (1) _Init_Ports                                           0     0      0       0
  1113                           ;! ---------------------------------------------------------------------------------
  1114                           ;! (1) _Handle_Telegram                                     27     6     21    5520
  1115                           ;!                                             25 BANK0     27     6     21
  1116                           ;!                         _Read_Relay
  1117                           ;!                       _SendTelegram
  1118                           ;!                        _SetStopTime
  1119                           ;!                          _Set_Relay
  1120                           ;! ---------------------------------------------------------------------------------
  1121                           ;! (2) _SetStopTime                                          6     3      3    1942
  1122                           ;!                                              0 BANK0      6     3      3
  1123                           ;! ---------------------------------------------------------------------------------
  1124                           ;! (2) _SendTelegram                                        24     3     21     304
  1125                           ;!                                              2 BANK0     23     2     21
  1126                           ;!                    _AddByteToBuffer
  1127                           ;! ---------------------------------------------------------------------------------
  1128                           ;! (3) _AddByteToBuffer                                      2     2      0      22
  1129                           ;!                                              0 BANK0      2     2      0
  1130                           ;! ---------------------------------------------------------------------------------
  1131                           ;! (2) _Read_Relay                                           3     3      0      22
  1132                           ;!                                              0 BANK0      3     3      0
  1133                           ;! ---------------------------------------------------------------------------------
  1134                           ;! (1) _CheckStopTime                                        2     2      0    1954
  1135                           ;!                                              4 BANK0      2     2      0
  1136                           ;!                          _Set_Relay
  1137                           ;! ---------------------------------------------------------------------------------
  1138                           ;! (2) _Set_Relay                                            4     3      1    1954
  1139                           ;!                                              0 BANK0      4     3      1
  1140                           ;! ---------------------------------------------------------------------------------
  1141                           ;! Estimated maximum stack depth 3
  1142                           ;! ---------------------------------------------------------------------------------
  1143                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1144                           ;! ---------------------------------------------------------------------------------
  1145                           ;! (4) _Handle_Interrupts                                    6     6      0     711
  1146                           ;!                                              7 COMMON     6     6      0
  1147                           ;!                   _HandleConfigByte
  1148                           ;!                 _HandleTelegramByte
  1149                           ;!                    _Timer_Interrupt
  1150                           ;!                _WriteByteFromBuffer
  1151                           ;! ---------------------------------------------------------------------------------
  1152                           ;! (5) _WriteByteFromBuffer                                  1     1      0      22
  1153                           ;!                                              1 COMMON     1     1      0
  1154                           ;!                         _Write_Byte
  1155                           ;! ---------------------------------------------------------------------------------
  1156                           ;! (6) _Write_Byte                                           1     1      0      22
  1157                           ;!                                              0 COMMON     1     1      0
  1158                           ;! ---------------------------------------------------------------------------------
  1159                           ;! (5) _Timer_Interrupt                                      0     0      0       0
  1160                           ;! ---------------------------------------------------------------------------------
  1161                           ;! (5) _HandleTelegramByte                                   3     3      0     178
  1162                           ;!                                              2 COMMON     3     3      0
  1163                           ;!                          _Read_Byte
  1164                           ;! ---------------------------------------------------------------------------------
  1165                           ;! (5) _HandleConfigByte                                     3     3      0     510
  1166                           ;!                                              4 COMMON     3     3      0
  1167                           ;!                          _Read_Byte
  1168                           ;!                  i1_AddByteToBuffer
  1169                           ;!                        i1_Set_Relay
  1170                           ;! ---------------------------------------------------------------------------------
  1171                           ;! (6) i1_Set_Relay                                          4     3      1     442
  1172                           ;!                                              0 COMMON     4     3      1
  1173                           ;! ---------------------------------------------------------------------------------
  1174                           ;! (6) i1_AddByteToBuffer                                    2     2      0      22
  1175                           ;!                                              0 COMMON     2     2      0
  1176                           ;! ---------------------------------------------------------------------------------
  1177                           ;! (6) _Read_Byte                                            2     2      0      23
  1178                           ;!                                              0 COMMON     2     2      0
  1179                           ;! ---------------------------------------------------------------------------------
  1180                           ;! Estimated maximum stack depth 6
  1181                           ;! ---------------------------------------------------------------------------------
  1182                           ;!
  1183                           ;! Call Graph Graphs:
  1184                           ;!
  1185                           ;! _main (ROOT)
  1186                           ;!   _AddByteToBuffer
  1187                           ;!   _CheckStopTime
  1188                           ;!     _Set_Relay
  1189                           ;!   _Handle_Telegram
  1190                           ;!     _Read_Relay
  1191                           ;!     _SendTelegram
  1192                           ;!       _AddByteToBuffer
  1193                           ;!     _SetStopTime
  1194                           ;!     _Set_Relay
  1195                           ;!   _Init_Ports
  1196                           ;!   _Init_Receiver
  1197                           ;!   _Init_Relays
  1198                           ;!   _Init_Timer
  1199                           ;!   _Init_Transmitter
  1200                           ;!   _Start_Timer
  1201                           ;!
  1202                           ;! _Handle_Interrupts (ROOT)
  1203                           ;!   _HandleConfigByte
  1204                           ;!     _Read_Byte
  1205                           ;!     i1_AddByteToBuffer
  1206                           ;!     i1_Set_Relay
  1207                           ;!   _HandleTelegramByte
  1208                           ;!     _Read_Byte
  1209                           ;!   _Timer_Interrupt
  1210                           ;!   _WriteByteFromBuffer
  1211                           ;!     _Write_Byte
  1212                           ;!
  1213                           
  1214                           ;! Address spaces:
  1215                           
  1216                           ;!Name               Size   Autos  Total    Cost      Usage
  1217                           ;!BITCOMMON            E      0       0       0        0.0%
  1218                           ;!EEDATA             100      0       0       0        0.0%
  1219                           ;!NULL                 0      0       0       0        0.0%
  1220                           ;!CODE                 0      0       0       0        0.0%
  1221                           ;!COMMON               E      D       E       1      100.0%
  1222                           ;!BITSFR0              0      0       0       1        0.0%
  1223                           ;!SFR0                 0      0       0       1        0.0%
  1224                           ;!BITSFR1              0      0       0       2        0.0%
  1225                           ;!SFR1                 0      0       0       2        0.0%
  1226                           ;!STACK                0      0       0       2        0.0%
  1227                           ;!BANK0               50     38      4F       3       98.8%
  1228                           ;!BITBANK1            50      0       0       4        0.0%
  1229                           ;!BITSFR3              0      0       0       4        0.0%
  1230                           ;!SFR3                 0      0       0       4        0.0%
  1231                           ;!BANK1               50      0      4E       5       97.5%
  1232                           ;!BITSFR2              0      0       0       5        0.0%
  1233                           ;!SFR2                 0      0       0       5        0.0%
  1234                           ;!BITBANK2            50      0       0       6        0.0%
  1235                           ;!BANK2               50      0       0       7        0.0%
  1236                           ;!ABS                  0      0      AB       8        0.0%
  1237                           ;!BITBANK0            50      0       0       9        0.0%
  1238                           ;!DATA                 0      0      AB      10        0.0%
  1239                           
  1240                           	global	_main
  1241                           
  1242 ;; *************** function _main *****************
  1243 ;; Defined at:
  1244 ;;		line 59 in file "Main.c"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;		None
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : B00/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1258 ;;      Params:         0       0       0       0
  1259 ;;      Locals:         0       0       0       0
  1260 ;;      Temps:          0       4       0       0
  1261 ;;      Totals:         0       4       0       0
  1262 ;;Total ram usage:        4 bytes
  1263 ;; Hardware stack levels required when called:    6
  1264 ;; This function calls:
  1265 ;;		_AddByteToBuffer
  1266 ;;		_CheckStopTime
  1267 ;;		_Handle_Telegram
  1268 ;;		_Init_Ports
  1269 ;;		_Init_Receiver
  1270 ;;		_Init_Relays
  1271 ;;		_Init_Timer
  1272 ;;		_Init_Transmitter
  1273 ;;		_Start_Timer
  1274 ;; This function is called by:
  1275 ;;		Startup code after reset
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1279                           	file	"Main.c"
  1280                           	line	59
  1281                           global __pmaintext
  1282                           __pmaintext:	;psect for function _main
  1283  0654                     psect	maintext
  1284                           	file	"Main.c"
  1285                           	line	59
  1286                           	global	__size_of_main
  1287                           	__size_of_main	equ	__end_of_main-_main
  1288  0066                     	
  1289                           _main:	
  1290  0654                     ;incstack = 0
  1291                           	opt	stack 2
  1292                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1293                           	line	62
  1294                           	
  1295                           l2552:	
  1296  0654                     ;Main.c: 62:     Init_Ports();
  1297                           	fcall	_Init_Ports
  1298  0654  158A  27AD  118A   	line	63
  1299                           ;Main.c: 63:     Init_Timer();
  1300                           	fcall	_Init_Timer
  1301  0657  158A  2788  118A   	line	64
  1302                           	
  1303                           l2554:	
  1304  065A                     ;Main.c: 64:     Init_Relays();
  1305                           	fcall	_Init_Relays
  1306  065A  158A  27DB  118A   	line	65
  1307                           	
  1308                           l2556:	
  1309  065D                     ;Main.c: 65:     Init_Transmitter();
  1310                           	fcall	_Init_Transmitter
  1311  065D  158A  2794  118A   	line	66
  1312                           ;Main.c: 66:     Init_Receiver();
  1313                           	fcall	_Init_Receiver
  1314  0660  158A  27A0  118A   	line	67
  1315                           	
  1316                           l2558:	
  1317  0663                     ;Main.c: 67:     Start_Timer();
  1318                           	fcall	_Start_Timer
  1319  0663  158A  277D  118A   	line	69
  1320                           	
  1321                           l2560:	
  1322  0666                     ;Main.c: 69:     AddByteToBuffer('X');
  1323                           	movlw	low(058h)
  1324  0666  3058               	fcall	_AddByteToBuffer
  1325  0667  118A  27E3  118A   	line	72
  1326                           	
  1327                           l2562:	
  1328  066A                     ;Main.c: 72:     CurrentMode = Running;
  1329                           	bcf	status, 5	;RP0=0, select bank0
  1330  066A  1283               	bcf	status, 6	;RP1=0, select bank0
  1331  066B  1303               	clrf	(_CurrentMode)
  1332  066C  01E5               	goto	l2564
  1333  066D  2E6E               	line	74
  1334                           ;Main.c: 74:     while (1)
  1335                           	
  1336                           l158:	
  1337  066E                     	line	78
  1338                           	
  1339                           l2564:	
  1340  066E                     ;Main.c: 75:     {;Main.c: 78:         if (StopRelay1OnTime == 1 || StopRelay2OnTime == 
                                 1 || StopRelay3OnTime == 1 || StopRelay4OnTime == 1 || StopRelay5OnTime == 1 || StopRela
                                 y6OnTime == 1)
  1341                           	bcf	status, 5	;RP0=0, select bank0
  1342  066E  1283               	bcf	status, 6	;RP1=0, select bank0
  1343  066F  1303               		decf	((_StopRelay1OnTime)),w
  1344  0670  036B               	btfsc	status,2
  1345  0671  1903               	goto	u1611
  1346  0672  2E74               	goto	u1610
  1347  0673  2E75               u1611:
  1348  0674                     	goto	l2576
  1349  0674  2E8F               u1610:
  1350  0675                     	
  1351                           l2566:	
  1352  0675                     		decf	((_StopRelay2OnTime)),w
  1353  0675  036A               	btfsc	status,2
  1354  0676  1903               	goto	u1621
  1355  0677  2E79               	goto	u1620
  1356  0678  2E7A               u1621:
  1357  0679                     	goto	l2576
  1358  0679  2E8F               u1620:
  1359  067A                     	
  1360                           l2568:	
  1361  067A                     		decf	((_StopRelay3OnTime)),w
  1362  067A  0369               	btfsc	status,2
  1363  067B  1903               	goto	u1631
  1364  067C  2E7E               	goto	u1630
  1365  067D  2E7F               u1631:
  1366  067E                     	goto	l2576
  1367  067E  2E8F               u1630:
  1368  067F                     	
  1369                           l2570:	
  1370  067F                     		decf	((_StopRelay4OnTime)),w
  1371  067F  0368               	btfsc	status,2
  1372  0680  1903               	goto	u1641
  1373  0681  2E83               	goto	u1640
  1374  0682  2E84               u1641:
  1375  0683                     	goto	l2576
  1376  0683  2E8F               u1640:
  1377  0684                     	
  1378                           l2572:	
  1379  0684                     		decf	((_StopRelay5OnTime)),w
  1380  0684  0367               	btfsc	status,2
  1381  0685  1903               	goto	u1651
  1382  0686  2E88               	goto	u1650
  1383  0687  2E89               u1651:
  1384  0688                     	goto	l2576
  1385  0688  2E8F               u1650:
  1386  0689                     	
  1387                           l2574:	
  1388  0689                     		decf	((_StopRelay6OnTime)),w
  1389  0689  0366               	btfss	status,2
  1390  068A  1D03               	goto	u1661
  1391  068B  2E8D               	goto	u1660
  1392  068C  2E8E               u1661:
  1393  068D                     	goto	l2578
  1394  068D  2E93               u1660:
  1395  068E                     	goto	l2576
  1396  068E  2E8F               	
  1397                           l161:	
  1398  068F                     	line	80
  1399                           	
  1400                           l2576:	
  1401  068F                     ;Main.c: 79:         {;Main.c: 80:             CheckStopTime();
  1402                           	fcall	_CheckStopTime
  1403  068F  118A  222F  118A   	goto	l2578
  1404  0692  2E93               	line	81
  1405                           ;Main.c: 81:         }
  1406                           	
  1407                           l159:	
  1408  0693                     	line	83
  1409                           	
  1410                           l2578:	
  1411  0693                     ;Main.c: 83:         if (TelegramReadyFlag == 1)
  1412                           	bcf	status, 5	;RP0=0, select bank0
  1413  0693  1283               	bcf	status, 6	;RP1=0, select bank0
  1414  0694  1303               		decf	((_TelegramReadyFlag)),w
  1415  0695  035E               iorwf	((_TelegramReadyFlag+1)),w
  1416  0696  045F               	btfss	status,2
  1417  0697  1D03               	goto	u1671
  1418  0698  2E9A               	goto	u1670
  1419  0699  2E9B               u1671:
  1420  069A                     	goto	l2564
  1421  069A  2E6E               u1670:
  1422  069B                     	line	85
  1423                           	
  1424                           l2580:	
  1425  069B                     ;Main.c: 84:         {;Main.c: 85:             TelegramReadyFlag = 0;
  1426                           	clrf	(_TelegramReadyFlag)
  1427  069B  01DE               	clrf	(_TelegramReadyFlag+1)
  1428  069C  01DF               	line	86
  1429                           	
  1430                           l2582:	
  1431  069D                     ;Main.c: 86:             Handle_Telegram(Telegram);
  1432                           	movlw	(Handle_Telegram@ThisTelegram)&0ffh
  1433  069D  3039               	movwf	fsr0
  1434  069E  0084               	movlw	low(_Telegram)
  1435  069F  30C8               	movwf	(??_main+0)+0
  1436  06A0  00D4               	movf	fsr0,w
  1437  06A1  0804               	movwf	((??_main+0)+0+1)
  1438  06A2  00D5               	movlw	21
  1439  06A3  3015               	movwf	((??_main+0)+0+2)
  1440  06A4  00D6               u1680:
  1441  06A5                     	movf	(??_main+0)+0,w
  1442  06A5  0854               	movwf	fsr0
  1443  06A6  0084               	bcf	status, 7	;select IRP bank1
  1444  06A7  1383               	
  1445                           	movf	indf,w
  1446  06A8  0800               	movwf	((??_main+0)+0+3)
  1447  06A9  00D7               	incf	(??_main+0)+0,f
  1448  06AA  0AD4               	movf	((??_main+0)+0+1),w
  1449  06AB  0855               	movwf	fsr0
  1450  06AC  0084               	
  1451                           	movf	((??_main+0)+0+3),w
  1452  06AD  0857               	movwf	indf
  1453  06AE  0080               	incf	((??_main+0)+0+1),f
  1454  06AF  0AD5               	decfsz	((??_main+0)+0+2),f
  1455  06B0  0BD6               	goto	u1680
  1456  06B1  2EA5               	
  1457                           	fcall	_Handle_Telegram
  1458  06B2  118A  2020  118A   	goto	l2564
  1459  06B5  2E6E               	line	87
  1460                           ;Main.c: 87:         }
  1461                           	
  1462                           l162:	
  1463  06B6                     	goto	l2564
  1464  06B6  2E6E               	line	89
  1465                           ;Main.c: 89:     }
  1466                           	
  1467                           l163:	
  1468  06B7                     	goto	l2564
  1469  06B7  2E6E               	
  1470                           l164:	
  1471  06B8                     	line	90
  1472                           	
  1473                           l165:	
  1474  06B8                     	global	start
  1475                           	ljmp	start
  1476  06B8  118A  280D         	opt stack 0
  1477                           GLOBAL	__end_of_main
  1478                           	__end_of_main:
  1479  06BA                     	signat	_main,89
  1480                           	global	_Start_Timer
  1481                           
  1482 ;; *************** function _Start_Timer *****************
  1483 ;; Defined at:
  1484 ;;		line 53 in file "Timer.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1498 ;;      Params:         0       0       0       0
  1499 ;;      Locals:         0       0       0       0
  1500 ;;      Temps:          0       0       0       0
  1501 ;;      Totals:         0       0       0       0
  1502 ;;Total ram usage:        0 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    3
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1512                           	file	"Timer.c"
  1513                           	line	53
  1514                           global __ptext1
  1515                           __ptext1:	;psect for function _Start_Timer
  1516  0F7D                     psect	text1
  1517                           	file	"Timer.c"
  1518                           	line	53
  1519                           	global	__size_of_Start_Timer
  1520                           	__size_of_Start_Timer	equ	__end_of_Start_Timer-_Start_Timer
  1521  000B                     	
  1522                           _Start_Timer:	
  1523  0F7D                     ;incstack = 0
  1524                           	opt	stack 4
  1525                           ; Regs used in _Start_Timer: [wreg+status,2]
  1526                           	line	56
  1527                           	
  1528                           l2192:	
  1529  0F7D                     ;Timer.c: 56:     PIR1bits.TMR1IF = 0;
  1530                           	bcf	status, 5	;RP0=0, select bank0
  1531  0F7D  1283               	bcf	status, 6	;RP1=0, select bank0
  1532  0F7E  1303               	bcf	(12),0	;volatile
  1533  0F7F  100C               	line	59
  1534                           	
  1535                           l2194:	
  1536  0F80                     ;Timer.c: 59:     Counter_100ms = 0;
  1537                           	clrf	(_Counter_100ms)
  1538  0F80  01DC               	clrf	(_Counter_100ms+1)
  1539  0F81  01DD               	line	61
  1540                           	
  1541                           l2196:	
  1542  0F82                     ;Timer.c: 61:     TMR1H = 160;
  1543                           	movlw	low(0A0h)
  1544  0F82  30A0               	movwf	(15)	;volatile
  1545  0F83  008F               	line	62
  1546                           	
  1547                           l2198:	
  1548  0F84                     ;Timer.c: 62:     TMR1L = 138;
  1549                           	movlw	low(08Ah)
  1550  0F84  308A               	movwf	(14)	;volatile
  1551  0F85  008E               	line	65
  1552                           	
  1553                           l2200:	
  1554  0F86                     ;Timer.c: 65:     T1CONbits.TMR1ON = 1;
  1555                           	bsf	(16),0	;volatile
  1556  0F86  1410               	line	66
  1557                           	
  1558                           l54:	
  1559  0F87                     	return
  1560  0F87  0008               	opt stack 0
  1561                           GLOBAL	__end_of_Start_Timer
  1562                           	__end_of_Start_Timer:
  1563  0F88                     	signat	_Start_Timer,89
  1564                           	global	_Init_Transmitter
  1565                           
  1566 ;; *************** function _Init_Transmitter *****************
  1567 ;; Defined at:
  1568 ;;		line 35 in file "Eusart.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1582 ;;      Params:         0       0       0       0
  1583 ;;      Locals:         0       0       0       0
  1584 ;;      Temps:          0       0       0       0
  1585 ;;      Totals:         0       0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    3
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1596                           	file	"Eusart.c"
  1597                           	line	35
  1598                           global __ptext2
  1599                           __ptext2:	;psect for function _Init_Transmitter
  1600  0F94                     psect	text2
  1601                           	file	"Eusart.c"
  1602                           	line	35
  1603                           	global	__size_of_Init_Transmitter
  1604                           	__size_of_Init_Transmitter	equ	__end_of_Init_Transmitter-_Init_Transmitter
  1605  000C                     	
  1606                           _Init_Transmitter:	
  1607  0F94                     ;incstack = 0
  1608                           	opt	stack 4
  1609                           ; Regs used in _Init_Transmitter: [wreg+status,2]
  1610                           	line	38
  1611                           	
  1612                           l2240:	
  1613  0F94                     ;Eusart.c: 38:     TXSTAbits.SYNC = 0;
  1614                           	bcf	status, 5	;RP0=0, select bank0
  1615  0F94  1283               	bcf	status, 6	;RP1=0, select bank0
  1616  0F95  1303               	bcf	(22),4	;volatile
  1617  0F96  1216               	line	41
  1618                           ;Eusart.c: 41:     RCSTAbits.SPEN = 1;
  1619                           	bsf	(23),7	;volatile
  1620  0F97  1797               	line	44
  1621                           ;Eusart.c: 44:     TXSTAbits.TX9 = 0;
  1622                           	bcf	(22),6	;volatile
  1623  0F98  1316               	line	47
  1624                           ;Eusart.c: 47:     TXSTAbits.BRGH = 1;
  1625                           	bsf	(22),2	;volatile
  1626  0F99  1516               	line	50
  1627                           ;Eusart.c: 50:     BAUDCTLbits.BRG16 = 1;
  1628                           	bsf	(17),3	;volatile
  1629  0F9A  1591               	line	53
  1630                           	
  1631                           l2242:	
  1632  0F9B                     ;Eusart.c: 53:     SPBRG = 103;
  1633                           	movlw	low(067h)
  1634  0F9B  3067               	movwf	(19)	;volatile
  1635  0F9C  0093               	line	63
  1636                           	
  1637                           l2244:	
  1638  0F9D                     ;Eusart.c: 63:     TXREG = 0;
  1639                           	clrf	(21)	;volatile
  1640  0F9D  0195               	line	66
  1641                           	
  1642                           l2246:	
  1643  0F9E                     ;Eusart.c: 66:     TXSTAbits.TXEN = 1;
  1644                           	bsf	(22),5	;volatile
  1645  0F9E  1696               	line	67
  1646                           	
  1647                           l303:	
  1648  0F9F                     	return
  1649  0F9F  0008               	opt stack 0
  1650                           GLOBAL	__end_of_Init_Transmitter
  1651                           	__end_of_Init_Transmitter:
  1652  0FA0                     	signat	_Init_Transmitter,89
  1653                           	global	_Init_Timer
  1654                           
  1655 ;; *************** function _Init_Timer *****************
  1656 ;; Defined at:
  1657 ;;		line 31 in file "Timer.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1671 ;;      Params:         0       0       0       0
  1672 ;;      Locals:         0       0       0       0
  1673 ;;      Temps:          0       0       0       0
  1674 ;;      Totals:         0       0       0       0
  1675 ;;Total ram usage:        0 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    3
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_main
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1685                           	file	"Timer.c"
  1686                           	line	31
  1687                           global __ptext3
  1688                           __ptext3:	;psect for function _Init_Timer
  1689  0F88                     psect	text3
  1690                           	file	"Timer.c"
  1691                           	line	31
  1692                           	global	__size_of_Init_Timer
  1693                           	__size_of_Init_Timer	equ	__end_of_Init_Timer-_Init_Timer
  1694  000C                     	
  1695                           _Init_Timer:	
  1696  0F88                     ;incstack = 0
  1697                           	opt	stack 4
  1698                           ; Regs used in _Init_Timer: [wreg+status,2+status,0]
  1699                           	line	34
  1700                           	
  1701                           l2180:	
  1702  0F88                     ;Timer.c: 34:     T1CONbits.T1CKPS = 3;
  1703                           	movlw	(03h & ((1<<2)-1))<<4
  1704  0F88  3030               	bcf	status, 5	;RP0=0, select bank0
  1705  0F89  1283               	bcf	status, 6	;RP1=0, select bank0
  1706  0F8A  1303               	iorwf	(16),f	;volatile
  1707  0F8B  0490               	line	37
  1708                           	
  1709                           l2182:	
  1710  0F8C                     ;Timer.c: 37:     T1CONbits.T1OSCEN = 0;
  1711                           	bcf	(16),3	;volatile
  1712  0F8C  1190               	line	40
  1713                           	
  1714                           l2184:	
  1715  0F8D                     ;Timer.c: 40:     T1CONbits.TMR1CS = 0;
  1716                           	bcf	(16),1	;volatile
  1717  0F8D  1090               	line	43
  1718                           	
  1719                           l2186:	
  1720  0F8E                     ;Timer.c: 43:     INTCONbits.GIE = 1;
  1721                           	bsf	(11),7	;volatile
  1722  0F8E  178B               	line	46
  1723                           	
  1724                           l2188:	
  1725  0F8F                     ;Timer.c: 46:     INTCONbits.PEIE = 1;
  1726                           	bsf	(11),6	;volatile
  1727  0F8F  170B               	line	49
  1728                           	
  1729                           l2190:	
  1730  0F90                     ;Timer.c: 49:     PIE1bits.TMR1IE = 1;
  1731                           	bsf	status, 5	;RP0=1, select bank1
  1732  0F90  1683               	bcf	status, 6	;RP1=0, select bank1
  1733  0F91  1303               	bsf	(140)^080h,0	;volatile
  1734  0F92  140C               	line	51
  1735                           	
  1736                           l51:	
  1737  0F93                     	return
  1738  0F93  0008               	opt stack 0
  1739                           GLOBAL	__end_of_Init_Timer
  1740                           	__end_of_Init_Timer:
  1741  0F94                     	signat	_Init_Timer,89
  1742                           	global	_Init_Relays
  1743                           
  1744 ;; *************** function _Init_Relays *****************
  1745 ;; Defined at:
  1746 ;;		line 47 in file "RelayControl.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		None
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1760 ;;      Params:         0       0       0       0
  1761 ;;      Locals:         0       0       0       0
  1762 ;;      Temps:          0       0       0       0
  1763 ;;      Totals:         0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    3
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1774                           	file	"RelayControl.c"
  1775                           	line	47
  1776                           global __ptext4
  1777                           __ptext4:	;psect for function _Init_Relays
  1778  0FDB                     psect	text4
  1779                           	file	"RelayControl.c"
  1780                           	line	47
  1781                           	global	__size_of_Init_Relays
  1782                           	__size_of_Init_Relays	equ	__end_of_Init_Relays-_Init_Relays
  1783  0025                     	
  1784                           _Init_Relays:	
  1785  0FDB                     ;incstack = 0
  1786                           	opt	stack 4
  1787                           ; Regs used in _Init_Relays: []
  1788                           	line	49
  1789                           	
  1790                           l2238:	
  1791  0FDB                     ;RelayControl.c: 49:     TRISAbits.TRISA0 = 0;
  1792                           	bsf	status, 5	;RP0=1, select bank1
  1793  0FDB  1683               	bcf	status, 6	;RP1=0, select bank1
  1794  0FDC  1303               	bcf	(133)^080h,0	;volatile
  1795  0FDD  1005               	line	50
  1796                           ;RelayControl.c: 50:     PORTAbits.RA0 = 0;
  1797                           	bcf	status, 5	;RP0=0, select bank0
  1798  0FDE  1283               	bcf	status, 6	;RP1=0, select bank0
  1799  0FDF  1303               	bcf	(5),0	;volatile
  1800  0FE0  1005               	line	51
  1801                           ;RelayControl.c: 51:     TRISAbits.TRISA1 = 0;
  1802                           	bsf	status, 5	;RP0=1, select bank1
  1803  0FE1  1683               	bcf	status, 6	;RP1=0, select bank1
  1804  0FE2  1303               	bcf	(133)^080h,1	;volatile
  1805  0FE3  1085               	line	52
  1806                           ;RelayControl.c: 52:     PORTAbits.RA1 = 0;
  1807                           	bcf	status, 5	;RP0=0, select bank0
  1808  0FE4  1283               	bcf	status, 6	;RP1=0, select bank0
  1809  0FE5  1303               	bcf	(5),1	;volatile
  1810  0FE6  1085               	line	53
  1811                           ;RelayControl.c: 53:     TRISAbits.TRISA2 = 0;
  1812                           	bsf	status, 5	;RP0=1, select bank1
  1813  0FE7  1683               	bcf	status, 6	;RP1=0, select bank1
  1814  0FE8  1303               	bcf	(133)^080h,2	;volatile
  1815  0FE9  1105               	line	54
  1816                           ;RelayControl.c: 54:     PORTAbits.RA2 = 0;
  1817                           	bcf	status, 5	;RP0=0, select bank0
  1818  0FEA  1283               	bcf	status, 6	;RP1=0, select bank0
  1819  0FEB  1303               	bcf	(5),2	;volatile
  1820  0FEC  1105               	line	55
  1821                           ;RelayControl.c: 55:     TRISCbits.TRISC0 = 0;
  1822                           	bsf	status, 5	;RP0=1, select bank1
  1823  0FED  1683               	bcf	status, 6	;RP1=0, select bank1
  1824  0FEE  1303               	bcf	(135)^080h,0	;volatile
  1825  0FEF  1007               	line	56
  1826                           ;RelayControl.c: 56:     PORTCbits.RC0 = 0;
  1827                           	bcf	status, 5	;RP0=0, select bank0
  1828  0FF0  1283               	bcf	status, 6	;RP1=0, select bank0
  1829  0FF1  1303               	bcf	(7),0	;volatile
  1830  0FF2  1007               	line	57
  1831                           ;RelayControl.c: 57:     TRISCbits.TRISC1 = 0;
  1832                           	bsf	status, 5	;RP0=1, select bank1
  1833  0FF3  1683               	bcf	status, 6	;RP1=0, select bank1
  1834  0FF4  1303               	bcf	(135)^080h,1	;volatile
  1835  0FF5  1087               	line	58
  1836                           ;RelayControl.c: 58:     PORTCbits.RC1 = 0;
  1837                           	bcf	status, 5	;RP0=0, select bank0
  1838  0FF6  1283               	bcf	status, 6	;RP1=0, select bank0
  1839  0FF7  1303               	bcf	(7),1	;volatile
  1840  0FF8  1087               	line	59
  1841                           ;RelayControl.c: 59:     TRISCbits.TRISC2 = 0;
  1842                           	bsf	status, 5	;RP0=1, select bank1
  1843  0FF9  1683               	bcf	status, 6	;RP1=0, select bank1
  1844  0FFA  1303               	bcf	(135)^080h,2	;volatile
  1845  0FFB  1107               	line	60
  1846                           ;RelayControl.c: 60:     PORTCbits.RC2 = 0;
  1847                           	bcf	status, 5	;RP0=0, select bank0
  1848  0FFC  1283               	bcf	status, 6	;RP1=0, select bank0
  1849  0FFD  1303               	bcf	(7),2	;volatile
  1850  0FFE  1107               	line	62
  1851                           	
  1852                           l371:	
  1853  0FFF                     	return
  1854  0FFF  0008               	opt stack 0
  1855                           GLOBAL	__end_of_Init_Relays
  1856                           	__end_of_Init_Relays:
  1857  1000                     	signat	_Init_Relays,89
  1858                           	global	_Init_Receiver
  1859                           
  1860 ;; *************** function _Init_Receiver *****************
  1861 ;; Defined at:
  1862 ;;		line 69 in file "Eusart.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		status,2
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1876 ;;      Params:         0       0       0       0
  1877 ;;      Locals:         0       0       0       0
  1878 ;;      Temps:          0       0       0       0
  1879 ;;      Totals:         0       0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    3
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1890                           	file	"Eusart.c"
  1891                           	line	69
  1892                           global __ptext5
  1893                           __ptext5:	;psect for function _Init_Receiver
  1894  0FA0                     psect	text5
  1895                           	file	"Eusart.c"
  1896                           	line	69
  1897                           	global	__size_of_Init_Receiver
  1898                           	__size_of_Init_Receiver	equ	__end_of_Init_Receiver-_Init_Receiver
  1899  000D                     	
  1900                           _Init_Receiver:	
  1901  0FA0                     ;incstack = 0
  1902                           	opt	stack 4
  1903                           ; Regs used in _Init_Receiver: [status,2]
  1904                           	line	75
  1905                           	
  1906                           l2248:	
  1907  0FA0                     ;Eusart.c: 75:     RCSTAbits.RX9 = 0;
  1908                           	bcf	status, 5	;RP0=0, select bank0
  1909  0FA0  1283               	bcf	status, 6	;RP1=0, select bank0
  1910  0FA1  1303               	bcf	(23),6	;volatile
  1911  0FA2  1317               	line	91
  1912                           ;Eusart.c: 91:     PIE1bits.RCIE = 1;
  1913                           	bsf	status, 5	;RP0=1, select bank1
  1914  0FA3  1683               	bcf	status, 6	;RP1=0, select bank1
  1915  0FA4  1303               	bsf	(140)^080h,5	;volatile
  1916  0FA5  168C               	line	94
  1917                           ;Eusart.c: 94:     INTCONbits.PEIE = 1;
  1918                           	bsf	(11),6	;volatile
  1919  0FA6  170B               	line	97
  1920                           ;Eusart.c: 97:     INTCONbits.GIE = 1;
  1921                           	bsf	(11),7	;volatile
  1922  0FA7  178B               	line	100
  1923                           	
  1924                           l2250:	
  1925  0FA8                     ;Eusart.c: 100:     RCREG = 0;
  1926                           	bcf	status, 5	;RP0=0, select bank0
  1927  0FA8  1283               	bcf	status, 6	;RP1=0, select bank0
  1928  0FA9  1303               	clrf	(20)	;volatile
  1929  0FAA  0194               	line	103
  1930                           	
  1931                           l2252:	
  1932  0FAB                     ;Eusart.c: 103:     RCSTAbits.CREN = 1;
  1933                           	bsf	(23),4	;volatile
  1934  0FAB  1617               	line	104
  1935                           	
  1936                           l306:	
  1937  0FAC                     	return
  1938  0FAC  0008               	opt stack 0
  1939                           GLOBAL	__end_of_Init_Receiver
  1940                           	__end_of_Init_Receiver:
  1941  0FAD                     	signat	_Init_Receiver,89
  1942                           	global	_Init_Ports
  1943                           
  1944 ;; *************** function _Init_Ports *****************
  1945 ;; Defined at:
  1946 ;;		line 111 in file "Main.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1960 ;;      Params:         0       0       0       0
  1961 ;;      Locals:         0       0       0       0
  1962 ;;      Temps:          0       0       0       0
  1963 ;;      Totals:         0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    3
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_main
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  1974                           	file	"Main.c"
  1975                           	line	111
  1976                           global __ptext6
  1977                           __ptext6:	;psect for function _Init_Ports
  1978  0FAD                     psect	text6
  1979                           	file	"Main.c"
  1980                           	line	111
  1981                           	global	__size_of_Init_Ports
  1982                           	__size_of_Init_Ports	equ	__end_of_Init_Ports-_Init_Ports
  1983  0014                     	
  1984                           _Init_Ports:	
  1985  0FAD                     ;incstack = 0
  1986                           	opt	stack 4
  1987                           ; Regs used in _Init_Ports: [wreg+status,2+status,0]
  1988                           	line	115
  1989                           	
  1990                           l2220:	
  1991  0FAD                     ;Main.c: 115:     TRISAbits.TRISA4 = 1;
  1992                           	bsf	status, 5	;RP0=1, select bank1
  1993  0FAD  1683               	bcf	status, 6	;RP1=0, select bank1
  1994  0FAE  1303               	bsf	(133)^080h,4	;volatile
  1995  0FAF  1605               	line	119
  1996                           ;Main.c: 119:     TRISAbits.TRISA5 = 1;
  1997                           	bsf	(133)^080h,5	;volatile
  1998  0FB0  1685               	line	122
  1999                           ;Main.c: 122:     TRISCbits.TRISC4 = 1;
  2000                           	bsf	(135)^080h,4	;volatile
  2001  0FB1  1607               	line	125
  2002                           ;Main.c: 125:     TRISCbits.TRISC5 = 1;
  2003                           	bsf	(135)^080h,5	;volatile
  2004  0FB2  1687               	line	129
  2005                           	
  2006                           l2222:	
  2007  0FB3                     ;Main.c: 129:     CMCON0bits.CM = 7;
  2008                           	movlw	(07h & ((1<<3)-1))<<0
  2009  0FB3  3007               	bcf	status, 5	;RP0=0, select bank0
  2010  0FB4  1283               	bcf	status, 6	;RP1=0, select bank0
  2011  0FB5  1303               	iorwf	(25),f	;volatile
  2012  0FB6  0499               	line	132
  2013                           	
  2014                           l2224:	
  2015  0FB7                     ;Main.c: 132:     ANSEL = 0;
  2016                           	bsf	status, 5	;RP0=1, select bank1
  2017  0FB7  1683               	bcf	status, 6	;RP1=0, select bank1
  2018  0FB8  1303               	clrf	(145)^080h	;volatile
  2019  0FB9  0191               	line	135
  2020                           	
  2021                           l2226:	
  2022  0FBA                     ;Main.c: 135:     INTCONbits.RAIE = 1;
  2023                           	bsf	(11),3	;volatile
  2024  0FBA  158B               	line	138
  2025                           	
  2026                           l2228:	
  2027  0FBB                     ;Main.c: 138:     IOCAbits.IOC4 = 1;
  2028                           	bsf	(150)^080h,4	;volatile
  2029  0FBB  1616               	line	141
  2030                           	
  2031                           l2230:	
  2032  0FBC                     ;Main.c: 141:     INTCONbits.RAIF = 0;
  2033                           	bcf	(11),0	;volatile
  2034  0FBC  100B               	line	144
  2035                           	
  2036                           l2232:	
  2037  0FBD                     ;Main.c: 144:     OSCCONbits.IRCF2 = 1;
  2038                           	bsf	(143)^080h,6	;volatile
  2039  0FBD  170F               	line	145
  2040                           	
  2041                           l2234:	
  2042  0FBE                     ;Main.c: 145:     OSCCONbits.IRCF1 = 1;
  2043                           	bsf	(143)^080h,5	;volatile
  2044  0FBE  168F               	line	146
  2045                           	
  2046                           l2236:	
  2047  0FBF                     ;Main.c: 146:     OSCCONbits.IRCF0 = 1;
  2048                           	bsf	(143)^080h,4	;volatile
  2049  0FBF  160F               	line	147
  2050                           	
  2051                           l168:	
  2052  0FC0                     	return
  2053  0FC0  0008               	opt stack 0
  2054                           GLOBAL	__end_of_Init_Ports
  2055                           	__end_of_Init_Ports:
  2056  0FC1                     	signat	_Init_Ports,89
  2057                           	global	_Handle_Telegram
  2058                           
  2059 ;; *************** function _Handle_Telegram *****************
  2060 ;; Defined at:
  2061 ;;		line 246 in file "Main.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  ThisTelegram   21   25[BANK0 ] struct .
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  state           1   51[BANK0 ] unsigned char 
  2066 ;;  error           1   50[BANK0 ] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2076 ;;      Params:         0      21       0       0
  2077 ;;      Locals:         0       2       0       0
  2078 ;;      Temps:          0       4       0       0
  2079 ;;      Totals:         0      27       0       0
  2080 ;;Total ram usage:       27 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    5
  2083 ;; This function calls:
  2084 ;;		_Read_Relay
  2085 ;;		_SendTelegram
  2086 ;;		_SetStopTime
  2087 ;;		_Set_Relay
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2093                           	line	246
  2094                           global __ptext7
  2095                           __ptext7:	;psect for function _Handle_Telegram
  2096  0020                     psect	text7
  2097                           	file	"Main.c"
  2098                           	line	246
  2099                           	global	__size_of_Handle_Telegram
  2100                           	__size_of_Handle_Telegram	equ	__end_of_Handle_Telegram-_Handle_Telegram
  2101  020F                     	
  2102                           _Handle_Telegram:	
  2103  0020                     ;incstack = 0
  2104                           	opt	stack 2
  2105                           ; Regs used in _Handle_Telegram: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2106                           	line	248
  2107                           	
  2108                           l2326:	
  2109  0020                     ;Main.c: 246: void Handle_Telegram (TelegramType ThisTelegram);Main.c: 247: {;Main.c: 24
                                 8:     unsigned char state = 255;
  2110                           	movlw	low(0FFh)
  2111  0020  30FF               	bcf	status, 5	;RP0=0, select bank0
  2112  0021  1283               	bcf	status, 6	;RP1=0, select bank0
  2113  0022  1303               	movwf	(??_Handle_Telegram+0)+0
  2114  0023  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2115  0024  084E               	movwf	(Handle_Telegram@state)
  2116  0025  00D3               	line	249
  2117                           	
  2118                           l2328:	
  2119  0026                     ;Main.c: 249:     unsigned char error = 0;
  2120                           	clrf	(Handle_Telegram@error)
  2121  0026  01D2               	line	251
  2122                           	
  2123                           l2330:	
  2124  0027                     ;Main.c: 251:     if (ThisTelegram.Command[0] == 'A')
  2125                           		movlw	65
  2126  0027  3041               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2127  0028  063C               	btfss	status,2
  2128  0029  1D03               	goto	u1441
  2129  002A  282C               	goto	u1440
  2130  002B  282D               u1441:
  2131  002C                     	goto	l2334
  2132  002C  2830               u1440:
  2133  002D                     	line	253
  2134                           	
  2135                           l2332:	
  2136  002D                     ;Main.c: 252:     {;Main.c: 253:         state = On;
  2137                           	clrf	(Handle_Telegram@state)
  2138  002D  01D3               	incf	(Handle_Telegram@state),f
  2139  002E  0AD3               	line	254
  2140                           ;Main.c: 254:     }
  2141                           	goto	l2362
  2142  002F  28A4               	line	255
  2143                           ;Main.c: 255:     else if (ThisTelegram.Command[0] == 'B')
  2144                           	
  2145                           l189:	
  2146  0030                     	
  2147                           l2334:	
  2148  0030                     		movlw	66
  2149  0030  3042               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2150  0031  063C               	btfss	status,2
  2151  0032  1D03               	goto	u1451
  2152  0033  2835               	goto	u1450
  2153  0034  2836               u1451:
  2154  0035                     	goto	l2338
  2155  0035  2838               u1450:
  2156  0036                     	line	257
  2157                           	
  2158                           l2336:	
  2159  0036                     ;Main.c: 256:     {;Main.c: 257:         state = Off;
  2160                           	clrf	(Handle_Telegram@state)
  2161  0036  01D3               	line	258
  2162                           ;Main.c: 258:     }
  2163                           	goto	l2362
  2164  0037  28A4               	line	259
  2165                           ;Main.c: 259:     else if (ThisTelegram.Command[0] == 'S')
  2166                           	
  2167                           l191:	
  2168  0038                     	
  2169                           l2338:	
  2170  0038                     		movlw	83
  2171  0038  3053               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2172  0039  063C               	btfss	status,2
  2173  003A  1D03               	goto	u1461
  2174  003B  283D               	goto	u1460
  2175  003C  283E               u1461:
  2176  003D                     	goto	l2356
  2177  003D  2885               u1460:
  2178  003E                     	line	261
  2179                           	
  2180                           l2340:	
  2181  003E                     ;Main.c: 260:     {;Main.c: 261:         ThisTelegram.Commandlength = 7;
  2182                           	movlw	low(07h)
  2183  003E  3007               	movwf	(??_Handle_Telegram+0)+0
  2184  003F  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2185  0040  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+02h
  2186  0041  00BB               	line	262
  2187                           ;Main.c: 262:         ThisTelegram.Command[0] = 'S';
  2188                           	movlw	low(053h)
  2189  0042  3053               	movwf	(??_Handle_Telegram+0)+0
  2190  0043  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2191  0044  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+03h
  2192  0045  00BC               	line	263
  2193                           	
  2194                           l2342:	
  2195  0046                     ;Main.c: 263:         ThisTelegram.Command[1] = (Read_Relay(Relay1) + 48);
  2196                           	movlw	low(0)
  2197  0046  3000               	fcall	_Read_Relay
  2198  0047  118A  2749  118A   	addlw	030h
  2199  004A  3E30               	bcf	status, 5	;RP0=0, select bank0
  2200  004B  1283               	bcf	status, 6	;RP1=0, select bank0
  2201  004C  1303               	movwf	(??_Handle_Telegram+0)+0
  2202  004D  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2203  004E  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+04h
  2204  004F  00BD               	line	264
  2205                           	
  2206                           l2344:	
  2207  0050                     ;Main.c: 264:         ThisTelegram.Command[2] = (Read_Relay(Relay2) + 48);
  2208                           	movlw	low(01h)
  2209  0050  3001               	fcall	_Read_Relay
  2210  0051  118A  2749  118A   	addlw	030h
  2211  0054  3E30               	bcf	status, 5	;RP0=0, select bank0
  2212  0055  1283               	bcf	status, 6	;RP1=0, select bank0
  2213  0056  1303               	movwf	(??_Handle_Telegram+0)+0
  2214  0057  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2215  0058  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+05h
  2216  0059  00BE               	line	265
  2217                           	
  2218                           l2346:	
  2219  005A                     ;Main.c: 265:         ThisTelegram.Command[3] = (Read_Relay(Relay3) + 48);
  2220                           	movlw	low(02h)
  2221  005A  3002               	fcall	_Read_Relay
  2222  005B  118A  2749  118A   	addlw	030h
  2223  005E  3E30               	bcf	status, 5	;RP0=0, select bank0
  2224  005F  1283               	bcf	status, 6	;RP1=0, select bank0
  2225  0060  1303               	movwf	(??_Handle_Telegram+0)+0
  2226  0061  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2227  0062  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+06h
  2228  0063  00BF               	line	266
  2229                           	
  2230                           l2348:	
  2231  0064                     ;Main.c: 266:         ThisTelegram.Command[4] = (Read_Relay(Relay4) + 48);
  2232                           	movlw	low(03h)
  2233  0064  3003               	fcall	_Read_Relay
  2234  0065  118A  2749  118A   	addlw	030h
  2235  0068  3E30               	bcf	status, 5	;RP0=0, select bank0
  2236  0069  1283               	bcf	status, 6	;RP1=0, select bank0
  2237  006A  1303               	movwf	(??_Handle_Telegram+0)+0
  2238  006B  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2239  006C  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+07h
  2240  006D  00C0               	line	267
  2241                           	
  2242                           l2350:	
  2243  006E                     ;Main.c: 267:         ThisTelegram.Command[5] = (Read_Relay(Relay5) + 48);
  2244                           	movlw	low(04h)
  2245  006E  3004               	fcall	_Read_Relay
  2246  006F  118A  2749  118A   	addlw	030h
  2247  0072  3E30               	bcf	status, 5	;RP0=0, select bank0
  2248  0073  1283               	bcf	status, 6	;RP1=0, select bank0
  2249  0074  1303               	movwf	(??_Handle_Telegram+0)+0
  2250  0075  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2251  0076  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+08h
  2252  0077  00C1               	line	268
  2253                           	
  2254                           l2352:	
  2255  0078                     ;Main.c: 268:         ThisTelegram.Command[6] = (Read_Relay(Relay6) + 48);
  2256                           	movlw	low(05h)
  2257  0078  3005               	fcall	_Read_Relay
  2258  0079  118A  2749  118A   	addlw	030h
  2259  007C  3E30               	bcf	status, 5	;RP0=0, select bank0
  2260  007D  1283               	bcf	status, 6	;RP1=0, select bank0
  2261  007E  1303               	movwf	(??_Handle_Telegram+0)+0
  2262  007F  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2263  0080  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+09h
  2264  0081  00C2               	line	270
  2265                           	
  2266                           l2354:	
  2267  0082                     ;Main.c: 270:         error = 1;
  2268                           	clrf	(Handle_Telegram@error)
  2269  0082  01D2               	incf	(Handle_Telegram@error),f
  2270  0083  0AD2               	line	271
  2271                           ;Main.c: 271:     }
  2272                           	goto	l2362
  2273  0084  28A4               	line	272
  2274                           ;Main.c: 272:     else if (ThisTelegram.Command[0] == 'W')
  2275                           	
  2276                           l193:	
  2277  0085                     	
  2278                           l2356:	
  2279  0085                     		movlw	87
  2280  0085  3057               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2281  0086  063C               	btfss	status,2
  2282  0087  1D03               	goto	u1471
  2283  0088  288A               	goto	u1470
  2284  0089  288B               u1471:
  2285  008A                     	goto	l2360
  2286  008A  289C               u1470:
  2287  008B                     	line	274
  2288                           	
  2289                           l2358:	
  2290  008B                     ;Main.c: 273:     {;Main.c: 274:         ThisTelegram.Commandlength = 2;
  2291                           	movlw	low(02h)
  2292  008B  3002               	movwf	(??_Handle_Telegram+0)+0
  2293  008C  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2294  008D  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+02h
  2295  008E  00BB               	line	275
  2296                           ;Main.c: 275:         ThisTelegram.Command[0] = 'R';
  2297                           	movlw	low(052h)
  2298  008F  3052               	movwf	(??_Handle_Telegram+0)+0
  2299  0090  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2300  0091  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+03h
  2301  0092  00BC               	line	276
  2302                           ;Main.c: 276:         ThisTelegram.Command[1] = 'B';
  2303                           	movlw	low(042h)
  2304  0093  3042               	movwf	(??_Handle_Telegram+0)+0
  2305  0094  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2306  0095  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+04h
  2307  0096  00BD               	line	278
  2308                           ;Main.c: 278:         error = 2;
  2309                           	movlw	low(02h)
  2310  0097  3002               	movwf	(??_Handle_Telegram+0)+0
  2311  0098  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2312  0099  084E               	movwf	(Handle_Telegram@error)
  2313  009A  00D2               	line	279
  2314                           ;Main.c: 279:     }
  2315                           	goto	l2362
  2316  009B  28A4               	line	280
  2317                           ;Main.c: 280:     else
  2318                           	
  2319                           l195:	
  2320  009C                     	line	282
  2321                           	
  2322                           l2360:	
  2323  009C                     ;Main.c: 281:     {;Main.c: 282:         error = 4;
  2324                           	movlw	low(04h)
  2325  009C  3004               	movwf	(??_Handle_Telegram+0)+0
  2326  009D  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2327  009E  084E               	movwf	(Handle_Telegram@error)
  2328  009F  00D2               	goto	l2362
  2329  00A0  28A4               	line	283
  2330                           ;Main.c: 283:     }
  2331                           	
  2332                           l196:	
  2333  00A1                     	goto	l2362
  2334  00A1  28A4               	
  2335                           l194:	
  2336  00A2                     	goto	l2362
  2337  00A2  28A4               	
  2338                           l192:	
  2339  00A3                     	goto	l2362
  2340  00A3  28A4               	
  2341                           l190:	
  2342  00A4                     	line	285
  2343                           	
  2344                           l2362:	
  2345  00A4                     ;Main.c: 285:     SendTelegram(ThisTelegram);
  2346                           	movlw	(SendTelegram@MyTelegram)&0ffh
  2347  00A4  3022               	movwf	fsr0
  2348  00A5  0084               	movlw	low(Handle_Telegram@ThisTelegram)
  2349  00A6  3039               	movwf	(??_Handle_Telegram+0)+0
  2350  00A7  00CE               	movf	fsr0,w
  2351  00A8  0804               	movwf	((??_Handle_Telegram+0)+0+1)
  2352  00A9  00CF               	movlw	21
  2353  00AA  3015               	movwf	((??_Handle_Telegram+0)+0+2)
  2354  00AB  00D0               u1480:
  2355  00AC                     	movf	(??_Handle_Telegram+0)+0,w
  2356  00AC  084E               	movwf	fsr0
  2357  00AD  0084               	bcf	status, 7	;select IRP bank0
  2358  00AE  1383               	
  2359                           	movf	indf,w
  2360  00AF  0800               	movwf	((??_Handle_Telegram+0)+0+3)
  2361  00B0  00D1               	incf	(??_Handle_Telegram+0)+0,f
  2362  00B1  0ACE               	movf	((??_Handle_Telegram+0)+0+1),w
  2363  00B2  084F               	movwf	fsr0
  2364  00B3  0084               	
  2365                           	movf	((??_Handle_Telegram+0)+0+3),w
  2366  00B4  0851               	movwf	indf
  2367  00B5  0080               	incf	((??_Handle_Telegram+0)+0+1),f
  2368  00B6  0ACF               	decfsz	((??_Handle_Telegram+0)+0+2),f
  2369  00B7  0BD0               	goto	u1480
  2370  00B8  28AC               	
  2371                           	fcall	_SendTelegram
  2372  00B9  118A  2710  118A   	line	287
  2373                           	
  2374                           l2364:	
  2375  00BC                     ;Main.c: 287:     if (error == 0)
  2376                           	bcf	status, 5	;RP0=0, select bank0
  2377  00BC  1283               	bcf	status, 6	;RP1=0, select bank0
  2378  00BD  1303               	movf	((Handle_Telegram@error)),w
  2379  00BE  0852               	btfss	status,2
  2380  00BF  1D03               	goto	u1491
  2381  00C0  28C2               	goto	u1490
  2382  00C1  28C3               u1491:
  2383  00C2                     	goto	l218
  2384  00C2  2A2E               u1490:
  2385  00C3                     	line	289
  2386                           	
  2387                           l2366:	
  2388  00C3                     ;Main.c: 288:     {;Main.c: 289:         if (state == On && (ThisTelegram.Command[1] !='
                                 0' || ThisTelegram.Command[2] !='0' || ThisTelegram.Command[3] !='0'))
  2389                           		decf	((Handle_Telegram@state)),w
  2390  00C3  0353               	btfss	status,2
  2391  00C4  1D03               	goto	u1501
  2392  00C5  28C7               	goto	u1500
  2393  00C6  28C8               u1501:
  2394  00C7                     	goto	l2428
  2395  00C7  2A10               u1500:
  2396  00C8                     	
  2397                           l2368:	
  2398  00C8                     		movlw	48
  2399  00C8  3030               	xorwf	(0+(Handle_Telegram@ThisTelegram)+04h),w
  2400  00C9  063D               	btfss	status,2
  2401  00CA  1D03               	goto	u1511
  2402  00CB  28CD               	goto	u1510
  2403  00CC  28CE               u1511:
  2404  00CD                     	goto	l2400
  2405  00CD  29A7               u1510:
  2406  00CE                     	
  2407                           l2370:	
  2408  00CE                     		movlw	48
  2409  00CE  3030               	xorwf	(0+(Handle_Telegram@ThisTelegram)+05h),w
  2410  00CF  063E               	btfss	status,2
  2411  00D0  1D03               	goto	u1521
  2412  00D1  28D3               	goto	u1520
  2413  00D2  28D4               u1521:
  2414  00D3                     	goto	l2400
  2415  00D3  29A7               u1520:
  2416  00D4                     	
  2417                           l2372:	
  2418  00D4                     		movlw	48
  2419  00D4  3030               	xorwf	(0+(Handle_Telegram@ThisTelegram)+06h),w
  2420  00D5  063F               	btfsc	status,2
  2421  00D6  1903               	goto	u1531
  2422  00D7  28D9               	goto	u1530
  2423  00D8  28DA               u1531:
  2424  00D9                     	goto	l2428
  2425  00D9  2A10               u1530:
  2426  00DA                     	goto	l2400
  2427  00DA  29A7               	
  2428                           l200:	
  2429  00DB                     	line	291
  2430                           ;Main.c: 290:         {;Main.c: 291:             switch (ThisTelegram.Address)
  2431                           	goto	l2400
  2432  00DB  29A7               	line	293
  2433                           ;Main.c: 292:             {;Main.c: 293:                 case '1':
  2434                           	
  2435                           l202:	
  2436  00DC                     	line	294
  2437                           	
  2438                           l2374:	
  2439  00DC                     ;Main.c: 294:                     Set_Relay(Relay1, state);
  2440                           	movf	(Handle_Telegram@state),w
  2441  00DC  0853               	movwf	(??_Handle_Telegram+0)+0
  2442  00DD  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2443  00DE  084E               	movwf	(Set_Relay@State)
  2444  00DF  00A0               	movlw	low(0)
  2445  00E0  3000               	fcall	_Set_Relay
  2446  00E1  118A  255F  118A   	line	295
  2447                           	
  2448                           l2376:	
  2449  00E4                     ;Main.c: 295:                     StopRelay1OnTime = 1;
  2450                           	bcf	status, 5	;RP0=0, select bank0
  2451  00E4  1283               	bcf	status, 6	;RP1=0, select bank0
  2452  00E5  1303               	clrf	(_StopRelay1OnTime)
  2453  00E6  01EB               	incf	(_StopRelay1OnTime),f
  2454  00E7  0AEB               	line	296
  2455                           ;Main.c: 296:                     SetStopTime(Relay1StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2456                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2457  00E8  083D               	addlw	0D0h
  2458  00E9  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2459  00EA  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2460  00EB  084E               	movwf	(SetStopTime@Time10sec)
  2461  00EC  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2462  00ED  083E               	addlw	0D0h
  2463  00EE  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2464  00EF  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2465  00F0  084F               	movwf	(SetStopTime@Time1sec)
  2466  00F1  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2467  00F2  083F               	addlw	0D0h
  2468  00F3  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2469  00F4  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2470  00F5  0850               	movwf	(SetStopTime@Time100ms)
  2471  00F6  00A2               	movlw	(low(_Relay1StopTime|((0x0)<<8)))&0ffh
  2472  00F7  306C               	fcall	_SetStopTime
  2473  00F8  118A  25DF  118A   	line	297
  2474                           ;Main.c: 297:                     break;
  2475                           	goto	l218
  2476  00FB  2A2E               	line	299
  2477                           ;Main.c: 299:                 case '2':
  2478                           	
  2479                           l204:	
  2480  00FC                     	line	300
  2481                           	
  2482                           l2378:	
  2483  00FC                     ;Main.c: 300:                     Set_Relay(Relay2, state);
  2484                           	bcf	status, 5	;RP0=0, select bank0
  2485  00FC  1283               	bcf	status, 6	;RP1=0, select bank0
  2486  00FD  1303               	movf	(Handle_Telegram@state),w
  2487  00FE  0853               	movwf	(??_Handle_Telegram+0)+0
  2488  00FF  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2489  0100  084E               	movwf	(Set_Relay@State)
  2490  0101  00A0               	movlw	low(01h)
  2491  0102  3001               	fcall	_Set_Relay
  2492  0103  118A  255F  118A   	line	301
  2493                           	
  2494                           l2380:	
  2495  0106                     ;Main.c: 301:                     StopRelay2OnTime = 1;
  2496                           	bcf	status, 5	;RP0=0, select bank0
  2497  0106  1283               	bcf	status, 6	;RP1=0, select bank0
  2498  0107  1303               	clrf	(_StopRelay2OnTime)
  2499  0108  01EA               	incf	(_StopRelay2OnTime),f
  2500  0109  0AEA               	line	302
  2501                           ;Main.c: 302:                     SetStopTime(Relay2StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2502                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2503  010A  083D               	addlw	0D0h
  2504  010B  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2505  010C  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2506  010D  084E               	movwf	(SetStopTime@Time10sec)
  2507  010E  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2508  010F  083E               	addlw	0D0h
  2509  0110  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2510  0111  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2511  0112  084F               	movwf	(SetStopTime@Time1sec)
  2512  0113  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2513  0114  083F               	addlw	0D0h
  2514  0115  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2515  0116  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2516  0117  0850               	movwf	(SetStopTime@Time100ms)
  2517  0118  00A2               	movlw	(low(_Relay2StopTime|((0x0)<<8)))&0ffh
  2518  0119  30EB               	fcall	_SetStopTime
  2519  011A  118A  25DF  118A   	line	303
  2520                           ;Main.c: 303:                     break;
  2521                           	goto	l218
  2522  011D  2A2E               	line	305
  2523                           ;Main.c: 305:                 case '3':
  2524                           	
  2525                           l205:	
  2526  011E                     	line	306
  2527                           	
  2528                           l2382:	
  2529  011E                     ;Main.c: 306:                     Set_Relay(Relay3, state);
  2530                           	bcf	status, 5	;RP0=0, select bank0
  2531  011E  1283               	bcf	status, 6	;RP1=0, select bank0
  2532  011F  1303               	movf	(Handle_Telegram@state),w
  2533  0120  0853               	movwf	(??_Handle_Telegram+0)+0
  2534  0121  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2535  0122  084E               	movwf	(Set_Relay@State)
  2536  0123  00A0               	movlw	low(02h)
  2537  0124  3002               	fcall	_Set_Relay
  2538  0125  118A  255F  118A   	line	307
  2539                           	
  2540                           l2384:	
  2541  0128                     ;Main.c: 307:                     StopRelay3OnTime = 1;
  2542                           	bcf	status, 5	;RP0=0, select bank0
  2543  0128  1283               	bcf	status, 6	;RP1=0, select bank0
  2544  0129  1303               	clrf	(_StopRelay3OnTime)
  2545  012A  01E9               	incf	(_StopRelay3OnTime),f
  2546  012B  0AE9               	line	308
  2547                           ;Main.c: 308:                     SetStopTime(Relay3StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2548                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2549  012C  083D               	addlw	0D0h
  2550  012D  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2551  012E  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2552  012F  084E               	movwf	(SetStopTime@Time10sec)
  2553  0130  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2554  0131  083E               	addlw	0D0h
  2555  0132  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2556  0133  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2557  0134  084F               	movwf	(SetStopTime@Time1sec)
  2558  0135  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2559  0136  083F               	addlw	0D0h
  2560  0137  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2561  0138  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2562  0139  0850               	movwf	(SetStopTime@Time100ms)
  2563  013A  00A2               	movlw	(low(_Relay3StopTime|((0x0)<<8)))&0ffh
  2564  013B  30E8               	fcall	_SetStopTime
  2565  013C  118A  25DF  118A   	line	309
  2566                           ;Main.c: 309:                     break;
  2567                           	goto	l218
  2568  013F  2A2E               	line	311
  2569                           ;Main.c: 311:                 case '4':
  2570                           	
  2571                           l206:	
  2572  0140                     	line	312
  2573                           	
  2574                           l2386:	
  2575  0140                     ;Main.c: 312:                     Set_Relay(Relay4, state);
  2576                           	bcf	status, 5	;RP0=0, select bank0
  2577  0140  1283               	bcf	status, 6	;RP1=0, select bank0
  2578  0141  1303               	movf	(Handle_Telegram@state),w
  2579  0142  0853               	movwf	(??_Handle_Telegram+0)+0
  2580  0143  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2581  0144  084E               	movwf	(Set_Relay@State)
  2582  0145  00A0               	movlw	low(03h)
  2583  0146  3003               	fcall	_Set_Relay
  2584  0147  118A  255F  118A   	line	313
  2585                           	
  2586                           l2388:	
  2587  014A                     ;Main.c: 313:                     StopRelay4OnTime = 1;
  2588                           	bcf	status, 5	;RP0=0, select bank0
  2589  014A  1283               	bcf	status, 6	;RP1=0, select bank0
  2590  014B  1303               	clrf	(_StopRelay4OnTime)
  2591  014C  01E8               	incf	(_StopRelay4OnTime),f
  2592  014D  0AE8               	line	314
  2593                           ;Main.c: 314:                     SetStopTime(Relay4StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2594                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2595  014E  083D               	addlw	0D0h
  2596  014F  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2597  0150  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2598  0151  084E               	movwf	(SetStopTime@Time10sec)
  2599  0152  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2600  0153  083E               	addlw	0D0h
  2601  0154  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2602  0155  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2603  0156  084F               	movwf	(SetStopTime@Time1sec)
  2604  0157  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2605  0158  083F               	addlw	0D0h
  2606  0159  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2607  015A  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2608  015B  0850               	movwf	(SetStopTime@Time100ms)
  2609  015C  00A2               	movlw	(low(_Relay4StopTime|((0x0)<<8)))&0ffh
  2610  015D  30E5               	fcall	_SetStopTime
  2611  015E  118A  25DF  118A   	line	315
  2612                           ;Main.c: 315:                     break;
  2613                           	goto	l218
  2614  0161  2A2E               	line	317
  2615                           ;Main.c: 317:                 case '5':
  2616                           	
  2617                           l207:	
  2618  0162                     	line	318
  2619                           	
  2620                           l2390:	
  2621  0162                     ;Main.c: 318:                     Set_Relay(Relay5, state);
  2622                           	bcf	status, 5	;RP0=0, select bank0
  2623  0162  1283               	bcf	status, 6	;RP1=0, select bank0
  2624  0163  1303               	movf	(Handle_Telegram@state),w
  2625  0164  0853               	movwf	(??_Handle_Telegram+0)+0
  2626  0165  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2627  0166  084E               	movwf	(Set_Relay@State)
  2628  0167  00A0               	movlw	low(04h)
  2629  0168  3004               	fcall	_Set_Relay
  2630  0169  118A  255F  118A   	line	319
  2631                           	
  2632                           l2392:	
  2633  016C                     ;Main.c: 319:                     StopRelay5OnTime = 1;
  2634                           	bcf	status, 5	;RP0=0, select bank0
  2635  016C  1283               	bcf	status, 6	;RP1=0, select bank0
  2636  016D  1303               	clrf	(_StopRelay5OnTime)
  2637  016E  01E7               	incf	(_StopRelay5OnTime),f
  2638  016F  0AE7               	line	320
  2639                           ;Main.c: 320:                     SetStopTime(Relay5StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2640                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2641  0170  083D               	addlw	0D0h
  2642  0171  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2643  0172  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2644  0173  084E               	movwf	(SetStopTime@Time10sec)
  2645  0174  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2646  0175  083E               	addlw	0D0h
  2647  0176  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2648  0177  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2649  0178  084F               	movwf	(SetStopTime@Time1sec)
  2650  0179  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2651  017A  083F               	addlw	0D0h
  2652  017B  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2653  017C  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2654  017D  0850               	movwf	(SetStopTime@Time100ms)
  2655  017E  00A2               	movlw	(low(_Relay5StopTime|((0x0)<<8)))&0ffh
  2656  017F  30E2               	fcall	_SetStopTime
  2657  0180  118A  25DF  118A   	line	321
  2658                           ;Main.c: 321:                     break;
  2659                           	goto	l218
  2660  0183  2A2E               	line	323
  2661                           ;Main.c: 323:                 case '6':
  2662                           	
  2663                           l208:	
  2664  0184                     	line	324
  2665                           	
  2666                           l2394:	
  2667  0184                     ;Main.c: 324:                     Set_Relay(Relay6, state);
  2668                           	bcf	status, 5	;RP0=0, select bank0
  2669  0184  1283               	bcf	status, 6	;RP1=0, select bank0
  2670  0185  1303               	movf	(Handle_Telegram@state),w
  2671  0186  0853               	movwf	(??_Handle_Telegram+0)+0
  2672  0187  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2673  0188  084E               	movwf	(Set_Relay@State)
  2674  0189  00A0               	movlw	low(05h)
  2675  018A  3005               	fcall	_Set_Relay
  2676  018B  118A  255F  118A   	line	325
  2677                           	
  2678                           l2396:	
  2679  018E                     ;Main.c: 325:                     StopRelay6OnTime = 1;
  2680                           	bcf	status, 5	;RP0=0, select bank0
  2681  018E  1283               	bcf	status, 6	;RP1=0, select bank0
  2682  018F  1303               	clrf	(_StopRelay6OnTime)
  2683  0190  01E6               	incf	(_StopRelay6OnTime),f
  2684  0191  0AE6               	line	326
  2685                           ;Main.c: 326:                     SetStopTime(Relay6StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2686                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2687  0192  083D               	addlw	0D0h
  2688  0193  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2689  0194  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2690  0195  084E               	movwf	(SetStopTime@Time10sec)
  2691  0196  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2692  0197  083E               	addlw	0D0h
  2693  0198  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2694  0199  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2695  019A  084F               	movwf	(SetStopTime@Time1sec)
  2696  019B  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2697  019C  083F               	addlw	0D0h
  2698  019D  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2699  019E  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2700  019F  0850               	movwf	(SetStopTime@Time100ms)
  2701  01A0  00A2               	movlw	(low(_Relay6StopTime|((0x0)<<8)))&0ffh
  2702  01A1  30DF               	fcall	_SetStopTime
  2703  01A2  118A  25DF  118A   	line	327
  2704                           ;Main.c: 327:                     break;
  2705                           	goto	l218
  2706  01A5  2A2E               	line	328
  2707                           	
  2708                           l2398:	
  2709  01A6                     ;Main.c: 328:             }
  2710                           	goto	l218
  2711  01A6  2A2E               	
  2712                           l201:	
  2713  01A7                     	
  2714                           l2400:	
  2715  01A7                     	bcf	status, 5	;RP0=0, select bank0
  2716  01A7  1283               	bcf	status, 6	;RP1=0, select bank0
  2717  01A8  1303               	movf	0+(Handle_Telegram@ThisTelegram)+01h,w
  2718  01A9  083A               	movwf	(??_Handle_Telegram+0)+0
  2719  01AA  00CE               	clrf	(??_Handle_Telegram+0)+0+1
  2720  01AB  01CF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2721                           ; Switch size 1, requested type "space"
  2722                           ; Number of cases is 1, Range of values is 0 to 0
  2723                           ; switch strategies available:
  2724                           ; Name         Instructions Cycles
  2725                           ; simple_byte            4     3 (average)
  2726                           ; direct_byte            9     7 (fixed)
  2727                           ; jumptable            260     6 (fixed)
  2728                           ;	Chosen strategy is simple_byte
  2729                           
  2730                           	movf 1+(??_Handle_Telegram+0)+0,w
  2731  01AC  084F               	opt asmopt_push
  2732                           	opt asmopt_off
  2733                           	xorlw	0^0	; case 0
  2734  01AD  3A00               	skipnz
  2735  01AE  1903               	goto	l2882
  2736  01AF  29B1               	goto	l218
  2737  01B0  2A2E               	opt asmopt_pop
  2738                           	
  2739                           l2882:	
  2740  01B1                     ; Switch size 1, requested type "space"
  2741                           ; Number of cases is 6, Range of values is 49 to 54
  2742                           ; switch strategies available:
  2743                           ; Name         Instructions Cycles
  2744                           ; simple_byte           19    10 (average)
  2745                           ; direct_byte           22    10 (fixed)
  2746                           ; jumptable            263     9 (fixed)
  2747                           ;	Chosen strategy is simple_byte
  2748                           
  2749                           	movf 0+(??_Handle_Telegram+0)+0,w
  2750  01B1  084E               	opt asmopt_push
  2751                           	opt asmopt_off
  2752                           	xorlw	49^0	; case 49
  2753  01B2  3A31               	skipnz
  2754  01B3  1903               	goto	l2374
  2755  01B4  28DC               	xorlw	50^49	; case 50
  2756  01B5  3A03               	skipnz
  2757  01B6  1903               	goto	l2378
  2758  01B7  28FC               	xorlw	51^50	; case 51
  2759  01B8  3A01               	skipnz
  2760  01B9  1903               	goto	l2382
  2761  01BA  291E               	xorlw	52^51	; case 52
  2762  01BB  3A07               	skipnz
  2763  01BC  1903               	goto	l2386
  2764  01BD  2940               	xorlw	53^52	; case 53
  2765  01BE  3A01               	skipnz
  2766  01BF  1903               	goto	l2390
  2767  01C0  2962               	xorlw	54^53	; case 54
  2768  01C1  3A03               	skipnz
  2769  01C2  1903               	goto	l2394
  2770  01C3  2984               	goto	l218
  2771  01C4  2A2E               	opt asmopt_pop
  2772                           
  2773                           	
  2774                           l203:	
  2775  01C5                     	line	329
  2776                           ;Main.c: 329:         }
  2777                           	goto	l218
  2778  01C5  2A2E               	line	330
  2779                           ;Main.c: 330:         else
  2780                           	
  2781                           l198:	
  2782  01C6                     	line	332
  2783                           ;Main.c: 331:         {;Main.c: 332:             switch (ThisTelegram.Address)
  2784                           	goto	l2428
  2785  01C6  2A10               	line	334
  2786                           ;Main.c: 333:             {;Main.c: 334:                 case '1':
  2787                           	
  2788                           l211:	
  2789  01C7                     	line	335
  2790                           	
  2791                           l2402:	
  2792  01C7                     ;Main.c: 335:                     Set_Relay(Relay1, state);
  2793                           	movf	(Handle_Telegram@state),w
  2794  01C7  0853               	movwf	(??_Handle_Telegram+0)+0
  2795  01C8  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2796  01C9  084E               	movwf	(Set_Relay@State)
  2797  01CA  00A0               	movlw	low(0)
  2798  01CB  3000               	fcall	_Set_Relay
  2799  01CC  118A  255F  118A   	line	336
  2800                           	
  2801                           l2404:	
  2802  01CF                     ;Main.c: 336:                     StopRelay1OnTime = 0;
  2803                           	bcf	status, 5	;RP0=0, select bank0
  2804  01CF  1283               	bcf	status, 6	;RP1=0, select bank0
  2805  01D0  1303               	clrf	(_StopRelay1OnTime)
  2806  01D1  01EB               	line	338
  2807                           ;Main.c: 338:                     break;
  2808                           	goto	l218
  2809  01D2  2A2E               	line	340
  2810                           ;Main.c: 340:                 case '2':
  2811                           	
  2812                           l213:	
  2813  01D3                     	line	341
  2814                           	
  2815                           l2406:	
  2816  01D3                     ;Main.c: 341:                     Set_Relay(Relay2, state);
  2817                           	movf	(Handle_Telegram@state),w
  2818  01D3  0853               	movwf	(??_Handle_Telegram+0)+0
  2819  01D4  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2820  01D5  084E               	movwf	(Set_Relay@State)
  2821  01D6  00A0               	movlw	low(01h)
  2822  01D7  3001               	fcall	_Set_Relay
  2823  01D8  118A  255F  118A   	line	342
  2824                           	
  2825                           l2408:	
  2826  01DB                     ;Main.c: 342:                     StopRelay2OnTime = 0;
  2827                           	bcf	status, 5	;RP0=0, select bank0
  2828  01DB  1283               	bcf	status, 6	;RP1=0, select bank0
  2829  01DC  1303               	clrf	(_StopRelay2OnTime)
  2830  01DD  01EA               	line	343
  2831                           ;Main.c: 343:                     break;
  2832                           	goto	l218
  2833  01DE  2A2E               	line	345
  2834                           ;Main.c: 345:                 case '3':
  2835                           	
  2836                           l214:	
  2837  01DF                     	line	346
  2838                           	
  2839                           l2410:	
  2840  01DF                     ;Main.c: 346:                     Set_Relay(Relay3, state);
  2841                           	movf	(Handle_Telegram@state),w
  2842  01DF  0853               	movwf	(??_Handle_Telegram+0)+0
  2843  01E0  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2844  01E1  084E               	movwf	(Set_Relay@State)
  2845  01E2  00A0               	movlw	low(02h)
  2846  01E3  3002               	fcall	_Set_Relay
  2847  01E4  118A  255F  118A   	line	347
  2848                           	
  2849                           l2412:	
  2850  01E7                     ;Main.c: 347:                     StopRelay3OnTime = 0;
  2851                           	bcf	status, 5	;RP0=0, select bank0
  2852  01E7  1283               	bcf	status, 6	;RP1=0, select bank0
  2853  01E8  1303               	clrf	(_StopRelay3OnTime)
  2854  01E9  01E9               	line	348
  2855                           ;Main.c: 348:                     break;
  2856                           	goto	l218
  2857  01EA  2A2E               	line	350
  2858                           ;Main.c: 350:                 case '4':
  2859                           	
  2860                           l215:	
  2861  01EB                     	line	351
  2862                           	
  2863                           l2414:	
  2864  01EB                     ;Main.c: 351:                     Set_Relay(Relay4, state);
  2865                           	movf	(Handle_Telegram@state),w
  2866  01EB  0853               	movwf	(??_Handle_Telegram+0)+0
  2867  01EC  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2868  01ED  084E               	movwf	(Set_Relay@State)
  2869  01EE  00A0               	movlw	low(03h)
  2870  01EF  3003               	fcall	_Set_Relay
  2871  01F0  118A  255F  118A   	line	352
  2872                           	
  2873                           l2416:	
  2874  01F3                     ;Main.c: 352:                     StopRelay4OnTime = 0;
  2875                           	bcf	status, 5	;RP0=0, select bank0
  2876  01F3  1283               	bcf	status, 6	;RP1=0, select bank0
  2877  01F4  1303               	clrf	(_StopRelay4OnTime)
  2878  01F5  01E8               	line	353
  2879                           ;Main.c: 353:                     break;
  2880                           	goto	l218
  2881  01F6  2A2E               	line	355
  2882                           ;Main.c: 355:                 case '5':
  2883                           	
  2884                           l216:	
  2885  01F7                     	line	356
  2886                           	
  2887                           l2418:	
  2888  01F7                     ;Main.c: 356:                     Set_Relay(Relay5, state);
  2889                           	movf	(Handle_Telegram@state),w
  2890  01F7  0853               	movwf	(??_Handle_Telegram+0)+0
  2891  01F8  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2892  01F9  084E               	movwf	(Set_Relay@State)
  2893  01FA  00A0               	movlw	low(04h)
  2894  01FB  3004               	fcall	_Set_Relay
  2895  01FC  118A  255F  118A   	line	357
  2896                           	
  2897                           l2420:	
  2898  01FF                     ;Main.c: 357:                     StopRelay5OnTime = 0;
  2899                           	bcf	status, 5	;RP0=0, select bank0
  2900  01FF  1283               	bcf	status, 6	;RP1=0, select bank0
  2901  0200  1303               	clrf	(_StopRelay5OnTime)
  2902  0201  01E7               	line	358
  2903                           ;Main.c: 358:                     break;
  2904                           	goto	l218
  2905  0202  2A2E               	line	360
  2906                           ;Main.c: 360:                 case '6':
  2907                           	
  2908                           l217:	
  2909  0203                     	line	361
  2910                           	
  2911                           l2422:	
  2912  0203                     ;Main.c: 361:                     Set_Relay(Relay6, state);
  2913                           	movf	(Handle_Telegram@state),w
  2914  0203  0853               	movwf	(??_Handle_Telegram+0)+0
  2915  0204  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2916  0205  084E               	movwf	(Set_Relay@State)
  2917  0206  00A0               	movlw	low(05h)
  2918  0207  3005               	fcall	_Set_Relay
  2919  0208  118A  255F  118A   	line	362
  2920                           	
  2921                           l2424:	
  2922  020B                     ;Main.c: 362:                     StopRelay6OnTime = 0;
  2923                           	bcf	status, 5	;RP0=0, select bank0
  2924  020B  1283               	bcf	status, 6	;RP1=0, select bank0
  2925  020C  1303               	clrf	(_StopRelay6OnTime)
  2926  020D  01E6               	line	363
  2927                           ;Main.c: 363:                     break;
  2928                           	goto	l218
  2929  020E  2A2E               	line	365
  2930                           	
  2931                           l2426:	
  2932  020F                     ;Main.c: 365:             }
  2933                           	goto	l218
  2934  020F  2A2E               	
  2935                           l210:	
  2936  0210                     	
  2937                           l2428:	
  2938  0210                     	movf	0+(Handle_Telegram@ThisTelegram)+01h,w
  2939  0210  083A               	movwf	(??_Handle_Telegram+0)+0
  2940  0211  00CE               	clrf	(??_Handle_Telegram+0)+0+1
  2941  0212  01CF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2942                           ; Switch size 1, requested type "space"
  2943                           ; Number of cases is 1, Range of values is 0 to 0
  2944                           ; switch strategies available:
  2945                           ; Name         Instructions Cycles
  2946                           ; simple_byte            4     3 (average)
  2947                           ; direct_byte            9     7 (fixed)
  2948                           ; jumptable            260     6 (fixed)
  2949                           ;	Chosen strategy is simple_byte
  2950                           
  2951                           	movf 1+(??_Handle_Telegram+0)+0,w
  2952  0213  084F               	opt asmopt_push
  2953                           	opt asmopt_off
  2954                           	xorlw	0^0	; case 0
  2955  0214  3A00               	skipnz
  2956  0215  1903               	goto	l2884
  2957  0216  2A18               	goto	l218
  2958  0217  2A2E               	opt asmopt_pop
  2959                           	
  2960                           l2884:	
  2961  0218                     ; Switch size 1, requested type "space"
  2962                           ; Number of cases is 6, Range of values is 49 to 54
  2963                           ; switch strategies available:
  2964                           ; Name         Instructions Cycles
  2965                           ; simple_byte           19    10 (average)
  2966                           ; direct_byte           22    10 (fixed)
  2967                           ; jumptable            263     9 (fixed)
  2968                           ;	Chosen strategy is simple_byte
  2969                           
  2970                           	movf 0+(??_Handle_Telegram+0)+0,w
  2971  0218  084E               	opt asmopt_push
  2972                           	opt asmopt_off
  2973                           	xorlw	49^0	; case 49
  2974  0219  3A31               	skipnz
  2975  021A  1903               	goto	l2402
  2976  021B  29C7               	xorlw	50^49	; case 50
  2977  021C  3A03               	skipnz
  2978  021D  1903               	goto	l2406
  2979  021E  29D3               	xorlw	51^50	; case 51
  2980  021F  3A01               	skipnz
  2981  0220  1903               	goto	l2410
  2982  0221  29DF               	xorlw	52^51	; case 52
  2983  0222  3A07               	skipnz
  2984  0223  1903               	goto	l2414
  2985  0224  29EB               	xorlw	53^52	; case 53
  2986  0225  3A01               	skipnz
  2987  0226  1903               	goto	l2418
  2988  0227  29F7               	xorlw	54^53	; case 54
  2989  0228  3A03               	skipnz
  2990  0229  1903               	goto	l2422
  2991  022A  2A03               	goto	l218
  2992  022B  2A2E               	opt asmopt_pop
  2993                           
  2994                           	
  2995                           l212:	
  2996  022C                     	goto	l218
  2997  022C  2A2E               	line	367
  2998                           ;Main.c: 367:         }
  2999                           	
  3000                           l209:	
  3001  022D                     	goto	l218
  3002  022D  2A2E               	line	368
  3003                           ;Main.c: 368:     }
  3004                           	
  3005                           l197:	
  3006  022E                     	line	369
  3007                           	
  3008                           l218:	
  3009  022E                     	return
  3010  022E  0008               	opt stack 0
  3011                           GLOBAL	__end_of_Handle_Telegram
  3012                           	__end_of_Handle_Telegram:
  3013  022F                     	signat	_Handle_Telegram,4217
  3014                           	global	_SetStopTime
  3015                           
  3016 ;; *************** function _SetStopTime *****************
  3017 ;; Defined at:
  3018 ;;		line 189 in file "Main.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  RelayStopTim    1    wreg     PTR unsigned char 
  3021 ;;		 -> Relay6StopTime(3), Relay5StopTime(3), Relay4StopTime(3), Relay3StopTime(3), 
  3022 ;;		 -> Relay2StopTime(3), Relay1StopTime(3), 
  3023 ;;  Time10sec       1    0[BANK0 ] unsigned char 
  3024 ;;  Time1sec        1    1[BANK0 ] unsigned char 
  3025 ;;  Time100ms       1    2[BANK0 ] unsigned char 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  RelayStopTim    1    5[BANK0 ] PTR unsigned char 
  3028 ;;		 -> Relay6StopTime(3), Relay5StopTime(3), Relay4StopTime(3), Relay3StopTime(3), 
  3029 ;;		 -> Relay2StopTime(3), Relay1StopTime(3), 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3039 ;;      Params:         0       3       0       0
  3040 ;;      Locals:         0       1       0       0
  3041 ;;      Temps:          0       2       0       0
  3042 ;;      Totals:         0       6       0       0
  3043 ;;Total ram usage:        6 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    3
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_Handle_Telegram
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3053                           	line	189
  3054                           global __ptext8
  3055                           __ptext8:	;psect for function _SetStopTime
  3056  05DF                     psect	text8
  3057                           	file	"Main.c"
  3058                           	line	189
  3059                           	global	__size_of_SetStopTime
  3060                           	__size_of_SetStopTime	equ	__end_of_SetStopTime-_SetStopTime
  3061  0075                     	
  3062                           _SetStopTime:	
  3063  05DF                     ;incstack = 0
  3064                           	opt	stack 3
  3065                           ; Regs used in _SetStopTime: [wreg-fsr0h+status,2+status,0]
  3066                           ;SetStopTime@RelayStopTime stored from wreg
  3067                           	bcf	status, 5	;RP0=0, select bank0
  3068  05DF  1283               	bcf	status, 6	;RP1=0, select bank0
  3069  05E0  1303               	movwf	(SetStopTime@RelayStopTime)
  3070  05E1  00A5               	line	191
  3071                           	
  3072                           l2022:	
  3073  05E2                     ;Main.c: 189: void SetStopTime(unsigned char *RelayStopTime, unsigned char Time10sec, un
                                 signed char Time1sec, unsigned char Time100ms);Main.c: 190: {;Main.c: 191:     if (Count
                                 er_100ms + Time100ms >= 10)
  3074                           	movf	(SetStopTime@Time100ms),w
  3075  05E2  0822               	addwf	(_Counter_100ms),w
  3076  05E3  075C               	movwf	(??_SetStopTime+0)+0
  3077  05E4  00A3               	movf	(_Counter_100ms+1),w
  3078  05E5  085D               	skipnc
  3079  05E6  1803               	incf	(_Counter_100ms+1),w
  3080  05E7  0A5D               	movwf	((??_SetStopTime+0)+0)+1
  3081  05E8  00A4               	movlw	0
  3082  05E9  3000               	subwf	1+(??_SetStopTime+0)+0,w
  3083  05EA  0224               	movlw	0Ah
  3084  05EB  300A               	skipnz
  3085  05EC  1903               	subwf	0+(??_SetStopTime+0)+0,w
  3086  05ED  0223               	skipc
  3087  05EE  1C03               	goto	u1001
  3088  05EF  2DF1               	goto	u1000
  3089  05F0  2DF2               u1001:
  3090  05F1                     	goto	l2028
  3091  05F1  2E02               u1000:
  3092  05F2                     	line	193
  3093                           	
  3094                           l2024:	
  3095  05F2                     ;Main.c: 192:     {;Main.c: 193:         *(RelayStopTime + 2) = Counter_100ms + Time100m
                                 s - 10;
  3096                           	movf	(_Counter_100ms),w
  3097  05F2  085C               	addwf	(SetStopTime@Time100ms),w
  3098  05F3  0722               	addlw	0F6h
  3099  05F4  3EF6               	movwf	(??_SetStopTime+0)+0
  3100  05F5  00A3               	movf	(SetStopTime@RelayStopTime),w
  3101  05F6  0825               	addlw	02h
  3102  05F7  3E02               	movwf	fsr0
  3103  05F8  0084               	movf	(??_SetStopTime+0)+0,w
  3104  05F9  0823               	bcf	status, 7	;select IRP bank0
  3105  05FA  1383               	movwf	indf
  3106  05FB  0080               	line	195
  3107                           	
  3108                           l2026:	
  3109  05FC                     ;Main.c: 195:         Time1sec = Time1sec + 1;
  3110                           	movf	(SetStopTime@Time1sec),w
  3111  05FC  0821               	addlw	01h
  3112  05FD  3E01               	movwf	(??_SetStopTime+0)+0
  3113  05FE  00A3               	movf	(??_SetStopTime+0)+0,w
  3114  05FF  0823               	movwf	(SetStopTime@Time1sec)
  3115  0600  00A1               	line	196
  3116                           ;Main.c: 196:     }
  3117                           	goto	l2030
  3118  0601  2E0C               	line	197
  3119                           ;Main.c: 197:     else
  3120                           	
  3121                           l180:	
  3122  0602                     	line	199
  3123                           	
  3124                           l2028:	
  3125  0602                     ;Main.c: 198:     {;Main.c: 199:         *(RelayStopTime + 2) = Counter_100ms + Time100m
                                 s;
  3126                           	movf	(_Counter_100ms),w
  3127  0602  085C               	addwf	(SetStopTime@Time100ms),w
  3128  0603  0722               	movwf	(??_SetStopTime+0)+0
  3129  0604  00A3               	movf	(SetStopTime@RelayStopTime),w
  3130  0605  0825               	addlw	02h
  3131  0606  3E02               	movwf	fsr0
  3132  0607  0084               	movf	(??_SetStopTime+0)+0,w
  3133  0608  0823               	bcf	status, 7	;select IRP bank0
  3134  0609  1383               	movwf	indf
  3135  060A  0080               	goto	l2030
  3136  060B  2E0C               	line	200
  3137                           ;Main.c: 200:     }
  3138                           	
  3139                           l181:	
  3140  060C                     	line	202
  3141                           	
  3142                           l2030:	
  3143  060C                     ;Main.c: 202:     if (Counter_1sec + Time1sec >= 10)
  3144                           	movf	(SetStopTime@Time1sec),w
  3145  060C  0821               	addwf	(_Counter_1sec),w
  3146  060D  075A               	movwf	(??_SetStopTime+0)+0
  3147  060E  00A3               	movf	(_Counter_1sec+1),w
  3148  060F  085B               	skipnc
  3149  0610  1803               	incf	(_Counter_1sec+1),w
  3150  0611  0A5B               	movwf	((??_SetStopTime+0)+0)+1
  3151  0612  00A4               	movlw	0
  3152  0613  3000               	subwf	1+(??_SetStopTime+0)+0,w
  3153  0614  0224               	movlw	0Ah
  3154  0615  300A               	skipnz
  3155  0616  1903               	subwf	0+(??_SetStopTime+0)+0,w
  3156  0617  0223               	skipc
  3157  0618  1C03               	goto	u1011
  3158  0619  2E1B               	goto	u1010
  3159  061A  2E1C               u1011:
  3160  061B                     	goto	l2036
  3161  061B  2E2A               u1010:
  3162  061C                     	line	204
  3163                           	
  3164                           l2032:	
  3165  061C                     ;Main.c: 203:     {;Main.c: 204:         *(RelayStopTime + 1) = Counter_1sec + Time1sec 
                                 - 10;
  3166                           	movf	(_Counter_1sec),w
  3167  061C  085A               	addwf	(SetStopTime@Time1sec),w
  3168  061D  0721               	addlw	0F6h
  3169  061E  3EF6               	movwf	(??_SetStopTime+0)+0
  3170  061F  00A3               	incf	(SetStopTime@RelayStopTime),w
  3171  0620  0A25               	movwf	fsr0
  3172  0621  0084               	movf	(??_SetStopTime+0)+0,w
  3173  0622  0823               	movwf	indf
  3174  0623  0080               	line	206
  3175                           	
  3176                           l2034:	
  3177  0624                     ;Main.c: 206:         Time10sec = Time10sec + 1;
  3178                           	movf	(SetStopTime@Time10sec),w
  3179  0624  0820               	addlw	01h
  3180  0625  3E01               	movwf	(??_SetStopTime+0)+0
  3181  0626  00A3               	movf	(??_SetStopTime+0)+0,w
  3182  0627  0823               	movwf	(SetStopTime@Time10sec)
  3183  0628  00A0               	line	207
  3184                           ;Main.c: 207:     }
  3185                           	goto	l2038
  3186  0629  2E32               	line	208
  3187                           ;Main.c: 208:     else
  3188                           	
  3189                           l182:	
  3190  062A                     	line	210
  3191                           	
  3192                           l2036:	
  3193  062A                     ;Main.c: 209:     {;Main.c: 210:         *(RelayStopTime + 1) = Counter_1sec + Time1sec;
                                 
  3194                           	movf	(_Counter_1sec),w
  3195  062A  085A               	addwf	(SetStopTime@Time1sec),w
  3196  062B  0721               	movwf	(??_SetStopTime+0)+0
  3197  062C  00A3               	incf	(SetStopTime@RelayStopTime),w
  3198  062D  0A25               	movwf	fsr0
  3199  062E  0084               	movf	(??_SetStopTime+0)+0,w
  3200  062F  0823               	movwf	indf
  3201  0630  0080               	goto	l2038
  3202  0631  2E32               	line	211
  3203                           ;Main.c: 211:     }
  3204                           	
  3205                           l183:	
  3206  0632                     	line	213
  3207                           	
  3208                           l2038:	
  3209  0632                     ;Main.c: 213:     if (Counter_10sec + Time10sec >= 10)
  3210                           	movf	(SetStopTime@Time10sec),w
  3211  0632  0820               	addwf	(_Counter_10sec),w
  3212  0633  0758               	movwf	(??_SetStopTime+0)+0
  3213  0634  00A3               	movf	(_Counter_10sec+1),w
  3214  0635  0859               	skipnc
  3215  0636  1803               	incf	(_Counter_10sec+1),w
  3216  0637  0A59               	movwf	((??_SetStopTime+0)+0)+1
  3217  0638  00A4               	movlw	0
  3218  0639  3000               	subwf	1+(??_SetStopTime+0)+0,w
  3219  063A  0224               	movlw	0Ah
  3220  063B  300A               	skipnz
  3221  063C  1903               	subwf	0+(??_SetStopTime+0)+0,w
  3222  063D  0223               	skipc
  3223  063E  1C03               	goto	u1021
  3224  063F  2E41               	goto	u1020
  3225  0640  2E42               u1021:
  3226  0641                     	goto	l2042
  3227  0641  2E4B               u1020:
  3228  0642                     	line	215
  3229                           	
  3230                           l2040:	
  3231  0642                     ;Main.c: 214:     {;Main.c: 215:         *(RelayStopTime + 0) = Counter_10sec + Time10se
                                 c - 10;
  3232                           	movf	(_Counter_10sec),w
  3233  0642  0858               	addwf	(SetStopTime@Time10sec),w
  3234  0643  0720               	addlw	0F6h
  3235  0644  3EF6               	movwf	(??_SetStopTime+0)+0
  3236  0645  00A3               	movf	(SetStopTime@RelayStopTime),w
  3237  0646  0825               	movwf	fsr0
  3238  0647  0084               	movf	(??_SetStopTime+0)+0,w
  3239  0648  0823               	movwf	indf
  3240  0649  0080               	line	216
  3241                           ;Main.c: 216:     }
  3242                           	goto	l186
  3243  064A  2E53               	line	217
  3244                           ;Main.c: 217:     else
  3245                           	
  3246                           l184:	
  3247  064B                     	line	219
  3248                           	
  3249                           l2042:	
  3250  064B                     ;Main.c: 218:     {;Main.c: 219:         *(RelayStopTime + 0) = Counter_10sec + Time10se
                                 c;
  3251                           	movf	(_Counter_10sec),w
  3252  064B  0858               	addwf	(SetStopTime@Time10sec),w
  3253  064C  0720               	movwf	(??_SetStopTime+0)+0
  3254  064D  00A3               	movf	(SetStopTime@RelayStopTime),w
  3255  064E  0825               	movwf	fsr0
  3256  064F  0084               	movf	(??_SetStopTime+0)+0,w
  3257  0650  0823               	movwf	indf
  3258  0651  0080               	goto	l186
  3259  0652  2E53               	line	220
  3260                           ;Main.c: 220:     }
  3261                           	
  3262                           l185:	
  3263  0653                     	line	242
  3264                           	
  3265                           l186:	
  3266  0653                     	return
  3267  0653  0008               	opt stack 0
  3268                           GLOBAL	__end_of_SetStopTime
  3269                           	__end_of_SetStopTime:
  3270  0654                     	signat	_SetStopTime,16505
  3271                           	global	_SendTelegram
  3272                           
  3273 ;; *************** function _SendTelegram *****************
  3274 ;; Defined at:
  3275 ;;		line 56 in file "TelegramInterpreter.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  MyTelegram     21    2[BANK0 ] struct .
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  CommandCount    1   24[BANK0 ] unsigned char 
  3280 ;;  MacCounter      1    0        unsigned char 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      void 
  3283 ;; Registers used:
  3284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3290 ;;      Params:         0      21       0       0
  3291 ;;      Locals:         0       1       0       0
  3292 ;;      Temps:          0       1       0       0
  3293 ;;      Totals:         0      23       0       0
  3294 ;;Total ram usage:       23 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; Hardware stack levels required when called:    4
  3297 ;; This function calls:
  3298 ;;		_AddByteToBuffer
  3299 ;; This function is called by:
  3300 ;;		_Handle_Telegram
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3304                           	file	"TelegramInterpreter.c"
  3305                           	line	56
  3306                           global __ptext9
  3307                           __ptext9:	;psect for function _SendTelegram
  3308  0710                     psect	text9
  3309                           	file	"TelegramInterpreter.c"
  3310                           	line	56
  3311                           	global	__size_of_SendTelegram
  3312                           	__size_of_SendTelegram	equ	__end_of_SendTelegram-_SendTelegram
  3313  0039                     	
  3314                           _SendTelegram:	
  3315  0710                     ;incstack = 0
  3316                           	opt	stack 2
  3317                           ; Regs used in _SendTelegram: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3318                           	line	63
  3319                           	
  3320                           l2090:	
  3321  0710                     ;TelegramInterpreter.c: 56: void SendTelegram(TelegramType MyTelegram);TelegramInterpret
                                 er.c: 57: {;TelegramInterpreter.c: 60:     unsigned char MacCounter;;TelegramInterpreter
                                 .c: 61:     unsigned char CommandCounter;;TelegramInterpreter.c: 63:     AddByteToBuffer
                                 (MyTelegram.Start);
  3322                           	bcf	status, 5	;RP0=0, select bank0
  3323  0710  1283               	bcf	status, 6	;RP1=0, select bank0
  3324  0711  1303               	movf	(SendTelegram@MyTelegram),w
  3325  0712  0822               	fcall	_AddByteToBuffer
  3326  0713  118A  27E3  118A   	line	65
  3327                           ;TelegramInterpreter.c: 65:     AddByteToBuffer(MyTelegram.Address);
  3328                           	bcf	status, 5	;RP0=0, select bank0
  3329  0716  1283               	bcf	status, 6	;RP1=0, select bank0
  3330  0717  1303               	movf	0+(SendTelegram@MyTelegram)+01h,w
  3331  0718  0823               	fcall	_AddByteToBuffer
  3332  0719  118A  27E3  118A   	line	66
  3333                           ;TelegramInterpreter.c: 66:     AddByteToBuffer(MyTelegram.Commandlength + 48);
  3334                           	bcf	status, 5	;RP0=0, select bank0
  3335  071C  1283               	bcf	status, 6	;RP1=0, select bank0
  3336  071D  1303               	movf	0+(SendTelegram@MyTelegram)+02h,w
  3337  071E  0824               	addlw	030h
  3338  071F  3E30               	fcall	_AddByteToBuffer
  3339  0720  118A  27E3  118A   	line	69
  3340                           	
  3341                           l2092:	
  3342  0723                     ;TelegramInterpreter.c: 69:     for (CommandCounter = 0; CommandCounter < MyTelegram.Com
                                 mandlength; CommandCounter ++)
  3343                           	bcf	status, 5	;RP0=0, select bank0
  3344  0723  1283               	bcf	status, 6	;RP1=0, select bank0
  3345  0724  1303               	clrf	(SendTelegram@CommandCounter)
  3346  0725  01B8               	goto	l2098
  3347  0726  2F37               	
  3348                           l481:	
  3349  0727                     	line	71
  3350                           	
  3351                           l2094:	
  3352  0727                     ;TelegramInterpreter.c: 70:     {;TelegramInterpreter.c: 71:         AddByteToBuffer(MyT
                                 elegram.Command[CommandCounter]);
  3353                           	movf	(SendTelegram@CommandCounter),w
  3354  0727  0838               	addlw	03h
  3355  0728  3E03               	addlw	low(SendTelegram@MyTelegram|((0x0)<<8))&0ffh
  3356  0729  3E22               	movwf	fsr0
  3357  072A  0084               	bcf	status, 7	;select IRP bank0
  3358  072B  1383               	movf	indf,w
  3359  072C  0800               	fcall	_AddByteToBuffer
  3360  072D  118A  27E3  118A   	line	72
  3361                           	
  3362                           l2096:	
  3363  0730                     ;TelegramInterpreter.c: 72:     }
  3364                           	movlw	low(01h)
  3365  0730  3001               	bcf	status, 5	;RP0=0, select bank0
  3366  0731  1283               	bcf	status, 6	;RP1=0, select bank0
  3367  0732  1303               	movwf	(??_SendTelegram+0)+0
  3368  0733  00B7               	movf	(??_SendTelegram+0)+0,w
  3369  0734  0837               	addwf	(SendTelegram@CommandCounter),f
  3370  0735  07B8               	goto	l2098
  3371  0736  2F37               	
  3372                           l480:	
  3373  0737                     	
  3374                           l2098:	
  3375  0737                     	movf	0+(SendTelegram@MyTelegram)+02h,w
  3376  0737  0824               	subwf	(SendTelegram@CommandCounter),w
  3377  0738  0238               	skipc
  3378  0739  1C03               	goto	u1031
  3379  073A  2F3C               	goto	u1030
  3380  073B  2F3D               u1031:
  3381  073C                     	goto	l2094
  3382  073C  2F27               u1030:
  3383  073D                     	goto	l2100
  3384  073D  2F3E               	
  3385                           l482:	
  3386  073E                     	line	74
  3387                           	
  3388                           l2100:	
  3389  073E                     ;TelegramInterpreter.c: 74:     AddByteToBuffer(MyTelegram.End[0]);
  3390                           	movf	0+(SendTelegram@MyTelegram)+013h,w
  3391  073E  0835               	fcall	_AddByteToBuffer
  3392  073F  118A  27E3  118A   	line	75
  3393                           ;TelegramInterpreter.c: 75:     AddByteToBuffer(MyTelegram.End[1]);
  3394                           	bcf	status, 5	;RP0=0, select bank0
  3395  0742  1283               	bcf	status, 6	;RP1=0, select bank0
  3396  0743  1303               	movf	0+(SendTelegram@MyTelegram)+014h,w
  3397  0744  0836               	fcall	_AddByteToBuffer
  3398  0745  118A  27E3  118A   	line	77
  3399                           	
  3400                           l483:	
  3401  0748                     	return
  3402  0748  0008               	opt stack 0
  3403                           GLOBAL	__end_of_SendTelegram
  3404                           	__end_of_SendTelegram:
  3405  0749                     	signat	_SendTelegram,4217
  3406                           	global	_AddByteToBuffer
  3407                           
  3408 ;; *************** function _AddByteToBuffer *****************
  3409 ;; Defined at:
  3410 ;;		line 120 in file "Eusart.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  Byte            1    wreg     unsigned char 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  Byte            1    1[BANK0 ] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3424 ;;      Params:         0       0       0       0
  3425 ;;      Locals:         0       1       0       0
  3426 ;;      Temps:          0       1       0       0
  3427 ;;      Totals:         0       2       0       0
  3428 ;;Total ram usage:        2 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:    3
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_main
  3435 ;;		_SendTelegram
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3439                           	file	"Eusart.c"
  3440                           	line	120
  3441                           global __ptext10
  3442                           __ptext10:	;psect for function _AddByteToBuffer
  3443  07E3                     psect	text10
  3444                           	file	"Eusart.c"
  3445                           	line	120
  3446                           	global	__size_of_AddByteToBuffer
  3447                           	__size_of_AddByteToBuffer	equ	__end_of_AddByteToBuffer-_AddByteToBuffer
  3448  001C                     	
  3449                           _AddByteToBuffer:	
  3450  07E3                     ;incstack = 0
  3451                           	opt	stack 2
  3452                           ; Regs used in _AddByteToBuffer: [wreg-fsr0h+status,2+status,0]
  3453                           ;AddByteToBuffer@Byte stored from wreg
  3454                           	bcf	status, 5	;RP0=0, select bank0
  3455  07E3  1283               	bcf	status, 6	;RP1=0, select bank0
  3456  07E4  1303               	movwf	(AddByteToBuffer@Byte)
  3457  07E5  00A1               	line	122
  3458                           	
  3459                           l1946:	
  3460  07E6                     ;Eusart.c: 120: void AddByteToBuffer (unsigned char Byte);Eusart.c: 121: {;Eusart.c: 122
                                 :     SendBuffer[BufferHead] = Byte;
  3461                           	movf	(AddByteToBuffer@Byte),w
  3462  07E6  0821               	movwf	(??_AddByteToBuffer+0)+0
  3463  07E7  00A0               	movf	(_BufferHead),w
  3464  07E8  087D               	addlw	low(_SendBuffer|((0x0)<<8))&0ffh
  3465  07E9  3EA0               	movwf	fsr0
  3466  07EA  0084               	movf	(??_AddByteToBuffer+0)+0,w
  3467  07EB  0820               	bcf	status, 7	;select IRP bank1
  3468  07EC  1383               	movwf	indf
  3469  07ED  0080               	line	124
  3470                           	
  3471                           l1948:	
  3472  07EE                     ;Eusart.c: 124:     if (BufferHead == 39)
  3473                           		movlw	39
  3474  07EE  3027               	xorwf	((_BufferHead)),w
  3475  07EF  067D               	btfss	status,2
  3476  07F0  1D03               	goto	u871
  3477  07F1  2FF3               	goto	u870
  3478  07F2  2FF4               u871:
  3479  07F3                     	goto	l1952
  3480  07F3  2FF6               u870:
  3481  07F4                     	line	126
  3482                           	
  3483                           l1950:	
  3484  07F4                     ;Eusart.c: 125:     {;Eusart.c: 126:         BufferHead = 0;
  3485                           	clrf	(_BufferHead)
  3486  07F4  01FD               	line	127
  3487                           ;Eusart.c: 127:     }
  3488                           	goto	l1954
  3489  07F5  2FFB               	line	128
  3490                           ;Eusart.c: 128:     else
  3491                           	
  3492                           l315:	
  3493  07F6                     	line	130
  3494                           	
  3495                           l1952:	
  3496  07F6                     ;Eusart.c: 129:     {;Eusart.c: 130:         BufferHead++;
  3497                           	movlw	low(01h)
  3498  07F6  3001               	movwf	(??_AddByteToBuffer+0)+0
  3499  07F7  00A0               	movf	(??_AddByteToBuffer+0)+0,w
  3500  07F8  0820               	addwf	(_BufferHead),f
  3501  07F9  07FD               	goto	l1954
  3502  07FA  2FFB               	line	131
  3503                           ;Eusart.c: 131:     }
  3504                           	
  3505                           l316:	
  3506  07FB                     	line	134
  3507                           	
  3508                           l1954:	
  3509  07FB                     ;Eusart.c: 134:     PIE1bits.TXIE = 1;
  3510                           	bsf	status, 5	;RP0=1, select bank1
  3511  07FB  1683               	bcf	status, 6	;RP1=0, select bank1
  3512  07FC  1303               	bsf	(140)^080h,1	;volatile
  3513  07FD  148C               	line	136
  3514                           	
  3515                           l317:	
  3516  07FE                     	return
  3517  07FE  0008               	opt stack 0
  3518                           GLOBAL	__end_of_AddByteToBuffer
  3519                           	__end_of_AddByteToBuffer:
  3520  07FF                     	signat	_AddByteToBuffer,4217
  3521                           	global	_Read_Relay
  3522                           
  3523 ;; *************** function _Read_Relay *****************
  3524 ;; Defined at:
  3525 ;;		line 161 in file "RelayControl.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  Relay           1    wreg     unsigned char 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  Relay           1    2[BANK0 ] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      unsigned char 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3539 ;;      Params:         0       0       0       0
  3540 ;;      Locals:         0       1       0       0
  3541 ;;      Temps:          0       2       0       0
  3542 ;;      Totals:         0       3       0       0
  3543 ;;Total ram usage:        3 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    3
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_Handle_Telegram
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3553                           	file	"RelayControl.c"
  3554                           	line	161
  3555                           global __ptext11
  3556                           __ptext11:	;psect for function _Read_Relay
  3557  0749                     psect	text11
  3558                           	file	"RelayControl.c"
  3559                           	line	161
  3560                           	global	__size_of_Read_Relay
  3561                           	__size_of_Read_Relay	equ	__end_of_Read_Relay-_Read_Relay
  3562  0038                     	
  3563                           _Read_Relay:	
  3564  0749                     ;incstack = 0
  3565                           	opt	stack 3
  3566                           ; Regs used in _Read_Relay: [wreg-fsr0h+status,2+status,0]
  3567                           ;Read_Relay@Relay stored from wreg
  3568                           	bcf	status, 5	;RP0=0, select bank0
  3569  0749  1283               	bcf	status, 6	;RP1=0, select bank0
  3570  074A  1303               	movwf	(Read_Relay@Relay)
  3571  074B  00A2               	line	163
  3572                           	
  3573                           l2044:	
  3574  074C                     ;RelayControl.c: 161: unsigned char Read_Relay (unsigned char Relay);RelayControl.c: 162
                                 :     {;RelayControl.c: 163:         switch (Relay)
  3575                           	goto	l2072
  3576  074C  2F6A               	line	165
  3577                           ;RelayControl.c: 164:         {;RelayControl.c: 165:             case Relay1:
  3578                           	
  3579                           l410:	
  3580  074D                     	line	166
  3581                           	
  3582                           l2046:	
  3583  074D                     ;RelayControl.c: 166:                 return PORTAbits.RA0;
  3584                           	movf	(5),w	;volatile
  3585  074D  0805               	andlw	(1<<1)-1
  3586  074E  3901               	goto	l411
  3587  074F  2F80               	
  3588                           l2048:	
  3589  0750                     	goto	l411
  3590  0750  2F80               	line	168
  3591                           ;RelayControl.c: 168:             case Relay2:
  3592                           	
  3593                           l412:	
  3594  0751                     	line	169
  3595                           	
  3596                           l2050:	
  3597  0751                     ;RelayControl.c: 169:                 return PORTAbits.RA1;
  3598                           	rrf	(5),w	;volatile
  3599  0751  0C05               	andlw	(1<<1)-1
  3600  0752  3901               	goto	l411
  3601  0753  2F80               	
  3602                           l2052:	
  3603  0754                     	goto	l411
  3604  0754  2F80               	line	171
  3605                           ;RelayControl.c: 171:             case Relay3:
  3606                           	
  3607                           l413:	
  3608  0755                     	line	172
  3609                           	
  3610                           l2054:	
  3611  0755                     ;RelayControl.c: 172:                 return PORTAbits.RA2;
  3612                           	rrf	(5),w	;volatile
  3613  0755  0C05               	movwf	(??_Read_Relay+0)+0
  3614  0756  00A0               	rrf	(??_Read_Relay+0)+0,w
  3615  0757  0C20               	andlw	(1<<1)-1
  3616  0758  3901               	goto	l411
  3617  0759  2F80               	
  3618                           l2056:	
  3619  075A                     	goto	l411
  3620  075A  2F80               	line	174
  3621                           ;RelayControl.c: 174:             case Relay4:
  3622                           	
  3623                           l414:	
  3624  075B                     	line	175
  3625                           	
  3626                           l2058:	
  3627  075B                     ;RelayControl.c: 175:                 return PORTCbits.RC0;
  3628                           	movf	(7),w	;volatile
  3629  075B  0807               	andlw	(1<<1)-1
  3630  075C  3901               	goto	l411
  3631  075D  2F80               	
  3632                           l2060:	
  3633  075E                     	goto	l411
  3634  075E  2F80               	line	177
  3635                           ;RelayControl.c: 177:             case Relay5:
  3636                           	
  3637                           l415:	
  3638  075F                     	line	178
  3639                           	
  3640                           l2062:	
  3641  075F                     ;RelayControl.c: 178:                 return PORTCbits.RC1;
  3642                           	rrf	(7),w	;volatile
  3643  075F  0C07               	andlw	(1<<1)-1
  3644  0760  3901               	goto	l411
  3645  0761  2F80               	
  3646                           l2064:	
  3647  0762                     	goto	l411
  3648  0762  2F80               	line	180
  3649                           ;RelayControl.c: 180:             case Relay6:
  3650                           	
  3651                           l416:	
  3652  0763                     	line	181
  3653                           	
  3654                           l2066:	
  3655  0763                     ;RelayControl.c: 181:                 return PORTCbits.RC2;
  3656                           	rrf	(7),w	;volatile
  3657  0763  0C07               	movwf	(??_Read_Relay+0)+0
  3658  0764  00A0               	rrf	(??_Read_Relay+0)+0,w
  3659  0765  0C20               	andlw	(1<<1)-1
  3660  0766  3901               	goto	l411
  3661  0767  2F80               	
  3662                           l2068:	
  3663  0768                     	goto	l411
  3664  0768  2F80               	line	182
  3665                           	
  3666                           l2070:	
  3667  0769                     ;RelayControl.c: 182:         }
  3668                           	goto	l2074
  3669  0769  2F7E               	
  3670                           l409:	
  3671  076A                     	
  3672                           l2072:	
  3673  076A                     	movf	(Read_Relay@Relay),w
  3674  076A  0822               	movwf	(??_Read_Relay+0)+0
  3675  076B  00A0               	clrf	(??_Read_Relay+0)+0+1
  3676  076C  01A1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3677                           ; Switch size 1, requested type "space"
  3678                           ; Number of cases is 1, Range of values is 0 to 0
  3679                           ; switch strategies available:
  3680                           ; Name         Instructions Cycles
  3681                           ; simple_byte            4     3 (average)
  3682                           ; direct_byte            9     7 (fixed)
  3683                           ; jumptable            260     6 (fixed)
  3684                           ;	Chosen strategy is simple_byte
  3685                           
  3686                           	movf 1+(??_Read_Relay+0)+0,w
  3687  076D  0821               	opt asmopt_push
  3688                           	opt asmopt_off
  3689                           	xorlw	0^0	; case 0
  3690  076E  3A00               	skipnz
  3691  076F  1903               	goto	l2886
  3692  0770  2F72               	goto	l2074
  3693  0771  2F7E               	opt asmopt_pop
  3694                           	
  3695                           l2886:	
  3696  0772                     ; Switch size 1, requested type "space"
  3697                           ; Number of cases is 6, Range of values is 0 to 5
  3698                           ; switch strategies available:
  3699                           ; Name         Instructions Cycles
  3700                           ; direct_byte           19     7 (fixed)
  3701                           ; simple_byte           19    10 (average)
  3702                           ; jumptable            260     6 (fixed)
  3703                           ;	Chosen strategy is direct_byte
  3704                           
  3705                           	movf 0+(??_Read_Relay+0)+0,w
  3706  0772  0820               	movwf fsr
  3707  0773  0084               	movlw	6
  3708  0774  3006               	subwf	fsr,w
  3709  0775  0204               skipnc
  3710  0776  1803               goto l2074
  3711  0777  2F7E               movlw high(S2888)
  3712  0778  3008               movwf pclath
  3713  0779  008A               	clrc
  3714  077A  1003               	rlf fsr,w
  3715  077B  0D04               	addlw low(S2888)
  3716  077C  3E00               	movwf pc
  3717  077D  0082               psect	swtext1,local,class=CONST,delta=2
  3718                           global __pswtext1
  3719                           __pswtext1:
  3720  0800                     S2888:
  3721  0800                     	ljmp	l2046
  3722  0800  118A  2F4D         	ljmp	l2050
  3723  0802  118A  2F51         	ljmp	l2054
  3724  0804  118A  2F55         	ljmp	l2058
  3725  0806  118A  2F5B         	ljmp	l2062
  3726  0808  118A  2F5F         	ljmp	l2066
  3727  080A  118A  2F63         psect	text11
  3728                           
  3729                           	
  3730                           l417:	
  3731  077E                     	line	183
  3732                           	
  3733                           l2074:	
  3734  077E                     ;RelayControl.c: 183:         return(255);
  3735                           	movlw	low(0FFh)
  3736  077E  30FF               	goto	l411
  3737  077F  2F80               	
  3738                           l2076:	
  3739  0780                     	line	184
  3740                           	
  3741                           l411:	
  3742  0780                     	return
  3743  0780  0008               	opt stack 0
  3744                           GLOBAL	__end_of_Read_Relay
  3745                           	__end_of_Read_Relay:
  3746  0781                     	signat	_Read_Relay,4217
  3747                           	global	_CheckStopTime
  3748                           
  3749 ;; *************** function _CheckStopTime *****************
  3750 ;; Defined at:
  3751 ;;		line 150 in file "Main.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3765 ;;      Params:         0       0       0       0
  3766 ;;      Locals:         0       0       0       0
  3767 ;;      Temps:          0       2       0       0
  3768 ;;      Totals:         0       2       0       0
  3769 ;;Total ram usage:        2 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:    4
  3772 ;; This function calls:
  3773 ;;		_Set_Relay
  3774 ;; This function is called by:
  3775 ;;		_main
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3779                           	file	"Main.c"
  3780                           	line	150
  3781                           global __ptext12
  3782                           __ptext12:	;psect for function _CheckStopTime
  3783  022F                     psect	text12
  3784                           	file	"Main.c"
  3785                           	line	150
  3786                           	global	__size_of_CheckStopTime
  3787                           	__size_of_CheckStopTime	equ	__end_of_CheckStopTime-_CheckStopTime
  3788  017B                     	
  3789                           _CheckStopTime:	
  3790  022F                     ;incstack = 0
  3791                           	opt	stack 3
  3792                           ; Regs used in _CheckStopTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3793                           	line	152
  3794                           	
  3795                           l2254:	
  3796  022F                     ;Main.c: 152:     if (StopRelay1OnTime == 1 && Relay1StopTime[0] == Counter_10sec && Rel
                                 ay1StopTime[1] == Counter_1sec && Relay1StopTime[2] == Counter_100ms)
  3797                           	bcf	status, 5	;RP0=0, select bank0
  3798  022F  1283               	bcf	status, 6	;RP1=0, select bank0
  3799  0230  1303               		decf	((_StopRelay1OnTime)),w
  3800  0231  036B               	btfss	status,2
  3801  0232  1D03               	goto	u1201
  3802  0233  2A35               	goto	u1200
  3803  0234  2A36               u1201:
  3804  0235                     	goto	l2266
  3805  0235  2A64               u1200:
  3806  0236                     	
  3807                           l2256:	
  3808  0236                     	movf	(_Relay1StopTime),w
  3809  0236  086C               	movwf	(??_CheckStopTime+0)+0
  3810  0237  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3811  0238  01A5               	movf	(_Counter_10sec+1),w
  3812  0239  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  3813  023A  0625               	skipz
  3814  023B  1D03               	goto	u1215
  3815  023C  2A3F               	movf	(_Counter_10sec),w
  3816  023D  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  3817  023E  0624               u1215:
  3818  023F                     
  3819                           	skipz
  3820  023F  1D03               	goto	u1211
  3821  0240  2A42               	goto	u1210
  3822  0241  2A43               u1211:
  3823  0242                     	goto	l2266
  3824  0242  2A64               u1210:
  3825  0243                     	
  3826                           l2258:	
  3827  0243                     	movf	0+(_Relay1StopTime)+01h,w
  3828  0243  086D               	movwf	(??_CheckStopTime+0)+0
  3829  0244  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3830  0245  01A5               	movf	(_Counter_1sec+1),w
  3831  0246  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  3832  0247  0625               	skipz
  3833  0248  1D03               	goto	u1225
  3834  0249  2A4C               	movf	(_Counter_1sec),w
  3835  024A  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  3836  024B  0624               u1225:
  3837  024C                     
  3838                           	skipz
  3839  024C  1D03               	goto	u1221
  3840  024D  2A4F               	goto	u1220
  3841  024E  2A50               u1221:
  3842  024F                     	goto	l2266
  3843  024F  2A64               u1220:
  3844  0250                     	
  3845                           l2260:	
  3846  0250                     	movf	0+(_Relay1StopTime)+02h,w
  3847  0250  086E               	movwf	(??_CheckStopTime+0)+0
  3848  0251  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3849  0252  01A5               	movf	(_Counter_100ms+1),w
  3850  0253  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  3851  0254  0625               	skipz
  3852  0255  1D03               	goto	u1235
  3853  0256  2A59               	movf	(_Counter_100ms),w
  3854  0257  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  3855  0258  0624               u1235:
  3856  0259                     
  3857                           	skipz
  3858  0259  1D03               	goto	u1231
  3859  025A  2A5C               	goto	u1230
  3860  025B  2A5D               u1231:
  3861  025C                     	goto	l2266
  3862  025C  2A64               u1230:
  3863  025D                     	line	154
  3864                           	
  3865                           l2262:	
  3866  025D                     ;Main.c: 153:     {;Main.c: 154:         StopRelay1OnTime = 0;
  3867                           	clrf	(_StopRelay1OnTime)
  3868  025D  01EB               	line	155
  3869                           	
  3870                           l2264:	
  3871  025E                     ;Main.c: 155:         Set_Relay(Relay1, Off);
  3872                           	clrf	(Set_Relay@State)
  3873  025E  01A0               	movlw	low(0)
  3874  025F  3000               	fcall	_Set_Relay
  3875  0260  118A  255F  118A   	goto	l2266
  3876  0263  2A64               	line	156
  3877                           ;Main.c: 156:     }
  3878                           	
  3879                           l171:	
  3880  0264                     	line	158
  3881                           	
  3882                           l2266:	
  3883  0264                     ;Main.c: 158:     if (StopRelay2OnTime == 1 && Relay2StopTime[0] == Counter_10sec && Rel
                                 ay2StopTime[1] == Counter_1sec && Relay2StopTime[2] == Counter_100ms)
  3884                           	bcf	status, 5	;RP0=0, select bank0
  3885  0264  1283               	bcf	status, 6	;RP1=0, select bank0
  3886  0265  1303               		decf	((_StopRelay2OnTime)),w
  3887  0266  036A               	btfss	status,2
  3888  0267  1D03               	goto	u1241
  3889  0268  2A6A               	goto	u1240
  3890  0269  2A6B               u1241:
  3891  026A                     	goto	l2278
  3892  026A  2AA5               u1240:
  3893  026B                     	
  3894                           l2268:	
  3895  026B                     	bsf	status, 5	;RP0=1, select bank1
  3896  026B  1683               	bcf	status, 6	;RP1=0, select bank1
  3897  026C  1303               	movf	(_Relay2StopTime)^080h,w
  3898  026D  086B               	bcf	status, 5	;RP0=0, select bank0
  3899  026E  1283               	bcf	status, 6	;RP1=0, select bank0
  3900  026F  1303               	movwf	(??_CheckStopTime+0)+0
  3901  0270  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3902  0271  01A5               	movf	(_Counter_10sec+1),w
  3903  0272  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  3904  0273  0625               	skipz
  3905  0274  1D03               	goto	u1255
  3906  0275  2A78               	movf	(_Counter_10sec),w
  3907  0276  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  3908  0277  0624               u1255:
  3909  0278                     
  3910                           	skipz
  3911  0278  1D03               	goto	u1251
  3912  0279  2A7B               	goto	u1250
  3913  027A  2A7C               u1251:
  3914  027B                     	goto	l2278
  3915  027B  2AA5               u1250:
  3916  027C                     	
  3917                           l2270:	
  3918  027C                     	bsf	status, 5	;RP0=1, select bank1
  3919  027C  1683               	bcf	status, 6	;RP1=0, select bank1
  3920  027D  1303               	movf	0+(_Relay2StopTime)^080h+01h,w
  3921  027E  086C               	bcf	status, 5	;RP0=0, select bank0
  3922  027F  1283               	bcf	status, 6	;RP1=0, select bank0
  3923  0280  1303               	movwf	(??_CheckStopTime+0)+0
  3924  0281  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3925  0282  01A5               	movf	(_Counter_1sec+1),w
  3926  0283  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  3927  0284  0625               	skipz
  3928  0285  1D03               	goto	u1265
  3929  0286  2A89               	movf	(_Counter_1sec),w
  3930  0287  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  3931  0288  0624               u1265:
  3932  0289                     
  3933                           	skipz
  3934  0289  1D03               	goto	u1261
  3935  028A  2A8C               	goto	u1260
  3936  028B  2A8D               u1261:
  3937  028C                     	goto	l2278
  3938  028C  2AA5               u1260:
  3939  028D                     	
  3940                           l2272:	
  3941  028D                     	bsf	status, 5	;RP0=1, select bank1
  3942  028D  1683               	bcf	status, 6	;RP1=0, select bank1
  3943  028E  1303               	movf	0+(_Relay2StopTime)^080h+02h,w
  3944  028F  086D               	bcf	status, 5	;RP0=0, select bank0
  3945  0290  1283               	bcf	status, 6	;RP1=0, select bank0
  3946  0291  1303               	movwf	(??_CheckStopTime+0)+0
  3947  0292  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3948  0293  01A5               	movf	(_Counter_100ms+1),w
  3949  0294  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  3950  0295  0625               	skipz
  3951  0296  1D03               	goto	u1275
  3952  0297  2A9A               	movf	(_Counter_100ms),w
  3953  0298  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  3954  0299  0624               u1275:
  3955  029A                     
  3956                           	skipz
  3957  029A  1D03               	goto	u1271
  3958  029B  2A9D               	goto	u1270
  3959  029C  2A9E               u1271:
  3960  029D                     	goto	l2278
  3961  029D  2AA5               u1270:
  3962  029E                     	line	160
  3963                           	
  3964                           l2274:	
  3965  029E                     ;Main.c: 159:     {;Main.c: 160:         StopRelay2OnTime = 0;
  3966                           	clrf	(_StopRelay2OnTime)
  3967  029E  01EA               	line	161
  3968                           	
  3969                           l2276:	
  3970  029F                     ;Main.c: 161:         Set_Relay(Relay2, Off);
  3971                           	clrf	(Set_Relay@State)
  3972  029F  01A0               	movlw	low(01h)
  3973  02A0  3001               	fcall	_Set_Relay
  3974  02A1  118A  255F  118A   	goto	l2278
  3975  02A4  2AA5               	line	162
  3976                           ;Main.c: 162:     }
  3977                           	
  3978                           l172:	
  3979  02A5                     	line	164
  3980                           	
  3981                           l2278:	
  3982  02A5                     ;Main.c: 164:     if (StopRelay3OnTime == 1 && Relay3StopTime[0] == Counter_10sec && Rel
                                 ay3StopTime[1] == Counter_1sec && Relay3StopTime[2] == Counter_100ms)
  3983                           	bcf	status, 5	;RP0=0, select bank0
  3984  02A5  1283               	bcf	status, 6	;RP1=0, select bank0
  3985  02A6  1303               		decf	((_StopRelay3OnTime)),w
  3986  02A7  0369               	btfss	status,2
  3987  02A8  1D03               	goto	u1281
  3988  02A9  2AAB               	goto	u1280
  3989  02AA  2AAC               u1281:
  3990  02AB                     	goto	l2290
  3991  02AB  2AE6               u1280:
  3992  02AC                     	
  3993                           l2280:	
  3994  02AC                     	bsf	status, 5	;RP0=1, select bank1
  3995  02AC  1683               	bcf	status, 6	;RP1=0, select bank1
  3996  02AD  1303               	movf	(_Relay3StopTime)^080h,w
  3997  02AE  0868               	bcf	status, 5	;RP0=0, select bank0
  3998  02AF  1283               	bcf	status, 6	;RP1=0, select bank0
  3999  02B0  1303               	movwf	(??_CheckStopTime+0)+0
  4000  02B1  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4001  02B2  01A5               	movf	(_Counter_10sec+1),w
  4002  02B3  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4003  02B4  0625               	skipz
  4004  02B5  1D03               	goto	u1295
  4005  02B6  2AB9               	movf	(_Counter_10sec),w
  4006  02B7  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4007  02B8  0624               u1295:
  4008  02B9                     
  4009                           	skipz
  4010  02B9  1D03               	goto	u1291
  4011  02BA  2ABC               	goto	u1290
  4012  02BB  2ABD               u1291:
  4013  02BC                     	goto	l2290
  4014  02BC  2AE6               u1290:
  4015  02BD                     	
  4016                           l2282:	
  4017  02BD                     	bsf	status, 5	;RP0=1, select bank1
  4018  02BD  1683               	bcf	status, 6	;RP1=0, select bank1
  4019  02BE  1303               	movf	0+(_Relay3StopTime)^080h+01h,w
  4020  02BF  0869               	bcf	status, 5	;RP0=0, select bank0
  4021  02C0  1283               	bcf	status, 6	;RP1=0, select bank0
  4022  02C1  1303               	movwf	(??_CheckStopTime+0)+0
  4023  02C2  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4024  02C3  01A5               	movf	(_Counter_1sec+1),w
  4025  02C4  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4026  02C5  0625               	skipz
  4027  02C6  1D03               	goto	u1305
  4028  02C7  2ACA               	movf	(_Counter_1sec),w
  4029  02C8  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4030  02C9  0624               u1305:
  4031  02CA                     
  4032                           	skipz
  4033  02CA  1D03               	goto	u1301
  4034  02CB  2ACD               	goto	u1300
  4035  02CC  2ACE               u1301:
  4036  02CD                     	goto	l2290
  4037  02CD  2AE6               u1300:
  4038  02CE                     	
  4039                           l2284:	
  4040  02CE                     	bsf	status, 5	;RP0=1, select bank1
  4041  02CE  1683               	bcf	status, 6	;RP1=0, select bank1
  4042  02CF  1303               	movf	0+(_Relay3StopTime)^080h+02h,w
  4043  02D0  086A               	bcf	status, 5	;RP0=0, select bank0
  4044  02D1  1283               	bcf	status, 6	;RP1=0, select bank0
  4045  02D2  1303               	movwf	(??_CheckStopTime+0)+0
  4046  02D3  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4047  02D4  01A5               	movf	(_Counter_100ms+1),w
  4048  02D5  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4049  02D6  0625               	skipz
  4050  02D7  1D03               	goto	u1315
  4051  02D8  2ADB               	movf	(_Counter_100ms),w
  4052  02D9  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4053  02DA  0624               u1315:
  4054  02DB                     
  4055                           	skipz
  4056  02DB  1D03               	goto	u1311
  4057  02DC  2ADE               	goto	u1310
  4058  02DD  2ADF               u1311:
  4059  02DE                     	goto	l2290
  4060  02DE  2AE6               u1310:
  4061  02DF                     	line	166
  4062                           	
  4063                           l2286:	
  4064  02DF                     ;Main.c: 165:     {;Main.c: 166:         StopRelay3OnTime = 0;
  4065                           	clrf	(_StopRelay3OnTime)
  4066  02DF  01E9               	line	167
  4067                           	
  4068                           l2288:	
  4069  02E0                     ;Main.c: 167:         Set_Relay(Relay3, Off);
  4070                           	clrf	(Set_Relay@State)
  4071  02E0  01A0               	movlw	low(02h)
  4072  02E1  3002               	fcall	_Set_Relay
  4073  02E2  118A  255F  118A   	goto	l2290
  4074  02E5  2AE6               	line	168
  4075                           ;Main.c: 168:     }
  4076                           	
  4077                           l173:	
  4078  02E6                     	line	170
  4079                           	
  4080                           l2290:	
  4081  02E6                     ;Main.c: 170:     if (StopRelay4OnTime == 1 && Relay4StopTime[0] == Counter_10sec && Rel
                                 ay4StopTime[1] == Counter_1sec && Relay4StopTime[2] == Counter_100ms)
  4082                           	bcf	status, 5	;RP0=0, select bank0
  4083  02E6  1283               	bcf	status, 6	;RP1=0, select bank0
  4084  02E7  1303               		decf	((_StopRelay4OnTime)),w
  4085  02E8  0368               	btfss	status,2
  4086  02E9  1D03               	goto	u1321
  4087  02EA  2AEC               	goto	u1320
  4088  02EB  2AED               u1321:
  4089  02EC                     	goto	l2302
  4090  02EC  2B27               u1320:
  4091  02ED                     	
  4092                           l2292:	
  4093  02ED                     	bsf	status, 5	;RP0=1, select bank1
  4094  02ED  1683               	bcf	status, 6	;RP1=0, select bank1
  4095  02EE  1303               	movf	(_Relay4StopTime)^080h,w
  4096  02EF  0865               	bcf	status, 5	;RP0=0, select bank0
  4097  02F0  1283               	bcf	status, 6	;RP1=0, select bank0
  4098  02F1  1303               	movwf	(??_CheckStopTime+0)+0
  4099  02F2  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4100  02F3  01A5               	movf	(_Counter_10sec+1),w
  4101  02F4  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4102  02F5  0625               	skipz
  4103  02F6  1D03               	goto	u1335
  4104  02F7  2AFA               	movf	(_Counter_10sec),w
  4105  02F8  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4106  02F9  0624               u1335:
  4107  02FA                     
  4108                           	skipz
  4109  02FA  1D03               	goto	u1331
  4110  02FB  2AFD               	goto	u1330
  4111  02FC  2AFE               u1331:
  4112  02FD                     	goto	l2302
  4113  02FD  2B27               u1330:
  4114  02FE                     	
  4115                           l2294:	
  4116  02FE                     	bsf	status, 5	;RP0=1, select bank1
  4117  02FE  1683               	bcf	status, 6	;RP1=0, select bank1
  4118  02FF  1303               	movf	0+(_Relay4StopTime)^080h+01h,w
  4119  0300  0866               	bcf	status, 5	;RP0=0, select bank0
  4120  0301  1283               	bcf	status, 6	;RP1=0, select bank0
  4121  0302  1303               	movwf	(??_CheckStopTime+0)+0
  4122  0303  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4123  0304  01A5               	movf	(_Counter_1sec+1),w
  4124  0305  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4125  0306  0625               	skipz
  4126  0307  1D03               	goto	u1345
  4127  0308  2B0B               	movf	(_Counter_1sec),w
  4128  0309  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4129  030A  0624               u1345:
  4130  030B                     
  4131                           	skipz
  4132  030B  1D03               	goto	u1341
  4133  030C  2B0E               	goto	u1340
  4134  030D  2B0F               u1341:
  4135  030E                     	goto	l2302
  4136  030E  2B27               u1340:
  4137  030F                     	
  4138                           l2296:	
  4139  030F                     	bsf	status, 5	;RP0=1, select bank1
  4140  030F  1683               	bcf	status, 6	;RP1=0, select bank1
  4141  0310  1303               	movf	0+(_Relay4StopTime)^080h+02h,w
  4142  0311  0867               	bcf	status, 5	;RP0=0, select bank0
  4143  0312  1283               	bcf	status, 6	;RP1=0, select bank0
  4144  0313  1303               	movwf	(??_CheckStopTime+0)+0
  4145  0314  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4146  0315  01A5               	movf	(_Counter_100ms+1),w
  4147  0316  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4148  0317  0625               	skipz
  4149  0318  1D03               	goto	u1355
  4150  0319  2B1C               	movf	(_Counter_100ms),w
  4151  031A  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4152  031B  0624               u1355:
  4153  031C                     
  4154                           	skipz
  4155  031C  1D03               	goto	u1351
  4156  031D  2B1F               	goto	u1350
  4157  031E  2B20               u1351:
  4158  031F                     	goto	l2302
  4159  031F  2B27               u1350:
  4160  0320                     	line	172
  4161                           	
  4162                           l2298:	
  4163  0320                     ;Main.c: 171:     {;Main.c: 172:         StopRelay4OnTime = 0;
  4164                           	clrf	(_StopRelay4OnTime)
  4165  0320  01E8               	line	173
  4166                           	
  4167                           l2300:	
  4168  0321                     ;Main.c: 173:         Set_Relay(Relay4, Off);
  4169                           	clrf	(Set_Relay@State)
  4170  0321  01A0               	movlw	low(03h)
  4171  0322  3003               	fcall	_Set_Relay
  4172  0323  118A  255F  118A   	goto	l2302
  4173  0326  2B27               	line	174
  4174                           ;Main.c: 174:     }
  4175                           	
  4176                           l174:	
  4177  0327                     	line	176
  4178                           	
  4179                           l2302:	
  4180  0327                     ;Main.c: 176:     if (StopRelay5OnTime == 1 && Relay5StopTime[0] == Counter_10sec && Rel
                                 ay5StopTime[1] == Counter_1sec && Relay5StopTime[2] == Counter_100ms)
  4181                           	bcf	status, 5	;RP0=0, select bank0
  4182  0327  1283               	bcf	status, 6	;RP1=0, select bank0
  4183  0328  1303               		decf	((_StopRelay5OnTime)),w
  4184  0329  0367               	btfss	status,2
  4185  032A  1D03               	goto	u1361
  4186  032B  2B2D               	goto	u1360
  4187  032C  2B2E               u1361:
  4188  032D                     	goto	l2314
  4189  032D  2B68               u1360:
  4190  032E                     	
  4191                           l2304:	
  4192  032E                     	bsf	status, 5	;RP0=1, select bank1
  4193  032E  1683               	bcf	status, 6	;RP1=0, select bank1
  4194  032F  1303               	movf	(_Relay5StopTime)^080h,w
  4195  0330  0862               	bcf	status, 5	;RP0=0, select bank0
  4196  0331  1283               	bcf	status, 6	;RP1=0, select bank0
  4197  0332  1303               	movwf	(??_CheckStopTime+0)+0
  4198  0333  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4199  0334  01A5               	movf	(_Counter_10sec+1),w
  4200  0335  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4201  0336  0625               	skipz
  4202  0337  1D03               	goto	u1375
  4203  0338  2B3B               	movf	(_Counter_10sec),w
  4204  0339  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4205  033A  0624               u1375:
  4206  033B                     
  4207                           	skipz
  4208  033B  1D03               	goto	u1371
  4209  033C  2B3E               	goto	u1370
  4210  033D  2B3F               u1371:
  4211  033E                     	goto	l2314
  4212  033E  2B68               u1370:
  4213  033F                     	
  4214                           l2306:	
  4215  033F                     	bsf	status, 5	;RP0=1, select bank1
  4216  033F  1683               	bcf	status, 6	;RP1=0, select bank1
  4217  0340  1303               	movf	0+(_Relay5StopTime)^080h+01h,w
  4218  0341  0863               	bcf	status, 5	;RP0=0, select bank0
  4219  0342  1283               	bcf	status, 6	;RP1=0, select bank0
  4220  0343  1303               	movwf	(??_CheckStopTime+0)+0
  4221  0344  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4222  0345  01A5               	movf	(_Counter_1sec+1),w
  4223  0346  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4224  0347  0625               	skipz
  4225  0348  1D03               	goto	u1385
  4226  0349  2B4C               	movf	(_Counter_1sec),w
  4227  034A  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4228  034B  0624               u1385:
  4229  034C                     
  4230                           	skipz
  4231  034C  1D03               	goto	u1381
  4232  034D  2B4F               	goto	u1380
  4233  034E  2B50               u1381:
  4234  034F                     	goto	l2314
  4235  034F  2B68               u1380:
  4236  0350                     	
  4237                           l2308:	
  4238  0350                     	bsf	status, 5	;RP0=1, select bank1
  4239  0350  1683               	bcf	status, 6	;RP1=0, select bank1
  4240  0351  1303               	movf	0+(_Relay5StopTime)^080h+02h,w
  4241  0352  0864               	bcf	status, 5	;RP0=0, select bank0
  4242  0353  1283               	bcf	status, 6	;RP1=0, select bank0
  4243  0354  1303               	movwf	(??_CheckStopTime+0)+0
  4244  0355  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4245  0356  01A5               	movf	(_Counter_100ms+1),w
  4246  0357  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4247  0358  0625               	skipz
  4248  0359  1D03               	goto	u1395
  4249  035A  2B5D               	movf	(_Counter_100ms),w
  4250  035B  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4251  035C  0624               u1395:
  4252  035D                     
  4253                           	skipz
  4254  035D  1D03               	goto	u1391
  4255  035E  2B60               	goto	u1390
  4256  035F  2B61               u1391:
  4257  0360                     	goto	l2314
  4258  0360  2B68               u1390:
  4259  0361                     	line	178
  4260                           	
  4261                           l2310:	
  4262  0361                     ;Main.c: 177:     {;Main.c: 178:         StopRelay5OnTime = 0;
  4263                           	clrf	(_StopRelay5OnTime)
  4264  0361  01E7               	line	179
  4265                           	
  4266                           l2312:	
  4267  0362                     ;Main.c: 179:         Set_Relay(Relay5, Off);
  4268                           	clrf	(Set_Relay@State)
  4269  0362  01A0               	movlw	low(04h)
  4270  0363  3004               	fcall	_Set_Relay
  4271  0364  118A  255F  118A   	goto	l2314
  4272  0367  2B68               	line	180
  4273                           ;Main.c: 180:     }
  4274                           	
  4275                           l175:	
  4276  0368                     	line	182
  4277                           	
  4278                           l2314:	
  4279  0368                     ;Main.c: 182:     if (StopRelay6OnTime == 1 && Relay6StopTime[0] == Counter_10sec && Rel
                                 ay6StopTime[1] == Counter_1sec && Relay6StopTime[2] == Counter_100ms)
  4280                           	bcf	status, 5	;RP0=0, select bank0
  4281  0368  1283               	bcf	status, 6	;RP1=0, select bank0
  4282  0369  1303               		decf	((_StopRelay6OnTime)),w
  4283  036A  0366               	btfss	status,2
  4284  036B  1D03               	goto	u1401
  4285  036C  2B6E               	goto	u1400
  4286  036D  2B6F               u1401:
  4287  036E                     	goto	l177
  4288  036E  2BA9               u1400:
  4289  036F                     	
  4290                           l2316:	
  4291  036F                     	bsf	status, 5	;RP0=1, select bank1
  4292  036F  1683               	bcf	status, 6	;RP1=0, select bank1
  4293  0370  1303               	movf	(_Relay6StopTime)^080h,w
  4294  0371  085F               	bcf	status, 5	;RP0=0, select bank0
  4295  0372  1283               	bcf	status, 6	;RP1=0, select bank0
  4296  0373  1303               	movwf	(??_CheckStopTime+0)+0
  4297  0374  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4298  0375  01A5               	movf	(_Counter_10sec+1),w
  4299  0376  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4300  0377  0625               	skipz
  4301  0378  1D03               	goto	u1415
  4302  0379  2B7C               	movf	(_Counter_10sec),w
  4303  037A  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4304  037B  0624               u1415:
  4305  037C                     
  4306                           	skipz
  4307  037C  1D03               	goto	u1411
  4308  037D  2B7F               	goto	u1410
  4309  037E  2B80               u1411:
  4310  037F                     	goto	l177
  4311  037F  2BA9               u1410:
  4312  0380                     	
  4313                           l2318:	
  4314  0380                     	bsf	status, 5	;RP0=1, select bank1
  4315  0380  1683               	bcf	status, 6	;RP1=0, select bank1
  4316  0381  1303               	movf	0+(_Relay6StopTime)^080h+01h,w
  4317  0382  0860               	bcf	status, 5	;RP0=0, select bank0
  4318  0383  1283               	bcf	status, 6	;RP1=0, select bank0
  4319  0384  1303               	movwf	(??_CheckStopTime+0)+0
  4320  0385  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4321  0386  01A5               	movf	(_Counter_1sec+1),w
  4322  0387  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4323  0388  0625               	skipz
  4324  0389  1D03               	goto	u1425
  4325  038A  2B8D               	movf	(_Counter_1sec),w
  4326  038B  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4327  038C  0624               u1425:
  4328  038D                     
  4329                           	skipz
  4330  038D  1D03               	goto	u1421
  4331  038E  2B90               	goto	u1420
  4332  038F  2B91               u1421:
  4333  0390                     	goto	l177
  4334  0390  2BA9               u1420:
  4335  0391                     	
  4336                           l2320:	
  4337  0391                     	bsf	status, 5	;RP0=1, select bank1
  4338  0391  1683               	bcf	status, 6	;RP1=0, select bank1
  4339  0392  1303               	movf	0+(_Relay6StopTime)^080h+02h,w
  4340  0393  0861               	bcf	status, 5	;RP0=0, select bank0
  4341  0394  1283               	bcf	status, 6	;RP1=0, select bank0
  4342  0395  1303               	movwf	(??_CheckStopTime+0)+0
  4343  0396  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4344  0397  01A5               	movf	(_Counter_100ms+1),w
  4345  0398  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4346  0399  0625               	skipz
  4347  039A  1D03               	goto	u1435
  4348  039B  2B9E               	movf	(_Counter_100ms),w
  4349  039C  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4350  039D  0624               u1435:
  4351  039E                     
  4352                           	skipz
  4353  039E  1D03               	goto	u1431
  4354  039F  2BA1               	goto	u1430
  4355  03A0  2BA2               u1431:
  4356  03A1                     	goto	l177
  4357  03A1  2BA9               u1430:
  4358  03A2                     	line	184
  4359                           	
  4360                           l2322:	
  4361  03A2                     ;Main.c: 183:     {;Main.c: 184:         StopRelay6OnTime = 0;
  4362                           	clrf	(_StopRelay6OnTime)
  4363  03A2  01E6               	line	185
  4364                           	
  4365                           l2324:	
  4366  03A3                     ;Main.c: 185:         Set_Relay(Relay6, Off);
  4367                           	clrf	(Set_Relay@State)
  4368  03A3  01A0               	movlw	low(05h)
  4369  03A4  3005               	fcall	_Set_Relay
  4370  03A5  118A  255F  118A   	goto	l177
  4371  03A8  2BA9               	line	186
  4372                           ;Main.c: 186:     }
  4373                           	
  4374                           l176:	
  4375  03A9                     	line	187
  4376                           	
  4377                           l177:	
  4378  03A9                     	return
  4379  03A9  0008               	opt stack 0
  4380                           GLOBAL	__end_of_CheckStopTime
  4381                           	__end_of_CheckStopTime:
  4382  03AA                     	signat	_CheckStopTime,89
  4383                           	global	_Set_Relay
  4384                           
  4385 ;; *************** function _Set_Relay *****************
  4386 ;; Defined at:
  4387 ;;		line 64 in file "RelayControl.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  Relay           1    wreg     unsigned char 
  4390 ;;  State           1    0[BANK0 ] unsigned char 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  Relay           1    3[BANK0 ] unsigned char 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  1    wreg      void 
  4395 ;; Registers used:
  4396 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4402 ;;      Params:         0       1       0       0
  4403 ;;      Locals:         0       1       0       0
  4404 ;;      Temps:          0       2       0       0
  4405 ;;      Totals:         0       4       0       0
  4406 ;;Total ram usage:        4 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    3
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_CheckStopTime
  4413 ;;		_Handle_Telegram
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4417                           	file	"RelayControl.c"
  4418                           	line	64
  4419                           global __ptext13
  4420                           __ptext13:	;psect for function _Set_Relay
  4421  055F                     psect	text13
  4422                           	file	"RelayControl.c"
  4423                           	line	64
  4424                           	global	__size_of_Set_Relay
  4425                           	__size_of_Set_Relay	equ	__end_of_Set_Relay-_Set_Relay
  4426  0080                     	
  4427                           _Set_Relay:	
  4428  055F                     ;incstack = 0
  4429                           	opt	stack 3
  4430                           ; Regs used in _Set_Relay: [wreg-fsr0h+status,2+status,0]
  4431                           ;Set_Relay@Relay stored from wreg
  4432                           	bcf	status, 5	;RP0=0, select bank0
  4433  055F  1283               	bcf	status, 6	;RP1=0, select bank0
  4434  0560  1303               	movwf	(Set_Relay@Relay)
  4435  0561  00A3               	line	66
  4436                           	
  4437                           l1956:	
  4438  0562                     ;RelayControl.c: 64: void Set_Relay (unsigned char Relay, unsigned char State);RelayCont
                                 rol.c: 65: {;RelayControl.c: 66:     switch (Relay)
  4439                           	goto	l2008
  4440  0562  2DCA               	line	68
  4441                           ;RelayControl.c: 67:     {;RelayControl.c: 68:         case Relay1:
  4442                           	
  4443                           l375:	
  4444  0563                     	line	69
  4445                           	
  4446                           l1958:	
  4447  0563                     ;RelayControl.c: 69:         if (State == On)
  4448                           		decf	((Set_Relay@State)),w
  4449  0563  0320               	btfss	status,2
  4450  0564  1D03               	goto	u881
  4451  0565  2D67               	goto	u880
  4452  0566  2D68               u881:
  4453  0567                     	goto	l1962
  4454  0567  2D6A               u880:
  4455  0568                     	line	71
  4456                           	
  4457                           l1960:	
  4458  0568                     ;RelayControl.c: 70:         {;RelayControl.c: 71:             PORTAbits.RA0 = 1;
  4459                           	bsf	(5),0	;volatile
  4460  0568  1405               	line	72
  4461                           ;RelayControl.c: 72:         }
  4462                           	goto	l406
  4463  0569  2DDE               	line	73
  4464                           ;RelayControl.c: 73:         else if (State == Off)
  4465                           	
  4466                           l376:	
  4467  056A                     	
  4468                           l1962:	
  4469  056A                     	movf	((Set_Relay@State)),w
  4470  056A  0820               	btfss	status,2
  4471  056B  1D03               	goto	u891
  4472  056C  2D6E               	goto	u890
  4473  056D  2D6F               u891:
  4474  056E                     	goto	l406
  4475  056E  2DDE               u890:
  4476  056F                     	line	75
  4477                           	
  4478                           l1964:	
  4479  056F                     ;RelayControl.c: 74:         {;RelayControl.c: 75:             PORTAbits.RA0 = 0;
  4480                           	bcf	(5),0	;volatile
  4481  056F  1005               	line	76
  4482                           ;RelayControl.c: 76:         }
  4483                           	goto	l406
  4484  0570  2DDE               	line	77
  4485                           ;RelayControl.c: 77:         else
  4486                           	
  4487                           l378:	
  4488  0571                     	goto	l406
  4489  0571  2DDE               	line	80
  4490                           ;RelayControl.c: 78:         {;RelayControl.c: 80:         }
  4491                           	
  4492                           l379:	
  4493  0572                     	goto	l406
  4494  0572  2DDE               	
  4495                           l377:	
  4496  0573                     	line	81
  4497                           ;RelayControl.c: 81:         break;
  4498                           	goto	l406
  4499  0573  2DDE               	line	83
  4500                           ;RelayControl.c: 83:         case Relay2:
  4501                           	
  4502                           l381:	
  4503  0574                     	line	84
  4504                           	
  4505                           l1966:	
  4506  0574                     ;RelayControl.c: 84:         if (State == On)
  4507                           		decf	((Set_Relay@State)),w
  4508  0574  0320               	btfss	status,2
  4509  0575  1D03               	goto	u901
  4510  0576  2D78               	goto	u900
  4511  0577  2D79               u901:
  4512  0578                     	goto	l1970
  4513  0578  2D7B               u900:
  4514  0579                     	line	86
  4515                           	
  4516                           l1968:	
  4517  0579                     ;RelayControl.c: 85:         {;RelayControl.c: 86:             PORTAbits.RA1 = 1;
  4518                           	bsf	(5),1	;volatile
  4519  0579  1485               	line	87
  4520                           ;RelayControl.c: 87:         }
  4521                           	goto	l406
  4522  057A  2DDE               	line	88
  4523                           ;RelayControl.c: 88:         else if (State == Off)
  4524                           	
  4525                           l382:	
  4526  057B                     	
  4527                           l1970:	
  4528  057B                     	movf	((Set_Relay@State)),w
  4529  057B  0820               	btfss	status,2
  4530  057C  1D03               	goto	u911
  4531  057D  2D7F               	goto	u910
  4532  057E  2D80               u911:
  4533  057F                     	goto	l406
  4534  057F  2DDE               u910:
  4535  0580                     	line	90
  4536                           	
  4537                           l1972:	
  4538  0580                     ;RelayControl.c: 89:         {;RelayControl.c: 90:             PORTAbits.RA1 = 0;
  4539                           	bcf	(5),1	;volatile
  4540  0580  1085               	line	91
  4541                           ;RelayControl.c: 91:         }
  4542                           	goto	l406
  4543  0581  2DDE               	line	92
  4544                           ;RelayControl.c: 92:         else
  4545                           	
  4546                           l384:	
  4547  0582                     	goto	l406
  4548  0582  2DDE               	line	95
  4549                           ;RelayControl.c: 93:         {;RelayControl.c: 95:         }
  4550                           	
  4551                           l385:	
  4552  0583                     	goto	l406
  4553  0583  2DDE               	
  4554                           l383:	
  4555  0584                     	line	96
  4556                           ;RelayControl.c: 96:         break;
  4557                           	goto	l406
  4558  0584  2DDE               	line	98
  4559                           ;RelayControl.c: 98:         case Relay3:
  4560                           	
  4561                           l386:	
  4562  0585                     	line	99
  4563                           	
  4564                           l1974:	
  4565  0585                     ;RelayControl.c: 99:         if (State == On)
  4566                           		decf	((Set_Relay@State)),w
  4567  0585  0320               	btfss	status,2
  4568  0586  1D03               	goto	u921
  4569  0587  2D89               	goto	u920
  4570  0588  2D8A               u921:
  4571  0589                     	goto	l1978
  4572  0589  2D8C               u920:
  4573  058A                     	line	101
  4574                           	
  4575                           l1976:	
  4576  058A                     ;RelayControl.c: 100:         {;RelayControl.c: 101:             PORTAbits.RA2 = 1;
  4577                           	bsf	(5),2	;volatile
  4578  058A  1505               	line	102
  4579                           ;RelayControl.c: 102:         }
  4580                           	goto	l406
  4581  058B  2DDE               	line	103
  4582                           ;RelayControl.c: 103:         else if (State == Off)
  4583                           	
  4584                           l387:	
  4585  058C                     	
  4586                           l1978:	
  4587  058C                     	movf	((Set_Relay@State)),w
  4588  058C  0820               	btfss	status,2
  4589  058D  1D03               	goto	u931
  4590  058E  2D90               	goto	u930
  4591  058F  2D91               u931:
  4592  0590                     	goto	l406
  4593  0590  2DDE               u930:
  4594  0591                     	line	105
  4595                           	
  4596                           l1980:	
  4597  0591                     ;RelayControl.c: 104:         {;RelayControl.c: 105:             PORTAbits.RA2 = 0;
  4598                           	bcf	(5),2	;volatile
  4599  0591  1105               	line	106
  4600                           ;RelayControl.c: 106:         }
  4601                           	goto	l406
  4602  0592  2DDE               	line	107
  4603                           ;RelayControl.c: 107:         else
  4604                           	
  4605                           l389:	
  4606  0593                     	goto	l406
  4607  0593  2DDE               	line	110
  4608                           ;RelayControl.c: 108:         {;RelayControl.c: 110:         }
  4609                           	
  4610                           l390:	
  4611  0594                     	goto	l406
  4612  0594  2DDE               	
  4613                           l388:	
  4614  0595                     	line	111
  4615                           ;RelayControl.c: 111:         break;
  4616                           	goto	l406
  4617  0595  2DDE               	line	113
  4618                           ;RelayControl.c: 113:         case Relay4:
  4619                           	
  4620                           l391:	
  4621  0596                     	line	114
  4622                           	
  4623                           l1982:	
  4624  0596                     ;RelayControl.c: 114:         if (State == On)
  4625                           		decf	((Set_Relay@State)),w
  4626  0596  0320               	btfss	status,2
  4627  0597  1D03               	goto	u941
  4628  0598  2D9A               	goto	u940
  4629  0599  2D9B               u941:
  4630  059A                     	goto	l1986
  4631  059A  2D9D               u940:
  4632  059B                     	line	116
  4633                           	
  4634                           l1984:	
  4635  059B                     ;RelayControl.c: 115:         {;RelayControl.c: 116:             PORTCbits.RC0 = 1;
  4636                           	bsf	(7),0	;volatile
  4637  059B  1407               	line	117
  4638                           ;RelayControl.c: 117:         }
  4639                           	goto	l406
  4640  059C  2DDE               	line	118
  4641                           ;RelayControl.c: 118:         else if (State == Off)
  4642                           	
  4643                           l392:	
  4644  059D                     	
  4645                           l1986:	
  4646  059D                     	movf	((Set_Relay@State)),w
  4647  059D  0820               	btfss	status,2
  4648  059E  1D03               	goto	u951
  4649  059F  2DA1               	goto	u950
  4650  05A0  2DA2               u951:
  4651  05A1                     	goto	l406
  4652  05A1  2DDE               u950:
  4653  05A2                     	line	120
  4654                           	
  4655                           l1988:	
  4656  05A2                     ;RelayControl.c: 119:         {;RelayControl.c: 120:             PORTCbits.RC0 = 0;
  4657                           	bcf	(7),0	;volatile
  4658  05A2  1007               	line	121
  4659                           ;RelayControl.c: 121:         }
  4660                           	goto	l406
  4661  05A3  2DDE               	line	122
  4662                           ;RelayControl.c: 122:         else
  4663                           	
  4664                           l394:	
  4665  05A4                     	goto	l406
  4666  05A4  2DDE               	line	125
  4667                           ;RelayControl.c: 123:         {;RelayControl.c: 125:         }
  4668                           	
  4669                           l395:	
  4670  05A5                     	goto	l406
  4671  05A5  2DDE               	
  4672                           l393:	
  4673  05A6                     	line	126
  4674                           ;RelayControl.c: 126:         break;
  4675                           	goto	l406
  4676  05A6  2DDE               	line	128
  4677                           ;RelayControl.c: 128:         case Relay5:
  4678                           	
  4679                           l396:	
  4680  05A7                     	line	129
  4681                           	
  4682                           l1990:	
  4683  05A7                     ;RelayControl.c: 129:         if (State == On)
  4684                           		decf	((Set_Relay@State)),w
  4685  05A7  0320               	btfss	status,2
  4686  05A8  1D03               	goto	u961
  4687  05A9  2DAB               	goto	u960
  4688  05AA  2DAC               u961:
  4689  05AB                     	goto	l1994
  4690  05AB  2DAE               u960:
  4691  05AC                     	line	131
  4692                           	
  4693                           l1992:	
  4694  05AC                     ;RelayControl.c: 130:         {;RelayControl.c: 131:             PORTCbits.RC1 = 1;
  4695                           	bsf	(7),1	;volatile
  4696  05AC  1487               	line	132
  4697                           ;RelayControl.c: 132:         }
  4698                           	goto	l406
  4699  05AD  2DDE               	line	133
  4700                           ;RelayControl.c: 133:         else if (State == Off)
  4701                           	
  4702                           l397:	
  4703  05AE                     	
  4704                           l1994:	
  4705  05AE                     	movf	((Set_Relay@State)),w
  4706  05AE  0820               	btfss	status,2
  4707  05AF  1D03               	goto	u971
  4708  05B0  2DB2               	goto	u970
  4709  05B1  2DB3               u971:
  4710  05B2                     	goto	l406
  4711  05B2  2DDE               u970:
  4712  05B3                     	line	135
  4713                           	
  4714                           l1996:	
  4715  05B3                     ;RelayControl.c: 134:         {;RelayControl.c: 135:             PORTCbits.RC1 = 0;
  4716                           	bcf	(7),1	;volatile
  4717  05B3  1087               	line	136
  4718                           ;RelayControl.c: 136:         }
  4719                           	goto	l406
  4720  05B4  2DDE               	line	137
  4721                           ;RelayControl.c: 137:         else
  4722                           	
  4723                           l399:	
  4724  05B5                     	goto	l406
  4725  05B5  2DDE               	line	140
  4726                           ;RelayControl.c: 138:         {;RelayControl.c: 140:         }
  4727                           	
  4728                           l400:	
  4729  05B6                     	goto	l406
  4730  05B6  2DDE               	
  4731                           l398:	
  4732  05B7                     	line	141
  4733                           ;RelayControl.c: 141:         break;
  4734                           	goto	l406
  4735  05B7  2DDE               	line	143
  4736                           ;RelayControl.c: 143:         case Relay6:
  4737                           	
  4738                           l401:	
  4739  05B8                     	line	144
  4740                           	
  4741                           l1998:	
  4742  05B8                     ;RelayControl.c: 144:         if (State == On)
  4743                           		decf	((Set_Relay@State)),w
  4744  05B8  0320               	btfss	status,2
  4745  05B9  1D03               	goto	u981
  4746  05BA  2DBC               	goto	u980
  4747  05BB  2DBD               u981:
  4748  05BC                     	goto	l2002
  4749  05BC  2DBF               u980:
  4750  05BD                     	line	146
  4751                           	
  4752                           l2000:	
  4753  05BD                     ;RelayControl.c: 145:         {;RelayControl.c: 146:             PORTCbits.RC2 = 1;
  4754                           	bsf	(7),2	;volatile
  4755  05BD  1507               	line	147
  4756                           ;RelayControl.c: 147:         }
  4757                           	goto	l406
  4758  05BE  2DDE               	line	148
  4759                           ;RelayControl.c: 148:         else if (State == Off)
  4760                           	
  4761                           l402:	
  4762  05BF                     	
  4763                           l2002:	
  4764  05BF                     	movf	((Set_Relay@State)),w
  4765  05BF  0820               	btfss	status,2
  4766  05C0  1D03               	goto	u991
  4767  05C1  2DC3               	goto	u990
  4768  05C2  2DC4               u991:
  4769  05C3                     	goto	l406
  4770  05C3  2DDE               u990:
  4771  05C4                     	line	150
  4772                           	
  4773                           l2004:	
  4774  05C4                     ;RelayControl.c: 149:         {;RelayControl.c: 150:             PORTCbits.RC2 = 0;
  4775                           	bcf	(7),2	;volatile
  4776  05C4  1107               	line	151
  4777                           ;RelayControl.c: 151:         }
  4778                           	goto	l406
  4779  05C5  2DDE               	line	152
  4780                           ;RelayControl.c: 152:         else
  4781                           	
  4782                           l404:	
  4783  05C6                     	goto	l406
  4784  05C6  2DDE               	line	155
  4785                           ;RelayControl.c: 153:         {;RelayControl.c: 155:         }
  4786                           	
  4787                           l405:	
  4788  05C7                     	goto	l406
  4789  05C7  2DDE               	
  4790                           l403:	
  4791  05C8                     	line	156
  4792                           ;RelayControl.c: 156:         break;
  4793                           	goto	l406
  4794  05C8  2DDE               	line	157
  4795                           	
  4796                           l2006:	
  4797  05C9                     ;RelayControl.c: 157:     }
  4798                           	goto	l406
  4799  05C9  2DDE               	
  4800                           l374:	
  4801  05CA                     	
  4802                           l2008:	
  4803  05CA                     	movf	(Set_Relay@Relay),w
  4804  05CA  0823               	movwf	(??_Set_Relay+0)+0
  4805  05CB  00A1               	clrf	(??_Set_Relay+0)+0+1
  4806  05CC  01A2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4807                           ; Switch size 1, requested type "space"
  4808                           ; Number of cases is 1, Range of values is 0 to 0
  4809                           ; switch strategies available:
  4810                           ; Name         Instructions Cycles
  4811                           ; simple_byte            4     3 (average)
  4812                           ; direct_byte            9     7 (fixed)
  4813                           ; jumptable            260     6 (fixed)
  4814                           ;	Chosen strategy is simple_byte
  4815                           
  4816                           	movf 1+(??_Set_Relay+0)+0,w
  4817  05CD  0822               	opt asmopt_push
  4818                           	opt asmopt_off
  4819                           	xorlw	0^0	; case 0
  4820  05CE  3A00               	skipnz
  4821  05CF  1903               	goto	l2890
  4822  05D0  2DD2               	goto	l406
  4823  05D1  2DDE               	opt asmopt_pop
  4824                           	
  4825                           l2890:	
  4826  05D2                     ; Switch size 1, requested type "space"
  4827                           ; Number of cases is 6, Range of values is 0 to 5
  4828                           ; switch strategies available:
  4829                           ; Name         Instructions Cycles
  4830                           ; direct_byte           19     7 (fixed)
  4831                           ; simple_byte           19    10 (average)
  4832                           ; jumptable            260     6 (fixed)
  4833                           ;	Chosen strategy is direct_byte
  4834                           
  4835                           	movf 0+(??_Set_Relay+0)+0,w
  4836  05D2  0821               	movwf fsr
  4837  05D3  0084               	movlw	6
  4838  05D4  3006               	subwf	fsr,w
  4839  05D5  0204               skipnc
  4840  05D6  1803               goto l406
  4841  05D7  2DDE               movlw high(S2892)
  4842  05D8  3008               movwf pclath
  4843  05D9  008A               	clrc
  4844  05DA  1003               	rlf fsr,w
  4845  05DB  0D04               	addlw low(S2892)
  4846  05DC  3E0C               	movwf pc
  4847  05DD  0082               psect	swtext2,local,class=CONST,delta=2
  4848                           global __pswtext2
  4849                           __pswtext2:
  4850  080C                     S2892:
  4851  080C                     	ljmp	l1958
  4852  080C  118A  2D63         	ljmp	l1966
  4853  080E  118A  2D74         	ljmp	l1974
  4854  0810  118A  2D85         	ljmp	l1982
  4855  0812  118A  2D96         	ljmp	l1990
  4856  0814  118A  2DA7         	ljmp	l1998
  4857  0816  118A  2DB8         psect	text13
  4858                           
  4859                           	
  4860                           l380:	
  4861  05DE                     	line	159
  4862                           	
  4863                           l406:	
  4864  05DE                     	return
  4865  05DE  0008               	opt stack 0
  4866                           GLOBAL	__end_of_Set_Relay
  4867                           	__end_of_Set_Relay:
  4868  05DF                     	signat	_Set_Relay,8313
  4869                           	global	_Handle_Interrupts
  4870                           
  4871 ;; *************** function _Handle_Interrupts *****************
  4872 ;; Defined at:
  4873 ;;		line 442 in file "Main.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  dummy           1   12[COMMON] unsigned char 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      void 
  4880 ;; Registers used:
  4881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4887 ;;      Params:         0       0       0       0
  4888 ;;      Locals:         1       0       0       0
  4889 ;;      Temps:          5       0       0       0
  4890 ;;      Totals:         6       0       0       0
  4891 ;;Total ram usage:        6 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    2
  4894 ;; This function calls:
  4895 ;;		_HandleConfigByte
  4896 ;;		_HandleTelegramByte
  4897 ;;		_Timer_Interrupt
  4898 ;;		_WriteByteFromBuffer
  4899 ;; This function is called by:
  4900 ;;		Interrupt level 1
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4904                           	file	"Main.c"
  4905                           	line	442
  4906                           global __ptext14
  4907                           __ptext14:	;psect for function _Handle_Interrupts
  4908  06BA                     psect	text14
  4909                           	file	"Main.c"
  4910                           	line	442
  4911                           	global	__size_of_Handle_Interrupts
  4912                           	__size_of_Handle_Interrupts	equ	__end_of_Handle_Interrupts-_Handle_Interrupts
  4913  0056                     	
  4914                           _Handle_Interrupts:	
  4915  06BA                     ;incstack = 0
  4916                           	opt	stack 2
  4917                           ; Regs used in _Handle_Interrupts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4918                           psect	intentry,class=CODE,delta=2
  4919                           global __pintentry
  4920                           __pintentry:
  4921  0004                     global interrupt_function
  4922                           interrupt_function:
  4923  0004                     	global saved_w
  4924                           	saved_w	set	btemp+0
  4925  007E                     	movwf	saved_w
  4926  0004  00FE               	swapf	status,w
  4927  0005  0E03               	movwf	(??_Handle_Interrupts+2)
  4928  0006  00F9               	movf	fsr0,w
  4929  0007  0804               	movwf	(??_Handle_Interrupts+3)
  4930  0008  00FA               	movf	pclath,w
  4931  0009  080A               	movwf	(??_Handle_Interrupts+4)
  4932  000A  00FB               	ljmp	_Handle_Interrupts
  4933  000B  118A  2EBA         psect	text14
  4934                           	line	444
  4935                           	
  4936                           i1l2584:	
  4937  06BA                     ;Main.c: 444:     if (PIR1bits.TXIF)
  4938                           	bcf	status, 5	;RP0=0, select bank0
  4939  06BA  1283               	bcf	status, 6	;RP1=0, select bank0
  4940  06BB  1303               	btfss	(12),1	;volatile
  4941  06BC  1C8C               	goto	u169_21
  4942  06BD  2EBF               	goto	u169_20
  4943  06BE  2EC0               u169_21:
  4944  06BF                     	goto	i1l2588
  4945  06BF  2EC4               u169_20:
  4946  06C0                     	line	446
  4947                           	
  4948                           i1l2586:	
  4949  06C0                     ;Main.c: 445:     {;Main.c: 446:         WriteByteFromBuffer();
  4950                           	fcall	_WriteByteFromBuffer
  4951  06C0  118A  27B8  118A   	goto	i1l2588
  4952  06C3  2EC4               	line	447
  4953                           ;Main.c: 447:     }
  4954                           	
  4955                           i1l234:	
  4956  06C4                     	line	449
  4957                           	
  4958                           i1l2588:	
  4959  06C4                     ;Main.c: 449:     if (PIR1bits.RCIF)
  4960                           	bcf	status, 5	;RP0=0, select bank0
  4961  06C4  1283               	bcf	status, 6	;RP1=0, select bank0
  4962  06C5  1303               	btfss	(12),5	;volatile
  4963  06C6  1E8C               	goto	u170_21
  4964  06C7  2EC9               	goto	u170_20
  4965  06C8  2ECA               u170_21:
  4966  06C9                     	goto	i1l235
  4967  06C9  2EE7               u170_20:
  4968  06CA                     	goto	i1l2598
  4969  06CA  2ED5               	line	451
  4970                           	
  4971                           i1l2590:	
  4972  06CB                     ;Main.c: 450:     {;Main.c: 451:         switch (CurrentMode)
  4973                           	goto	i1l2598
  4974  06CB  2ED5               	line	453
  4975                           ;Main.c: 452:         {;Main.c: 453:             case Running:
  4976                           	
  4977                           i1l237:	
  4978  06CC                     	line	454
  4979                           	
  4980                           i1l2592:	
  4981  06CC                     ;Main.c: 454:                 HandleTelegramByte();
  4982                           	fcall	_HandleTelegramByte
  4983  06CC  118A  2440  118A   	line	455
  4984                           ;Main.c: 455:                 break;
  4985                           	goto	i1l235
  4986  06CF  2EE7               	line	457
  4987                           ;Main.c: 457:             case Config:
  4988                           	
  4989                           i1l239:	
  4990  06D0                     	line	458
  4991                           	
  4992                           i1l2594:	
  4993  06D0                     ;Main.c: 458:                 HandleConfigByte();
  4994                           	fcall	_HandleConfigByte
  4995  06D0  118A  24D4  118A   	line	459
  4996                           ;Main.c: 459:                 break;
  4997                           	goto	i1l235
  4998  06D3  2EE7               	line	460
  4999                           	
  5000                           i1l2596:	
  5001  06D4                     ;Main.c: 460:         }
  5002                           	goto	i1l235
  5003  06D4  2EE7               	
  5004                           i1l236:	
  5005  06D5                     	
  5006                           i1l2598:	
  5007  06D5                     	bcf	status, 5	;RP0=0, select bank0
  5008  06D5  1283               	bcf	status, 6	;RP1=0, select bank0
  5009  06D6  1303               	movf	(_CurrentMode),w
  5010  06D7  0865               	movwf	(??_Handle_Interrupts+0)+0
  5011  06D8  00F7               	clrf	(??_Handle_Interrupts+0)+0+1
  5012  06D9  01F8               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5013                           ; Switch size 1, requested type "space"
  5014                           ; Number of cases is 1, Range of values is 0 to 0
  5015                           ; switch strategies available:
  5016                           ; Name         Instructions Cycles
  5017                           ; simple_byte            4     3 (average)
  5018                           ; direct_byte            9     7 (fixed)
  5019                           ; jumptable            260     6 (fixed)
  5020                           ;	Chosen strategy is simple_byte
  5021                           
  5022                           	movf 1+(??_Handle_Interrupts+0)+0,w
  5023  06DA  0878               	opt asmopt_push
  5024                           	opt asmopt_off
  5025                           	xorlw	0^0	; case 0
  5026  06DB  3A00               	skipnz
  5027  06DC  1903               	goto	i1l2894
  5028  06DD  2EDF               	goto	i1l235
  5029  06DE  2EE7               	opt asmopt_pop
  5030                           	
  5031                           i1l2894:	
  5032  06DF                     ; Switch size 1, requested type "space"
  5033                           ; Number of cases is 2, Range of values is 0 to 1
  5034                           ; switch strategies available:
  5035                           ; Name         Instructions Cycles
  5036                           ; simple_byte            7     4 (average)
  5037                           ; direct_byte           11     7 (fixed)
  5038                           ; jumptable            260     6 (fixed)
  5039                           ;	Chosen strategy is simple_byte
  5040                           
  5041                           	movf 0+(??_Handle_Interrupts+0)+0,w
  5042  06DF  0877               	opt asmopt_push
  5043                           	opt asmopt_off
  5044                           	xorlw	0^0	; case 0
  5045  06E0  3A00               	skipnz
  5046  06E1  1903               	goto	i1l2592
  5047  06E2  2ECC               	xorlw	1^0	; case 1
  5048  06E3  3A01               	skipnz
  5049  06E4  1903               	goto	i1l2594
  5050  06E5  2ED0               	goto	i1l235
  5051  06E6  2EE7               	opt asmopt_pop
  5052                           
  5053                           	
  5054                           i1l238:	
  5055  06E7                     	line	462
  5056                           ;Main.c: 462:     }
  5057                           	
  5058                           i1l235:	
  5059  06E7                     	line	464
  5060                           ;Main.c: 464:     if (INTCONbits.RAIF)
  5061                           	btfss	(11),0	;volatile
  5062  06E7  1C0B               	goto	u171_21
  5063  06E8  2EEA               	goto	u171_20
  5064  06E9  2EEB               u171_21:
  5065  06EA                     	goto	i1l2612
  5066  06EA  2EFC               u171_20:
  5067  06EB                     	line	467
  5068                           	
  5069                           i1l2600:	
  5070  06EB                     ;Main.c: 465:     {;Main.c: 467:         INTCONbits.RAIE = 0;
  5071                           	bcf	(11),3	;volatile
  5072  06EB  118B               	line	468
  5073                           	
  5074                           i1l2602:	
  5075  06EC                     ;Main.c: 468:         unsigned char dummy = PORTA;
  5076                           	bcf	status, 5	;RP0=0, select bank0
  5077  06EC  1283               	bcf	status, 6	;RP1=0, select bank0
  5078  06ED  1303               	movf	(5),w	;volatile
  5079  06EE  0805               	movwf	(??_Handle_Interrupts+0)+0
  5080  06EF  00F7               	movf	(??_Handle_Interrupts+0)+0,w
  5081  06F0  0877               	movwf	(Handle_Interrupts@dummy)
  5082  06F1  00FC               	line	469
  5083                           	
  5084                           i1l2604:	
  5085  06F2                     ;Main.c: 469:         INTCONbits.RAIF = 0;
  5086                           	bcf	(11),0	;volatile
  5087  06F2  100B               	line	472
  5088                           	
  5089                           i1l2606:	
  5090  06F3                     ;Main.c: 472:         CurrentMode = Config;
  5091                           	clrf	(_CurrentMode)
  5092  06F3  01E5               	incf	(_CurrentMode),f
  5093  06F4  0AE5               	line	475
  5094                           	
  5095                           i1l2608:	
  5096  06F5                     ;Main.c: 475:         TRISAbits.TRISA5 = 0;
  5097                           	bsf	status, 5	;RP0=1, select bank1
  5098  06F5  1683               	bcf	status, 6	;RP1=0, select bank1
  5099  06F6  1303               	bcf	(133)^080h,5	;volatile
  5100  06F7  1285               	line	477
  5101                           	
  5102                           i1l2610:	
  5103  06F8                     ;Main.c: 477:         PORTAbits.RA5 = 0;
  5104                           	bcf	status, 5	;RP0=0, select bank0
  5105  06F8  1283               	bcf	status, 6	;RP1=0, select bank0
  5106  06F9  1303               	bcf	(5),5	;volatile
  5107  06FA  1285               	goto	i1l2612
  5108  06FB  2EFC               	line	479
  5109                           ;Main.c: 479:     }
  5110                           	
  5111                           i1l240:	
  5112  06FC                     	line	481
  5113                           	
  5114                           i1l2612:	
  5115  06FC                     ;Main.c: 481:     if (PIR1bits.TMR1IF)
  5116                           	bcf	status, 5	;RP0=0, select bank0
  5117  06FC  1283               	bcf	status, 6	;RP1=0, select bank0
  5118  06FD  1303               	btfss	(12),0	;volatile
  5119  06FE  1C0C               	goto	u172_21
  5120  06FF  2F01               	goto	u172_20
  5121  0700  2F02               u172_21:
  5122  0701                     	goto	i1l242
  5123  0701  2F07               u172_20:
  5124  0702                     	line	483
  5125                           	
  5126                           i1l2614:	
  5127  0702                     ;Main.c: 482:     {;Main.c: 483:         PIR1bits.TMR1IF = 0;
  5128                           	bcf	(12),0	;volatile
  5129  0702  100C               	line	484
  5130                           	
  5131                           i1l2616:	
  5132  0703                     ;Main.c: 484:         Timer_Interrupt();
  5133                           	fcall	_Timer_Interrupt
  5134  0703  118A  2781  118A   	goto	i1l242
  5135  0706  2F07               	line	486
  5136                           ;Main.c: 486:     }
  5137                           	
  5138                           i1l241:	
  5139  0707                     	line	487
  5140                           	
  5141                           i1l242:	
  5142  0707                     	movf	(??_Handle_Interrupts+4),w
  5143  0707  087B               	movwf	pclath
  5144  0708  008A               	movf	(??_Handle_Interrupts+3),w
  5145  0709  087A               	movwf	fsr0
  5146  070A  0084               	swapf	(??_Handle_Interrupts+2)^0FFFFFF80h,w
  5147  070B  0E79               	movwf	status
  5148  070C  0083               	swapf	saved_w,f
  5149  070D  0EFE               	swapf	saved_w,w
  5150  070E  0E7E               	retfie
  5151  070F  0009               	opt stack 0
  5152                           GLOBAL	__end_of_Handle_Interrupts
  5153                           	__end_of_Handle_Interrupts:
  5154  0710                     	signat	_Handle_Interrupts,89
  5155                           	global	_WriteByteFromBuffer
  5156                           
  5157 ;; *************** function _WriteByteFromBuffer *****************
  5158 ;; Defined at:
  5159 ;;		line 138 in file "Eusart.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;		None
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1    wreg      void 
  5166 ;; Registers used:
  5167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5173 ;;      Params:         0       0       0       0
  5174 ;;      Locals:         0       0       0       0
  5175 ;;      Temps:          1       0       0       0
  5176 ;;      Totals:         1       0       0       0
  5177 ;;Total ram usage:        1 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    1
  5180 ;; This function calls:
  5181 ;;		_Write_Byte
  5182 ;; This function is called by:
  5183 ;;		_Handle_Interrupts
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5187                           	file	"Eusart.c"
  5188                           	line	138
  5189                           global __ptext15
  5190                           __ptext15:	;psect for function _WriteByteFromBuffer
  5191  07B8                     psect	text15
  5192                           	file	"Eusart.c"
  5193                           	line	138
  5194                           	global	__size_of_WriteByteFromBuffer
  5195                           	__size_of_WriteByteFromBuffer	equ	__end_of_WriteByteFromBuffer-_WriteByteFromBuffer
  5196  002B                     	
  5197                           _WriteByteFromBuffer:	
  5198  07B8                     ;incstack = 0
  5199                           	opt	stack 2
  5200                           ; Regs used in _WriteByteFromBuffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5201                           	line	140
  5202                           	
  5203                           i1l2498:	
  5204  07B8                     ;Eusart.c: 140:     if (BufferHead != BufferTail)
  5205                           	movf	(_BufferHead),w
  5206  07B8  087D               	bcf	status, 5	;RP0=0, select bank0
  5207  07B9  1283               	bcf	status, 6	;RP1=0, select bank0
  5208  07BA  1303               	xorwf	(_BufferTail),w
  5209  07BB  0663               	skipnz
  5210  07BC  1903               	goto	u155_21
  5211  07BD  2FBF               	goto	u155_20
  5212  07BE  2FC0               u155_21:
  5213  07BF                     	goto	i1l2508
  5214  07BF  2FD8               u155_20:
  5215  07C0                     	line	142
  5216                           	
  5217                           i1l2500:	
  5218  07C0                     ;Eusart.c: 141:     {;Eusart.c: 142:         Write_Byte(SendBuffer[BufferTail]);
  5219                           	movf	(_BufferTail),w
  5220  07C0  0863               	addlw	low(_SendBuffer|((0x0)<<8))&0ffh
  5221  07C1  3EA0               	movwf	fsr0
  5222  07C2  0084               	bcf	status, 7	;select IRP bank1
  5223  07C3  1383               	movf	indf,w
  5224  07C4  0800               	fcall	_Write_Byte
  5225  07C5  158A  2766  118A   	line	144
  5226                           	
  5227                           i1l2502:	
  5228  07C8                     ;Eusart.c: 144:         if (BufferTail == 39)
  5229                           		movlw	39
  5230  07C8  3027               	bcf	status, 5	;RP0=0, select bank0
  5231  07C9  1283               	bcf	status, 6	;RP1=0, select bank0
  5232  07CA  1303               	xorwf	((_BufferTail)),w
  5233  07CB  0663               	btfss	status,2
  5234  07CC  1D03               	goto	u156_21
  5235  07CD  2FCF               	goto	u156_20
  5236  07CE  2FD0               u156_21:
  5237  07CF                     	goto	i1l2506
  5238  07CF  2FD2               u156_20:
  5239  07D0                     	line	146
  5240                           	
  5241                           i1l2504:	
  5242  07D0                     ;Eusart.c: 145:         {;Eusart.c: 146:             BufferTail = 0;
  5243                           	clrf	(_BufferTail)
  5244  07D0  01E3               	line	147
  5245                           ;Eusart.c: 147:         }
  5246                           	goto	i1l2508
  5247  07D1  2FD8               	line	148
  5248                           ;Eusart.c: 148:         else
  5249                           	
  5250                           i1l321:	
  5251  07D2                     	line	150
  5252                           	
  5253                           i1l2506:	
  5254  07D2                     ;Eusart.c: 149:         {;Eusart.c: 150:             BufferTail++;
  5255                           	movlw	low(01h)
  5256  07D2  3001               	movwf	(??_WriteByteFromBuffer+0)+0
  5257  07D3  00F1               	movf	(??_WriteByteFromBuffer+0)+0,w
  5258  07D4  0871               	addwf	(_BufferTail),f
  5259  07D5  07E3               	goto	i1l2508
  5260  07D6  2FD8               	line	151
  5261                           ;Eusart.c: 151:         }
  5262                           	
  5263                           i1l322:	
  5264  07D7                     	goto	i1l2508
  5265  07D7  2FD8               	line	153
  5266                           ;Eusart.c: 153:     }
  5267                           	
  5268                           i1l320:	
  5269  07D8                     	line	155
  5270                           	
  5271                           i1l2508:	
  5272  07D8                     ;Eusart.c: 155:     if (BufferHead == BufferTail)
  5273                           	movf	(_BufferHead),w
  5274  07D8  087D               	xorwf	(_BufferTail),w
  5275  07D9  0663               	skipz
  5276  07DA  1D03               	goto	u157_21
  5277  07DB  2FDD               	goto	u157_20
  5278  07DC  2FDE               u157_21:
  5279  07DD                     	goto	i1l324
  5280  07DD  2FE2               u157_20:
  5281  07DE                     	line	157
  5282                           	
  5283                           i1l2510:	
  5284  07DE                     ;Eusart.c: 156:     {;Eusart.c: 157:         PIE1bits.TXIE = 0;
  5285                           	bsf	status, 5	;RP0=1, select bank1
  5286  07DE  1683               	bcf	status, 6	;RP1=0, select bank1
  5287  07DF  1303               	bcf	(140)^080h,1	;volatile
  5288  07E0  108C               	goto	i1l324
  5289  07E1  2FE2               	line	158
  5290                           ;Eusart.c: 158:     }
  5291                           	
  5292                           i1l323:	
  5293  07E2                     	line	160
  5294                           	
  5295                           i1l324:	
  5296  07E2                     	return
  5297  07E2  0008               	opt stack 0
  5298                           GLOBAL	__end_of_WriteByteFromBuffer
  5299                           	__end_of_WriteByteFromBuffer:
  5300  07E3                     	signat	_WriteByteFromBuffer,89
  5301                           	global	_Write_Byte
  5302                           
  5303 ;; *************** function _Write_Byte *****************
  5304 ;; Defined at:
  5305 ;;		line 113 in file "Eusart.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  Data            1    wreg     unsigned char 
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;  Data            1    0[COMMON] unsigned char 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      void 
  5312 ;; Registers used:
  5313 ;;		wreg
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5319 ;;      Params:         0       0       0       0
  5320 ;;      Locals:         1       0       0       0
  5321 ;;      Temps:          0       0       0       0
  5322 ;;      Totals:         1       0       0       0
  5323 ;;Total ram usage:        1 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_WriteByteFromBuffer
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5332                           	line	113
  5333                           global __ptext16
  5334                           __ptext16:	;psect for function _Write_Byte
  5335  0F66                     psect	text16
  5336                           	file	"Eusart.c"
  5337                           	line	113
  5338                           	global	__size_of_Write_Byte
  5339                           	__size_of_Write_Byte	equ	__end_of_Write_Byte-_Write_Byte
  5340  0006                     	
  5341                           _Write_Byte:	
  5342  0F66                     ;incstack = 0
  5343                           	opt	stack 2
  5344                           ; Regs used in _Write_Byte: [wreg]
  5345                           ;Write_Byte@Data stored from wreg
  5346                           	movwf	(Write_Byte@Data)
  5347  0F66  00F0               	line	117
  5348                           	
  5349                           i1l2106:	
  5350  0F67                     ;Eusart.c: 113: void Write_Byte (unsigned char Data);Eusart.c: 114: {;Eusart.c: 117:    
                                  TXREG = Data;
  5351                           	movf	(Write_Byte@Data),w
  5352  0F67  0870               	bcf	status, 5	;RP0=0, select bank0
  5353  0F68  1283               	bcf	status, 6	;RP1=0, select bank0
  5354  0F69  1303               	movwf	(21)	;volatile
  5355  0F6A  0095               	line	118
  5356                           	
  5357                           i1l312:	
  5358  0F6B                     	return
  5359  0F6B  0008               	opt stack 0
  5360                           GLOBAL	__end_of_Write_Byte
  5361                           	__end_of_Write_Byte:
  5362  0F6C                     	signat	_Write_Byte,4217
  5363                           	global	_Timer_Interrupt
  5364                           
  5365 ;; *************** function _Timer_Interrupt *****************
  5366 ;; Defined at:
  5367 ;;		line 74 in file "Timer.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;		None
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      void 
  5374 ;; Registers used:
  5375 ;;		wreg, status,2, status,0
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5381 ;;      Params:         0       0       0       0
  5382 ;;      Locals:         0       0       0       0
  5383 ;;      Temps:          0       0       0       0
  5384 ;;      Totals:         0       0       0       0
  5385 ;;Total ram usage:        0 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_Handle_Interrupts
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5394                           	file	"Timer.c"
  5395                           	line	74
  5396                           global __ptext17
  5397                           __ptext17:	;psect for function _Timer_Interrupt
  5398  0781                     psect	text17
  5399                           	file	"Timer.c"
  5400                           	line	74
  5401                           	global	__size_of_Timer_Interrupt
  5402                           	__size_of_Timer_Interrupt	equ	__end_of_Timer_Interrupt-_Timer_Interrupt
  5403  0037                     	
  5404                           _Timer_Interrupt:	
  5405  0781                     ;incstack = 0
  5406                           	opt	stack 3
  5407                           ; Regs used in _Timer_Interrupt: [wreg+status,2+status,0]
  5408                           	line	76
  5409                           	
  5410                           i1l2202:	
  5411  0781                     ;Timer.c: 76:     TMR1H = 160;
  5412                           	movlw	low(0A0h)
  5413  0781  30A0               	bcf	status, 5	;RP0=0, select bank0
  5414  0782  1283               	bcf	status, 6	;RP1=0, select bank0
  5415  0783  1303               	movwf	(15)	;volatile
  5416  0784  008F               	line	77
  5417                           ;Timer.c: 77:     TMR1L = 138;
  5418                           	movlw	low(08Ah)
  5419  0785  308A               	movwf	(14)	;volatile
  5420  0786  008E               	line	78
  5421                           ;Timer.c: 78:     Counter_100ms++;
  5422                           	movlw	01h
  5423  0787  3001               	addwf	(_Counter_100ms),f
  5424  0788  07DC               	skipnc
  5425  0789  1803               	incf	(_Counter_100ms+1),f
  5426  078A  0ADD               	movlw	0
  5427  078B  3000               	addwf	(_Counter_100ms+1),f
  5428  078C  07DD               	line	82
  5429                           	
  5430                           i1l2204:	
  5431  078D                     ;Timer.c: 82:     if (Counter_100ms == 10)
  5432                           		movlw	10
  5433  078D  300A               	xorwf	((_Counter_100ms)),w
  5434  078E  065C               iorwf	((_Counter_100ms+1)),w
  5435  078F  045D               	btfss	status,2
  5436  0790  1D03               	goto	u117_21
  5437  0791  2F93               	goto	u117_20
  5438  0792  2F94               u117_21:
  5439  0793                     	goto	i1l63
  5440  0793  2FB7               u117_20:
  5441  0794                     	line	85
  5442                           	
  5443                           i1l2206:	
  5444  0794                     ;Timer.c: 83:     {;Timer.c: 85:         Counter_100ms = 0;
  5445                           	clrf	(_Counter_100ms)
  5446  0794  01DC               	clrf	(_Counter_100ms+1)
  5447  0795  01DD               	line	86
  5448                           	
  5449                           i1l2208:	
  5450  0796                     ;Timer.c: 86:         Counter_1sec ++;
  5451                           	movlw	01h
  5452  0796  3001               	addwf	(_Counter_1sec),f
  5453  0797  07DA               	skipnc
  5454  0798  1803               	incf	(_Counter_1sec+1),f
  5455  0799  0ADB               	movlw	0
  5456  079A  3000               	addwf	(_Counter_1sec+1),f
  5457  079B  07DB               	line	88
  5458                           	
  5459                           i1l2210:	
  5460  079C                     ;Timer.c: 88:         if (Counter_1sec == 10)
  5461                           		movlw	10
  5462  079C  300A               	xorwf	((_Counter_1sec)),w
  5463  079D  065A               iorwf	((_Counter_1sec+1)),w
  5464  079E  045B               	btfss	status,2
  5465  079F  1D03               	goto	u118_21
  5466  07A0  2FA2               	goto	u118_20
  5467  07A1  2FA3               u118_21:
  5468  07A2                     	goto	i1l63
  5469  07A2  2FB7               u118_20:
  5470  07A3                     	line	91
  5471                           	
  5472                           i1l2212:	
  5473  07A3                     ;Timer.c: 89:         {;Timer.c: 91:             Counter_1sec = 0;
  5474                           	clrf	(_Counter_1sec)
  5475  07A3  01DA               	clrf	(_Counter_1sec+1)
  5476  07A4  01DB               	line	92
  5477                           	
  5478                           i1l2214:	
  5479  07A5                     ;Timer.c: 92:             Counter_10sec ++;
  5480                           	movlw	01h
  5481  07A5  3001               	addwf	(_Counter_10sec),f
  5482  07A6  07D8               	skipnc
  5483  07A7  1803               	incf	(_Counter_10sec+1),f
  5484  07A8  0AD9               	movlw	0
  5485  07A9  3000               	addwf	(_Counter_10sec+1),f
  5486  07AA  07D9               	line	94
  5487                           	
  5488                           i1l2216:	
  5489  07AB                     ;Timer.c: 94:             if (Counter_10sec == 10)
  5490                           		movlw	10
  5491  07AB  300A               	xorwf	((_Counter_10sec)),w
  5492  07AC  0658               iorwf	((_Counter_10sec+1)),w
  5493  07AD  0459               	btfss	status,2
  5494  07AE  1D03               	goto	u119_21
  5495  07AF  2FB1               	goto	u119_20
  5496  07B0  2FB2               u119_21:
  5497  07B1                     	goto	i1l63
  5498  07B1  2FB7               u119_20:
  5499  07B2                     	line	97
  5500                           	
  5501                           i1l2218:	
  5502  07B2                     ;Timer.c: 95:             {;Timer.c: 97:                 Counter_10sec = 0;
  5503                           	clrf	(_Counter_10sec)
  5504  07B2  01D8               	clrf	(_Counter_10sec+1)
  5505  07B3  01D9               	goto	i1l63
  5506  07B4  2FB7               	line	98
  5507                           ;Timer.c: 98:             }
  5508                           	
  5509                           i1l62:	
  5510  07B5                     	goto	i1l63
  5511  07B5  2FB7               	line	100
  5512                           ;Timer.c: 100:         }
  5513                           	
  5514                           i1l61:	
  5515  07B6                     	goto	i1l63
  5516  07B6  2FB7               	line	102
  5517                           ;Timer.c: 102:     }
  5518                           	
  5519                           i1l60:	
  5520  07B7                     	line	103
  5521                           	
  5522                           i1l63:	
  5523  07B7                     	return
  5524  07B7  0008               	opt stack 0
  5525                           GLOBAL	__end_of_Timer_Interrupt
  5526                           	__end_of_Timer_Interrupt:
  5527  07B8                     	signat	_Timer_Interrupt,89
  5528                           	global	_HandleTelegramByte
  5529                           
  5530 ;; *************** function _HandleTelegramByte *****************
  5531 ;; Defined at:
  5532 ;;		line 3 in file "TelegramInterpreter.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;		None
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;  Byte            1    4[COMMON] unsigned char 
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  1    wreg      void 
  5539 ;; Registers used:
  5540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5546 ;;      Params:         0       0       0       0
  5547 ;;      Locals:         1       0       0       0
  5548 ;;      Temps:          2       0       0       0
  5549 ;;      Totals:         3       0       0       0
  5550 ;;Total ram usage:        3 bytes
  5551 ;; Hardware stack levels used:    1
  5552 ;; Hardware stack levels required when called:    1
  5553 ;; This function calls:
  5554 ;;		_Read_Byte
  5555 ;; This function is called by:
  5556 ;;		_Handle_Interrupts
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5560                           	file	"TelegramInterpreter.c"
  5561                           	line	3
  5562                           global __ptext18
  5563                           __ptext18:	;psect for function _HandleTelegramByte
  5564  0440                     psect	text18
  5565                           	file	"TelegramInterpreter.c"
  5566                           	line	3
  5567                           	global	__size_of_HandleTelegramByte
  5568                           	__size_of_HandleTelegramByte	equ	__end_of_HandleTelegramByte-_HandleTelegramByte
  5569  0094                     	
  5570                           _HandleTelegramByte:	
  5571  0440                     ;incstack = 0
  5572                           	opt	stack 2
  5573                           ; Regs used in _HandleTelegramByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5574                           	line	10
  5575                           	
  5576                           i1l2512:	
  5577  0440                     ;TelegramInterpreter.c: 5:     unsigned char Byte;;TelegramInterpreter.c: 6:     static 
                                 unsigned char ByteCounter = Idle;;TelegramInterpreter.c: 7:     static unsigned char Com
                                 mandCounter = 0;;TelegramInterpreter.c: 8:     static unsigned char Lenght;;TelegramInte
                                 rpreter.c: 10:     Byte = Read_Byte();
  5578                           	fcall	_Read_Byte
  5579  0440  158A  2774  118A   	movwf	(??_HandleTelegramByte+0)+0
  5580  0443  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5581  0444  0872               	movwf	(HandleTelegramByte@Byte)
  5582  0445  00F4               	line	12
  5583                           	
  5584                           i1l2514:	
  5585  0446                     ;TelegramInterpreter.c: 12:     if (Byte == ':')
  5586                           		movlw	58
  5587  0446  303A               	xorwf	((HandleTelegramByte@Byte)),w
  5588  0447  0674               	btfss	status,2
  5589  0448  1D03               	goto	u158_21
  5590  0449  2C4B               	goto	u158_20
  5591  044A  2C4C               u158_21:
  5592  044B                     	goto	i1l2518
  5593  044B  2C59               u158_20:
  5594  044C                     	line	14
  5595                           	
  5596                           i1l2516:	
  5597  044C                     ;TelegramInterpreter.c: 13:     {;TelegramInterpreter.c: 14:         Telegram.Start = By
                                 te;
  5598                           	movf	(HandleTelegramByte@Byte),w
  5599  044C  0874               	movwf	(??_HandleTelegramByte+0)+0
  5600  044D  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5601  044E  0872               	bsf	status, 5	;RP0=1, select bank1
  5602  044F  1683               	bcf	status, 6	;RP1=0, select bank1
  5603  0450  1303               	movwf	(_Telegram)^080h
  5604  0451  00C8               	line	15
  5605                           ;TelegramInterpreter.c: 15:         ByteCounter = Address;
  5606                           	movlw	low(02h)
  5607  0452  3002               	movwf	(??_HandleTelegramByte+0)+0
  5608  0453  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5609  0454  0872               	bcf	status, 5	;RP0=0, select bank0
  5610  0455  1283               	bcf	status, 6	;RP1=0, select bank0
  5611  0456  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5612  0457  00E2               	line	16
  5613                           ;TelegramInterpreter.c: 16:     }
  5614                           	goto	i1l477
  5615  0458  2CD3               	line	17
  5616                           ;TelegramInterpreter.c: 17:     else if (ByteCounter > Start)
  5617                           	
  5618                           i1l466:	
  5619  0459                     	
  5620                           i1l2518:	
  5621  0459                     	movlw	low(02h)
  5622  0459  3002               	bcf	status, 5	;RP0=0, select bank0
  5623  045A  1283               	bcf	status, 6	;RP1=0, select bank0
  5624  045B  1303               	subwf	(HandleTelegramByte@ByteCounter),w
  5625  045C  0262               	skipc
  5626  045D  1C03               	goto	u159_21
  5627  045E  2C60               	goto	u159_20
  5628  045F  2C61               u159_21:
  5629  0460                     	goto	i1l477
  5630  0460  2CD3               u159_20:
  5631  0461                     	goto	i1l2546
  5632  0461  2CB8               	line	19
  5633                           	
  5634                           i1l2520:	
  5635  0462                     ;TelegramInterpreter.c: 18:     {;TelegramInterpreter.c: 19:         switch (ByteCounter
                                 )
  5636                           	goto	i1l2546
  5637  0462  2CB8               	line	21
  5638                           ;TelegramInterpreter.c: 20:         {;TelegramInterpreter.c: 21:             case Addres
                                 s:
  5639                           	
  5640                           i1l470:	
  5641  0463                     	line	22
  5642                           	
  5643                           i1l2522:	
  5644  0463                     ;TelegramInterpreter.c: 22:                 Telegram.Address = Byte;
  5645                           	movf	(HandleTelegramByte@Byte),w
  5646  0463  0874               	movwf	(??_HandleTelegramByte+0)+0
  5647  0464  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5648  0465  0872               	bsf	status, 5	;RP0=1, select bank1
  5649  0466  1683               	bcf	status, 6	;RP1=0, select bank1
  5650  0467  1303               	movwf	0+(_Telegram)^080h+01h
  5651  0468  00C9               	line	23
  5652                           ;TelegramInterpreter.c: 23:                 ByteCounter = Commandlength;
  5653                           	movlw	low(03h)
  5654  0469  3003               	movwf	(??_HandleTelegramByte+0)+0
  5655  046A  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5656  046B  0872               	bcf	status, 5	;RP0=0, select bank0
  5657  046C  1283               	bcf	status, 6	;RP1=0, select bank0
  5658  046D  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5659  046E  00E2               	line	24
  5660                           ;TelegramInterpreter.c: 24:                 break;
  5661                           	goto	i1l477
  5662  046F  2CD3               	line	26
  5663                           ;TelegramInterpreter.c: 26:             case Commandlength:
  5664                           	
  5665                           i1l472:	
  5666  0470                     	line	27
  5667                           	
  5668                           i1l2524:	
  5669  0470                     ;TelegramInterpreter.c: 27:                 Telegram.Commandlength = Byte - 48;
  5670                           	movf	(HandleTelegramByte@Byte),w
  5671  0470  0874               	addlw	0D0h
  5672  0471  3ED0               	movwf	(??_HandleTelegramByte+0)+0
  5673  0472  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5674  0473  0872               	bsf	status, 5	;RP0=1, select bank1
  5675  0474  1683               	bcf	status, 6	;RP1=0, select bank1
  5676  0475  1303               	movwf	0+(_Telegram)^080h+02h
  5677  0476  00CA               	line	28
  5678                           	
  5679                           i1l2526:	
  5680  0477                     ;TelegramInterpreter.c: 28:                 ByteCounter = Command;
  5681                           	movlw	low(04h)
  5682  0477  3004               	movwf	(??_HandleTelegramByte+0)+0
  5683  0478  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5684  0479  0872               	bcf	status, 5	;RP0=0, select bank0
  5685  047A  1283               	bcf	status, 6	;RP1=0, select bank0
  5686  047B  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5687  047C  00E2               	line	29
  5688                           	
  5689                           i1l2528:	
  5690  047D                     ;TelegramInterpreter.c: 29:                 CommandCounter = 0;
  5691                           	clrf	(HandleTelegramByte@CommandCounter)
  5692  047D  01E1               	line	30
  5693                           ;TelegramInterpreter.c: 30:                 break;
  5694                           	goto	i1l477
  5695  047E  2CD3               	line	32
  5696                           ;TelegramInterpreter.c: 32:             case Command:
  5697                           	
  5698                           i1l473:	
  5699  047F                     	line	33
  5700                           	
  5701                           i1l2530:	
  5702  047F                     ;TelegramInterpreter.c: 33:                 Telegram.Command[CommandCounter] = Byte;
  5703                           	movf	(HandleTelegramByte@Byte),w
  5704  047F  0874               	movwf	(??_HandleTelegramByte+0)+0
  5705  0480  00F2               	movf	(HandleTelegramByte@CommandCounter),w
  5706  0481  0861               	addlw	low(_Telegram|((0x0)<<8)+03h)&0ffh
  5707  0482  3ECB               	movwf	fsr0
  5708  0483  0084               	movf	(??_HandleTelegramByte+0)+0,w
  5709  0484  0872               	bcf	status, 7	;select IRP bank1
  5710  0485  1383               	movwf	indf
  5711  0486  0080               	line	34
  5712                           	
  5713                           i1l2532:	
  5714  0487                     ;TelegramInterpreter.c: 34:                 CommandCounter ++;
  5715                           	movlw	low(01h)
  5716  0487  3001               	movwf	(??_HandleTelegramByte+0)+0
  5717  0488  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5718  0489  0872               	addwf	(HandleTelegramByte@CommandCounter),f
  5719  048A  07E1               	line	35
  5720                           	
  5721                           i1l2534:	
  5722  048B                     ;TelegramInterpreter.c: 35:                 if (CommandCounter >= Telegram.Commandlength
                                 )
  5723                           	bsf	status, 5	;RP0=1, select bank1
  5724  048B  1683               	bcf	status, 6	;RP1=0, select bank1
  5725  048C  1303               	movf	0+(_Telegram)^080h+02h,w
  5726  048D  084A               	bcf	status, 5	;RP0=0, select bank0
  5727  048E  1283               	bcf	status, 6	;RP1=0, select bank0
  5728  048F  1303               	subwf	(HandleTelegramByte@CommandCounter),w
  5729  0490  0261               	skipc
  5730  0491  1C03               	goto	u160_21
  5731  0492  2C94               	goto	u160_20
  5732  0493  2C95               u160_21:
  5733  0494                     	goto	i1l477
  5734  0494  2CD3               u160_20:
  5735  0495                     	line	37
  5736                           	
  5737                           i1l2536:	
  5738  0495                     ;TelegramInterpreter.c: 36:                 {;TelegramInterpreter.c: 37:                
                                      ByteCounter = End1;
  5739                           	movlw	low(05h)
  5740  0495  3005               	movwf	(??_HandleTelegramByte+0)+0
  5741  0496  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5742  0497  0872               	movwf	(HandleTelegramByte@ByteCounter)
  5743  0498  00E2               	goto	i1l477
  5744  0499  2CD3               	line	38
  5745                           ;TelegramInterpreter.c: 38:                 }
  5746                           	
  5747                           i1l474:	
  5748  049A                     	line	39
  5749                           ;TelegramInterpreter.c: 39:                 break;
  5750                           	goto	i1l477
  5751  049A  2CD3               	line	41
  5752                           ;TelegramInterpreter.c: 41:             case End1:
  5753                           	
  5754                           i1l475:	
  5755  049B                     	line	42
  5756                           	
  5757                           i1l2538:	
  5758  049B                     ;TelegramInterpreter.c: 42:                 Telegram.End[0] = Byte;
  5759                           	movf	(HandleTelegramByte@Byte),w
  5760  049B  0874               	movwf	(??_HandleTelegramByte+0)+0
  5761  049C  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5762  049D  0872               	bsf	status, 5	;RP0=1, select bank1
  5763  049E  1683               	bcf	status, 6	;RP1=0, select bank1
  5764  049F  1303               	movwf	0+(_Telegram)^080h+013h
  5765  04A0  00DB               	line	43
  5766                           ;TelegramInterpreter.c: 43:                 ByteCounter = End2;
  5767                           	movlw	low(06h)
  5768  04A1  3006               	movwf	(??_HandleTelegramByte+0)+0
  5769  04A2  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5770  04A3  0872               	bcf	status, 5	;RP0=0, select bank0
  5771  04A4  1283               	bcf	status, 6	;RP1=0, select bank0
  5772  04A5  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5773  04A6  00E2               	line	44
  5774                           ;TelegramInterpreter.c: 44:                 break;
  5775                           	goto	i1l477
  5776  04A7  2CD3               	line	46
  5777                           ;TelegramInterpreter.c: 46:             case End2:
  5778                           	
  5779                           i1l476:	
  5780  04A8                     	line	47
  5781                           	
  5782                           i1l2540:	
  5783  04A8                     ;TelegramInterpreter.c: 47:                 Telegram.End[1] = Byte;
  5784                           	movf	(HandleTelegramByte@Byte),w
  5785  04A8  0874               	movwf	(??_HandleTelegramByte+0)+0
  5786  04A9  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5787  04AA  0872               	bsf	status, 5	;RP0=1, select bank1
  5788  04AB  1683               	bcf	status, 6	;RP1=0, select bank1
  5789  04AC  1303               	movwf	0+(_Telegram)^080h+014h
  5790  04AD  00DC               	line	48
  5791                           	
  5792                           i1l2542:	
  5793  04AE                     ;TelegramInterpreter.c: 48:                 ByteCounter = Start;
  5794                           	bcf	status, 5	;RP0=0, select bank0
  5795  04AE  1283               	bcf	status, 6	;RP1=0, select bank0
  5796  04AF  1303               	clrf	(HandleTelegramByte@ByteCounter)
  5797  04B0  01E2               	incf	(HandleTelegramByte@ByteCounter),f
  5798  04B1  0AE2               	line	50
  5799                           ;TelegramInterpreter.c: 50:                 TelegramReadyFlag = 1;
  5800                           	movlw	01h
  5801  04B2  3001               	movwf	(_TelegramReadyFlag)
  5802  04B3  00DE               	movlw	0
  5803  04B4  3000               	movwf	((_TelegramReadyFlag))+1
  5804  04B5  00DF               	line	51
  5805                           ;TelegramInterpreter.c: 51:                 break;
  5806                           	goto	i1l477
  5807  04B6  2CD3               	line	52
  5808                           	
  5809                           i1l2544:	
  5810  04B7                     ;TelegramInterpreter.c: 52:         }
  5811                           	goto	i1l477
  5812  04B7  2CD3               	
  5813                           i1l469:	
  5814  04B8                     	
  5815                           i1l2546:	
  5816  04B8                     	movf	(HandleTelegramByte@ByteCounter),w
  5817  04B8  0862               	movwf	(??_HandleTelegramByte+0)+0
  5818  04B9  00F2               	clrf	(??_HandleTelegramByte+0)+0+1
  5819  04BA  01F3               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5820                           ; Switch size 1, requested type "space"
  5821                           ; Number of cases is 1, Range of values is 0 to 0
  5822                           ; switch strategies available:
  5823                           ; Name         Instructions Cycles
  5824                           ; simple_byte            4     3 (average)
  5825                           ; direct_byte            9     7 (fixed)
  5826                           ; jumptable            260     6 (fixed)
  5827                           ;	Chosen strategy is simple_byte
  5828                           
  5829                           	movf 1+(??_HandleTelegramByte+0)+0,w
  5830  04BB  0873               	opt asmopt_push
  5831                           	opt asmopt_off
  5832                           	xorlw	0^0	; case 0
  5833  04BC  3A00               	skipnz
  5834  04BD  1903               	goto	i1l2896
  5835  04BE  2CC0               	goto	i1l477
  5836  04BF  2CD3               	opt asmopt_pop
  5837                           	
  5838                           i1l2896:	
  5839  04C0                     ; Switch size 1, requested type "space"
  5840                           ; Number of cases is 5, Range of values is 2 to 6
  5841                           ; switch strategies available:
  5842                           ; Name         Instructions Cycles
  5843                           ; simple_byte           16     9 (average)
  5844                           ; direct_byte           20    10 (fixed)
  5845                           ; jumptable            263     9 (fixed)
  5846                           ;	Chosen strategy is simple_byte
  5847                           
  5848                           	movf 0+(??_HandleTelegramByte+0)+0,w
  5849  04C0  0872               	opt asmopt_push
  5850                           	opt asmopt_off
  5851                           	xorlw	2^0	; case 2
  5852  04C1  3A02               	skipnz
  5853  04C2  1903               	goto	i1l2522
  5854  04C3  2C63               	xorlw	3^2	; case 3
  5855  04C4  3A01               	skipnz
  5856  04C5  1903               	goto	i1l2524
  5857  04C6  2C70               	xorlw	4^3	; case 4
  5858  04C7  3A07               	skipnz
  5859  04C8  1903               	goto	i1l2530
  5860  04C9  2C7F               	xorlw	5^4	; case 5
  5861  04CA  3A01               	skipnz
  5862  04CB  1903               	goto	i1l2538
  5863  04CC  2C9B               	xorlw	6^5	; case 6
  5864  04CD  3A03               	skipnz
  5865  04CE  1903               	goto	i1l2540
  5866  04CF  2CA8               	goto	i1l477
  5867  04D0  2CD3               	opt asmopt_pop
  5868                           
  5869                           	
  5870                           i1l471:	
  5871  04D1                     	goto	i1l477
  5872  04D1  2CD3               	line	53
  5873                           ;TelegramInterpreter.c: 53:     }
  5874                           	
  5875                           i1l468:	
  5876  04D2                     	goto	i1l477
  5877  04D2  2CD3               	
  5878                           i1l467:	
  5879  04D3                     	line	54
  5880                           	
  5881                           i1l477:	
  5882  04D3                     	return
  5883  04D3  0008               	opt stack 0
  5884                           GLOBAL	__end_of_HandleTelegramByte
  5885                           	__end_of_HandleTelegramByte:
  5886  04D4                     	signat	_HandleTelegramByte,89
  5887                           	global	_HandleConfigByte
  5888                           
  5889 ;; *************** function _HandleConfigByte *****************
  5890 ;; Defined at:
  5891 ;;		line 371 in file "Main.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;		None
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;  Byte            1    6[COMMON] unsigned char 
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  1    wreg      void 
  5898 ;; Registers used:
  5899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5905 ;;      Params:         0       0       0       0
  5906 ;;      Locals:         1       0       0       0
  5907 ;;      Temps:          2       0       0       0
  5908 ;;      Totals:         3       0       0       0
  5909 ;;Total ram usage:        3 bytes
  5910 ;; Hardware stack levels used:    1
  5911 ;; Hardware stack levels required when called:    1
  5912 ;; This function calls:
  5913 ;;		_Read_Byte
  5914 ;;		i1_AddByteToBuffer
  5915 ;;		i1_Set_Relay
  5916 ;; This function is called by:
  5917 ;;		_Handle_Interrupts
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5921                           	file	"Main.c"
  5922                           	line	371
  5923                           global __ptext19
  5924                           __ptext19:	;psect for function _HandleConfigByte
  5925  04D4                     psect	text19
  5926                           	file	"Main.c"
  5927                           	line	371
  5928                           	global	__size_of_HandleConfigByte
  5929                           	__size_of_HandleConfigByte	equ	__end_of_HandleConfigByte-_HandleConfigByte
  5930  008B                     	
  5931                           _HandleConfigByte:	
  5932  04D4                     ;incstack = 0
  5933                           	opt	stack 2
  5934                           ; Regs used in _HandleConfigByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5935                           	line	376
  5936                           	
  5937                           i1l2438:	
  5938  04D4                     ;Main.c: 373:     static unsigned char ByteCounter = 0;;Main.c: 375:     unsigned char B
                                 yte;;Main.c: 376:     Byte = Read_Byte();
  5939                           	fcall	_Read_Byte
  5940  04D4  158A  2774  118A   	movwf	(??_HandleConfigByte+0)+0
  5941  04D7  00F4               	movf	(??_HandleConfigByte+0)+0,w
  5942  04D8  0874               	movwf	(HandleConfigByte@Byte)
  5943  04D9  00F6               	line	378
  5944                           	
  5945                           i1l2440:	
  5946  04DA                     ;Main.c: 378:     if (Byte == '>')
  5947                           		movlw	62
  5948  04DA  303E               	xorwf	((HandleConfigByte@Byte)),w
  5949  04DB  0676               	btfss	status,2
  5950  04DC  1D03               	goto	u154_21
  5951  04DD  2CDF               	goto	u154_20
  5952  04DE  2CE0               u154_21:
  5953  04DF                     	goto	i1l229
  5954  04DF  2D5E               u154_20:
  5955  04E0                     	goto	i1l2492
  5956  04E0  2D48               	line	380
  5957                           	
  5958                           i1l2442:	
  5959  04E1                     ;Main.c: 379:     {;Main.c: 380:         switch (ByteCounter)
  5960                           	goto	i1l2492
  5961  04E1  2D48               	line	382
  5962                           ;Main.c: 381:         {;Main.c: 382:             case 0:
  5963                           	
  5964                           i1l225:	
  5965  04E2                     	line	383
  5966                           	
  5967                           i1l2444:	
  5968  04E2                     ;Main.c: 383:                 ByteCounter = ByteCounter + 1;
  5969                           	bcf	status, 5	;RP0=0, select bank0
  5970  04E2  1283               	bcf	status, 6	;RP1=0, select bank0
  5971  04E3  1303               	movf	(HandleConfigByte@ByteCounter),w
  5972  04E4  0864               	addlw	01h
  5973  04E5  3E01               	movwf	(??_HandleConfigByte+0)+0
  5974  04E6  00F4               	movf	(??_HandleConfigByte+0)+0,w
  5975  04E7  0874               	movwf	(HandleConfigByte@ByteCounter)
  5976  04E8  00E4               	line	387
  5977                           	
  5978                           i1l2446:	
  5979  04E9                     ;Main.c: 387:                 PORTAbits.RA5 = 1;
  5980                           	bsf	(5),5	;volatile
  5981  04E9  1685               	line	388
  5982                           	
  5983                           i1l2448:	
  5984  04EA                     ;Main.c: 388:                 TRISAbits.TRISA5 = 1;
  5985                           	bsf	status, 5	;RP0=1, select bank1
  5986  04EA  1683               	bcf	status, 6	;RP1=0, select bank1
  5987  04EB  1303               	bsf	(133)^080h,5	;volatile
  5988  04EC  1685               	line	391
  5989                           	
  5990                           i1l2450:	
  5991  04ED                     ;Main.c: 391:                 AddByteToBuffer('M');
  5992                           	movlw	low(04Dh)
  5993  04ED  304D               	fcall	i1_AddByteToBuffer
  5994  04EE  158A  27C1  118A   	line	392
  5995                           ;Main.c: 392:                 break;
  5996                           	goto	i1l229
  5997  04F1  2D5E               	line	394
  5998                           ;Main.c: 394:             case 1:
  5999                           	
  6000                           i1l227:	
  6001  04F2                     	line	395
  6002                           	
  6003                           i1l2452:	
  6004  04F2                     ;Main.c: 395:                 ByteCounter = ByteCounter + 1;
  6005                           	bcf	status, 5	;RP0=0, select bank0
  6006  04F2  1283               	bcf	status, 6	;RP1=0, select bank0
  6007  04F3  1303               	movf	(HandleConfigByte@ByteCounter),w
  6008  04F4  0864               	addlw	01h
  6009  04F5  3E01               	movwf	(??_HandleConfigByte+0)+0
  6010  04F6  00F4               	movf	(??_HandleConfigByte+0)+0,w
  6011  04F7  0874               	movwf	(HandleConfigByte@ByteCounter)
  6012  04F8  00E4               	line	398
  6013                           	
  6014                           i1l2454:	
  6015  04F9                     ;Main.c: 398:                 AddByteToBuffer(0x31);
  6016                           	movlw	low(031h)
  6017  04F9  3031               	fcall	i1_AddByteToBuffer
  6018  04FA  158A  27C1  118A   	line	399
  6019                           	
  6020                           i1l2456:	
  6021  04FD                     ;Main.c: 399:                 AddByteToBuffer(0x01);
  6022                           	movlw	low(01h)
  6023  04FD  3001               	fcall	i1_AddByteToBuffer
  6024  04FE  158A  27C1  118A   	line	402
  6025                           	
  6026                           i1l2458:	
  6027  0501                     ;Main.c: 402:                 AddByteToBuffer(0x32);
  6028                           	movlw	low(032h)
  6029  0501  3032               	fcall	i1_AddByteToBuffer
  6030  0502  158A  27C1  118A   	line	403
  6031                           	
  6032                           i1l2460:	
  6033  0505                     ;Main.c: 403:                 AddByteToBuffer(0x00);
  6034                           	movlw	low(0)
  6035  0505  3000               	fcall	i1_AddByteToBuffer
  6036  0506  158A  27C1  118A   	line	406
  6037                           	
  6038                           i1l2462:	
  6039  0509                     ;Main.c: 406:                 AddByteToBuffer(0x33);
  6040                           	movlw	low(033h)
  6041  0509  3033               	fcall	i1_AddByteToBuffer
  6042  050A  158A  27C1  118A   	line	407
  6043                           	
  6044                           i1l2464:	
  6045  050D                     ;Main.c: 407:                 AddByteToBuffer(0x00);
  6046                           	movlw	low(0)
  6047  050D  3000               	fcall	i1_AddByteToBuffer
  6048  050E  158A  27C1  118A   	line	410
  6049                           	
  6050                           i1l2466:	
  6051  0511                     ;Main.c: 410:                 AddByteToBuffer(0x34);
  6052                           	movlw	low(034h)
  6053  0511  3034               	fcall	i1_AddByteToBuffer
  6054  0512  158A  27C1  118A   	line	411
  6055                           	
  6056                           i1l2468:	
  6057  0515                     ;Main.c: 411:                 AddByteToBuffer(0x00);
  6058                           	movlw	low(0)
  6059  0515  3000               	fcall	i1_AddByteToBuffer
  6060  0516  158A  27C1  118A   	line	414
  6061                           	
  6062                           i1l2470:	
  6063  0519                     ;Main.c: 414:                 AddByteToBuffer(0xFF);
  6064                           	movlw	low(0FFh)
  6065  0519  30FF               	fcall	i1_AddByteToBuffer
  6066  051A  158A  27C1  118A   	line	415
  6067                           ;Main.c: 415:                 break;
  6068                           	goto	i1l229
  6069  051D  2D5E               	line	417
  6070                           ;Main.c: 417:             case 2:
  6071                           	
  6072                           i1l228:	
  6073  051E                     	line	419
  6074                           	
  6075                           i1l2472:	
  6076  051E                     ;Main.c: 419:                 ByteCounter = 0;
  6077                           	bcf	status, 5	;RP0=0, select bank0
  6078  051E  1283               	bcf	status, 6	;RP1=0, select bank0
  6079  051F  1303               	clrf	(HandleConfigByte@ByteCounter)
  6080  0520  01E4               	line	422
  6081                           	
  6082                           i1l2474:	
  6083  0521                     ;Main.c: 422:                 AddByteToBuffer('X');
  6084                           	movlw	low(058h)
  6085  0521  3058               	fcall	i1_AddByteToBuffer
  6086  0522  158A  27C1  118A   	line	424
  6087                           	
  6088                           i1l2476:	
  6089  0525                     ;Main.c: 424:                 Set_Relay(Relay1, Off);
  6090                           	clrf	(i1Set_Relay@State)
  6091  0525  01F0               	movlw	low(0)
  6092  0526  3000               	fcall	i1_Set_Relay
  6093  0527  118A  23AA  118A   	line	425
  6094                           	
  6095                           i1l2478:	
  6096  052A                     ;Main.c: 425:                 Set_Relay(Relay2, Off);
  6097                           	clrf	(i1Set_Relay@State)
  6098  052A  01F0               	movlw	low(01h)
  6099  052B  3001               	fcall	i1_Set_Relay
  6100  052C  118A  23AA  118A   	line	426
  6101                           	
  6102                           i1l2480:	
  6103  052F                     ;Main.c: 426:                 Set_Relay(Relay3, Off);
  6104                           	clrf	(i1Set_Relay@State)
  6105  052F  01F0               	movlw	low(02h)
  6106  0530  3002               	fcall	i1_Set_Relay
  6107  0531  118A  23AA  118A   	line	427
  6108                           	
  6109                           i1l2482:	
  6110  0534                     ;Main.c: 427:                 Set_Relay(Relay4, Off);
  6111                           	clrf	(i1Set_Relay@State)
  6112  0534  01F0               	movlw	low(03h)
  6113  0535  3003               	fcall	i1_Set_Relay
  6114  0536  118A  23AA  118A   	line	428
  6115                           	
  6116                           i1l2484:	
  6117  0539                     ;Main.c: 428:                 Set_Relay(Relay5, Off);
  6118                           	clrf	(i1Set_Relay@State)
  6119  0539  01F0               	movlw	low(04h)
  6120  053A  3004               	fcall	i1_Set_Relay
  6121  053B  118A  23AA  118A   	line	429
  6122                           	
  6123                           i1l2486:	
  6124  053E                     ;Main.c: 429:                 Set_Relay(Relay6, Off);
  6125                           	clrf	(i1Set_Relay@State)
  6126  053E  01F0               	movlw	low(05h)
  6127  053F  3005               	fcall	i1_Set_Relay
  6128  0540  118A  23AA  118A   	line	431
  6129                           	
  6130                           i1l2488:	
  6131  0543                     ;Main.c: 431:                 CurrentMode = Running;
  6132                           	bcf	status, 5	;RP0=0, select bank0
  6133  0543  1283               	bcf	status, 6	;RP1=0, select bank0
  6134  0544  1303               	clrf	(_CurrentMode)
  6135  0545  01E5               	line	434
  6136                           	
  6137                           i1l2490:	
  6138  0546                     ;Main.c: 434:                 INTCONbits.RAIE = 1;
  6139                           	bsf	(11),3	;volatile
  6140  0546  158B               	line	436
  6141                           ;Main.c: 436:         }
  6142                           	goto	i1l229
  6143  0547  2D5E               	
  6144                           i1l224:	
  6145  0548                     	
  6146                           i1l2492:	
  6147  0548                     	bcf	status, 5	;RP0=0, select bank0
  6148  0548  1283               	bcf	status, 6	;RP1=0, select bank0
  6149  0549  1303               	movf	(HandleConfigByte@ByteCounter),w
  6150  054A  0864               	movwf	(??_HandleConfigByte+0)+0
  6151  054B  00F4               	clrf	(??_HandleConfigByte+0)+0+1
  6152  054C  01F5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6153                           ; Switch size 1, requested type "space"
  6154                           ; Number of cases is 1, Range of values is 0 to 0
  6155                           ; switch strategies available:
  6156                           ; Name         Instructions Cycles
  6157                           ; simple_byte            4     3 (average)
  6158                           ; direct_byte            9     7 (fixed)
  6159                           ; jumptable            260     6 (fixed)
  6160                           ;	Chosen strategy is simple_byte
  6161                           
  6162                           	movf 1+(??_HandleConfigByte+0)+0,w
  6163  054D  0875               	opt asmopt_push
  6164                           	opt asmopt_off
  6165                           	xorlw	0^0	; case 0
  6166  054E  3A00               	skipnz
  6167  054F  1903               	goto	i1l2898
  6168  0550  2D52               	goto	i1l229
  6169  0551  2D5E               	opt asmopt_pop
  6170                           	
  6171                           i1l2898:	
  6172  0552                     ; Switch size 1, requested type "space"
  6173                           ; Number of cases is 3, Range of values is 0 to 2
  6174                           ; switch strategies available:
  6175                           ; Name         Instructions Cycles
  6176                           ; simple_byte           10     6 (average)
  6177                           ; direct_byte           13     7 (fixed)
  6178                           ; jumptable            260     6 (fixed)
  6179                           ;	Chosen strategy is simple_byte
  6180                           
  6181                           	movf 0+(??_HandleConfigByte+0)+0,w
  6182  0552  0874               	opt asmopt_push
  6183                           	opt asmopt_off
  6184                           	xorlw	0^0	; case 0
  6185  0553  3A00               	skipnz
  6186  0554  1903               	goto	i1l2444
  6187  0555  2CE2               	xorlw	1^0	; case 1
  6188  0556  3A01               	skipnz
  6189  0557  1903               	goto	i1l2452
  6190  0558  2CF2               	xorlw	2^1	; case 2
  6191  0559  3A03               	skipnz
  6192  055A  1903               	goto	i1l2472
  6193  055B  2D1E               	goto	i1l229
  6194  055C  2D5E               	opt asmopt_pop
  6195                           
  6196                           	
  6197                           i1l226:	
  6198  055D                     	goto	i1l229
  6199  055D  2D5E               	line	438
  6200                           ;Main.c: 438:     }
  6201                           	
  6202                           i1l223:	
  6203  055E                     	line	440
  6204                           	
  6205                           i1l229:	
  6206  055E                     	return
  6207  055E  0008               	opt stack 0
  6208                           GLOBAL	__end_of_HandleConfigByte
  6209                           	__end_of_HandleConfigByte:
  6210  055F                     	signat	_HandleConfigByte,89
  6211                           	global	i1_Set_Relay
  6212                           
  6213 ;; *************** function i1_Set_Relay *****************
  6214 ;; Defined at:
  6215 ;;		line 64 in file "RelayControl.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  Relay           1    wreg     unsigned char 
  6218 ;;  State           1    0[COMMON] unsigned char 
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;  Relay           1    3[COMMON] unsigned char 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      void 
  6223 ;; Registers used:
  6224 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6230 ;;      Params:         1       0       0       0
  6231 ;;      Locals:         1       0       0       0
  6232 ;;      Temps:          2       0       0       0
  6233 ;;      Totals:         4       0       0       0
  6234 ;;Total ram usage:        4 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		_HandleConfigByte
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6243                           	file	"RelayControl.c"
  6244                           	line	64
  6245                           global __ptext20
  6246                           __ptext20:	;psect for function i1_Set_Relay
  6247  03AA                     psect	text20
  6248                           	file	"RelayControl.c"
  6249                           	line	64
  6250                           	global	__size_ofi1_Set_Relay
  6251                           	__size_ofi1_Set_Relay	equ	__end_ofi1_Set_Relay-i1_Set_Relay
  6252  0096                     	
  6253                           i1_Set_Relay:	
  6254  03AA                     ;incstack = 0
  6255                           	opt	stack 2
  6256                           ; Regs used in i1_Set_Relay: [wreg-fsr0h+status,2+status,0]
  6257                           ;i1Set_Relay@Relay stored from wreg
  6258                           	movwf	(i1Set_Relay@Relay)
  6259  03AA  00F3               	line	66
  6260                           	
  6261                           i1l2118:	
  6262  03AB                     ;RelayControl.c: 64: void Set_Relay (unsigned char Relay, unsigned char State);RelayCont
                                 rol.c: 65: {;RelayControl.c: 66:     switch (Relay)
  6263                           	goto	i1l2170
  6264  03AB  2C2B               	line	68
  6265                           ;RelayControl.c: 67:     {;RelayControl.c: 68:         case Relay1:
  6266                           	
  6267                           i1l375:	
  6268  03AC                     	line	69
  6269                           	
  6270                           i1l2120:	
  6271  03AC                     ;RelayControl.c: 69:         if (State == On)
  6272                           		decf	((i1Set_Relay@State)),w
  6273  03AC  0370               	btfss	status,2
  6274  03AD  1D03               	goto	u105_21
  6275  03AE  2BB0               	goto	u105_20
  6276  03AF  2BB1               u105_21:
  6277  03B0                     	goto	i1l2124
  6278  03B0  2BB5               u105_20:
  6279  03B1                     	line	71
  6280                           	
  6281                           i1l2122:	
  6282  03B1                     ;RelayControl.c: 70:         {;RelayControl.c: 71:             PORTAbits.RA0 = 1;
  6283                           	bcf	status, 5	;RP0=0, select bank0
  6284  03B1  1283               	bcf	status, 6	;RP1=0, select bank0
  6285  03B2  1303               	bsf	(5),0	;volatile
  6286  03B3  1405               	line	72
  6287                           ;RelayControl.c: 72:         }
  6288                           	goto	i1l406
  6289  03B4  2C3F               	line	73
  6290                           ;RelayControl.c: 73:         else if (State == Off)
  6291                           	
  6292                           i1l376:	
  6293  03B5                     	
  6294                           i1l2124:	
  6295  03B5                     	movf	((i1Set_Relay@State)),w
  6296  03B5  0870               	btfss	status,2
  6297  03B6  1D03               	goto	u106_21
  6298  03B7  2BB9               	goto	u106_20
  6299  03B8  2BBA               u106_21:
  6300  03B9                     	goto	i1l406
  6301  03B9  2C3F               u106_20:
  6302  03BA                     	line	75
  6303                           	
  6304                           i1l2126:	
  6305  03BA                     ;RelayControl.c: 74:         {;RelayControl.c: 75:             PORTAbits.RA0 = 0;
  6306                           	bcf	status, 5	;RP0=0, select bank0
  6307  03BA  1283               	bcf	status, 6	;RP1=0, select bank0
  6308  03BB  1303               	bcf	(5),0	;volatile
  6309  03BC  1005               	line	76
  6310                           ;RelayControl.c: 76:         }
  6311                           	goto	i1l406
  6312  03BD  2C3F               	line	77
  6313                           ;RelayControl.c: 77:         else
  6314                           	
  6315                           i1l378:	
  6316  03BE                     	goto	i1l406
  6317  03BE  2C3F               	line	80
  6318                           ;RelayControl.c: 78:         {;RelayControl.c: 80:         }
  6319                           	
  6320                           i1l379:	
  6321  03BF                     	goto	i1l406
  6322  03BF  2C3F               	
  6323                           i1l377:	
  6324  03C0                     	line	81
  6325                           ;RelayControl.c: 81:         break;
  6326                           	goto	i1l406
  6327  03C0  2C3F               	line	83
  6328                           ;RelayControl.c: 83:         case Relay2:
  6329                           	
  6330                           i1l381:	
  6331  03C1                     	line	84
  6332                           	
  6333                           i1l2128:	
  6334  03C1                     ;RelayControl.c: 84:         if (State == On)
  6335                           		decf	((i1Set_Relay@State)),w
  6336  03C1  0370               	btfss	status,2
  6337  03C2  1D03               	goto	u107_21
  6338  03C3  2BC5               	goto	u107_20
  6339  03C4  2BC6               u107_21:
  6340  03C5                     	goto	i1l2132
  6341  03C5  2BCA               u107_20:
  6342  03C6                     	line	86
  6343                           	
  6344                           i1l2130:	
  6345  03C6                     ;RelayControl.c: 85:         {;RelayControl.c: 86:             PORTAbits.RA1 = 1;
  6346                           	bcf	status, 5	;RP0=0, select bank0
  6347  03C6  1283               	bcf	status, 6	;RP1=0, select bank0
  6348  03C7  1303               	bsf	(5),1	;volatile
  6349  03C8  1485               	line	87
  6350                           ;RelayControl.c: 87:         }
  6351                           	goto	i1l406
  6352  03C9  2C3F               	line	88
  6353                           ;RelayControl.c: 88:         else if (State == Off)
  6354                           	
  6355                           i1l382:	
  6356  03CA                     	
  6357                           i1l2132:	
  6358  03CA                     	movf	((i1Set_Relay@State)),w
  6359  03CA  0870               	btfss	status,2
  6360  03CB  1D03               	goto	u108_21
  6361  03CC  2BCE               	goto	u108_20
  6362  03CD  2BCF               u108_21:
  6363  03CE                     	goto	i1l406
  6364  03CE  2C3F               u108_20:
  6365  03CF                     	line	90
  6366                           	
  6367                           i1l2134:	
  6368  03CF                     ;RelayControl.c: 89:         {;RelayControl.c: 90:             PORTAbits.RA1 = 0;
  6369                           	bcf	status, 5	;RP0=0, select bank0
  6370  03CF  1283               	bcf	status, 6	;RP1=0, select bank0
  6371  03D0  1303               	bcf	(5),1	;volatile
  6372  03D1  1085               	line	91
  6373                           ;RelayControl.c: 91:         }
  6374                           	goto	i1l406
  6375  03D2  2C3F               	line	92
  6376                           ;RelayControl.c: 92:         else
  6377                           	
  6378                           i1l384:	
  6379  03D3                     	goto	i1l406
  6380  03D3  2C3F               	line	95
  6381                           ;RelayControl.c: 93:         {;RelayControl.c: 95:         }
  6382                           	
  6383                           i1l385:	
  6384  03D4                     	goto	i1l406
  6385  03D4  2C3F               	
  6386                           i1l383:	
  6387  03D5                     	line	96
  6388                           ;RelayControl.c: 96:         break;
  6389                           	goto	i1l406
  6390  03D5  2C3F               	line	98
  6391                           ;RelayControl.c: 98:         case Relay3:
  6392                           	
  6393                           i1l386:	
  6394  03D6                     	line	99
  6395                           	
  6396                           i1l2136:	
  6397  03D6                     ;RelayControl.c: 99:         if (State == On)
  6398                           		decf	((i1Set_Relay@State)),w
  6399  03D6  0370               	btfss	status,2
  6400  03D7  1D03               	goto	u109_21
  6401  03D8  2BDA               	goto	u109_20
  6402  03D9  2BDB               u109_21:
  6403  03DA                     	goto	i1l2140
  6404  03DA  2BDF               u109_20:
  6405  03DB                     	line	101
  6406                           	
  6407                           i1l2138:	
  6408  03DB                     ;RelayControl.c: 100:         {;RelayControl.c: 101:             PORTAbits.RA2 = 1;
  6409                           	bcf	status, 5	;RP0=0, select bank0
  6410  03DB  1283               	bcf	status, 6	;RP1=0, select bank0
  6411  03DC  1303               	bsf	(5),2	;volatile
  6412  03DD  1505               	line	102
  6413                           ;RelayControl.c: 102:         }
  6414                           	goto	i1l406
  6415  03DE  2C3F               	line	103
  6416                           ;RelayControl.c: 103:         else if (State == Off)
  6417                           	
  6418                           i1l387:	
  6419  03DF                     	
  6420                           i1l2140:	
  6421  03DF                     	movf	((i1Set_Relay@State)),w
  6422  03DF  0870               	btfss	status,2
  6423  03E0  1D03               	goto	u110_21
  6424  03E1  2BE3               	goto	u110_20
  6425  03E2  2BE4               u110_21:
  6426  03E3                     	goto	i1l406
  6427  03E3  2C3F               u110_20:
  6428  03E4                     	line	105
  6429                           	
  6430                           i1l2142:	
  6431  03E4                     ;RelayControl.c: 104:         {;RelayControl.c: 105:             PORTAbits.RA2 = 0;
  6432                           	bcf	status, 5	;RP0=0, select bank0
  6433  03E4  1283               	bcf	status, 6	;RP1=0, select bank0
  6434  03E5  1303               	bcf	(5),2	;volatile
  6435  03E6  1105               	line	106
  6436                           ;RelayControl.c: 106:         }
  6437                           	goto	i1l406
  6438  03E7  2C3F               	line	107
  6439                           ;RelayControl.c: 107:         else
  6440                           	
  6441                           i1l389:	
  6442  03E8                     	goto	i1l406
  6443  03E8  2C3F               	line	110
  6444                           ;RelayControl.c: 108:         {;RelayControl.c: 110:         }
  6445                           	
  6446                           i1l390:	
  6447  03E9                     	goto	i1l406
  6448  03E9  2C3F               	
  6449                           i1l388:	
  6450  03EA                     	line	111
  6451                           ;RelayControl.c: 111:         break;
  6452                           	goto	i1l406
  6453  03EA  2C3F               	line	113
  6454                           ;RelayControl.c: 113:         case Relay4:
  6455                           	
  6456                           i1l391:	
  6457  03EB                     	line	114
  6458                           	
  6459                           i1l2144:	
  6460  03EB                     ;RelayControl.c: 114:         if (State == On)
  6461                           		decf	((i1Set_Relay@State)),w
  6462  03EB  0370               	btfss	status,2
  6463  03EC  1D03               	goto	u111_21
  6464  03ED  2BEF               	goto	u111_20
  6465  03EE  2BF0               u111_21:
  6466  03EF                     	goto	i1l2148
  6467  03EF  2BF4               u111_20:
  6468  03F0                     	line	116
  6469                           	
  6470                           i1l2146:	
  6471  03F0                     ;RelayControl.c: 115:         {;RelayControl.c: 116:             PORTCbits.RC0 = 1;
  6472                           	bcf	status, 5	;RP0=0, select bank0
  6473  03F0  1283               	bcf	status, 6	;RP1=0, select bank0
  6474  03F1  1303               	bsf	(7),0	;volatile
  6475  03F2  1407               	line	117
  6476                           ;RelayControl.c: 117:         }
  6477                           	goto	i1l406
  6478  03F3  2C3F               	line	118
  6479                           ;RelayControl.c: 118:         else if (State == Off)
  6480                           	
  6481                           i1l392:	
  6482  03F4                     	
  6483                           i1l2148:	
  6484  03F4                     	movf	((i1Set_Relay@State)),w
  6485  03F4  0870               	btfss	status,2
  6486  03F5  1D03               	goto	u112_21
  6487  03F6  2BF8               	goto	u112_20
  6488  03F7  2BF9               u112_21:
  6489  03F8                     	goto	i1l406
  6490  03F8  2C3F               u112_20:
  6491  03F9                     	line	120
  6492                           	
  6493                           i1l2150:	
  6494  03F9                     ;RelayControl.c: 119:         {;RelayControl.c: 120:             PORTCbits.RC0 = 0;
  6495                           	bcf	status, 5	;RP0=0, select bank0
  6496  03F9  1283               	bcf	status, 6	;RP1=0, select bank0
  6497  03FA  1303               	bcf	(7),0	;volatile
  6498  03FB  1007               	line	121
  6499                           ;RelayControl.c: 121:         }
  6500                           	goto	i1l406
  6501  03FC  2C3F               	line	122
  6502                           ;RelayControl.c: 122:         else
  6503                           	
  6504                           i1l394:	
  6505  03FD                     	goto	i1l406
  6506  03FD  2C3F               	line	125
  6507                           ;RelayControl.c: 123:         {;RelayControl.c: 125:         }
  6508                           	
  6509                           i1l395:	
  6510  03FE                     	goto	i1l406
  6511  03FE  2C3F               	
  6512                           i1l393:	
  6513  03FF                     	line	126
  6514                           ;RelayControl.c: 126:         break;
  6515                           	goto	i1l406
  6516  03FF  2C3F               	line	128
  6517                           ;RelayControl.c: 128:         case Relay5:
  6518                           	
  6519                           i1l396:	
  6520  0400                     	line	129
  6521                           	
  6522                           i1l2152:	
  6523  0400                     ;RelayControl.c: 129:         if (State == On)
  6524                           		decf	((i1Set_Relay@State)),w
  6525  0400  0370               	btfss	status,2
  6526  0401  1D03               	goto	u113_21
  6527  0402  2C04               	goto	u113_20
  6528  0403  2C05               u113_21:
  6529  0404                     	goto	i1l2156
  6530  0404  2C09               u113_20:
  6531  0405                     	line	131
  6532                           	
  6533                           i1l2154:	
  6534  0405                     ;RelayControl.c: 130:         {;RelayControl.c: 131:             PORTCbits.RC1 = 1;
  6535                           	bcf	status, 5	;RP0=0, select bank0
  6536  0405  1283               	bcf	status, 6	;RP1=0, select bank0
  6537  0406  1303               	bsf	(7),1	;volatile
  6538  0407  1487               	line	132
  6539                           ;RelayControl.c: 132:         }
  6540                           	goto	i1l406
  6541  0408  2C3F               	line	133
  6542                           ;RelayControl.c: 133:         else if (State == Off)
  6543                           	
  6544                           i1l397:	
  6545  0409                     	
  6546                           i1l2156:	
  6547  0409                     	movf	((i1Set_Relay@State)),w
  6548  0409  0870               	btfss	status,2
  6549  040A  1D03               	goto	u114_21
  6550  040B  2C0D               	goto	u114_20
  6551  040C  2C0E               u114_21:
  6552  040D                     	goto	i1l406
  6553  040D  2C3F               u114_20:
  6554  040E                     	line	135
  6555                           	
  6556                           i1l2158:	
  6557  040E                     ;RelayControl.c: 134:         {;RelayControl.c: 135:             PORTCbits.RC1 = 0;
  6558                           	bcf	status, 5	;RP0=0, select bank0
  6559  040E  1283               	bcf	status, 6	;RP1=0, select bank0
  6560  040F  1303               	bcf	(7),1	;volatile
  6561  0410  1087               	line	136
  6562                           ;RelayControl.c: 136:         }
  6563                           	goto	i1l406
  6564  0411  2C3F               	line	137
  6565                           ;RelayControl.c: 137:         else
  6566                           	
  6567                           i1l399:	
  6568  0412                     	goto	i1l406
  6569  0412  2C3F               	line	140
  6570                           ;RelayControl.c: 138:         {;RelayControl.c: 140:         }
  6571                           	
  6572                           i1l400:	
  6573  0413                     	goto	i1l406
  6574  0413  2C3F               	
  6575                           i1l398:	
  6576  0414                     	line	141
  6577                           ;RelayControl.c: 141:         break;
  6578                           	goto	i1l406
  6579  0414  2C3F               	line	143
  6580                           ;RelayControl.c: 143:         case Relay6:
  6581                           	
  6582                           i1l401:	
  6583  0415                     	line	144
  6584                           	
  6585                           i1l2160:	
  6586  0415                     ;RelayControl.c: 144:         if (State == On)
  6587                           		decf	((i1Set_Relay@State)),w
  6588  0415  0370               	btfss	status,2
  6589  0416  1D03               	goto	u115_21
  6590  0417  2C19               	goto	u115_20
  6591  0418  2C1A               u115_21:
  6592  0419                     	goto	i1l2164
  6593  0419  2C1E               u115_20:
  6594  041A                     	line	146
  6595                           	
  6596                           i1l2162:	
  6597  041A                     ;RelayControl.c: 145:         {;RelayControl.c: 146:             PORTCbits.RC2 = 1;
  6598                           	bcf	status, 5	;RP0=0, select bank0
  6599  041A  1283               	bcf	status, 6	;RP1=0, select bank0
  6600  041B  1303               	bsf	(7),2	;volatile
  6601  041C  1507               	line	147
  6602                           ;RelayControl.c: 147:         }
  6603                           	goto	i1l406
  6604  041D  2C3F               	line	148
  6605                           ;RelayControl.c: 148:         else if (State == Off)
  6606                           	
  6607                           i1l402:	
  6608  041E                     	
  6609                           i1l2164:	
  6610  041E                     	movf	((i1Set_Relay@State)),w
  6611  041E  0870               	btfss	status,2
  6612  041F  1D03               	goto	u116_21
  6613  0420  2C22               	goto	u116_20
  6614  0421  2C23               u116_21:
  6615  0422                     	goto	i1l406
  6616  0422  2C3F               u116_20:
  6617  0423                     	line	150
  6618                           	
  6619                           i1l2166:	
  6620  0423                     ;RelayControl.c: 149:         {;RelayControl.c: 150:             PORTCbits.RC2 = 0;
  6621                           	bcf	status, 5	;RP0=0, select bank0
  6622  0423  1283               	bcf	status, 6	;RP1=0, select bank0
  6623  0424  1303               	bcf	(7),2	;volatile
  6624  0425  1107               	line	151
  6625                           ;RelayControl.c: 151:         }
  6626                           	goto	i1l406
  6627  0426  2C3F               	line	152
  6628                           ;RelayControl.c: 152:         else
  6629                           	
  6630                           i1l404:	
  6631  0427                     	goto	i1l406
  6632  0427  2C3F               	line	155
  6633                           ;RelayControl.c: 153:         {;RelayControl.c: 155:         }
  6634                           	
  6635                           i1l405:	
  6636  0428                     	goto	i1l406
  6637  0428  2C3F               	
  6638                           i1l403:	
  6639  0429                     	line	156
  6640                           ;RelayControl.c: 156:         break;
  6641                           	goto	i1l406
  6642  0429  2C3F               	line	157
  6643                           	
  6644                           i1l2168:	
  6645  042A                     ;RelayControl.c: 157:     }
  6646                           	goto	i1l406
  6647  042A  2C3F               	
  6648                           i1l374:	
  6649  042B                     	
  6650                           i1l2170:	
  6651  042B                     	movf	(i1Set_Relay@Relay),w
  6652  042B  0873               	movwf	(??i1_Set_Relay+0)+0
  6653  042C  00F1               	clrf	(??i1_Set_Relay+0)+0+1
  6654  042D  01F2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6655                           ; Switch size 1, requested type "space"
  6656                           ; Number of cases is 1, Range of values is 0 to 0
  6657                           ; switch strategies available:
  6658                           ; Name         Instructions Cycles
  6659                           ; simple_byte            4     3 (average)
  6660                           ; direct_byte            9     7 (fixed)
  6661                           ; jumptable            260     6 (fixed)
  6662                           ;	Chosen strategy is simple_byte
  6663                           
  6664                           	movf 1+(??i1_Set_Relay+0)+0,w
  6665  042E  0872               	opt asmopt_push
  6666                           	opt asmopt_off
  6667                           	xorlw	0^0	; case 0
  6668  042F  3A00               	skipnz
  6669  0430  1903               	goto	i1l2900
  6670  0431  2C33               	goto	i1l406
  6671  0432  2C3F               	opt asmopt_pop
  6672                           	
  6673                           i1l2900:	
  6674  0433                     ; Switch size 1, requested type "space"
  6675                           ; Number of cases is 6, Range of values is 0 to 5
  6676                           ; switch strategies available:
  6677                           ; Name         Instructions Cycles
  6678                           ; direct_byte           19     7 (fixed)
  6679                           ; simple_byte           19    10 (average)
  6680                           ; jumptable            260     6 (fixed)
  6681                           ;	Chosen strategy is direct_byte
  6682                           
  6683                           	movf 0+(??i1_Set_Relay+0)+0,w
  6684  0433  0871               	movwf fsr
  6685  0434  0084               	movlw	6
  6686  0435  3006               	subwf	fsr,w
  6687  0436  0204               skipnc
  6688  0437  1803               goto i1l406
  6689  0438  2C3F               movlw high(i1S2902)
  6690  0439  3008               movwf pclath
  6691  043A  008A               	clrc
  6692  043B  1003               	rlf fsr,w
  6693  043C  0D04               	addlw low(i1S2902)
  6694  043D  3E18               	movwf pc
  6695  043E  0082               psect	swtext3,local,class=CONST,delta=2
  6696                           global __pswtext3
  6697                           __pswtext3:
  6698  0818                     i1S2902:
  6699  0818                     	ljmp	i1l2120
  6700  0818  118A  2BAC         	ljmp	i1l2128
  6701  081A  118A  2BC1         	ljmp	i1l2136
  6702  081C  118A  2BD6         	ljmp	i1l2144
  6703  081E  118A  2BEB         	ljmp	i1l2152
  6704  0820  118A  2C00         	ljmp	i1l2160
  6705  0822  118A  2C15         psect	text20
  6706                           
  6707                           	
  6708                           i1l380:	
  6709  043F                     	line	159
  6710                           	
  6711                           i1l406:	
  6712  043F                     	return
  6713  043F  0008               	opt stack 0
  6714                           GLOBAL	__end_ofi1_Set_Relay
  6715                           	__end_ofi1_Set_Relay:
  6716  0440                     	signat	i1_Set_Relay,89
  6717                           	global	i1_AddByteToBuffer
  6718                           
  6719 ;; *************** function i1_AddByteToBuffer *****************
  6720 ;; Defined at:
  6721 ;;		line 120 in file "Eusart.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;  Byte            1    wreg     unsigned char 
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;  Byte            1    1[COMMON] unsigned char 
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      void 
  6728 ;; Registers used:
  6729 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6735 ;;      Params:         0       0       0       0
  6736 ;;      Locals:         1       0       0       0
  6737 ;;      Temps:          1       0       0       0
  6738 ;;      Totals:         2       0       0       0
  6739 ;;Total ram usage:        2 bytes
  6740 ;; Hardware stack levels used:    1
  6741 ;; This function calls:
  6742 ;;		Nothing
  6743 ;; This function is called by:
  6744 ;;		_HandleConfigByte
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6748                           	file	"Eusart.c"
  6749                           	line	120
  6750                           global __ptext21
  6751                           __ptext21:	;psect for function i1_AddByteToBuffer
  6752  0FC1                     psect	text21
  6753                           	file	"Eusart.c"
  6754                           	line	120
  6755                           	global	__size_ofi1_AddByteToBuffer
  6756                           	__size_ofi1_AddByteToBuffer	equ	__end_ofi1_AddByteToBuffer-i1_AddByteToBuffer
  6757  001A                     	
  6758                           i1_AddByteToBuffer:	
  6759  0FC1                     ;incstack = 0
  6760                           	opt	stack 2
  6761                           ; Regs used in i1_AddByteToBuffer: [wreg-fsr0h+status,2+status,0]
  6762                           ;i1AddByteToBuffer@Byte stored from wreg
  6763                           	movwf	(i1AddByteToBuffer@Byte)
  6764  0FC1  00F1               	line	122
  6765                           	
  6766                           i1l2108:	
  6767  0FC2                     ;Eusart.c: 120: void AddByteToBuffer (unsigned char Byte);Eusart.c: 121: {;Eusart.c: 122
                                 :     SendBuffer[BufferHead] = Byte;
  6768                           	movf	(i1AddByteToBuffer@Byte),w
  6769  0FC2  0871               	movwf	(??i1_AddByteToBuffer+0)+0
  6770  0FC3  00F0               	movf	(_BufferHead),w
  6771  0FC4  087D               	addlw	low(_SendBuffer|((0x0)<<8))&0ffh
  6772  0FC5  3EA0               	movwf	fsr0
  6773  0FC6  0084               	movf	(??i1_AddByteToBuffer+0)+0,w
  6774  0FC7  0870               	bcf	status, 7	;select IRP bank1
  6775  0FC8  1383               	movwf	indf
  6776  0FC9  0080               	line	124
  6777                           	
  6778                           i1l2110:	
  6779  0FCA                     ;Eusart.c: 124:     if (BufferHead == 39)
  6780                           		movlw	39
  6781  0FCA  3027               	xorwf	((_BufferHead)),w
  6782  0FCB  067D               	btfss	status,2
  6783  0FCC  1D03               	goto	u104_21
  6784  0FCD  2FCF               	goto	u104_20
  6785  0FCE  2FD0               u104_21:
  6786  0FCF                     	goto	i1l2114
  6787  0FCF  2FD2               u104_20:
  6788  0FD0                     	line	126
  6789                           	
  6790                           i1l2112:	
  6791  0FD0                     ;Eusart.c: 125:     {;Eusart.c: 126:         BufferHead = 0;
  6792                           	clrf	(_BufferHead)
  6793  0FD0  01FD               	line	127
  6794                           ;Eusart.c: 127:     }
  6795                           	goto	i1l2116
  6796  0FD1  2FD7               	line	128
  6797                           ;Eusart.c: 128:     else
  6798                           	
  6799                           i1l315:	
  6800  0FD2                     	line	130
  6801                           	
  6802                           i1l2114:	
  6803  0FD2                     ;Eusart.c: 129:     {;Eusart.c: 130:         BufferHead++;
  6804                           	movlw	low(01h)
  6805  0FD2  3001               	movwf	(??i1_AddByteToBuffer+0)+0
  6806  0FD3  00F0               	movf	(??i1_AddByteToBuffer+0)+0,w
  6807  0FD4  0870               	addwf	(_BufferHead),f
  6808  0FD5  07FD               	goto	i1l2116
  6809  0FD6  2FD7               	line	131
  6810                           ;Eusart.c: 131:     }
  6811                           	
  6812                           i1l316:	
  6813  0FD7                     	line	134
  6814                           	
  6815                           i1l2116:	
  6816  0FD7                     ;Eusart.c: 134:     PIE1bits.TXIE = 1;
  6817                           	bsf	status, 5	;RP0=1, select bank1
  6818  0FD7  1683               	bcf	status, 6	;RP1=0, select bank1
  6819  0FD8  1303               	bsf	(140)^080h,1	;volatile
  6820  0FD9  148C               	line	136
  6821                           	
  6822                           i1l317:	
  6823  0FDA                     	return
  6824  0FDA  0008               	opt stack 0
  6825                           GLOBAL	__end_ofi1_AddByteToBuffer
  6826                           	__end_ofi1_AddByteToBuffer:
  6827  0FDB                     	signat	i1_AddByteToBuffer,89
  6828                           	global	_Read_Byte
  6829                           
  6830 ;; *************** function _Read_Byte *****************
  6831 ;; Defined at:
  6832 ;;		line 106 in file "Eusart.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;		None
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;  Data            1    1[COMMON] unsigned char 
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  1    wreg      unsigned char 
  6839 ;; Registers used:
  6840 ;;		wreg
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6846 ;;      Params:         0       0       0       0
  6847 ;;      Locals:         1       0       0       0
  6848 ;;      Temps:          1       0       0       0
  6849 ;;      Totals:         2       0       0       0
  6850 ;;Total ram usage:        2 bytes
  6851 ;; Hardware stack levels used:    1
  6852 ;; This function calls:
  6853 ;;		Nothing
  6854 ;; This function is called by:
  6855 ;;		_HandleConfigByte
  6856 ;;		_HandleTelegramByte
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6860                           	line	106
  6861                           global __ptext22
  6862                           __ptext22:	;psect for function _Read_Byte
  6863  0F74                     psect	text22
  6864                           	file	"Eusart.c"
  6865                           	line	106
  6866                           	global	__size_of_Read_Byte
  6867                           	__size_of_Read_Byte	equ	__end_of_Read_Byte-_Read_Byte
  6868  0009                     	
  6869                           _Read_Byte:	
  6870  0F74                     ;incstack = 0
  6871                           	opt	stack 2
  6872                           ; Regs used in _Read_Byte: [wreg]
  6873                           	line	108
  6874                           	
  6875                           i1l2102:	
  6876  0F74                     ;Eusart.c: 108:     unsigned char Data = RCREG;
  6877                           	bcf	status, 5	;RP0=0, select bank0
  6878  0F74  1283               	bcf	status, 6	;RP1=0, select bank0
  6879  0F75  1303               	movf	(20),w	;volatile
  6880  0F76  0814               	movwf	(??_Read_Byte+0)+0
  6881  0F77  00F0               	movf	(??_Read_Byte+0)+0,w
  6882  0F78  0870               	movwf	(Read_Byte@Data)
  6883  0F79  00F1               	line	110
  6884                           ;Eusart.c: 110:     return Data;
  6885                           	movf	(Read_Byte@Data),w
  6886  0F7A  0871               	goto	i1l309
  6887  0F7B  2F7C               	
  6888                           i1l2104:	
  6889  0F7C                     	line	111
  6890                           	
  6891                           i1l309:	
  6892  0F7C                     	return
  6893  0F7C  0008               	opt stack 0
  6894                           GLOBAL	__end_of_Read_Byte
  6895                           	__end_of_Read_Byte:
  6896  0F7D                     	signat	_Read_Byte,89
  6897                           global	___latbits
  6898                           ___latbits	equ	1
  6899  0001                     	global	btemp
  6900                           	btemp set 07Eh
  6901  007E                     
  6902                           	DABS	1,126,2	;btemp
  6903                           	global	wtemp0
  6904                           	wtemp0 set btemp+0
  6905  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     56      79
    BANK1            80      0      78
    BANK2            80      0       0

Pointer List with Targets:

    SetStopTime@RelayStopTime	PTR unsigned char  size(1) Largest target is 3
		 -> Relay6StopTime(BANK1[3]), Relay5StopTime(BANK1[3]), Relay4StopTime(BANK1[3]), Relay3StopTime(BANK1[3]), 
		 -> Relay2StopTime(BANK1[3]), Relay1StopTime(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handle_Interrupts in COMMON

    _Handle_Interrupts->_HandleConfigByte
    _WriteByteFromBuffer->_Write_Byte
    _HandleTelegramByte->_Read_Byte
    _HandleConfigByte->i1_Set_Relay

Critical Paths under _main in BANK0

    _main->_Handle_Telegram
    _Handle_Telegram->_SendTelegram
    _SendTelegram->_AddByteToBuffer
    _CheckStopTime->_Set_Relay

Critical Paths under _Handle_Interrupts in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handle_Interrupts in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handle_Interrupts in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    7496
                                             52 BANK0      4     4      0
                    _AddByteToBuffer
                      _CheckStopTime
                    _Handle_Telegram
                         _Init_Ports
                      _Init_Receiver
                        _Init_Relays
                         _Init_Timer
                   _Init_Transmitter
                        _Start_Timer
 ---------------------------------------------------------------------------------
 (1) _Start_Timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Transmitter                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Relays                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Receiver                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Handle_Telegram                                     27     6     21    5520
                                             25 BANK0     27     6     21
                         _Read_Relay
                       _SendTelegram
                        _SetStopTime
                          _Set_Relay
 ---------------------------------------------------------------------------------
 (2) _SetStopTime                                          6     3      3    1942
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _SendTelegram                                        24     3     21     304
                                              2 BANK0     23     2     21
                    _AddByteToBuffer
 ---------------------------------------------------------------------------------
 (3) _AddByteToBuffer                                      2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Read_Relay                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CheckStopTime                                        2     2      0    1954
                                              4 BANK0      2     2      0
                          _Set_Relay
 ---------------------------------------------------------------------------------
 (2) _Set_Relay                                            4     3      1    1954
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Handle_Interrupts                                    6     6      0     711
                                              7 COMMON     6     6      0
                   _HandleConfigByte
                 _HandleTelegramByte
                    _Timer_Interrupt
                _WriteByteFromBuffer
 ---------------------------------------------------------------------------------
 (5) _WriteByteFromBuffer                                  1     1      0      22
                                              1 COMMON     1     1      0
                         _Write_Byte
 ---------------------------------------------------------------------------------
 (6) _Write_Byte                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Timer_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HandleTelegramByte                                   3     3      0     178
                                              2 COMMON     3     3      0
                          _Read_Byte
 ---------------------------------------------------------------------------------
 (5) _HandleConfigByte                                     3     3      0     510
                                              4 COMMON     3     3      0
                          _Read_Byte
                  i1_AddByteToBuffer
                        i1_Set_Relay
 ---------------------------------------------------------------------------------
 (6) i1_Set_Relay                                          4     3      1     442
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) i1_AddByteToBuffer                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _Read_Byte                                            2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddByteToBuffer
   _CheckStopTime
     _Set_Relay
   _Handle_Telegram
     _Read_Relay
     _SendTelegram
       _AddByteToBuffer
     _SetStopTime
     _Set_Relay
   _Init_Ports
   _Init_Receiver
   _Init_Relays
   _Init_Timer
   _Init_Transmitter
   _Start_Timer

 _Handle_Interrupts (ROOT)
   _HandleConfigByte
     _Read_Byte
     i1_AddByteToBuffer
     i1_Set_Relay
   _HandleTelegramByte
     _Read_Byte
   _Timer_Interrupt
   _WriteByteFromBuffer
     _Write_Byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     38      4F       3       98.8%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      AB       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      AB      10        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Jan 26 14:55:47 2019

                               pc 0002                                l51 0F93                                l54 0F87  
                 Read_Relay@Relay 0022                                fsr 0004          __size_of_Handle_Telegram 020F  
     __end_of_WriteByteFromBuffer 07E3                               l200 00DB                               l201 01A7  
                             l210 0210                               l202 00DC                               l211 01C7  
                             l203 01C5                               l212 022C                               l204 00FC  
                             l213 01D3                               l205 011E                               l214 01DF  
                             l206 0140                               l215 01EB                               l207 0162  
                             l303 0F9F                               l400 05B6                               l216 01F7  
                             l208 0184                               l401 05B8                               l209 022D  
                             l217 0203                               l161 068F                               l402 05BF  
                             l410 074D                               l218 022E                               l306 0FAC  
                             l162 06B6                               l403 05C8                               l171 0264  
                             l411 0780                               l315 07F6                               l163 06B7  
                             l404 05C6                               l172 02A5                               l412 0751  
                             l316 07FB                               l180 0602                               l164 06B8  
                             l405 05C7                               l173 02E6                               l413 0755  
                             l317 07FE                               l181 060C                               l165 06B8  
                             l406 05DE                               l174 0327                               l414 075B  
                             l182 062A                               l190 00A4                               l158 066E  
                             l175 0368                               l415 075F                               l183 0632  
                             l191 0038                               l159 0693                               l176 03A9  
                             l416 0763                               l184 064B                               l192 00A3  
                             l168 0FC0                               l177 03A9                               l417 077E  
                             l409 076A                               l185 0653                               l193 0085  
                             l186 0653                               l194 00A2                               l195 009C  
                             l371 0FFF                               l380 05DE                               l196 00A1  
                             l381 0574                               l197 022E                               l189 0030  
                             l374 05CA                               l390 0594                               l382 057B  
                             l198 01C6                               l391 0596                               l383 0584  
                             l375 0563                               l392 059D                               l384 0582  
                             l376 056A                               l480 0737                               l393 05A6  
                             l385 0583                               l377 0573                               l481 0727  
                             l394 05A4                               l386 0585                               l378 0571  
                             l482 073E                               l395 05A5                               l387 058C  
                             l379 0572                               l483 0748                               l396 05A7  
                             l388 0595                               l397 05AE                               l389 0593  
                             l398 05B7                               l399 05B5                               u900 0579  
                             u901 0578                               u910 0580                               u911 057F  
                             u920 058A                               u921 0589                               u930 0591  
                             u931 0590                               u940 059B                               u941 059A  
                             u950 05A2                               u870 07F4                               u951 05A1  
                             u871 07F3                               u960 05AC                               u880 0568  
                             u961 05AB                               u881 0567                               u970 05B3  
                             u890 056F                               u971 05B2                               u891 056E  
                             u980 05BD                               u981 05BC                               u990 05C4  
                             u991 05C3                               fsr0 0004                               indf 0000  
                            S2892 080C                              S2888 0800  HandleTelegramByte@CommandCounter 0061  
                            l2000 05BD                              l2002 05BF                              l2004 05C4  
                            l2100 073E                              l2006 05C9                              l2030 060C  
                            l2022 05E2                              l2008 05CA                              l2040 0642  
                            l2032 061C                              l2024 05F2                              l2200 0F86  
                            l2050 0751                              l2042 064B                              l2034 0624  
                            l2026 05FC                              l2300 0321                              l2060 075E  
                            l2052 0754                              l2044 074C                              l2036 062A  
                            l2028 0602                              l2220 0FAD                              l2310 0361  
                            l2302 0327                              l2070 0769                              l2062 075F  
                            l2054 0755                              l2046 074D                              l2038 0632  
                            l2230 0FBC                              l2222 0FB3                              l2320 0391  
                            l2312 0362                              l2304 032E                              l2064 0762  
                            l2056 075A                              l2048 0750                              l2072 076A  
                            l2400 01A7                              l2232 0FBD                              l2224 0FB7  
                            l2240 0F94                              l2322 03A2                              l2306 033F  
                            l2314 0368                              l2074 077E                              l2066 0763  
                            l2058 075B                              l2090 0710                              l2410 01DF  
                            l2402 01C7                              l2330 0027                              l2234 0FBE  
                            l2226 0FBA                              l2250 0FA8                              l2242 0F9B  
                            l2324 03A3                              l2316 036F                              l2308 0350  
                            l2260 0250                              l2076 0780                              l2068 0768  
                            l2092 0723                              l2420 01FF                              l2412 01E7  
                            l2404 01CF                              l2340 003E                              l2332 002D  
                            l2236 0FBF                              l2228 0FBB                              l2252 0FAB  
                            l2180 0F88                              l2244 0F9D                              l2318 0380  
                            l2270 027C                              l2262 025D                              l2254 022F  
                            l2094 0727                              l2422 0203                              l2414 01EB  
                            l2406 01D3                              l2350 006E                              l2342 0046  
                            l2334 0030                              l2326 0020                              l2238 0FDB  
                            l2190 0F90                              l2182 0F8C                              l2246 0F9E  
                            l2280 02AC                              l2272 028D                              l2264 025E  
                            l2256 0236                              l2096 0730                              l2424 020B  
                            l2416 01F3                              l2408 01DB                              l2360 009C  
                            l2352 0078                              l2344 0050                              l2336 0036  
                            l2328 0026                              l2248 0FA0                              l2184 0F8D  
                            l2192 0F7D                              l2282 02BD                              l2290 02E6  
                            l2274 029E                              l2258 0243                              l2266 0264  
                            l2098 0737                              l2426 020F                              l2418 01F7  
                            l2370 00CE                              l2354 0082                              l2346 005A  
                            l2338 0038                              l2362 00A4                              l2186 0F8E  
                            l2194 0F80                              l2292 02ED                              l2284 02CE  
                            l2276 029F                              l2268 026B                              l2380 0106  
                            l2372 00D4                              l2428 0210                              l2364 00BC  
                            l2348 0064                              l2356 0085                              l2188 0F8F  
                            l2196 0F82                              l2294 02FE                              l2286 02DF  
                            l2278 02A5                              l2390 0162                              l2382 011E  
                            l2374 00DC                              l2366 00C3                              l2358 008B  
                            l2198 0F84                              l2296 030F                              l2288 02E0  
                            l2392 016C                              l2384 0128                              l2376 00E4  
                            l2368 00C8                              l2560 0666                              l2552 0654  
                            l2298 0320                              l2394 0184                              l2386 0140  
                            l2378 00FC                              l2570 067F                              l2562 066A  
                            l2554 065A                              l2396 018E                              l2388 014A  
                            l2580 069B                              l2572 0684                              l2564 066E  
                            l2556 065D                              l1950 07F4                              l2398 01A6  
                            l2582 069D                              l2574 0689                              l2566 0675  
                            l2558 0663                              l1960 0568                              l1952 07F6  
                            l2568 067A                              l2576 068F                              l1970 057B  
                            l1962 056A                              l1954 07FB                              l1946 07E6  
                            l2578 0693                              l1980 0591                              l1972 0580  
                            l1964 056F                              l1956 0562                              l1948 07EE  
                            l1990 05A7                              l1982 0596                              l1974 0585  
                            l1966 0574                              l1958 0563                              l1992 05AC  
                            l1984 059B                              l1976 058A                              l1968 0579  
                            l2890 05D2                              l1994 05AE                              l1986 059D  
                            l1978 058C                              l2882 01B1                              l1996 05B3  
                            l1988 05A2                              l2884 0218                              l1998 05B8  
                            l2886 0772                              u1000 05F2                              u1001 05F1  
                            u1010 061C                              u1011 061B                              u1020 0642  
                            u1021 0641                              u1030 073D                              u1031 073C  
                            u1200 0236                              u1201 0235                              u1210 0243  
                            u1211 0242                              u1300 02CE                              u1220 0250  
                            u1301 02CD                              u1221 024F                              u1310 02DF  
                            u1230 025D                              u1311 02DE                              u1231 025C  
                            u1215 023F                              u1400 036F                              u1320 02ED  
                            u1240 026B                              u1401 036E                              u1321 02EC  
                            u1305 02CA                              u1241 026A                              u1225 024C  
                            u1410 0380                              u1330 02FE                              u1250 027C  
                            u1411 037F                              u1331 02FD                              u1315 02DB  
                            u1251 027B                              u1235 0259                              u1420 0391  
                            u1340 030F                              u1260 028D                              u1500 00C8  
                            u1421 0390                              u1341 030E                              u1261 028C  
                            u1501 00C7                              u1430 03A2                              u1350 0320  
                            u1270 029E                              u1510 00CE                              u1431 03A1  
                            u1415 037C                              u1351 031F                              u1335 02FA  
                            u1271 029D                              u1255 0278                              u1511 00CD  
                            u1360 032E                              u1280 02AC                              u1520 00D4  
                            u1440 002D                              u1425 038D                              u1361 032D  
                            u1345 030B                              u1281 02AB                              u1265 0289  
                            u1521 00D3                              u1441 002C                              u1370 033F  
                            u1290 02BD                              u1530 00DA                              u1450 0036  
                            u1610 0675                              u1435 039E                              u1371 033E  
                            u1355 031C                              u1291 02BC                              u1275 029A  
                            u1531 00D9                              u1451 0035                              u1611 0674  
                            u1380 0350                              u1460 003E                              u1620 067A  
                            u1381 034F                              u1461 003D                              u1621 0679  
                            u1390 0361                              u1470 008B                              u1630 067F  
                            u1391 0360                              u1375 033B                              u1295 02B9  
                            u1471 008A                              u1631 067E                              u1480 00AC  
                            u1640 0684                              u1385 034C                              u1641 0683  
                            u1490 00C3                              u1650 0689                              u1395 035D  
                            u1491 00C2                              u1651 0688                              u1660 068E  
                            u1661 068D                              u1670 069B                              u1671 069A  
                            u1680 06A5                              i1l60 07B7                              i1l61 07B6  
                            i1l62 07B5                              i1l63 07B7          __end_of_Init_Transmitter 0FA0  
               i1_AddByteToBuffer 0FC1                              _main 0654                              btemp 007E  
              ?i1_AddByteToBuffer 0070                              start 000D          __size_of_AddByteToBuffer 001C  
                   ??_Init_Relays 0020               ??i1_AddByteToBuffer 0070                     _Init_Receiver 0FA0  
                           ?_main 0070                     __CFG_WDTE$OFF 0000                             _ANSEL 0091  
                           i1l223 055E                             i1l400 0413                             i1l224 0548  
                           i1l312 0F6B                             i1l320 07D8                             i1l240 06FC  
                           i1l401 0415                             i1l225 04E2                             i1l321 07D2  
                           i1l241 0707                             i1l402 041E                             i1l226 055D  
                           i1l322 07D7                             i1l242 0707                             i1l234 06C4  
                           i1l315 0FD2                             i1l403 0429                             i1l227 04F2  
                           i1l323 07E2                             i1l235 06E7                             i1l316 0FD7  
                           i1l404 0427                             i1l228 051E                             i1l324 07E2  
                           i1l236 06D5                             i1l309 0F7C                             i1l317 0FDA  
                           i1l405 0428                             i1l229 055E                             i1l237 06CC  
                           i1l406 043F                             i1l238 06E7                             i1l239 06D0  
                           i1l380 043F                             i1l381 03C1                             i1l374 042B  
                           i1l390 03E9                             i1l382 03CA                             i1l470 0463  
                           i1l391 03EB                             i1l383 03D5                             i1l375 03AC  
                           i1l471 04D1                             i1l392 03F4                             i1l384 03D3  
                           i1l376 03B5                             i1l472 0470                             i1l393 03FF  
                           i1l385 03D4                             i1l377 03C0                             i1l473 047F  
                           i1l394 03FD                             i1l386 03D6                             i1l378 03BE  
                           i1l474 049A                             i1l466 0459                             i1l395 03FE  
                           i1l387 03DF                             i1l379 03BF                             i1l467 04D3  
                           i1l475 049B                             i1l396 0400                             i1l388 03EA  
                           i1l468 04D2                             i1l476 04A8                             i1l397 0409  
                           i1l389 03E8                             i1l469 04B8                             i1l477 04D3  
                           i1l398 0414                             i1l399 0412                             _RCREG 0014  
                      _BufferHead 007D                             _TMR1H 000F                             _TMR1L 000E  
                           _SPBRG 0013                             _PORTA 0005                        _BufferTail 0063  
                           _TXREG 0015         __end_ofi1_AddByteToBuffer 0FDB                             pclath 000A  
                           status 0003                             wtemp0 007E                  _StopRelay1OnTime 006B  
                _StopRelay2OnTime 006A                  _StopRelay3OnTime 0069                  _StopRelay4OnTime 0068  
                _StopRelay5OnTime 0067                  _StopRelay6OnTime 0066                    __CFG_MCLRE$OFF 0000  
                 __initialization 000F                        _Init_Timer 0F88                        _Init_Ports 0FAD  
                    __end_of_main 06BA                        _Read_Relay 0749                    ?_Init_Receiver 0070  
                          ??_main 0054               __end_of_Init_Relays 1000                 ??_Handle_Telegram 004E  
                      _SendBuffer 00A0                            i1S2902 0818                     ??_SetStopTime 0023  
                          u110_20 03E4                            u110_21 03E3                            i1l2102 0F74  
                          i1l2110 0FCA                            i1l2104 0F7C                            i1l2112 0FD0  
                          u111_20 03F0                            i1l2120 03AC                            u111_21 03EF  
                          i1l2114 0FD2                            i1l2130 03C6                            i1l2122 03B1  
                          i1l2210 079C                            i1l2202 0781                            i1l2106 0F67  
                          i1l2116 0FD7                            i1l2108 0FC2                            i1l2140 03DF  
                          i1l2132 03CA                            i1l2124 03B5                            i1l2212 07A3  
                          i1l2204 078D                            i1l2150 03F9                            i1l2142 03E4  
                          i1l2134 03CF                            i1l2126 03BA                            i1l2118 03AB  
                          i1l2214 07A5                            i1l2206 0794                            u104_20 0FD0  
                          i1l2160 0415                            i1l2152 0400                            u112_20 03F9  
                          i1l2144 03EB                            i1l2136 03D6                            i1l2128 03C1  
                          i1l2216 07AB                            i1l2208 0796                            u104_21 0FCF  
                          u112_21 03F8                            i1l2162 041A                            i1l2154 0405  
                          i1l2146 03F0                            i1l2138 03DB                            i1l2170 042B  
                          i1l2218 07B2                            i1l2164 041E                            i1l2156 0409  
                          i1l2148 03F4                            i1l2500 07C0                            i1l2166 0423  
                          i1l2158 040E                            i1l2510 07DE                            i1l2502 07C8  
                          i1l2168 042A                            u113_20 0405                            u105_20 03B1  
                          i1l2440 04DA                            i1l2520 0462                            i1l2512 0440  
                          i1l2504 07D0                            i1l2600 06EB                            u113_21 0404  
                          u105_21 03B0                            i1l2450 04ED                            i1l2442 04E1  
                          i1l2530 047F                            i1l2522 0463                            i1l2514 0446  
                          i1l2506 07D2                            i1l2610 06F8                            i1l2602 06EC  
                          i1l2460 0505                            i1l2452 04F2                            i1l2444 04E2  
                          i1l2540 04A8                            i1l2532 0487                            i1l2524 0470  
                          i1l2516 044C                            i1l2508 07D8                            i1l2604 06F2  
                          i1l2612 06FC                            i1l2470 0519                            i1l2462 0509  
                          i1l2454 04F9                            i1l2446 04E9                            i1l2438 04D4  
                          i1l2542 04AE                            i1l2534 048B                            i1l2526 0477  
                          i1l2518 0459                            i1l2614 0702                            i1l2606 06F3  
                          u114_20 040E                            u106_20 03BA                            i1l2480 052F  
                          i1l2472 051E                            i1l2464 050D                            i1l2456 04FD  
                          i1l2448 04EA                            i1l2544 04B7                            i1l2536 0495  
                          i1l2528 047D                            i1l2616 0703                            i1l2608 06F5  
                          u114_21 040D                            u106_21 03B9                            i1l2490 0546  
                          i1l2482 0534                            i1l2474 0521                            i1l2466 0511  
                          i1l2458 0501                            i1l2538 049B                            i1l2546 04B8  
                          i1l2900 0433                            i1l2484 0539                            i1l2476 0525  
                          i1l2468 0515                            i1l2492 0548                            i1l2486 053E  
                          i1l2478 052A                            i1l2590 06CB                            u115_20 041A  
                          u107_20 03C6                            i1l2488 0543                            i1l2592 06CC  
                          i1l2584 06BA                            u115_21 0419                            u107_21 03C5  
                          i1l2498 07B8                            i1l2594 06D0                            i1l2586 06C0  
                          i1l2596 06D4                            i1l2588 06C4                            i1l2598 06D5  
                          u116_20 0423                            u108_20 03CF                            u116_21 0422  
                          u108_21 03CE                            i1l2894 06DF                            u109_20 03DB  
                          i1l2896 04C0                            u117_20 0794                            u109_21 03DA  
                          u117_21 0793                            i1l2898 0552                            u118_20 07A3  
                          u118_21 07A2                            u119_20 07B2                            u119_21 07B1  
                          u160_20 0495                            u160_21 0494                            u154_20 04E0  
                          u170_20 06CA                            u154_21 04DF                            u170_21 06C9  
                          u155_20 07C0                            u171_20 06EB                            u155_21 07BF  
                          u171_21 06EA                            u156_20 07D0                            u172_20 0702  
                          u156_21 07CF                            u172_21 0701                            u157_20 07DE  
                          u157_21 07DD                            u158_20 044C                            u158_21 044B  
                          u159_20 0461                            u159_21 0460                            u169_20 06C0  
                          u169_21 06BF                __size_of_Read_Byte 0009       HandleConfigByte@ByteCounter 0064  
              __size_of_Set_Relay 0080                 ??_AddByteToBuffer 0020                 ?_HandleConfigByte 0070  
              ??_HandleConfigByte 0074                            saved_w 007E                     ?_SendTelegram 0022  
          __size_of_CheckStopTime 017B                _HandleTelegramByte 0440        __size_ofi1_AddByteToBuffer 001A  
                    ?i1_Set_Relay 0070           __end_of__initialization 001D               ?_HandleTelegramByte 0070  
             __end_of_SetStopTime 0654                    __pcstackCOMMON 0070                       ?_Init_Timer 0070  
                 ??_Init_Receiver 0020                       ?_Init_Ports 0070                       _Init_Relays 0FDB  
                     ?_Read_Relay 0070                        _Write_Byte 0F66                     ??_Start_Timer 0020  
            HandleConfigByte@Byte 0076                       _CurrentMode 0065              ??_HandleTelegramByte 0072  
               __end_of_Read_Byte 0F7D                    ??_SendTelegram 0037                    Write_Byte@Data 0070  
               __end_of_Set_Relay 05DF                        __pbssBANK0 0058                        __pbssBANK1 00A0  
               ?_Init_Transmitter 0070                ??_Init_Transmitter 0020                        __pmaintext 0654  
                   _CheckStopTime 022F                        __pintentry 0004                    Set_Relay@Relay 0023  
                  Set_Relay@State 0020          __size_of_Timer_Interrupt 0037               __end_of_Start_Timer 0F88  
    __size_of_WriteByteFromBuffer 002B               __size_of_Init_Timer 000C               __size_of_Init_Ports 0014  
             __size_of_Read_Relay 0038                       _SetStopTime 05DF             i1AddByteToBuffer@Byte 0071  
                  ?_CheckStopTime 0070                       ?_Write_Byte 0070                   _Handle_Telegram 0020  
                         __ptext1 0F7D                           __ptext2 0F94                           __ptext3 0F88  
                         __ptext4 0FDB                           __ptext5 0FA0                           __ptext6 0FAD  
                         __ptext7 0020                           __ptext8 05DF                           __ptext9 0710  
                       _T1CONbits 0010       Handle_Telegram@ThisTelegram 0039                           clrloop0 0F6D  
            end_of_initialization 001D              __size_ofi1_Set_Relay 0096                   _AddByteToBuffer 07E3  
            __end_of_SendTelegram 0749                         _RCSTAbits 0017                     Read_Byte@Data 0071  
                     _Start_Timer 0F7D            SendTelegram@MyTelegram 0022                         _PORTAbits 0005  
                       _PORTCbits 0007                      _Counter_1sec 005A                 ??_Timer_Interrupt 0070  
                       _TRISAbits 0085                         _TRISCbits 0087         __size_of_HandleConfigByte 008B  
             __size_of_Write_Byte 0006                         _TXSTAbits 0016                   ??_CheckStopTime 0024  
         __end_of_Handle_Telegram 022F                      ??_Init_Timer 0020                      ??_Init_Ports 0020  
                    ?_Init_Relays 0070                      ??_Read_Relay 0020                       _BAUDCTLbits 0011  
             start_initialization 000F                         _Read_Byte 0F74     HandleTelegramByte@ByteCounter 0062  
         __end_of_AddByteToBuffer 07FF                __end_of_Init_Timer 0F94                __end_of_Init_Ports 0FC1  
              __end_of_Read_Relay 0781                         _Set_Relay 055F               _WriteByteFromBuffer 07B8  
           __end_of_Init_Receiver 0FAD         __size_of_Init_Transmitter 000C                    _Relay1StopTime 006C  
               _Handle_Interrupts 06BA                    _Relay2StopTime 00EB                    _Relay3StopTime 00E8  
     __size_of_HandleTelegramByte 0094                ?_Handle_Interrupts 0070                    _Relay4StopTime 00E5  
                     __pbssCOMMON 007D                         ___latbits 0001                _Stop_Ignition_Flag 00DD  
                  _Relay5StopTime 00E2                     __pcstackBANK0 0020                        ?_Read_Byte 0070  
                  _Relay6StopTime 00DF              ?_WriteByteFromBuffer 0070                  i1Set_Relay@Relay 0073  
             ??_Handle_Interrupts 0077                  i1Set_Relay@State 0070                      ?_SetStopTime 0020  
               _TelegramReadyFlag 005E             __size_of_SendTelegram 0039                        ?_Set_Relay 0020  
                ?_Handle_Telegram 0039                      ??_Write_Byte 0070         __end_of_Handle_Interrupts 0710  
                       __pswtext1 0800                         __pswtext2 080C                         __pswtext3 0818  
          Handle_Interrupts@dummy 007C             ??_WriteByteFromBuffer 0071                      _SendTelegram 0710  
                ?_AddByteToBuffer 0070                  _HandleConfigByte 04D4                __end_of_Write_Byte 0F6C  
               interrupt_function 0004                          _IOCAbits 0096                         clear_ram0 0F6C  
                        _PIE1bits 008C                          _PIR1bits 000C                   _Timer_Interrupt 0781  
                    ?_Start_Timer 0070              __size_of_Init_Relays 0025                       ??_Read_Byte 0070  
                   ??i1_Set_Relay 0071                       ??_Set_Relay 0021        SendTelegram@CommandCounter 0038  
                        _Telegram 00C8                        _CMCON0bits 0019        __size_of_Handle_Interrupts 0056  
                _Init_Transmitter 0F94                          __ptext10 07E3                          __ptext11 0749  
                        __ptext20 03AA                          __ptext12 022F                          __ptext21 0FC1  
                        __ptext13 055F                          __ptext22 0F74                          __ptext14 06BA  
                        __ptext15 07B8                          __ptext16 0F66                          __ptext17 0781  
                        __ptext18 0440                          __ptext19 04D4                     __size_of_main 0066  
            __size_of_SetStopTime 0075               __end_ofi1_Set_Relay 0440           __end_of_Timer_Interrupt 07B8  
           __end_of_CheckStopTime 03AA              Handle_Telegram@error 0052          SetStopTime@RelayStopTime 0025  
            Handle_Telegram@state 0053          HandleTelegramByte@Lenght 0060                        _INTCONbits 000B  
                        intlevel1 0000               AddByteToBuffer@Byte 0021              SetStopTime@Time100ms 0022  
            SetStopTime@Time10sec 0020                        _OSCCONbits 008F          __end_of_HandleConfigByte 055F  
      __end_of_HandleTelegramByte 04D4              __size_of_Start_Timer 000B               SetStopTime@Time1sec 0021  
          HandleTelegramByte@Byte 0074                       i1_Set_Relay 03AA                     _Counter_100ms 005C  
              __CFG_FOSC$INTOSCIO 0000                     _Counter_10sec 0058            __size_of_Init_Receiver 000D  
                ?_Timer_Interrupt 0070  
