

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Jan 21 20:08:53 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F688 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   100                           PORTC equ 07h ;# 
   101  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   116                           BAUDCTL equ 011h ;# 
   117  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   118                           SPBRGH equ 012h ;# 
   119  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   120                           SPBRG equ 013h ;# 
   121  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   122                           RCREG equ 014h ;# 
   123  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   124                           TXREG equ 015h ;# 
   125  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   126                           TXSTA equ 016h ;# 
   127  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   128                           RCSTA equ 017h ;# 
   129  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   130                           WDTCON equ 018h ;# 
   131  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   132                           CMCON0 equ 019h ;# 
   133  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   134                           CMCON1 equ 01Ah ;# 
   135  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   136                           ADRESH equ 01Eh ;# 
   137  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   138                           ADCON0 equ 01Fh ;# 
   139  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   140                           OPTION_REG equ 081h ;# 
   141  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   142                           TRISA equ 085h ;# 
   143  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   144                           TRISC equ 087h ;# 
   145  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   146                           PIE1 equ 08Ch ;# 
   147  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   148                           PCON equ 08Eh ;# 
   149  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   150                           OSCCON equ 08Fh ;# 
   151  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   152                           OSCTUNE equ 090h ;# 
   153  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   154                           ANSEL equ 091h ;# 
   155  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   156                           WPUA equ 095h ;# 
   157  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   158                           WPU equ 095h ;# 
   159  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   160                           IOCA equ 096h ;# 
   161  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   162                           IOC equ 096h ;# 
   163  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   164                           EEDATH equ 097h ;# 
   165  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   166                           EEADRH equ 098h ;# 
   167  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   168                           VRCON equ 099h ;# 
   169  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   170                           EEDAT equ 09Ah ;# 
   171  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   172                           EEDATA equ 09Ah ;# 
   173  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   174                           EEADR equ 09Bh ;# 
   175  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   176                           EECON1 equ 09Ch ;# 
   177  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   178                           EECON2 equ 09Dh ;# 
   179  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   180                           ADRESL equ 09Eh ;# 
   181  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   182                           ADCON1 equ 09Fh ;# 
   183  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   184                           INDF equ 00h ;# 
   185  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   186                           TMR0 equ 01h ;# 
   187  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   188                           PCL equ 02h ;# 
   189  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   190                           STATUS equ 03h ;# 
   191  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   192                           FSR equ 04h ;# 
   193  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   194                           PORTA equ 05h ;# 
   195  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   196                           PORTC equ 07h ;# 
   197  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   198                           PCLATH equ 0Ah ;# 
   199  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   200                           INTCON equ 0Bh ;# 
   201  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   202                           PIR1 equ 0Ch ;# 
   203  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   204                           TMR1 equ 0Eh ;# 
   205  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   206                           TMR1L equ 0Eh ;# 
   207  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   208                           TMR1H equ 0Fh ;# 
   209  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   210                           T1CON equ 010h ;# 
   211  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   212                           BAUDCTL equ 011h ;# 
   213  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   214                           SPBRGH equ 012h ;# 
   215  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   216                           SPBRG equ 013h ;# 
   217  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   218                           RCREG equ 014h ;# 
   219  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   220                           TXREG equ 015h ;# 
   221  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   222                           TXSTA equ 016h ;# 
   223  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   224                           RCSTA equ 017h ;# 
   225  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   226                           WDTCON equ 018h ;# 
   227  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   228                           CMCON0 equ 019h ;# 
   229  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   230                           CMCON1 equ 01Ah ;# 
   231  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   232                           ADRESH equ 01Eh ;# 
   233  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   234                           ADCON0 equ 01Fh ;# 
   235  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   236                           OPTION_REG equ 081h ;# 
   237  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   238                           TRISA equ 085h ;# 
   239  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   240                           TRISC equ 087h ;# 
   241  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   242                           PIE1 equ 08Ch ;# 
   243  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   244                           PCON equ 08Eh ;# 
   245  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   246                           OSCCON equ 08Fh ;# 
   247  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   248                           OSCTUNE equ 090h ;# 
   249  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   250                           ANSEL equ 091h ;# 
   251  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   252                           WPUA equ 095h ;# 
   253  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   254                           WPU equ 095h ;# 
   255  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   256                           IOCA equ 096h ;# 
   257  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   258                           IOC equ 096h ;# 
   259  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   260                           EEDATH equ 097h ;# 
   261  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   262                           EEADRH equ 098h ;# 
   263  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   264                           VRCON equ 099h ;# 
   265  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   266                           EEDAT equ 09Ah ;# 
   267  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   268                           EEDATA equ 09Ah ;# 
   269  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   270                           EEADR equ 09Bh ;# 
   271  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   272                           EECON1 equ 09Ch ;# 
   273  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   274                           EECON2 equ 09Dh ;# 
   275  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   276                           ADRESL equ 09Eh ;# 
   277  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   278                           ADCON1 equ 09Fh ;# 
   279  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   280                           INDF equ 00h ;# 
   281  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   282                           TMR0 equ 01h ;# 
   283  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   284                           PCL equ 02h ;# 
   285  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   286                           STATUS equ 03h ;# 
   287  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   288                           FSR equ 04h ;# 
   289  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   290                           PORTA equ 05h ;# 
   291  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   292                           PORTC equ 07h ;# 
   293  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   294                           PCLATH equ 0Ah ;# 
   295  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   296                           INTCON equ 0Bh ;# 
   297  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   298                           PIR1 equ 0Ch ;# 
   299  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   300                           TMR1 equ 0Eh ;# 
   301  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   302                           TMR1L equ 0Eh ;# 
   303  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   304                           TMR1H equ 0Fh ;# 
   305  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   306                           T1CON equ 010h ;# 
   307  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   308                           BAUDCTL equ 011h ;# 
   309  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   310                           SPBRGH equ 012h ;# 
   311  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   312                           SPBRG equ 013h ;# 
   313  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   314                           RCREG equ 014h ;# 
   315  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   316                           TXREG equ 015h ;# 
   317  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   318                           TXSTA equ 016h ;# 
   319  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   320                           RCSTA equ 017h ;# 
   321  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   322                           WDTCON equ 018h ;# 
   323  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   324                           CMCON0 equ 019h ;# 
   325  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   326                           CMCON1 equ 01Ah ;# 
   327  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   328                           ADRESH equ 01Eh ;# 
   329  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   330                           ADCON0 equ 01Fh ;# 
   331  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   332                           OPTION_REG equ 081h ;# 
   333  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   334                           TRISA equ 085h ;# 
   335  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   336                           TRISC equ 087h ;# 
   337  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   338                           PIE1 equ 08Ch ;# 
   339  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   340                           PCON equ 08Eh ;# 
   341  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   342                           OSCCON equ 08Fh ;# 
   343  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   344                           OSCTUNE equ 090h ;# 
   345  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   346                           ANSEL equ 091h ;# 
   347  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   348                           WPUA equ 095h ;# 
   349  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   350                           WPU equ 095h ;# 
   351  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   352                           IOCA equ 096h ;# 
   353  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   354                           IOC equ 096h ;# 
   355  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   356                           EEDATH equ 097h ;# 
   357  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   358                           EEADRH equ 098h ;# 
   359  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   360                           VRCON equ 099h ;# 
   361  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   362                           EEDAT equ 09Ah ;# 
   363  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   364                           EEDATA equ 09Ah ;# 
   365  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   366                           EEADR equ 09Bh ;# 
   367  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   368                           EECON1 equ 09Ch ;# 
   369  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   370                           EECON2 equ 09Dh ;# 
   371  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   372                           ADRESL equ 09Eh ;# 
   373  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   374                           ADCON1 equ 09Fh ;# 
   375  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   376                           INDF equ 00h ;# 
   377  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   378                           TMR0 equ 01h ;# 
   379  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   380                           PCL equ 02h ;# 
   381  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   382                           STATUS equ 03h ;# 
   383  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   384                           FSR equ 04h ;# 
   385  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   386                           PORTA equ 05h ;# 
   387  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   388                           PORTC equ 07h ;# 
   389  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   390                           PCLATH equ 0Ah ;# 
   391  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   392                           INTCON equ 0Bh ;# 
   393  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   394                           PIR1 equ 0Ch ;# 
   395  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   396                           TMR1 equ 0Eh ;# 
   397  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   398                           TMR1L equ 0Eh ;# 
   399  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   400                           TMR1H equ 0Fh ;# 
   401  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   402                           T1CON equ 010h ;# 
   403  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   404                           BAUDCTL equ 011h ;# 
   405  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   406                           SPBRGH equ 012h ;# 
   407  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   408                           SPBRG equ 013h ;# 
   409  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   410                           RCREG equ 014h ;# 
   411  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   412                           TXREG equ 015h ;# 
   413  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   414                           TXSTA equ 016h ;# 
   415  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   416                           RCSTA equ 017h ;# 
   417  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   418                           WDTCON equ 018h ;# 
   419  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   420                           CMCON0 equ 019h ;# 
   421  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   422                           CMCON1 equ 01Ah ;# 
   423  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   424                           ADRESH equ 01Eh ;# 
   425  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   426                           ADCON0 equ 01Fh ;# 
   427  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   428                           OPTION_REG equ 081h ;# 
   429  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   430                           TRISA equ 085h ;# 
   431  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   432                           TRISC equ 087h ;# 
   433  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   434                           PIE1 equ 08Ch ;# 
   435  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   436                           PCON equ 08Eh ;# 
   437  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   438                           OSCCON equ 08Fh ;# 
   439  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   440                           OSCTUNE equ 090h ;# 
   441  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   442                           ANSEL equ 091h ;# 
   443  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   444                           WPUA equ 095h ;# 
   445  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   446                           WPU equ 095h ;# 
   447  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   448                           IOCA equ 096h ;# 
   449  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   450                           IOC equ 096h ;# 
   451  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   452                           EEDATH equ 097h ;# 
   453  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   454                           EEADRH equ 098h ;# 
   455  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   456                           VRCON equ 099h ;# 
   457  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   458                           EEDAT equ 09Ah ;# 
   459  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   460                           EEDATA equ 09Ah ;# 
   461  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   462                           EEADR equ 09Bh ;# 
   463  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   464                           EECON1 equ 09Ch ;# 
   465  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   466                           EECON2 equ 09Dh ;# 
   467  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   468                           ADRESL equ 09Eh ;# 
   469  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   470                           ADCON1 equ 09Fh ;# 
   471  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   472                           INDF equ 00h ;# 
   473  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   474                           TMR0 equ 01h ;# 
   475  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   476                           PCL equ 02h ;# 
   477  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   478                           STATUS equ 03h ;# 
   479  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   480                           FSR equ 04h ;# 
   481  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   482                           PORTA equ 05h ;# 
   483  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   484                           PORTC equ 07h ;# 
   485  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   486                           PCLATH equ 0Ah ;# 
   487  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   488                           INTCON equ 0Bh ;# 
   489  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   490                           PIR1 equ 0Ch ;# 
   491  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   492                           TMR1 equ 0Eh ;# 
   493  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   494                           TMR1L equ 0Eh ;# 
   495  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   496                           TMR1H equ 0Fh ;# 
   497  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   498                           T1CON equ 010h ;# 
   499  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   500                           BAUDCTL equ 011h ;# 
   501  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   502                           SPBRGH equ 012h ;# 
   503  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   504                           SPBRG equ 013h ;# 
   505  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   506                           RCREG equ 014h ;# 
   507  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   508                           TXREG equ 015h ;# 
   509  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   510                           TXSTA equ 016h ;# 
   511  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   512                           RCSTA equ 017h ;# 
   513  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   514                           WDTCON equ 018h ;# 
   515  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   516                           CMCON0 equ 019h ;# 
   517  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   518                           CMCON1 equ 01Ah ;# 
   519  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   520                           ADRESH equ 01Eh ;# 
   521  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   522                           ADCON0 equ 01Fh ;# 
   523  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   524                           OPTION_REG equ 081h ;# 
   525  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   526                           TRISA equ 085h ;# 
   527  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   528                           TRISC equ 087h ;# 
   529  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   530                           PIE1 equ 08Ch ;# 
   531  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   532                           PCON equ 08Eh ;# 
   533  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   534                           OSCCON equ 08Fh ;# 
   535  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   536                           OSCTUNE equ 090h ;# 
   537  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   538                           ANSEL equ 091h ;# 
   539  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   540                           WPUA equ 095h ;# 
   541  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   542                           WPU equ 095h ;# 
   543  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   544                           IOCA equ 096h ;# 
   545  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   546                           IOC equ 096h ;# 
   547  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   548                           EEDATH equ 097h ;# 
   549  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   550                           EEADRH equ 098h ;# 
   551  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   552                           VRCON equ 099h ;# 
   553  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   554                           EEDAT equ 09Ah ;# 
   555  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   556                           EEDATA equ 09Ah ;# 
   557  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   558                           EEADR equ 09Bh ;# 
   559  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   560                           EECON1 equ 09Ch ;# 
   561  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   562                           EECON2 equ 09Dh ;# 
   563  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   564                           ADRESL equ 09Eh ;# 
   565  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   566                           ADCON1 equ 09Fh ;# 
   567  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   568                           INDF equ 00h ;# 
   569  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   570                           TMR0 equ 01h ;# 
   571  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   572                           PCL equ 02h ;# 
   573  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   574                           STATUS equ 03h ;# 
   575  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   576                           FSR equ 04h ;# 
   577  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   578                           PORTA equ 05h ;# 
   579  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   580                           PORTC equ 07h ;# 
   581  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   582                           PCLATH equ 0Ah ;# 
   583  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   584                           INTCON equ 0Bh ;# 
   585  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   586                           PIR1 equ 0Ch ;# 
   587  000C                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   588                           TMR1 equ 0Eh ;# 
   589  000E                     # 443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   590                           TMR1L equ 0Eh ;# 
   591  000E                     # 450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   592                           TMR1H equ 0Fh ;# 
   593  000F                     # 457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   594                           T1CON equ 010h ;# 
   595  0010                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   596                           BAUDCTL equ 011h ;# 
   597  0011                     # 580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   598                           SPBRGH equ 012h ;# 
   599  0012                     # 600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   600                           SPBRG equ 013h ;# 
   601  0013                     # 607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   602                           RCREG equ 014h ;# 
   603  0014                     # 614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   604                           TXREG equ 015h ;# 
   605  0015                     # 621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   606                           TXSTA equ 016h ;# 
   607  0016                     # 683 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   608                           RCSTA equ 017h ;# 
   609  0017                     # 745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   610                           WDTCON equ 018h ;# 
   611  0018                     # 798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   612                           CMCON0 equ 019h ;# 
   613  0019                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   614                           CMCON1 equ 01Ah ;# 
   615  001A                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   616                           ADRESH equ 01Eh ;# 
   617  001E                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   618                           ADCON0 equ 01Fh ;# 
   619  001F                     # 991 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   620                           OPTION_REG equ 081h ;# 
   621  0081                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   622                           TRISA equ 085h ;# 
   623  0085                     # 1111 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   624                           TRISC equ 087h ;# 
   625  0087                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   626                           PIE1 equ 08Ch ;# 
   627  008C                     # 1231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   628                           PCON equ 08Eh ;# 
   629  008E                     # 1278 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   630                           OSCCON equ 08Fh ;# 
   631  008F                     # 1343 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   632                           OSCTUNE equ 090h ;# 
   633  0090                     # 1395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   634                           ANSEL equ 091h ;# 
   635  0091                     # 1457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   636                           WPUA equ 095h ;# 
   637  0095                     # 1462 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   638                           WPU equ 095h ;# 
   639  0095                     # 1611 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   640                           IOCA equ 096h ;# 
   641  0096                     # 1616 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   642                           IOC equ 096h ;# 
   643  0096                     # 1785 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   644                           EEDATH equ 097h ;# 
   645  0097                     # 1792 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   646                           EEADRH equ 098h ;# 
   647  0098                     # 1799 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   648                           VRCON equ 099h ;# 
   649  0099                     # 1859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   650                           EEDAT equ 09Ah ;# 
   651  009A                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   652                           EEDATA equ 09Ah ;# 
   653  009A                     # 1897 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   654                           EEADR equ 09Bh ;# 
   655  009B                     # 1904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   656                           EECON1 equ 09Ch ;# 
   657  009C                     # 1949 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   658                           EECON2 equ 09Dh ;# 
   659  009D                     # 1956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   660                           ADRESL equ 09Eh ;# 
   661  009E                     # 1963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f688.h"
   662                           ADCON1 equ 09Fh ;# 
   663  009F                     	FNCALL	_main,_AddByteToBuffer
   664                           	FNCALL	_main,_CheckStopTime
   665                           	FNCALL	_main,_Handle_Telegram
   666                           	FNCALL	_main,_Init_Ports
   667                           	FNCALL	_main,_Init_Receiver
   668                           	FNCALL	_main,_Init_Relays
   669                           	FNCALL	_main,_Init_Timer
   670                           	FNCALL	_main,_Init_Transmitter
   671                           	FNCALL	_main,_Say_Hello
   672                           	FNCALL	_main,_Start_Timer
   673                           	FNCALL	_Say_Hello,_SendTelegram
   674                           	FNCALL	_Handle_Telegram,_Read_Relay
   675                           	FNCALL	_Handle_Telegram,_SendTelegram
   676                           	FNCALL	_Handle_Telegram,_SetStopTime
   677                           	FNCALL	_Handle_Telegram,_Set_Relay
   678                           	FNCALL	_SendTelegram,_AddByteToBuffer
   679                           	FNCALL	_CheckStopTime,_Set_Relay
   680                           	FNROOT	_main
   681                           	FNCALL	_Handle_Interrupts,_HandleConfigByte
   682                           	FNCALL	_Handle_Interrupts,_HandleTelegramByte
   683                           	FNCALL	_Handle_Interrupts,_Timer_Interrupt
   684                           	FNCALL	_Handle_Interrupts,_WriteByteFromBuffer
   685                           	FNCALL	_WriteByteFromBuffer,_Write_Byte
   686                           	FNCALL	_HandleTelegramByte,_Read_Byte
   687                           	FNCALL	_HandleConfigByte,_Read_Byte
   688                           	FNCALL	_HandleConfigByte,i1_AddByteToBuffer
   689                           	FNCALL	_HandleConfigByte,i1_Set_Relay
   690                           	FNCALL	intlevel1,_Handle_Interrupts
   691                           	global	intlevel1
   692                           	FNROOT	intlevel1
   693                           	global	_BufferHead
   694                           	global	_Counter_10sec
   695                           	global	_Counter_1sec
   696                           	global	_Counter_100ms
   697                           	global	_TelegramReadyFlag
   698                           	global	HandleTelegramByte@CommandCounter
   699                           	global	HandleTelegramByte@ByteCounter
   700                           	global	_BufferTail
   701                           	global	HandleConfigByte@ByteCounter
   702                           	global	_CurrentMode
   703                           	global	_StopRelay6OnTime
   704                           	global	_StopRelay5OnTime
   705                           	global	_StopRelay4OnTime
   706                           	global	_StopRelay3OnTime
   707                           	global	_StopRelay2OnTime
   708                           	global	_StopRelay1OnTime
   709                           	global	_Relay1StopTime
   710                           	global	_SendBuffer
   711                           	global	_Telegram
   712                           	global	_Relay6StopTime
   713                           	global	_Relay5StopTime
   714                           	global	_Relay4StopTime
   715                           	global	_Relay3StopTime
   716                           	global	_Relay2StopTime
   717                           	global	_PORTCbits
   718                           _PORTCbits	set	0x7
   719  0007                     	global	_RCREG
   720                           _RCREG	set	0x14
   721  0014                     	global	_TXREG
   722                           _TXREG	set	0x15
   723  0015                     	global	_SPBRG
   724                           _SPBRG	set	0x13
   725  0013                     	global	_BAUDCTLbits
   726                           _BAUDCTLbits	set	0x11
   727  0011                     	global	_RCSTAbits
   728                           _RCSTAbits	set	0x17
   729  0017                     	global	_TXSTAbits
   730                           _TXSTAbits	set	0x16
   731  0016                     	global	_PORTA
   732                           _PORTA	set	0x5
   733  0005                     	global	_PORTAbits
   734                           _PORTAbits	set	0x5
   735  0005                     	global	_CMCON0bits
   736                           _CMCON0bits	set	0x19
   737  0019                     	global	_TMR1L
   738                           _TMR1L	set	0xE
   739  000E                     	global	_TMR1H
   740                           _TMR1H	set	0xF
   741  000F                     	global	_PIR1bits
   742                           _PIR1bits	set	0xC
   743  000C                     	global	_INTCONbits
   744                           _INTCONbits	set	0xB
   745  000B                     	global	_T1CONbits
   746                           _T1CONbits	set	0x10
   747  0010                     	global	_OSCCONbits
   748                           _OSCCONbits	set	0x8F
   749  008F                     	global	_IOCAbits
   750                           _IOCAbits	set	0x96
   751  0096                     	global	_ANSEL
   752                           _ANSEL	set	0x91
   753  0091                     	global	_TRISCbits
   754                           _TRISCbits	set	0x87
   755  0087                     	global	_TRISAbits
   756                           _TRISAbits	set	0x85
   757  0085                     	global	_PIE1bits
   758                           _PIE1bits	set	0x8C
   759  008C                     ; #config settings
   760                           global __CFG_FOSC$INTOSCIO
   761                           __CFG_FOSC$INTOSCIO equ 0x0
   762  0000                     global __CFG_WDTE$OFF
   763                           __CFG_WDTE$OFF equ 0x0
   764  0000                     global __CFG_MCLRE$OFF
   765                           __CFG_MCLRE$OFF equ 0x0
   766  0000                     	file	"C:\Users\Bendixen\AppData\Local\Temp\s1ms."
   767                           	line	#
   768                           psect cinit,class=CODE,delta=2
   769                           global start_initialization
   770                           start_initialization:
   771  000F                     
   772                           global __initialization
   773                           __initialization:
   774  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   775                           global __pbssCOMMON
   776                           __pbssCOMMON:
   777  007D                     _BufferHead:
   778  007D                            ds      1
   779  007D                     
   780                           psect	bssBANK0,class=BANK0,space=1,noexec
   781                           global __pbssBANK0
   782                           __pbssBANK0:
   783  0058                     _Counter_10sec:
   784  0058                            ds      2
   785  0058                     
   786                           _Counter_1sec:
   787  005A                            ds      2
   788  005A                     
   789                           _Counter_100ms:
   790  005C                            ds      2
   791  005C                     
   792                           _TelegramReadyFlag:
   793  005E                            ds      2
   794  005E                     
   795                           HandleTelegramByte@Lenght:
   796  0060                            ds      1
   797  0060                     
   798                           HandleTelegramByte@CommandCounter:
   799  0061                            ds      1
   800  0061                     
   801                           HandleTelegramByte@ByteCounter:
   802  0062                            ds      1
   803  0062                     
   804                           _BufferTail:
   805  0063                            ds      1
   806  0063                     
   807                           HandleConfigByte@ByteCounter:
   808  0064                            ds      1
   809  0064                     
   810                           _CurrentMode:
   811  0065                            ds      1
   812  0065                     
   813                           _StopRelay6OnTime:
   814  0066                            ds      1
   815  0066                     
   816                           _StopRelay5OnTime:
   817  0067                            ds      1
   818  0067                     
   819                           _StopRelay4OnTime:
   820  0068                            ds      1
   821  0068                     
   822                           _StopRelay3OnTime:
   823  0069                            ds      1
   824  0069                     
   825                           _StopRelay2OnTime:
   826  006A                            ds      1
   827  006A                     
   828                           _StopRelay1OnTime:
   829  006B                            ds      1
   830  006B                     
   831                           _Relay1StopTime:
   832  006C                            ds      3
   833  006C                     
   834                           psect	bssBANK1,class=BANK1,space=1,noexec
   835                           global __pbssBANK1
   836                           __pbssBANK1:
   837  00A0                     _SendBuffer:
   838  00A0                            ds      40
   839  00A0                     
   840                           _Telegram:
   841  00C8                            ds      21
   842  00C8                     
   843                           _Stop_Ignition_Flag:
   844  00DD                            ds      2
   845  00DD                     
   846                           _Relay6StopTime:
   847  00DF                            ds      3
   848  00DF                     
   849                           _Relay5StopTime:
   850  00E2                            ds      3
   851  00E2                     
   852                           _Relay4StopTime:
   853  00E5                            ds      3
   854  00E5                     
   855                           _Relay3StopTime:
   856  00E8                            ds      3
   857  00E8                     
   858                           _Relay2StopTime:
   859  00EB                            ds      3
   860  00EB                     
   861                           	file	"C:\Users\Bendixen\AppData\Local\Temp\s1ms."
   862                           	line	#
   863                           psect clrtext,class=CODE,delta=2
   864                           global clear_ram0
   865                           ;	Called with FSR containing the base address, and
   866                           ;	W with the last address+1
   867                           clear_ram0:
   868  0F25                     	clrwdt			;clear the watchdog before getting into this loop
   869  0F25  0064               clrloop0:
   870  0F26                     	clrf	indf		;clear RAM location pointed to by FSR
   871  0F26  0180               	incf	fsr,f		;increment pointer
   872  0F27  0A84               	xorwf	fsr,w		;XOR with final address
   873  0F28  0604               	btfsc	status,2	;have we reached the end yet?
   874  0F29  1903               	retlw	0		;all done for this memory range, return
   875  0F2A  3400               	xorwf	fsr,w		;XOR again to restore value
   876  0F2B  0604               	goto	clrloop0		;do the next byte
   877  0F2C  2F26               
   878                           ; Clear objects allocated to COMMON
   879                           psect cinit,class=CODE,delta=2,merge=1
   880                           	clrf	((__pbssCOMMON)+0)&07Fh
   881  000F  01FD               ; Clear objects allocated to BANK0
   882                           psect cinit,class=CODE,delta=2,merge=1
   883                           	bcf	status, 7	;select IRP bank0
   884  0010  1383               	movlw	low(__pbssBANK0)
   885  0011  3058               	movwf	fsr
   886  0012  0084               	movlw	low((__pbssBANK0)+017h)
   887  0013  306F               	fcall	clear_ram0
   888  0014  158A  2725  118A   ; Clear objects allocated to BANK1
   889                           psect cinit,class=CODE,delta=2,merge=1
   890                           	movlw	low(__pbssBANK1)
   891  0017  30A0               	movwf	fsr
   892  0018  0084               	movlw	low((__pbssBANK1)+04Eh)
   893  0019  30EE               	fcall	clear_ram0
   894  001A  158A  2725  118A   psect cinit,class=CODE,delta=2,merge=1
   895                           global end_of_initialization,__end_of__initialization
   896                           
   897                           ;End of C runtime variable initialization code
   898                           
   899                           end_of_initialization:
   900  001D                     __end_of__initialization:
   901  001D                     clrf status
   902  001D  0183               ljmp _main	;jump to C main() function
   903  001E  118A  2E54         psect	cstackCOMMON,class=COMMON,space=1,noexec
   904                           global __pcstackCOMMON
   905                           __pcstackCOMMON:
   906  0070                     ?_Init_Ports:	; 1 bytes @ 0x0
   907  0070                     ?_Init_Relays:	; 1 bytes @ 0x0
   908  0070                     ?_Init_Transmitter:	; 1 bytes @ 0x0
   909  0070                     ?_Init_Receiver:	; 1 bytes @ 0x0
   910  0070                     ?_AddByteToBuffer:	; 1 bytes @ 0x0
   911  0070                     ?_Say_Hello:	; 1 bytes @ 0x0
   912  0070                     ?_CheckStopTime:	; 1 bytes @ 0x0
   913  0070                     ?_Read_Relay:	; 1 bytes @ 0x0
   914  0070                     ?_Read_Byte:	; 1 bytes @ 0x0
   915  0070                     ??_Read_Byte:	; 1 bytes @ 0x0
   916  0070                     ?_WriteByteFromBuffer:	; 1 bytes @ 0x0
   917  0070                     ?_HandleTelegramByte:	; 1 bytes @ 0x0
   918  0070                     ?_Init_Timer:	; 1 bytes @ 0x0
   919  0070                     ?_Start_Timer:	; 1 bytes @ 0x0
   920  0070                     ?_Timer_Interrupt:	; 1 bytes @ 0x0
   921  0070                     ??_Timer_Interrupt:	; 1 bytes @ 0x0
   922  0070                     ?_main:	; 1 bytes @ 0x0
   923  0070                     ?_HandleConfigByte:	; 1 bytes @ 0x0
   924  0070                     ?_Handle_Interrupts:	; 1 bytes @ 0x0
   925  0070                     ?_Write_Byte:	; 1 bytes @ 0x0
   926  0070                     ??_Write_Byte:	; 1 bytes @ 0x0
   927  0070                     ?i1_AddByteToBuffer:	; 1 bytes @ 0x0
   928  0070                     ??i1_AddByteToBuffer:	; 1 bytes @ 0x0
   929  0070                     ?i1_Set_Relay:	; 1 bytes @ 0x0
   930  0070                     	global	Write_Byte@Data
   931                           Write_Byte@Data:	; 1 bytes @ 0x0
   932  0070                     	global	i1Set_Relay@State
   933                           i1Set_Relay@State:	; 1 bytes @ 0x0
   934  0070                     	ds	1
   935  0070                     ??_WriteByteFromBuffer:	; 1 bytes @ 0x1
   936  0071                     ??i1_Set_Relay:	; 1 bytes @ 0x1
   937  0071                     	global	Read_Byte@Data
   938                           Read_Byte@Data:	; 1 bytes @ 0x1
   939  0071                     	global	i1AddByteToBuffer@Byte
   940                           i1AddByteToBuffer@Byte:	; 1 bytes @ 0x1
   941  0071                     	ds	1
   942  0071                     ??_HandleTelegramByte:	; 1 bytes @ 0x2
   943  0072                     	ds	1
   944  0072                     	global	i1Set_Relay@Relay
   945                           i1Set_Relay@Relay:	; 1 bytes @ 0x3
   946  0073                     	ds	1
   947  0073                     ??_HandleConfigByte:	; 1 bytes @ 0x4
   948  0074                     	global	HandleTelegramByte@Byte
   949                           HandleTelegramByte@Byte:	; 1 bytes @ 0x4
   950  0074                     	ds	2
   951  0074                     	global	HandleConfigByte@Byte
   952                           HandleConfigByte@Byte:	; 1 bytes @ 0x6
   953  0076                     	ds	1
   954  0076                     ??_Handle_Interrupts:	; 1 bytes @ 0x7
   955  0077                     	ds	5
   956  0077                     	global	Handle_Interrupts@dummy
   957                           Handle_Interrupts@dummy:	; 1 bytes @ 0xC
   958  007C                     	ds	1
   959  007C                     psect	cstackBANK0,class=BANK0,space=1,noexec
   960                           global __pcstackBANK0
   961                           __pcstackBANK0:
   962  0020                     ??_Init_Ports:	; 1 bytes @ 0x0
   963  0020                     ??_Init_Relays:	; 1 bytes @ 0x0
   964  0020                     ??_Init_Transmitter:	; 1 bytes @ 0x0
   965  0020                     ??_Init_Receiver:	; 1 bytes @ 0x0
   966  0020                     ??_AddByteToBuffer:	; 1 bytes @ 0x0
   967  0020                     ?_Set_Relay:	; 1 bytes @ 0x0
   968  0020                     ??_Read_Relay:	; 1 bytes @ 0x0
   969  0020                     ??_Init_Timer:	; 1 bytes @ 0x0
   970  0020                     ??_Start_Timer:	; 1 bytes @ 0x0
   971  0020                     ?_SetStopTime:	; 1 bytes @ 0x0
   972  0020                     	global	SetStopTime@Time10sec
   973                           SetStopTime@Time10sec:	; 1 bytes @ 0x0
   974  0020                     	global	Set_Relay@State
   975                           Set_Relay@State:	; 1 bytes @ 0x0
   976  0020                     	ds	1
   977  0020                     ??_Set_Relay:	; 1 bytes @ 0x1
   978  0021                     	global	SetStopTime@Time1sec
   979                           SetStopTime@Time1sec:	; 1 bytes @ 0x1
   980  0021                     	global	AddByteToBuffer@Byte
   981                           AddByteToBuffer@Byte:	; 1 bytes @ 0x1
   982  0021                     	ds	1
   983  0021                     ?_SendTelegram:	; 1 bytes @ 0x2
   984  0022                     	global	SetStopTime@Time100ms
   985                           SetStopTime@Time100ms:	; 1 bytes @ 0x2
   986  0022                     	global	Read_Relay@Relay
   987                           Read_Relay@Relay:	; 1 bytes @ 0x2
   988  0022                     	global	SendTelegram@MyTelegram
   989                           SendTelegram@MyTelegram:	; 21 bytes @ 0x2
   990  0022                     	ds	1
   991  0022                     ??_SetStopTime:	; 1 bytes @ 0x3
   992  0023                     	global	Set_Relay@Relay
   993                           Set_Relay@Relay:	; 1 bytes @ 0x3
   994  0023                     	ds	1
   995  0023                     ??_CheckStopTime:	; 1 bytes @ 0x4
   996  0024                     	ds	1
   997  0024                     	global	SetStopTime@RelayStopTime
   998                           SetStopTime@RelayStopTime:	; 1 bytes @ 0x5
   999  0025                     	ds	18
  1000  0025                     ??_SendTelegram:	; 1 bytes @ 0x17
  1001  0037                     	ds	1
  1002  0037                     	global	SendTelegram@CommandCounter
  1003                           SendTelegram@CommandCounter:	; 1 bytes @ 0x18
  1004  0038                     	ds	1
  1005  0038                     ??_Say_Hello:	; 1 bytes @ 0x19
  1006  0039                     ?_Handle_Telegram:	; 1 bytes @ 0x19
  1007  0039                     	global	Handle_Telegram@ThisTelegram
  1008                           Handle_Telegram@ThisTelegram:	; 21 bytes @ 0x19
  1009  0039                     	ds	4
  1010  0039                     	global	Say_Hello@ThisTelegram
  1011                           Say_Hello@ThisTelegram:	; 21 bytes @ 0x1D
  1012  003D                     	ds	17
  1013  003D                     ??_Handle_Telegram:	; 1 bytes @ 0x2E
  1014  004E                     	ds	4
  1015  004E                     	global	Handle_Telegram@error
  1016                           Handle_Telegram@error:	; 1 bytes @ 0x32
  1017  0052                     	ds	1
  1018  0052                     	global	Handle_Telegram@state
  1019                           Handle_Telegram@state:	; 1 bytes @ 0x33
  1020  0053                     	ds	1
  1021  0053                     ??_main:	; 1 bytes @ 0x34
  1022  0054                     	ds	4
  1023  0054                     ;!
  1024                           ;!Data Sizes:
  1025                           ;!    Strings     0
  1026                           ;!    Constant    0
  1027                           ;!    Data        0
  1028                           ;!    BSS         102
  1029                           ;!    Persistent  0
  1030                           ;!    Stack       0
  1031                           ;!
  1032                           ;!Auto Spaces:
  1033                           ;!    Space          Size  Autos    Used
  1034                           ;!    COMMON           14     13      14
  1035                           ;!    BANK0            80     56      79
  1036                           ;!    BANK1            80      0      78
  1037                           ;!    BANK2            80      0       0
  1038                           
  1039                           ;!
  1040                           ;!Pointer List with Targets:
  1041                           ;!
  1042                           ;!    SetStopTime@RelayStopTime	PTR unsigned char  size(1) Largest target is 3
  1043                           ;!		 -> Relay6StopTime(BANK1[3]), Relay5StopTime(BANK1[3]), Relay4StopTime(BANK1[3]), Re
                                 lay3StopTime(BANK1[3]), 
  1044                           ;!		 -> Relay2StopTime(BANK1[3]), Relay1StopTime(BANK0[3]), 
  1045                           ;!
  1046                           
  1047                           
  1048                           ;!
  1049                           ;!Critical Paths under _main in COMMON
  1050                           ;!
  1051                           ;!    None.
  1052                           ;!
  1053                           ;!Critical Paths under _Handle_Interrupts in COMMON
  1054                           ;!
  1055                           ;!    _Handle_Interrupts->_HandleConfigByte
  1056                           ;!    _WriteByteFromBuffer->_Write_Byte
  1057                           ;!    _HandleTelegramByte->_Read_Byte
  1058                           ;!    _HandleConfigByte->i1_Set_Relay
  1059                           ;!
  1060                           ;!Critical Paths under _main in BANK0
  1061                           ;!
  1062                           ;!    _main->_Handle_Telegram
  1063                           ;!    _Say_Hello->_SendTelegram
  1064                           ;!    _Handle_Telegram->_SendTelegram
  1065                           ;!    _SendTelegram->_AddByteToBuffer
  1066                           ;!    _CheckStopTime->_Set_Relay
  1067                           ;!
  1068                           ;!Critical Paths under _Handle_Interrupts in BANK0
  1069                           ;!
  1070                           ;!    None.
  1071                           ;!
  1072                           ;!Critical Paths under _main in BANK1
  1073                           ;!
  1074                           ;!    None.
  1075                           ;!
  1076                           ;!Critical Paths under _Handle_Interrupts in BANK1
  1077                           ;!
  1078                           ;!    None.
  1079                           ;!
  1080                           ;!Critical Paths under _main in BANK2
  1081                           ;!
  1082                           ;!    None.
  1083                           ;!
  1084                           ;!Critical Paths under _Handle_Interrupts in BANK2
  1085                           ;!
  1086                           ;!    None.
  1087                           
  1088 ;;
  1089 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1090 ;;
  1091                           
  1092                           ;!
  1093                           ;!Call Graph Tables:
  1094                           ;!
  1095                           ;! ---------------------------------------------------------------------------------
  1096                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1097                           ;! ---------------------------------------------------------------------------------
  1098                           ;! (0) _main                                                 4     4      0    8191
  1099                           ;!                                             52 BANK0      4     4      0
  1100                           ;!                    _AddByteToBuffer
  1101                           ;!                      _CheckStopTime
  1102                           ;!                    _Handle_Telegram
  1103                           ;!                         _Init_Ports
  1104                           ;!                      _Init_Receiver
  1105                           ;!                        _Init_Relays
  1106                           ;!                         _Init_Timer
  1107                           ;!                   _Init_Transmitter
  1108                           ;!                          _Say_Hello
  1109                           ;!                        _Start_Timer
  1110                           ;! ---------------------------------------------------------------------------------
  1111                           ;! (1) _Start_Timer                                          0     0      0       0
  1112                           ;! ---------------------------------------------------------------------------------
  1113                           ;! (1) _Say_Hello                                           25    25      0     619
  1114                           ;!                                             25 BANK0     25    25      0
  1115                           ;!                       _SendTelegram
  1116                           ;! ---------------------------------------------------------------------------------
  1117                           ;! (1) _Init_Transmitter                                     0     0      0       0
  1118                           ;! ---------------------------------------------------------------------------------
  1119                           ;! (1) _Init_Timer                                           0     0      0       0
  1120                           ;! ---------------------------------------------------------------------------------
  1121                           ;! (1) _Init_Relays                                          0     0      0       0
  1122                           ;! ---------------------------------------------------------------------------------
  1123                           ;! (1) _Init_Receiver                                        0     0      0       0
  1124                           ;! ---------------------------------------------------------------------------------
  1125                           ;! (1) _Init_Ports                                           0     0      0       0
  1126                           ;! ---------------------------------------------------------------------------------
  1127                           ;! (1) _Handle_Telegram                                     27     6     21    5596
  1128                           ;!                                             25 BANK0     27     6     21
  1129                           ;!                         _Read_Relay
  1130                           ;!                       _SendTelegram
  1131                           ;!                        _SetStopTime
  1132                           ;!                          _Set_Relay
  1133                           ;! ---------------------------------------------------------------------------------
  1134                           ;! (2) _SetStopTime                                          6     3      3    1942
  1135                           ;!                                              0 BANK0      6     3      3
  1136                           ;! ---------------------------------------------------------------------------------
  1137                           ;! (2) _SendTelegram                                        24     3     21     380
  1138                           ;!                                              2 BANK0     23     2     21
  1139                           ;!                    _AddByteToBuffer
  1140                           ;! ---------------------------------------------------------------------------------
  1141                           ;! (3) _AddByteToBuffer                                      2     2      0      22
  1142                           ;!                                              0 BANK0      2     2      0
  1143                           ;! ---------------------------------------------------------------------------------
  1144                           ;! (2) _Read_Relay                                           3     3      0      22
  1145                           ;!                                              0 BANK0      3     3      0
  1146                           ;! ---------------------------------------------------------------------------------
  1147                           ;! (1) _CheckStopTime                                        2     2      0    1954
  1148                           ;!                                              4 BANK0      2     2      0
  1149                           ;!                          _Set_Relay
  1150                           ;! ---------------------------------------------------------------------------------
  1151                           ;! (2) _Set_Relay                                            4     3      1    1954
  1152                           ;!                                              0 BANK0      4     3      1
  1153                           ;! ---------------------------------------------------------------------------------
  1154                           ;! Estimated maximum stack depth 3
  1155                           ;! ---------------------------------------------------------------------------------
  1156                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1157                           ;! ---------------------------------------------------------------------------------
  1158                           ;! (4) _Handle_Interrupts                                    6     6      0     711
  1159                           ;!                                              7 COMMON     6     6      0
  1160                           ;!                   _HandleConfigByte
  1161                           ;!                 _HandleTelegramByte
  1162                           ;!                    _Timer_Interrupt
  1163                           ;!                _WriteByteFromBuffer
  1164                           ;! ---------------------------------------------------------------------------------
  1165                           ;! (5) _WriteByteFromBuffer                                  1     1      0      22
  1166                           ;!                                              1 COMMON     1     1      0
  1167                           ;!                         _Write_Byte
  1168                           ;! ---------------------------------------------------------------------------------
  1169                           ;! (6) _Write_Byte                                           1     1      0      22
  1170                           ;!                                              0 COMMON     1     1      0
  1171                           ;! ---------------------------------------------------------------------------------
  1172                           ;! (5) _Timer_Interrupt                                      0     0      0       0
  1173                           ;! ---------------------------------------------------------------------------------
  1174                           ;! (5) _HandleTelegramByte                                   3     3      0     178
  1175                           ;!                                              2 COMMON     3     3      0
  1176                           ;!                          _Read_Byte
  1177                           ;! ---------------------------------------------------------------------------------
  1178                           ;! (5) _HandleConfigByte                                     3     3      0     510
  1179                           ;!                                              4 COMMON     3     3      0
  1180                           ;!                          _Read_Byte
  1181                           ;!                  i1_AddByteToBuffer
  1182                           ;!                        i1_Set_Relay
  1183                           ;! ---------------------------------------------------------------------------------
  1184                           ;! (6) i1_Set_Relay                                          4     3      1     442
  1185                           ;!                                              0 COMMON     4     3      1
  1186                           ;! ---------------------------------------------------------------------------------
  1187                           ;! (6) i1_AddByteToBuffer                                    2     2      0      22
  1188                           ;!                                              0 COMMON     2     2      0
  1189                           ;! ---------------------------------------------------------------------------------
  1190                           ;! (6) _Read_Byte                                            2     2      0      23
  1191                           ;!                                              0 COMMON     2     2      0
  1192                           ;! ---------------------------------------------------------------------------------
  1193                           ;! Estimated maximum stack depth 6
  1194                           ;! ---------------------------------------------------------------------------------
  1195                           ;!
  1196                           ;! Call Graph Graphs:
  1197                           ;!
  1198                           ;! _main (ROOT)
  1199                           ;!   _AddByteToBuffer
  1200                           ;!   _CheckStopTime
  1201                           ;!     _Set_Relay
  1202                           ;!   _Handle_Telegram
  1203                           ;!     _Read_Relay
  1204                           ;!     _SendTelegram
  1205                           ;!       _AddByteToBuffer
  1206                           ;!     _SetStopTime
  1207                           ;!     _Set_Relay
  1208                           ;!   _Init_Ports
  1209                           ;!   _Init_Receiver
  1210                           ;!   _Init_Relays
  1211                           ;!   _Init_Timer
  1212                           ;!   _Init_Transmitter
  1213                           ;!   _Say_Hello
  1214                           ;!     _SendTelegram
  1215                           ;!       _AddByteToBuffer
  1216                           ;!   _Start_Timer
  1217                           ;!
  1218                           ;! _Handle_Interrupts (ROOT)
  1219                           ;!   _HandleConfigByte
  1220                           ;!     _Read_Byte
  1221                           ;!     i1_AddByteToBuffer
  1222                           ;!     i1_Set_Relay
  1223                           ;!   _HandleTelegramByte
  1224                           ;!     _Read_Byte
  1225                           ;!   _Timer_Interrupt
  1226                           ;!   _WriteByteFromBuffer
  1227                           ;!     _Write_Byte
  1228                           ;!
  1229                           
  1230                           ;! Address spaces:
  1231                           
  1232                           ;!Name               Size   Autos  Total    Cost      Usage
  1233                           ;!BITCOMMON            E      0       0       0        0.0%
  1234                           ;!EEDATA             100      0       0       0        0.0%
  1235                           ;!NULL                 0      0       0       0        0.0%
  1236                           ;!CODE                 0      0       0       0        0.0%
  1237                           ;!COMMON               E      D       E       1      100.0%
  1238                           ;!BITSFR0              0      0       0       1        0.0%
  1239                           ;!SFR0                 0      0       0       1        0.0%
  1240                           ;!BITSFR1              0      0       0       2        0.0%
  1241                           ;!SFR1                 0      0       0       2        0.0%
  1242                           ;!STACK                0      0       0       2        0.0%
  1243                           ;!BANK0               50     38      4F       3       98.8%
  1244                           ;!BITBANK1            50      0       0       4        0.0%
  1245                           ;!BITSFR3              0      0       0       4        0.0%
  1246                           ;!SFR3                 0      0       0       4        0.0%
  1247                           ;!BANK1               50      0      4E       5       97.5%
  1248                           ;!BITSFR2              0      0       0       5        0.0%
  1249                           ;!SFR2                 0      0       0       5        0.0%
  1250                           ;!BITBANK2            50      0       0       6        0.0%
  1251                           ;!BANK2               50      0       0       7        0.0%
  1252                           ;!ABS                  0      0      AB       8        0.0%
  1253                           ;!BITBANK0            50      0       0       9        0.0%
  1254                           ;!DATA                 0      0      AB      10        0.0%
  1255                           
  1256                           	global	_main
  1257                           
  1258 ;; *************** function _main *****************
  1259 ;; Defined at:
  1260 ;;		line 59 in file "Main.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : B00/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1274 ;;      Params:         0       0       0       0
  1275 ;;      Locals:         0       0       0       0
  1276 ;;      Temps:          0       4       0       0
  1277 ;;      Totals:         0       4       0       0
  1278 ;;Total ram usage:        4 bytes
  1279 ;; Hardware stack levels required when called:    6
  1280 ;; This function calls:
  1281 ;;		_AddByteToBuffer
  1282 ;;		_CheckStopTime
  1283 ;;		_Handle_Telegram
  1284 ;;		_Init_Ports
  1285 ;;		_Init_Receiver
  1286 ;;		_Init_Relays
  1287 ;;		_Init_Timer
  1288 ;;		_Init_Transmitter
  1289 ;;		_Say_Hello
  1290 ;;		_Start_Timer
  1291 ;; This function is called by:
  1292 ;;		Startup code after reset
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1296                           	file	"Main.c"
  1297                           	line	59
  1298                           global __pmaintext
  1299                           __pmaintext:	;psect for function _main
  1300  0654                     psect	maintext
  1301                           	file	"Main.c"
  1302                           	line	59
  1303                           	global	__size_of_main
  1304                           	__size_of_main	equ	__end_of_main-_main
  1305  0069                     	
  1306                           _main:	
  1307  0654                     ;incstack = 0
  1308                           	opt	stack 2
  1309                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1310                           	line	62
  1311                           	
  1312                           l2567:	
  1313  0654                     ;Main.c: 62:     Init_Ports();
  1314                           	fcall	_Init_Ports
  1315  0654  158A  2766  118A   	line	63
  1316                           ;Main.c: 63:     Init_Timer();
  1317                           	fcall	_Init_Timer
  1318  0657  158A  2741  118A   	line	64
  1319                           	
  1320                           l2569:	
  1321  065A                     ;Main.c: 64:     Init_Relays();
  1322                           	fcall	_Init_Relays
  1323  065A  158A  27B0  118A   	line	65
  1324                           	
  1325                           l2571:	
  1326  065D                     ;Main.c: 65:     Init_Transmitter();
  1327                           	fcall	_Init_Transmitter
  1328  065D  158A  274D  118A   	line	66
  1329                           ;Main.c: 66:     Init_Receiver();
  1330                           	fcall	_Init_Receiver
  1331  0660  158A  2759  118A   	line	67
  1332                           	
  1333                           l2573:	
  1334  0663                     ;Main.c: 67:     Start_Timer();
  1335                           	fcall	_Start_Timer
  1336  0663  158A  2736  118A   	line	69
  1337                           	
  1338                           l2575:	
  1339  0666                     ;Main.c: 69:     AddByteToBuffer('X');
  1340                           	movlw	low(058h)
  1341  0666  3058               	fcall	_AddByteToBuffer
  1342  0667  158A  2794  118A   	line	70
  1343                           	
  1344                           l2577:	
  1345  066A                     ;Main.c: 70:     Say_Hello();
  1346                           	fcall	_Say_Hello
  1347  066A  118A  2713  118A   	line	72
  1348                           	
  1349                           l2579:	
  1350  066D                     ;Main.c: 72:     CurrentMode = Running;
  1351                           	bcf	status, 5	;RP0=0, select bank0
  1352  066D  1283               	bcf	status, 6	;RP1=0, select bank0
  1353  066E  1303               	clrf	(_CurrentMode)
  1354  066F  01E5               	goto	l2581
  1355  0670  2E71               	line	74
  1356                           ;Main.c: 74:     while (1)
  1357                           	
  1358                           l160:	
  1359  0671                     	line	78
  1360                           	
  1361                           l2581:	
  1362  0671                     ;Main.c: 75:     {;Main.c: 78:         if (StopRelay1OnTime == 1 || StopRelay2OnTime == 
                                 1 || StopRelay3OnTime == 1 || StopRelay4OnTime == 1 || StopRelay5OnTime == 1 || StopRela
                                 y6OnTime == 1)
  1363                           	bcf	status, 5	;RP0=0, select bank0
  1364  0671  1283               	bcf	status, 6	;RP1=0, select bank0
  1365  0672  1303               		decf	((_StopRelay1OnTime)),w
  1366  0673  036B               	btfsc	status,2
  1367  0674  1903               	goto	u1631
  1368  0675  2E77               	goto	u1630
  1369  0676  2E78               u1631:
  1370  0677                     	goto	l2593
  1371  0677  2E92               u1630:
  1372  0678                     	
  1373                           l2583:	
  1374  0678                     		decf	((_StopRelay2OnTime)),w
  1375  0678  036A               	btfsc	status,2
  1376  0679  1903               	goto	u1641
  1377  067A  2E7C               	goto	u1640
  1378  067B  2E7D               u1641:
  1379  067C                     	goto	l2593
  1380  067C  2E92               u1640:
  1381  067D                     	
  1382                           l2585:	
  1383  067D                     		decf	((_StopRelay3OnTime)),w
  1384  067D  0369               	btfsc	status,2
  1385  067E  1903               	goto	u1651
  1386  067F  2E81               	goto	u1650
  1387  0680  2E82               u1651:
  1388  0681                     	goto	l2593
  1389  0681  2E92               u1650:
  1390  0682                     	
  1391                           l2587:	
  1392  0682                     		decf	((_StopRelay4OnTime)),w
  1393  0682  0368               	btfsc	status,2
  1394  0683  1903               	goto	u1661
  1395  0684  2E86               	goto	u1660
  1396  0685  2E87               u1661:
  1397  0686                     	goto	l2593
  1398  0686  2E92               u1660:
  1399  0687                     	
  1400                           l2589:	
  1401  0687                     		decf	((_StopRelay5OnTime)),w
  1402  0687  0367               	btfsc	status,2
  1403  0688  1903               	goto	u1671
  1404  0689  2E8B               	goto	u1670
  1405  068A  2E8C               u1671:
  1406  068B                     	goto	l2593
  1407  068B  2E92               u1670:
  1408  068C                     	
  1409                           l2591:	
  1410  068C                     		decf	((_StopRelay6OnTime)),w
  1411  068C  0366               	btfss	status,2
  1412  068D  1D03               	goto	u1681
  1413  068E  2E90               	goto	u1680
  1414  068F  2E91               u1681:
  1415  0690                     	goto	l2595
  1416  0690  2E96               u1680:
  1417  0691                     	goto	l2593
  1418  0691  2E92               	
  1419                           l163:	
  1420  0692                     	line	80
  1421                           	
  1422                           l2593:	
  1423  0692                     ;Main.c: 79:         {;Main.c: 80:             CheckStopTime();
  1424                           	fcall	_CheckStopTime
  1425  0692  118A  222F  118A   	goto	l2595
  1426  0695  2E96               	line	81
  1427                           ;Main.c: 81:         }
  1428                           	
  1429                           l161:	
  1430  0696                     	line	83
  1431                           	
  1432                           l2595:	
  1433  0696                     ;Main.c: 83:         if (TelegramReadyFlag == 1)
  1434                           	bcf	status, 5	;RP0=0, select bank0
  1435  0696  1283               	bcf	status, 6	;RP1=0, select bank0
  1436  0697  1303               		decf	((_TelegramReadyFlag)),w
  1437  0698  035E               iorwf	((_TelegramReadyFlag+1)),w
  1438  0699  045F               	btfss	status,2
  1439  069A  1D03               	goto	u1691
  1440  069B  2E9D               	goto	u1690
  1441  069C  2E9E               u1691:
  1442  069D                     	goto	l2581
  1443  069D  2E71               u1690:
  1444  069E                     	line	85
  1445                           	
  1446                           l2597:	
  1447  069E                     ;Main.c: 84:         {;Main.c: 85:             TelegramReadyFlag = 0;
  1448                           	clrf	(_TelegramReadyFlag)
  1449  069E  01DE               	clrf	(_TelegramReadyFlag+1)
  1450  069F  01DF               	line	86
  1451                           	
  1452                           l2599:	
  1453  06A0                     ;Main.c: 86:             Handle_Telegram(Telegram);
  1454                           	movlw	(Handle_Telegram@ThisTelegram)&0ffh
  1455  06A0  3039               	movwf	fsr0
  1456  06A1  0084               	movlw	low(_Telegram)
  1457  06A2  30C8               	movwf	(??_main+0)+0
  1458  06A3  00D4               	movf	fsr0,w
  1459  06A4  0804               	movwf	((??_main+0)+0+1)
  1460  06A5  00D5               	movlw	21
  1461  06A6  3015               	movwf	((??_main+0)+0+2)
  1462  06A7  00D6               u1700:
  1463  06A8                     	movf	(??_main+0)+0,w
  1464  06A8  0854               	movwf	fsr0
  1465  06A9  0084               	bcf	status, 7	;select IRP bank1
  1466  06AA  1383               	
  1467                           	movf	indf,w
  1468  06AB  0800               	movwf	((??_main+0)+0+3)
  1469  06AC  00D7               	incf	(??_main+0)+0,f
  1470  06AD  0AD4               	movf	((??_main+0)+0+1),w
  1471  06AE  0855               	movwf	fsr0
  1472  06AF  0084               	
  1473                           	movf	((??_main+0)+0+3),w
  1474  06B0  0857               	movwf	indf
  1475  06B1  0080               	incf	((??_main+0)+0+1),f
  1476  06B2  0AD5               	decfsz	((??_main+0)+0+2),f
  1477  06B3  0BD6               	goto	u1700
  1478  06B4  2EA8               	
  1479                           	fcall	_Handle_Telegram
  1480  06B5  118A  2020  118A   	goto	l2581
  1481  06B8  2E71               	line	87
  1482                           ;Main.c: 87:         }
  1483                           	
  1484                           l164:	
  1485  06B9                     	goto	l2581
  1486  06B9  2E71               	line	89
  1487                           ;Main.c: 89:     }
  1488                           	
  1489                           l165:	
  1490  06BA                     	goto	l2581
  1491  06BA  2E71               	
  1492                           l166:	
  1493  06BB                     	line	90
  1494                           	
  1495                           l167:	
  1496  06BB                     	global	start
  1497                           	ljmp	start
  1498  06BB  118A  280D         	opt stack 0
  1499                           GLOBAL	__end_of_main
  1500                           	__end_of_main:
  1501  06BD                     	signat	_main,89
  1502                           	global	_Start_Timer
  1503                           
  1504 ;; *************** function _Start_Timer *****************
  1505 ;; Defined at:
  1506 ;;		line 53 in file "Timer.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1520 ;;      Params:         0       0       0       0
  1521 ;;      Locals:         0       0       0       0
  1522 ;;      Temps:          0       0       0       0
  1523 ;;      Totals:         0       0       0       0
  1524 ;;Total ram usage:        0 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    3
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1534                           	file	"Timer.c"
  1535                           	line	53
  1536                           global __ptext1
  1537                           __ptext1:	;psect for function _Start_Timer
  1538  0F36                     psect	text1
  1539                           	file	"Timer.c"
  1540                           	line	53
  1541                           	global	__size_of_Start_Timer
  1542                           	__size_of_Start_Timer	equ	__end_of_Start_Timer-_Start_Timer
  1543  000B                     	
  1544                           _Start_Timer:	
  1545  0F36                     ;incstack = 0
  1546                           	opt	stack 4
  1547                           ; Regs used in _Start_Timer: [wreg+status,2]
  1548                           	line	56
  1549                           	
  1550                           l2203:	
  1551  0F36                     ;Timer.c: 56:     PIR1bits.TMR1IF = 0;
  1552                           	bcf	status, 5	;RP0=0, select bank0
  1553  0F36  1283               	bcf	status, 6	;RP1=0, select bank0
  1554  0F37  1303               	bcf	(12),0	;volatile
  1555  0F38  100C               	line	59
  1556                           	
  1557                           l2205:	
  1558  0F39                     ;Timer.c: 59:     Counter_100ms = 0;
  1559                           	clrf	(_Counter_100ms)
  1560  0F39  01DC               	clrf	(_Counter_100ms+1)
  1561  0F3A  01DD               	line	61
  1562                           	
  1563                           l2207:	
  1564  0F3B                     ;Timer.c: 61:     TMR1H = 160;
  1565                           	movlw	low(0A0h)
  1566  0F3B  30A0               	movwf	(15)	;volatile
  1567  0F3C  008F               	line	62
  1568                           	
  1569                           l2209:	
  1570  0F3D                     ;Timer.c: 62:     TMR1L = 138;
  1571                           	movlw	low(08Ah)
  1572  0F3D  308A               	movwf	(14)	;volatile
  1573  0F3E  008E               	line	65
  1574                           	
  1575                           l2211:	
  1576  0F3F                     ;Timer.c: 65:     T1CONbits.TMR1ON = 1;
  1577                           	bsf	(16),0	;volatile
  1578  0F3F  1410               	line	66
  1579                           	
  1580                           l54:	
  1581  0F40                     	return
  1582  0F40  0008               	opt stack 0
  1583                           GLOBAL	__end_of_Start_Timer
  1584                           	__end_of_Start_Timer:
  1585  0F41                     	signat	_Start_Timer,89
  1586                           	global	_Say_Hello
  1587                           
  1588 ;; *************** function _Say_Hello *****************
  1589 ;; Defined at:
  1590 ;;		line 92 in file "Main.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  ThisTelegram   21   29[BANK0 ] struct .
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1604 ;;      Params:         0       0       0       0
  1605 ;;      Locals:         0      21       0       0
  1606 ;;      Temps:          0       4       0       0
  1607 ;;      Totals:         0      25       0       0
  1608 ;;Total ram usage:       25 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    5
  1611 ;; This function calls:
  1612 ;;		_SendTelegram
  1613 ;; This function is called by:
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1618                           	file	"Main.c"
  1619                           	line	92
  1620                           global __ptext2
  1621                           __ptext2:	;psect for function _Say_Hello
  1622  0713                     psect	text2
  1623                           	file	"Main.c"
  1624                           	line	92
  1625                           	global	__size_of_Say_Hello
  1626                           	__size_of_Say_Hello	equ	__end_of_Say_Hello-_Say_Hello
  1627  0043                     	
  1628                           _Say_Hello:	
  1629  0713                     ;incstack = 0
  1630                           	opt	stack 2
  1631                           ; Regs used in _Say_Hello: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1632                           	line	95
  1633                           	
  1634                           l2265:	
  1635  0713                     ;Main.c: 94:     TelegramType ThisTelegram;;Main.c: 95:     ThisTelegram.Start = ':';
  1636                           	movlw	low(03Ah)
  1637  0713  303A               	bcf	status, 5	;RP0=0, select bank0
  1638  0714  1283               	bcf	status, 6	;RP1=0, select bank0
  1639  0715  1303               	movwf	(??_Say_Hello+0)+0
  1640  0716  00B9               	movf	(??_Say_Hello+0)+0,w
  1641  0717  0839               	movwf	(Say_Hello@ThisTelegram)
  1642  0718  00BD               	line	96
  1643                           ;Main.c: 96:     ThisTelegram.Address = '0';
  1644                           	movlw	low(030h)
  1645  0719  3030               	movwf	(??_Say_Hello+0)+0
  1646  071A  00B9               	movf	(??_Say_Hello+0)+0,w
  1647  071B  0839               	movwf	0+(Say_Hello@ThisTelegram)+01h
  1648  071C  00BE               	line	97
  1649                           ;Main.c: 97:     ThisTelegram.Commandlength = 5;
  1650                           	movlw	low(05h)
  1651  071D  3005               	movwf	(??_Say_Hello+0)+0
  1652  071E  00B9               	movf	(??_Say_Hello+0)+0,w
  1653  071F  0839               	movwf	0+(Say_Hello@ThisTelegram)+02h
  1654  0720  00BF               	line	98
  1655                           ;Main.c: 98:     ThisTelegram.Command[0] = 'H';
  1656                           	movlw	low(048h)
  1657  0721  3048               	movwf	(??_Say_Hello+0)+0
  1658  0722  00B9               	movf	(??_Say_Hello+0)+0,w
  1659  0723  0839               	movwf	0+(Say_Hello@ThisTelegram)+03h
  1660  0724  00C0               	line	99
  1661                           ;Main.c: 99:     ThisTelegram.Command[1] = 'E';
  1662                           	movlw	low(045h)
  1663  0725  3045               	movwf	(??_Say_Hello+0)+0
  1664  0726  00B9               	movf	(??_Say_Hello+0)+0,w
  1665  0727  0839               	movwf	0+(Say_Hello@ThisTelegram)+04h
  1666  0728  00C1               	line	100
  1667                           ;Main.c: 100:     ThisTelegram.Command[2] = 'L';
  1668                           	movlw	low(04Ch)
  1669  0729  304C               	movwf	(??_Say_Hello+0)+0
  1670  072A  00B9               	movf	(??_Say_Hello+0)+0,w
  1671  072B  0839               	movwf	0+(Say_Hello@ThisTelegram)+05h
  1672  072C  00C2               	line	101
  1673                           ;Main.c: 101:     ThisTelegram.Command[3] = 'L';
  1674                           	movlw	low(04Ch)
  1675  072D  304C               	movwf	(??_Say_Hello+0)+0
  1676  072E  00B9               	movf	(??_Say_Hello+0)+0,w
  1677  072F  0839               	movwf	0+(Say_Hello@ThisTelegram)+06h
  1678  0730  00C3               	line	102
  1679                           ;Main.c: 102:     ThisTelegram.Command[4] = 'O';
  1680                           	movlw	low(04Fh)
  1681  0731  304F               	movwf	(??_Say_Hello+0)+0
  1682  0732  00B9               	movf	(??_Say_Hello+0)+0,w
  1683  0733  0839               	movwf	0+(Say_Hello@ThisTelegram)+07h
  1684  0734  00C4               	line	103
  1685                           ;Main.c: 103:     ThisTelegram.End[0] = 0x0D;
  1686                           	movlw	low(0Dh)
  1687  0735  300D               	movwf	(??_Say_Hello+0)+0
  1688  0736  00B9               	movf	(??_Say_Hello+0)+0,w
  1689  0737  0839               	movwf	0+(Say_Hello@ThisTelegram)+013h
  1690  0738  00D0               	line	104
  1691                           ;Main.c: 104:     ThisTelegram.End[1] = 0x0A;
  1692                           	movlw	low(0Ah)
  1693  0739  300A               	movwf	(??_Say_Hello+0)+0
  1694  073A  00B9               	movf	(??_Say_Hello+0)+0,w
  1695  073B  0839               	movwf	0+(Say_Hello@ThisTelegram)+014h
  1696  073C  00D1               	line	106
  1697                           	
  1698                           l2267:	
  1699  073D                     ;Main.c: 106:     SendTelegram(ThisTelegram);
  1700                           	movlw	(SendTelegram@MyTelegram)&0ffh
  1701  073D  3022               	movwf	fsr0
  1702  073E  0084               	movlw	low(Say_Hello@ThisTelegram)
  1703  073F  303D               	movwf	(??_Say_Hello+0)+0
  1704  0740  00B9               	movf	fsr0,w
  1705  0741  0804               	movwf	((??_Say_Hello+0)+0+1)
  1706  0742  00BA               	movlw	21
  1707  0743  3015               	movwf	((??_Say_Hello+0)+0+2)
  1708  0744  00BB               u1210:
  1709  0745                     	movf	(??_Say_Hello+0)+0,w
  1710  0745  0839               	movwf	fsr0
  1711  0746  0084               	bcf	status, 7	;select IRP bank0
  1712  0747  1383               	
  1713                           	movf	indf,w
  1714  0748  0800               	movwf	((??_Say_Hello+0)+0+3)
  1715  0749  00BC               	incf	(??_Say_Hello+0)+0,f
  1716  074A  0AB9               	movf	((??_Say_Hello+0)+0+1),w
  1717  074B  083A               	movwf	fsr0
  1718  074C  0084               	
  1719                           	movf	((??_Say_Hello+0)+0+3),w
  1720  074D  083C               	movwf	indf
  1721  074E  0080               	incf	((??_Say_Hello+0)+0+1),f
  1722  074F  0ABA               	decfsz	((??_Say_Hello+0)+0+2),f
  1723  0750  0BBB               	goto	u1210
  1724  0751  2F45               	
  1725                           	fcall	_SendTelegram
  1726  0752  118A  2756  118A   	line	107
  1727                           	
  1728                           l170:	
  1729  0755                     	return
  1730  0755  0008               	opt stack 0
  1731                           GLOBAL	__end_of_Say_Hello
  1732                           	__end_of_Say_Hello:
  1733  0756                     	signat	_Say_Hello,89
  1734                           	global	_Init_Transmitter
  1735                           
  1736 ;; *************** function _Init_Transmitter *****************
  1737 ;; Defined at:
  1738 ;;		line 35 in file "Eusart.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1752 ;;      Params:         0       0       0       0
  1753 ;;      Locals:         0       0       0       0
  1754 ;;      Temps:          0       0       0       0
  1755 ;;      Totals:         0       0       0       0
  1756 ;;Total ram usage:        0 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    3
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_main
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1766                           	file	"Eusart.c"
  1767                           	line	35
  1768                           global __ptext3
  1769                           __ptext3:	;psect for function _Init_Transmitter
  1770  0F4D                     psect	text3
  1771                           	file	"Eusart.c"
  1772                           	line	35
  1773                           	global	__size_of_Init_Transmitter
  1774                           	__size_of_Init_Transmitter	equ	__end_of_Init_Transmitter-_Init_Transmitter
  1775  000C                     	
  1776                           _Init_Transmitter:	
  1777  0F4D                     ;incstack = 0
  1778                           	opt	stack 4
  1779                           ; Regs used in _Init_Transmitter: [wreg+status,2]
  1780                           	line	38
  1781                           	
  1782                           l2251:	
  1783  0F4D                     ;Eusart.c: 38:     TXSTAbits.SYNC = 0;
  1784                           	bcf	status, 5	;RP0=0, select bank0
  1785  0F4D  1283               	bcf	status, 6	;RP1=0, select bank0
  1786  0F4E  1303               	bcf	(22),4	;volatile
  1787  0F4F  1216               	line	41
  1788                           ;Eusart.c: 41:     RCSTAbits.SPEN = 1;
  1789                           	bsf	(23),7	;volatile
  1790  0F50  1797               	line	44
  1791                           ;Eusart.c: 44:     TXSTAbits.TX9 = 0;
  1792                           	bcf	(22),6	;volatile
  1793  0F51  1316               	line	47
  1794                           ;Eusart.c: 47:     TXSTAbits.BRGH = 1;
  1795                           	bsf	(22),2	;volatile
  1796  0F52  1516               	line	50
  1797                           ;Eusart.c: 50:     BAUDCTLbits.BRG16 = 1;
  1798                           	bsf	(17),3	;volatile
  1799  0F53  1591               	line	53
  1800                           	
  1801                           l2253:	
  1802  0F54                     ;Eusart.c: 53:     SPBRG = 103;
  1803                           	movlw	low(067h)
  1804  0F54  3067               	movwf	(19)	;volatile
  1805  0F55  0093               	line	63
  1806                           	
  1807                           l2255:	
  1808  0F56                     ;Eusart.c: 63:     TXREG = 0;
  1809                           	clrf	(21)	;volatile
  1810  0F56  0195               	line	66
  1811                           	
  1812                           l2257:	
  1813  0F57                     ;Eusart.c: 66:     TXSTAbits.TXEN = 1;
  1814                           	bsf	(22),5	;volatile
  1815  0F57  1696               	line	67
  1816                           	
  1817                           l308:	
  1818  0F58                     	return
  1819  0F58  0008               	opt stack 0
  1820                           GLOBAL	__end_of_Init_Transmitter
  1821                           	__end_of_Init_Transmitter:
  1822  0F59                     	signat	_Init_Transmitter,89
  1823                           	global	_Init_Timer
  1824                           
  1825 ;; *************** function _Init_Timer *****************
  1826 ;; Defined at:
  1827 ;;		line 31 in file "Timer.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, status,2, status,0
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1841 ;;      Params:         0       0       0       0
  1842 ;;      Locals:         0       0       0       0
  1843 ;;      Temps:          0       0       0       0
  1844 ;;      Totals:         0       0       0       0
  1845 ;;Total ram usage:        0 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    3
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1855                           	file	"Timer.c"
  1856                           	line	31
  1857                           global __ptext4
  1858                           __ptext4:	;psect for function _Init_Timer
  1859  0F41                     psect	text4
  1860                           	file	"Timer.c"
  1861                           	line	31
  1862                           	global	__size_of_Init_Timer
  1863                           	__size_of_Init_Timer	equ	__end_of_Init_Timer-_Init_Timer
  1864  000C                     	
  1865                           _Init_Timer:	
  1866  0F41                     ;incstack = 0
  1867                           	opt	stack 4
  1868                           ; Regs used in _Init_Timer: [wreg+status,2+status,0]
  1869                           	line	34
  1870                           	
  1871                           l2191:	
  1872  0F41                     ;Timer.c: 34:     T1CONbits.T1CKPS = 3;
  1873                           	movlw	(03h & ((1<<2)-1))<<4
  1874  0F41  3030               	bcf	status, 5	;RP0=0, select bank0
  1875  0F42  1283               	bcf	status, 6	;RP1=0, select bank0
  1876  0F43  1303               	iorwf	(16),f	;volatile
  1877  0F44  0490               	line	37
  1878                           	
  1879                           l2193:	
  1880  0F45                     ;Timer.c: 37:     T1CONbits.T1OSCEN = 0;
  1881                           	bcf	(16),3	;volatile
  1882  0F45  1190               	line	40
  1883                           	
  1884                           l2195:	
  1885  0F46                     ;Timer.c: 40:     T1CONbits.TMR1CS = 0;
  1886                           	bcf	(16),1	;volatile
  1887  0F46  1090               	line	43
  1888                           	
  1889                           l2197:	
  1890  0F47                     ;Timer.c: 43:     INTCONbits.GIE = 1;
  1891                           	bsf	(11),7	;volatile
  1892  0F47  178B               	line	46
  1893                           	
  1894                           l2199:	
  1895  0F48                     ;Timer.c: 46:     INTCONbits.PEIE = 1;
  1896                           	bsf	(11),6	;volatile
  1897  0F48  170B               	line	49
  1898                           	
  1899                           l2201:	
  1900  0F49                     ;Timer.c: 49:     PIE1bits.TMR1IE = 1;
  1901                           	bsf	status, 5	;RP0=1, select bank1
  1902  0F49  1683               	bcf	status, 6	;RP1=0, select bank1
  1903  0F4A  1303               	bsf	(140)^080h,0	;volatile
  1904  0F4B  140C               	line	51
  1905                           	
  1906                           l51:	
  1907  0F4C                     	return
  1908  0F4C  0008               	opt stack 0
  1909                           GLOBAL	__end_of_Init_Timer
  1910                           	__end_of_Init_Timer:
  1911  0F4D                     	signat	_Init_Timer,89
  1912                           	global	_Init_Relays
  1913                           
  1914 ;; *************** function _Init_Relays *****************
  1915 ;; Defined at:
  1916 ;;		line 47 in file "RelayControl.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;		None
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		None
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1930 ;;      Params:         0       0       0       0
  1931 ;;      Locals:         0       0       0       0
  1932 ;;      Temps:          0       0       0       0
  1933 ;;      Totals:         0       0       0       0
  1934 ;;Total ram usage:        0 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    3
  1937 ;; This function calls:
  1938 ;;		Nothing
  1939 ;; This function is called by:
  1940 ;;		_main
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1944                           	file	"RelayControl.c"
  1945                           	line	47
  1946                           global __ptext5
  1947                           __ptext5:	;psect for function _Init_Relays
  1948  0FB0                     psect	text5
  1949                           	file	"RelayControl.c"
  1950                           	line	47
  1951                           	global	__size_of_Init_Relays
  1952                           	__size_of_Init_Relays	equ	__end_of_Init_Relays-_Init_Relays
  1953  0025                     	
  1954                           _Init_Relays:	
  1955  0FB0                     ;incstack = 0
  1956                           	opt	stack 4
  1957                           ; Regs used in _Init_Relays: []
  1958                           	line	49
  1959                           	
  1960                           l2249:	
  1961  0FB0                     ;RelayControl.c: 49:     TRISAbits.TRISA0 = 0;
  1962                           	bsf	status, 5	;RP0=1, select bank1
  1963  0FB0  1683               	bcf	status, 6	;RP1=0, select bank1
  1964  0FB1  1303               	bcf	(133)^080h,0	;volatile
  1965  0FB2  1005               	line	50
  1966                           ;RelayControl.c: 50:     PORTAbits.RA0 = 0;
  1967                           	bcf	status, 5	;RP0=0, select bank0
  1968  0FB3  1283               	bcf	status, 6	;RP1=0, select bank0
  1969  0FB4  1303               	bcf	(5),0	;volatile
  1970  0FB5  1005               	line	51
  1971                           ;RelayControl.c: 51:     TRISAbits.TRISA1 = 0;
  1972                           	bsf	status, 5	;RP0=1, select bank1
  1973  0FB6  1683               	bcf	status, 6	;RP1=0, select bank1
  1974  0FB7  1303               	bcf	(133)^080h,1	;volatile
  1975  0FB8  1085               	line	52
  1976                           ;RelayControl.c: 52:     PORTAbits.RA1 = 0;
  1977                           	bcf	status, 5	;RP0=0, select bank0
  1978  0FB9  1283               	bcf	status, 6	;RP1=0, select bank0
  1979  0FBA  1303               	bcf	(5),1	;volatile
  1980  0FBB  1085               	line	53
  1981                           ;RelayControl.c: 53:     TRISAbits.TRISA2 = 0;
  1982                           	bsf	status, 5	;RP0=1, select bank1
  1983  0FBC  1683               	bcf	status, 6	;RP1=0, select bank1
  1984  0FBD  1303               	bcf	(133)^080h,2	;volatile
  1985  0FBE  1105               	line	54
  1986                           ;RelayControl.c: 54:     PORTAbits.RA2 = 0;
  1987                           	bcf	status, 5	;RP0=0, select bank0
  1988  0FBF  1283               	bcf	status, 6	;RP1=0, select bank0
  1989  0FC0  1303               	bcf	(5),2	;volatile
  1990  0FC1  1105               	line	55
  1991                           ;RelayControl.c: 55:     TRISCbits.TRISC0 = 0;
  1992                           	bsf	status, 5	;RP0=1, select bank1
  1993  0FC2  1683               	bcf	status, 6	;RP1=0, select bank1
  1994  0FC3  1303               	bcf	(135)^080h,0	;volatile
  1995  0FC4  1007               	line	56
  1996                           ;RelayControl.c: 56:     PORTCbits.RC0 = 0;
  1997                           	bcf	status, 5	;RP0=0, select bank0
  1998  0FC5  1283               	bcf	status, 6	;RP1=0, select bank0
  1999  0FC6  1303               	bcf	(7),0	;volatile
  2000  0FC7  1007               	line	57
  2001                           ;RelayControl.c: 57:     TRISCbits.TRISC1 = 0;
  2002                           	bsf	status, 5	;RP0=1, select bank1
  2003  0FC8  1683               	bcf	status, 6	;RP1=0, select bank1
  2004  0FC9  1303               	bcf	(135)^080h,1	;volatile
  2005  0FCA  1087               	line	58
  2006                           ;RelayControl.c: 58:     PORTCbits.RC1 = 0;
  2007                           	bcf	status, 5	;RP0=0, select bank0
  2008  0FCB  1283               	bcf	status, 6	;RP1=0, select bank0
  2009  0FCC  1303               	bcf	(7),1	;volatile
  2010  0FCD  1087               	line	59
  2011                           ;RelayControl.c: 59:     TRISCbits.TRISC2 = 0;
  2012                           	bsf	status, 5	;RP0=1, select bank1
  2013  0FCE  1683               	bcf	status, 6	;RP1=0, select bank1
  2014  0FCF  1303               	bcf	(135)^080h,2	;volatile
  2015  0FD0  1107               	line	60
  2016                           ;RelayControl.c: 60:     PORTCbits.RC2 = 0;
  2017                           	bcf	status, 5	;RP0=0, select bank0
  2018  0FD1  1283               	bcf	status, 6	;RP1=0, select bank0
  2019  0FD2  1303               	bcf	(7),2	;volatile
  2020  0FD3  1107               	line	62
  2021                           	
  2022                           l376:	
  2023  0FD4                     	return
  2024  0FD4  0008               	opt stack 0
  2025                           GLOBAL	__end_of_Init_Relays
  2026                           	__end_of_Init_Relays:
  2027  0FD5                     	signat	_Init_Relays,89
  2028                           	global	_Init_Receiver
  2029                           
  2030 ;; *************** function _Init_Receiver *****************
  2031 ;; Defined at:
  2032 ;;		line 69 in file "Eusart.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		status,2
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2046 ;;      Params:         0       0       0       0
  2047 ;;      Locals:         0       0       0       0
  2048 ;;      Temps:          0       0       0       0
  2049 ;;      Totals:         0       0       0       0
  2050 ;;Total ram usage:        0 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    3
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2060                           	file	"Eusart.c"
  2061                           	line	69
  2062                           global __ptext6
  2063                           __ptext6:	;psect for function _Init_Receiver
  2064  0F59                     psect	text6
  2065                           	file	"Eusart.c"
  2066                           	line	69
  2067                           	global	__size_of_Init_Receiver
  2068                           	__size_of_Init_Receiver	equ	__end_of_Init_Receiver-_Init_Receiver
  2069  000D                     	
  2070                           _Init_Receiver:	
  2071  0F59                     ;incstack = 0
  2072                           	opt	stack 4
  2073                           ; Regs used in _Init_Receiver: [status,2]
  2074                           	line	75
  2075                           	
  2076                           l2259:	
  2077  0F59                     ;Eusart.c: 75:     RCSTAbits.RX9 = 0;
  2078                           	bcf	status, 5	;RP0=0, select bank0
  2079  0F59  1283               	bcf	status, 6	;RP1=0, select bank0
  2080  0F5A  1303               	bcf	(23),6	;volatile
  2081  0F5B  1317               	line	91
  2082                           ;Eusart.c: 91:     PIE1bits.RCIE = 1;
  2083                           	bsf	status, 5	;RP0=1, select bank1
  2084  0F5C  1683               	bcf	status, 6	;RP1=0, select bank1
  2085  0F5D  1303               	bsf	(140)^080h,5	;volatile
  2086  0F5E  168C               	line	94
  2087                           ;Eusart.c: 94:     INTCONbits.PEIE = 1;
  2088                           	bsf	(11),6	;volatile
  2089  0F5F  170B               	line	97
  2090                           ;Eusart.c: 97:     INTCONbits.GIE = 1;
  2091                           	bsf	(11),7	;volatile
  2092  0F60  178B               	line	100
  2093                           	
  2094                           l2261:	
  2095  0F61                     ;Eusart.c: 100:     RCREG = 0;
  2096                           	bcf	status, 5	;RP0=0, select bank0
  2097  0F61  1283               	bcf	status, 6	;RP1=0, select bank0
  2098  0F62  1303               	clrf	(20)	;volatile
  2099  0F63  0194               	line	103
  2100                           	
  2101                           l2263:	
  2102  0F64                     ;Eusart.c: 103:     RCSTAbits.CREN = 1;
  2103                           	bsf	(23),4	;volatile
  2104  0F64  1617               	line	104
  2105                           	
  2106                           l311:	
  2107  0F65                     	return
  2108  0F65  0008               	opt stack 0
  2109                           GLOBAL	__end_of_Init_Receiver
  2110                           	__end_of_Init_Receiver:
  2111  0F66                     	signat	_Init_Receiver,89
  2112                           	global	_Init_Ports
  2113                           
  2114 ;; *************** function _Init_Ports *****************
  2115 ;; Defined at:
  2116 ;;		line 109 in file "Main.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2, status,0
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2130 ;;      Params:         0       0       0       0
  2131 ;;      Locals:         0       0       0       0
  2132 ;;      Temps:          0       0       0       0
  2133 ;;      Totals:         0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    3
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_main
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2144                           	file	"Main.c"
  2145                           	line	109
  2146                           global __ptext7
  2147                           __ptext7:	;psect for function _Init_Ports
  2148  0F66                     psect	text7
  2149                           	file	"Main.c"
  2150                           	line	109
  2151                           	global	__size_of_Init_Ports
  2152                           	__size_of_Init_Ports	equ	__end_of_Init_Ports-_Init_Ports
  2153  0014                     	
  2154                           _Init_Ports:	
  2155  0F66                     ;incstack = 0
  2156                           	opt	stack 4
  2157                           ; Regs used in _Init_Ports: [wreg+status,2+status,0]
  2158                           	line	113
  2159                           	
  2160                           l2231:	
  2161  0F66                     ;Main.c: 113:     TRISAbits.TRISA4 = 1;
  2162                           	bsf	status, 5	;RP0=1, select bank1
  2163  0F66  1683               	bcf	status, 6	;RP1=0, select bank1
  2164  0F67  1303               	bsf	(133)^080h,4	;volatile
  2165  0F68  1605               	line	117
  2166                           ;Main.c: 117:     TRISAbits.TRISA5 = 1;
  2167                           	bsf	(133)^080h,5	;volatile
  2168  0F69  1685               	line	120
  2169                           ;Main.c: 120:     TRISCbits.TRISC4 = 1;
  2170                           	bsf	(135)^080h,4	;volatile
  2171  0F6A  1607               	line	123
  2172                           ;Main.c: 123:     TRISCbits.TRISC5 = 1;
  2173                           	bsf	(135)^080h,5	;volatile
  2174  0F6B  1687               	line	127
  2175                           	
  2176                           l2233:	
  2177  0F6C                     ;Main.c: 127:     CMCON0bits.CM = 7;
  2178                           	movlw	(07h & ((1<<3)-1))<<0
  2179  0F6C  3007               	bcf	status, 5	;RP0=0, select bank0
  2180  0F6D  1283               	bcf	status, 6	;RP1=0, select bank0
  2181  0F6E  1303               	iorwf	(25),f	;volatile
  2182  0F6F  0499               	line	130
  2183                           	
  2184                           l2235:	
  2185  0F70                     ;Main.c: 130:     ANSEL = 0;
  2186                           	bsf	status, 5	;RP0=1, select bank1
  2187  0F70  1683               	bcf	status, 6	;RP1=0, select bank1
  2188  0F71  1303               	clrf	(145)^080h	;volatile
  2189  0F72  0191               	line	133
  2190                           	
  2191                           l2237:	
  2192  0F73                     ;Main.c: 133:     INTCONbits.RAIE = 1;
  2193                           	bsf	(11),3	;volatile
  2194  0F73  158B               	line	136
  2195                           	
  2196                           l2239:	
  2197  0F74                     ;Main.c: 136:     IOCAbits.IOC4 = 1;
  2198                           	bsf	(150)^080h,4	;volatile
  2199  0F74  1616               	line	139
  2200                           	
  2201                           l2241:	
  2202  0F75                     ;Main.c: 139:     INTCONbits.RAIF = 0;
  2203                           	bcf	(11),0	;volatile
  2204  0F75  100B               	line	142
  2205                           	
  2206                           l2243:	
  2207  0F76                     ;Main.c: 142:     OSCCONbits.IRCF2 = 1;
  2208                           	bsf	(143)^080h,6	;volatile
  2209  0F76  170F               	line	143
  2210                           	
  2211                           l2245:	
  2212  0F77                     ;Main.c: 143:     OSCCONbits.IRCF1 = 1;
  2213                           	bsf	(143)^080h,5	;volatile
  2214  0F77  168F               	line	144
  2215                           	
  2216                           l2247:	
  2217  0F78                     ;Main.c: 144:     OSCCONbits.IRCF0 = 1;
  2218                           	bsf	(143)^080h,4	;volatile
  2219  0F78  160F               	line	145
  2220                           	
  2221                           l173:	
  2222  0F79                     	return
  2223  0F79  0008               	opt stack 0
  2224                           GLOBAL	__end_of_Init_Ports
  2225                           	__end_of_Init_Ports:
  2226  0F7A                     	signat	_Init_Ports,89
  2227                           	global	_Handle_Telegram
  2228                           
  2229 ;; *************** function _Handle_Telegram *****************
  2230 ;; Defined at:
  2231 ;;		line 244 in file "Main.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  ThisTelegram   21   25[BANK0 ] struct .
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;  state           1   51[BANK0 ] unsigned char 
  2236 ;;  error           1   50[BANK0 ] unsigned char 
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      void 
  2239 ;; Registers used:
  2240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2246 ;;      Params:         0      21       0       0
  2247 ;;      Locals:         0       2       0       0
  2248 ;;      Temps:          0       4       0       0
  2249 ;;      Totals:         0      27       0       0
  2250 ;;Total ram usage:       27 bytes
  2251 ;; Hardware stack levels used:    1
  2252 ;; Hardware stack levels required when called:    5
  2253 ;; This function calls:
  2254 ;;		_Read_Relay
  2255 ;;		_SendTelegram
  2256 ;;		_SetStopTime
  2257 ;;		_Set_Relay
  2258 ;; This function is called by:
  2259 ;;		_main
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2263                           	line	244
  2264                           global __ptext8
  2265                           __ptext8:	;psect for function _Handle_Telegram
  2266  0020                     psect	text8
  2267                           	file	"Main.c"
  2268                           	line	244
  2269                           	global	__size_of_Handle_Telegram
  2270                           	__size_of_Handle_Telegram	equ	__end_of_Handle_Telegram-_Handle_Telegram
  2271  020F                     	
  2272                           _Handle_Telegram:	
  2273  0020                     ;incstack = 0
  2274                           	opt	stack 2
  2275                           ; Regs used in _Handle_Telegram: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2276                           	line	246
  2277                           	
  2278                           l2341:	
  2279  0020                     ;Main.c: 244: void Handle_Telegram (TelegramType ThisTelegram);Main.c: 245: {;Main.c: 24
                                 6:     unsigned char state = 255;
  2280                           	movlw	low(0FFh)
  2281  0020  30FF               	bcf	status, 5	;RP0=0, select bank0
  2282  0021  1283               	bcf	status, 6	;RP1=0, select bank0
  2283  0022  1303               	movwf	(??_Handle_Telegram+0)+0
  2284  0023  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2285  0024  084E               	movwf	(Handle_Telegram@state)
  2286  0025  00D3               	line	247
  2287                           	
  2288                           l2343:	
  2289  0026                     ;Main.c: 247:     unsigned char error = 0;
  2290                           	clrf	(Handle_Telegram@error)
  2291  0026  01D2               	line	249
  2292                           	
  2293                           l2345:	
  2294  0027                     ;Main.c: 249:     if (ThisTelegram.Command[0] == 'A')
  2295                           		movlw	65
  2296  0027  3041               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2297  0028  063C               	btfss	status,2
  2298  0029  1D03               	goto	u1461
  2299  002A  282C               	goto	u1460
  2300  002B  282D               u1461:
  2301  002C                     	goto	l2349
  2302  002C  2830               u1460:
  2303  002D                     	line	251
  2304                           	
  2305                           l2347:	
  2306  002D                     ;Main.c: 250:     {;Main.c: 251:         state = On;
  2307                           	clrf	(Handle_Telegram@state)
  2308  002D  01D3               	incf	(Handle_Telegram@state),f
  2309  002E  0AD3               	line	252
  2310                           ;Main.c: 252:     }
  2311                           	goto	l2377
  2312  002F  28A4               	line	253
  2313                           ;Main.c: 253:     else if (ThisTelegram.Command[0] == 'B')
  2314                           	
  2315                           l194:	
  2316  0030                     	
  2317                           l2349:	
  2318  0030                     		movlw	66
  2319  0030  3042               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2320  0031  063C               	btfss	status,2
  2321  0032  1D03               	goto	u1471
  2322  0033  2835               	goto	u1470
  2323  0034  2836               u1471:
  2324  0035                     	goto	l2353
  2325  0035  2838               u1470:
  2326  0036                     	line	255
  2327                           	
  2328                           l2351:	
  2329  0036                     ;Main.c: 254:     {;Main.c: 255:         state = Off;
  2330                           	clrf	(Handle_Telegram@state)
  2331  0036  01D3               	line	256
  2332                           ;Main.c: 256:     }
  2333                           	goto	l2377
  2334  0037  28A4               	line	257
  2335                           ;Main.c: 257:     else if (ThisTelegram.Command[0] == 'S')
  2336                           	
  2337                           l196:	
  2338  0038                     	
  2339                           l2353:	
  2340  0038                     		movlw	83
  2341  0038  3053               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2342  0039  063C               	btfss	status,2
  2343  003A  1D03               	goto	u1481
  2344  003B  283D               	goto	u1480
  2345  003C  283E               u1481:
  2346  003D                     	goto	l2371
  2347  003D  2885               u1480:
  2348  003E                     	line	259
  2349                           	
  2350                           l2355:	
  2351  003E                     ;Main.c: 258:     {;Main.c: 259:         ThisTelegram.Commandlength = 7;
  2352                           	movlw	low(07h)
  2353  003E  3007               	movwf	(??_Handle_Telegram+0)+0
  2354  003F  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2355  0040  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+02h
  2356  0041  00BB               	line	260
  2357                           ;Main.c: 260:         ThisTelegram.Command[0] = 'S';
  2358                           	movlw	low(053h)
  2359  0042  3053               	movwf	(??_Handle_Telegram+0)+0
  2360  0043  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2361  0044  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+03h
  2362  0045  00BC               	line	261
  2363                           	
  2364                           l2357:	
  2365  0046                     ;Main.c: 261:         ThisTelegram.Command[1] = (Read_Relay(Relay1) + 48);
  2366                           	movlw	low(0)
  2367  0046  3000               	fcall	_Read_Relay
  2368  0047  118A  278F  118A   	addlw	030h
  2369  004A  3E30               	bcf	status, 5	;RP0=0, select bank0
  2370  004B  1283               	bcf	status, 6	;RP1=0, select bank0
  2371  004C  1303               	movwf	(??_Handle_Telegram+0)+0
  2372  004D  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2373  004E  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+04h
  2374  004F  00BD               	line	262
  2375                           	
  2376                           l2359:	
  2377  0050                     ;Main.c: 262:         ThisTelegram.Command[2] = (Read_Relay(Relay2) + 48);
  2378                           	movlw	low(01h)
  2379  0050  3001               	fcall	_Read_Relay
  2380  0051  118A  278F  118A   	addlw	030h
  2381  0054  3E30               	bcf	status, 5	;RP0=0, select bank0
  2382  0055  1283               	bcf	status, 6	;RP1=0, select bank0
  2383  0056  1303               	movwf	(??_Handle_Telegram+0)+0
  2384  0057  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2385  0058  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+05h
  2386  0059  00BE               	line	263
  2387                           	
  2388                           l2361:	
  2389  005A                     ;Main.c: 263:         ThisTelegram.Command[3] = (Read_Relay(Relay3) + 48);
  2390                           	movlw	low(02h)
  2391  005A  3002               	fcall	_Read_Relay
  2392  005B  118A  278F  118A   	addlw	030h
  2393  005E  3E30               	bcf	status, 5	;RP0=0, select bank0
  2394  005F  1283               	bcf	status, 6	;RP1=0, select bank0
  2395  0060  1303               	movwf	(??_Handle_Telegram+0)+0
  2396  0061  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2397  0062  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+06h
  2398  0063  00BF               	line	264
  2399                           	
  2400                           l2363:	
  2401  0064                     ;Main.c: 264:         ThisTelegram.Command[4] = (Read_Relay(Relay4) + 48);
  2402                           	movlw	low(03h)
  2403  0064  3003               	fcall	_Read_Relay
  2404  0065  118A  278F  118A   	addlw	030h
  2405  0068  3E30               	bcf	status, 5	;RP0=0, select bank0
  2406  0069  1283               	bcf	status, 6	;RP1=0, select bank0
  2407  006A  1303               	movwf	(??_Handle_Telegram+0)+0
  2408  006B  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2409  006C  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+07h
  2410  006D  00C0               	line	265
  2411                           	
  2412                           l2365:	
  2413  006E                     ;Main.c: 265:         ThisTelegram.Command[5] = (Read_Relay(Relay5) + 48);
  2414                           	movlw	low(04h)
  2415  006E  3004               	fcall	_Read_Relay
  2416  006F  118A  278F  118A   	addlw	030h
  2417  0072  3E30               	bcf	status, 5	;RP0=0, select bank0
  2418  0073  1283               	bcf	status, 6	;RP1=0, select bank0
  2419  0074  1303               	movwf	(??_Handle_Telegram+0)+0
  2420  0075  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2421  0076  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+08h
  2422  0077  00C1               	line	266
  2423                           	
  2424                           l2367:	
  2425  0078                     ;Main.c: 266:         ThisTelegram.Command[6] = (Read_Relay(Relay6) + 48);
  2426                           	movlw	low(05h)
  2427  0078  3005               	fcall	_Read_Relay
  2428  0079  118A  278F  118A   	addlw	030h
  2429  007C  3E30               	bcf	status, 5	;RP0=0, select bank0
  2430  007D  1283               	bcf	status, 6	;RP1=0, select bank0
  2431  007E  1303               	movwf	(??_Handle_Telegram+0)+0
  2432  007F  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2433  0080  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+09h
  2434  0081  00C2               	line	268
  2435                           	
  2436                           l2369:	
  2437  0082                     ;Main.c: 268:         error = 1;
  2438                           	clrf	(Handle_Telegram@error)
  2439  0082  01D2               	incf	(Handle_Telegram@error),f
  2440  0083  0AD2               	line	269
  2441                           ;Main.c: 269:     }
  2442                           	goto	l2377
  2443  0084  28A4               	line	270
  2444                           ;Main.c: 270:     else if (ThisTelegram.Command[0] == 'W')
  2445                           	
  2446                           l198:	
  2447  0085                     	
  2448                           l2371:	
  2449  0085                     		movlw	87
  2450  0085  3057               	xorwf	(0+(Handle_Telegram@ThisTelegram)+03h),w
  2451  0086  063C               	btfss	status,2
  2452  0087  1D03               	goto	u1491
  2453  0088  288A               	goto	u1490
  2454  0089  288B               u1491:
  2455  008A                     	goto	l2375
  2456  008A  289C               u1490:
  2457  008B                     	line	272
  2458                           	
  2459                           l2373:	
  2460  008B                     ;Main.c: 271:     {;Main.c: 272:         ThisTelegram.Commandlength = 2;
  2461                           	movlw	low(02h)
  2462  008B  3002               	movwf	(??_Handle_Telegram+0)+0
  2463  008C  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2464  008D  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+02h
  2465  008E  00BB               	line	273
  2466                           ;Main.c: 273:         ThisTelegram.Command[0] = 'R';
  2467                           	movlw	low(052h)
  2468  008F  3052               	movwf	(??_Handle_Telegram+0)+0
  2469  0090  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2470  0091  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+03h
  2471  0092  00BC               	line	274
  2472                           ;Main.c: 274:         ThisTelegram.Command[1] = 'B';
  2473                           	movlw	low(042h)
  2474  0093  3042               	movwf	(??_Handle_Telegram+0)+0
  2475  0094  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2476  0095  084E               	movwf	0+(Handle_Telegram@ThisTelegram)+04h
  2477  0096  00BD               	line	276
  2478                           ;Main.c: 276:         error = 2;
  2479                           	movlw	low(02h)
  2480  0097  3002               	movwf	(??_Handle_Telegram+0)+0
  2481  0098  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2482  0099  084E               	movwf	(Handle_Telegram@error)
  2483  009A  00D2               	line	277
  2484                           ;Main.c: 277:     }
  2485                           	goto	l2377
  2486  009B  28A4               	line	278
  2487                           ;Main.c: 278:     else
  2488                           	
  2489                           l200:	
  2490  009C                     	line	280
  2491                           	
  2492                           l2375:	
  2493  009C                     ;Main.c: 279:     {;Main.c: 280:         error = 4;
  2494                           	movlw	low(04h)
  2495  009C  3004               	movwf	(??_Handle_Telegram+0)+0
  2496  009D  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2497  009E  084E               	movwf	(Handle_Telegram@error)
  2498  009F  00D2               	goto	l2377
  2499  00A0  28A4               	line	281
  2500                           ;Main.c: 281:     }
  2501                           	
  2502                           l201:	
  2503  00A1                     	goto	l2377
  2504  00A1  28A4               	
  2505                           l199:	
  2506  00A2                     	goto	l2377
  2507  00A2  28A4               	
  2508                           l197:	
  2509  00A3                     	goto	l2377
  2510  00A3  28A4               	
  2511                           l195:	
  2512  00A4                     	line	283
  2513                           	
  2514                           l2377:	
  2515  00A4                     ;Main.c: 283:     SendTelegram(ThisTelegram);
  2516                           	movlw	(SendTelegram@MyTelegram)&0ffh
  2517  00A4  3022               	movwf	fsr0
  2518  00A5  0084               	movlw	low(Handle_Telegram@ThisTelegram)
  2519  00A6  3039               	movwf	(??_Handle_Telegram+0)+0
  2520  00A7  00CE               	movf	fsr0,w
  2521  00A8  0804               	movwf	((??_Handle_Telegram+0)+0+1)
  2522  00A9  00CF               	movlw	21
  2523  00AA  3015               	movwf	((??_Handle_Telegram+0)+0+2)
  2524  00AB  00D0               u1500:
  2525  00AC                     	movf	(??_Handle_Telegram+0)+0,w
  2526  00AC  084E               	movwf	fsr0
  2527  00AD  0084               	bcf	status, 7	;select IRP bank0
  2528  00AE  1383               	
  2529                           	movf	indf,w
  2530  00AF  0800               	movwf	((??_Handle_Telegram+0)+0+3)
  2531  00B0  00D1               	incf	(??_Handle_Telegram+0)+0,f
  2532  00B1  0ACE               	movf	((??_Handle_Telegram+0)+0+1),w
  2533  00B2  084F               	movwf	fsr0
  2534  00B3  0084               	
  2535                           	movf	((??_Handle_Telegram+0)+0+3),w
  2536  00B4  0851               	movwf	indf
  2537  00B5  0080               	incf	((??_Handle_Telegram+0)+0+1),f
  2538  00B6  0ACF               	decfsz	((??_Handle_Telegram+0)+0+2),f
  2539  00B7  0BD0               	goto	u1500
  2540  00B8  28AC               	
  2541                           	fcall	_SendTelegram
  2542  00B9  118A  2756  118A   	line	285
  2543                           	
  2544                           l2379:	
  2545  00BC                     ;Main.c: 285:     if (error == 0)
  2546                           	bcf	status, 5	;RP0=0, select bank0
  2547  00BC  1283               	bcf	status, 6	;RP1=0, select bank0
  2548  00BD  1303               	movf	((Handle_Telegram@error)),w
  2549  00BE  0852               	btfss	status,2
  2550  00BF  1D03               	goto	u1511
  2551  00C0  28C2               	goto	u1510
  2552  00C1  28C3               u1511:
  2553  00C2                     	goto	l223
  2554  00C2  2A2E               u1510:
  2555  00C3                     	line	287
  2556                           	
  2557                           l2381:	
  2558  00C3                     ;Main.c: 286:     {;Main.c: 287:         if (state == On && (ThisTelegram.Command[1] !='
                                 0' || ThisTelegram.Command[2] !='0' || ThisTelegram.Command[3] !='0'))
  2559                           		decf	((Handle_Telegram@state)),w
  2560  00C3  0353               	btfss	status,2
  2561  00C4  1D03               	goto	u1521
  2562  00C5  28C7               	goto	u1520
  2563  00C6  28C8               u1521:
  2564  00C7                     	goto	l2443
  2565  00C7  2A10               u1520:
  2566  00C8                     	
  2567                           l2383:	
  2568  00C8                     		movlw	48
  2569  00C8  3030               	xorwf	(0+(Handle_Telegram@ThisTelegram)+04h),w
  2570  00C9  063D               	btfss	status,2
  2571  00CA  1D03               	goto	u1531
  2572  00CB  28CD               	goto	u1530
  2573  00CC  28CE               u1531:
  2574  00CD                     	goto	l2415
  2575  00CD  29A7               u1530:
  2576  00CE                     	
  2577                           l2385:	
  2578  00CE                     		movlw	48
  2579  00CE  3030               	xorwf	(0+(Handle_Telegram@ThisTelegram)+05h),w
  2580  00CF  063E               	btfss	status,2
  2581  00D0  1D03               	goto	u1541
  2582  00D1  28D3               	goto	u1540
  2583  00D2  28D4               u1541:
  2584  00D3                     	goto	l2415
  2585  00D3  29A7               u1540:
  2586  00D4                     	
  2587                           l2387:	
  2588  00D4                     		movlw	48
  2589  00D4  3030               	xorwf	(0+(Handle_Telegram@ThisTelegram)+06h),w
  2590  00D5  063F               	btfsc	status,2
  2591  00D6  1903               	goto	u1551
  2592  00D7  28D9               	goto	u1550
  2593  00D8  28DA               u1551:
  2594  00D9                     	goto	l2443
  2595  00D9  2A10               u1550:
  2596  00DA                     	goto	l2415
  2597  00DA  29A7               	
  2598                           l205:	
  2599  00DB                     	line	289
  2600                           ;Main.c: 288:         {;Main.c: 289:             switch (ThisTelegram.Address)
  2601                           	goto	l2415
  2602  00DB  29A7               	line	291
  2603                           ;Main.c: 290:             {;Main.c: 291:                 case '1':
  2604                           	
  2605                           l207:	
  2606  00DC                     	line	292
  2607                           	
  2608                           l2389:	
  2609  00DC                     ;Main.c: 292:                     Set_Relay(Relay1, state);
  2610                           	movf	(Handle_Telegram@state),w
  2611  00DC  0853               	movwf	(??_Handle_Telegram+0)+0
  2612  00DD  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2613  00DE  084E               	movwf	(Set_Relay@State)
  2614  00DF  00A0               	movlw	low(0)
  2615  00E0  3000               	fcall	_Set_Relay
  2616  00E1  118A  255F  118A   	line	293
  2617                           	
  2618                           l2391:	
  2619  00E4                     ;Main.c: 293:                     StopRelay1OnTime = 1;
  2620                           	bcf	status, 5	;RP0=0, select bank0
  2621  00E4  1283               	bcf	status, 6	;RP1=0, select bank0
  2622  00E5  1303               	clrf	(_StopRelay1OnTime)
  2623  00E6  01EB               	incf	(_StopRelay1OnTime),f
  2624  00E7  0AEB               	line	294
  2625                           ;Main.c: 294:                     SetStopTime(Relay1StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2626                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2627  00E8  083D               	addlw	0D0h
  2628  00E9  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2629  00EA  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2630  00EB  084E               	movwf	(SetStopTime@Time10sec)
  2631  00EC  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2632  00ED  083E               	addlw	0D0h
  2633  00EE  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2634  00EF  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2635  00F0  084F               	movwf	(SetStopTime@Time1sec)
  2636  00F1  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2637  00F2  083F               	addlw	0D0h
  2638  00F3  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2639  00F4  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2640  00F5  0850               	movwf	(SetStopTime@Time100ms)
  2641  00F6  00A2               	movlw	(low(_Relay1StopTime|((0x0)<<8)))&0ffh
  2642  00F7  306C               	fcall	_SetStopTime
  2643  00F8  118A  25DF  118A   	line	295
  2644                           ;Main.c: 295:                     break;
  2645                           	goto	l223
  2646  00FB  2A2E               	line	297
  2647                           ;Main.c: 297:                 case '2':
  2648                           	
  2649                           l209:	
  2650  00FC                     	line	298
  2651                           	
  2652                           l2393:	
  2653  00FC                     ;Main.c: 298:                     Set_Relay(Relay2, state);
  2654                           	bcf	status, 5	;RP0=0, select bank0
  2655  00FC  1283               	bcf	status, 6	;RP1=0, select bank0
  2656  00FD  1303               	movf	(Handle_Telegram@state),w
  2657  00FE  0853               	movwf	(??_Handle_Telegram+0)+0
  2658  00FF  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2659  0100  084E               	movwf	(Set_Relay@State)
  2660  0101  00A0               	movlw	low(01h)
  2661  0102  3001               	fcall	_Set_Relay
  2662  0103  118A  255F  118A   	line	299
  2663                           	
  2664                           l2395:	
  2665  0106                     ;Main.c: 299:                     StopRelay2OnTime = 1;
  2666                           	bcf	status, 5	;RP0=0, select bank0
  2667  0106  1283               	bcf	status, 6	;RP1=0, select bank0
  2668  0107  1303               	clrf	(_StopRelay2OnTime)
  2669  0108  01EA               	incf	(_StopRelay2OnTime),f
  2670  0109  0AEA               	line	300
  2671                           ;Main.c: 300:                     SetStopTime(Relay2StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2672                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2673  010A  083D               	addlw	0D0h
  2674  010B  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2675  010C  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2676  010D  084E               	movwf	(SetStopTime@Time10sec)
  2677  010E  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2678  010F  083E               	addlw	0D0h
  2679  0110  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2680  0111  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2681  0112  084F               	movwf	(SetStopTime@Time1sec)
  2682  0113  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2683  0114  083F               	addlw	0D0h
  2684  0115  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2685  0116  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2686  0117  0850               	movwf	(SetStopTime@Time100ms)
  2687  0118  00A2               	movlw	(low(_Relay2StopTime|((0x0)<<8)))&0ffh
  2688  0119  30EB               	fcall	_SetStopTime
  2689  011A  118A  25DF  118A   	line	301
  2690                           ;Main.c: 301:                     break;
  2691                           	goto	l223
  2692  011D  2A2E               	line	303
  2693                           ;Main.c: 303:                 case '3':
  2694                           	
  2695                           l210:	
  2696  011E                     	line	304
  2697                           	
  2698                           l2397:	
  2699  011E                     ;Main.c: 304:                     Set_Relay(Relay3, state);
  2700                           	bcf	status, 5	;RP0=0, select bank0
  2701  011E  1283               	bcf	status, 6	;RP1=0, select bank0
  2702  011F  1303               	movf	(Handle_Telegram@state),w
  2703  0120  0853               	movwf	(??_Handle_Telegram+0)+0
  2704  0121  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2705  0122  084E               	movwf	(Set_Relay@State)
  2706  0123  00A0               	movlw	low(02h)
  2707  0124  3002               	fcall	_Set_Relay
  2708  0125  118A  255F  118A   	line	305
  2709                           	
  2710                           l2399:	
  2711  0128                     ;Main.c: 305:                     StopRelay3OnTime = 1;
  2712                           	bcf	status, 5	;RP0=0, select bank0
  2713  0128  1283               	bcf	status, 6	;RP1=0, select bank0
  2714  0129  1303               	clrf	(_StopRelay3OnTime)
  2715  012A  01E9               	incf	(_StopRelay3OnTime),f
  2716  012B  0AE9               	line	306
  2717                           ;Main.c: 306:                     SetStopTime(Relay3StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2718                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2719  012C  083D               	addlw	0D0h
  2720  012D  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2721  012E  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2722  012F  084E               	movwf	(SetStopTime@Time10sec)
  2723  0130  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2724  0131  083E               	addlw	0D0h
  2725  0132  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2726  0133  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2727  0134  084F               	movwf	(SetStopTime@Time1sec)
  2728  0135  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2729  0136  083F               	addlw	0D0h
  2730  0137  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2731  0138  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2732  0139  0850               	movwf	(SetStopTime@Time100ms)
  2733  013A  00A2               	movlw	(low(_Relay3StopTime|((0x0)<<8)))&0ffh
  2734  013B  30E8               	fcall	_SetStopTime
  2735  013C  118A  25DF  118A   	line	307
  2736                           ;Main.c: 307:                     break;
  2737                           	goto	l223
  2738  013F  2A2E               	line	309
  2739                           ;Main.c: 309:                 case '4':
  2740                           	
  2741                           l211:	
  2742  0140                     	line	310
  2743                           	
  2744                           l2401:	
  2745  0140                     ;Main.c: 310:                     Set_Relay(Relay4, state);
  2746                           	bcf	status, 5	;RP0=0, select bank0
  2747  0140  1283               	bcf	status, 6	;RP1=0, select bank0
  2748  0141  1303               	movf	(Handle_Telegram@state),w
  2749  0142  0853               	movwf	(??_Handle_Telegram+0)+0
  2750  0143  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2751  0144  084E               	movwf	(Set_Relay@State)
  2752  0145  00A0               	movlw	low(03h)
  2753  0146  3003               	fcall	_Set_Relay
  2754  0147  118A  255F  118A   	line	311
  2755                           	
  2756                           l2403:	
  2757  014A                     ;Main.c: 311:                     StopRelay4OnTime = 1;
  2758                           	bcf	status, 5	;RP0=0, select bank0
  2759  014A  1283               	bcf	status, 6	;RP1=0, select bank0
  2760  014B  1303               	clrf	(_StopRelay4OnTime)
  2761  014C  01E8               	incf	(_StopRelay4OnTime),f
  2762  014D  0AE8               	line	312
  2763                           ;Main.c: 312:                     SetStopTime(Relay4StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2764                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2765  014E  083D               	addlw	0D0h
  2766  014F  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2767  0150  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2768  0151  084E               	movwf	(SetStopTime@Time10sec)
  2769  0152  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2770  0153  083E               	addlw	0D0h
  2771  0154  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2772  0155  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2773  0156  084F               	movwf	(SetStopTime@Time1sec)
  2774  0157  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2775  0158  083F               	addlw	0D0h
  2776  0159  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2777  015A  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2778  015B  0850               	movwf	(SetStopTime@Time100ms)
  2779  015C  00A2               	movlw	(low(_Relay4StopTime|((0x0)<<8)))&0ffh
  2780  015D  30E5               	fcall	_SetStopTime
  2781  015E  118A  25DF  118A   	line	313
  2782                           ;Main.c: 313:                     break;
  2783                           	goto	l223
  2784  0161  2A2E               	line	315
  2785                           ;Main.c: 315:                 case '5':
  2786                           	
  2787                           l212:	
  2788  0162                     	line	316
  2789                           	
  2790                           l2405:	
  2791  0162                     ;Main.c: 316:                     Set_Relay(Relay5, state);
  2792                           	bcf	status, 5	;RP0=0, select bank0
  2793  0162  1283               	bcf	status, 6	;RP1=0, select bank0
  2794  0163  1303               	movf	(Handle_Telegram@state),w
  2795  0164  0853               	movwf	(??_Handle_Telegram+0)+0
  2796  0165  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2797  0166  084E               	movwf	(Set_Relay@State)
  2798  0167  00A0               	movlw	low(04h)
  2799  0168  3004               	fcall	_Set_Relay
  2800  0169  118A  255F  118A   	line	317
  2801                           	
  2802                           l2407:	
  2803  016C                     ;Main.c: 317:                     StopRelay5OnTime = 1;
  2804                           	bcf	status, 5	;RP0=0, select bank0
  2805  016C  1283               	bcf	status, 6	;RP1=0, select bank0
  2806  016D  1303               	clrf	(_StopRelay5OnTime)
  2807  016E  01E7               	incf	(_StopRelay5OnTime),f
  2808  016F  0AE7               	line	318
  2809                           ;Main.c: 318:                     SetStopTime(Relay5StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2810                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2811  0170  083D               	addlw	0D0h
  2812  0171  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2813  0172  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2814  0173  084E               	movwf	(SetStopTime@Time10sec)
  2815  0174  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2816  0175  083E               	addlw	0D0h
  2817  0176  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2818  0177  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2819  0178  084F               	movwf	(SetStopTime@Time1sec)
  2820  0179  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2821  017A  083F               	addlw	0D0h
  2822  017B  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2823  017C  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2824  017D  0850               	movwf	(SetStopTime@Time100ms)
  2825  017E  00A2               	movlw	(low(_Relay5StopTime|((0x0)<<8)))&0ffh
  2826  017F  30E2               	fcall	_SetStopTime
  2827  0180  118A  25DF  118A   	line	319
  2828                           ;Main.c: 319:                     break;
  2829                           	goto	l223
  2830  0183  2A2E               	line	321
  2831                           ;Main.c: 321:                 case '6':
  2832                           	
  2833                           l213:	
  2834  0184                     	line	322
  2835                           	
  2836                           l2409:	
  2837  0184                     ;Main.c: 322:                     Set_Relay(Relay6, state);
  2838                           	bcf	status, 5	;RP0=0, select bank0
  2839  0184  1283               	bcf	status, 6	;RP1=0, select bank0
  2840  0185  1303               	movf	(Handle_Telegram@state),w
  2841  0186  0853               	movwf	(??_Handle_Telegram+0)+0
  2842  0187  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2843  0188  084E               	movwf	(Set_Relay@State)
  2844  0189  00A0               	movlw	low(05h)
  2845  018A  3005               	fcall	_Set_Relay
  2846  018B  118A  255F  118A   	line	323
  2847                           	
  2848                           l2411:	
  2849  018E                     ;Main.c: 323:                     StopRelay6OnTime = 1;
  2850                           	bcf	status, 5	;RP0=0, select bank0
  2851  018E  1283               	bcf	status, 6	;RP1=0, select bank0
  2852  018F  1303               	clrf	(_StopRelay6OnTime)
  2853  0190  01E6               	incf	(_StopRelay6OnTime),f
  2854  0191  0AE6               	line	324
  2855                           ;Main.c: 324:                     SetStopTime(Relay6StopTime, ThisTelegram.Command[1] - 
                                 48, ThisTelegram.Command[2] - 48, ThisTelegram.Command[3] - 48);
  2856                           	movf	0+(Handle_Telegram@ThisTelegram)+04h,w
  2857  0192  083D               	addlw	0D0h
  2858  0193  3ED0               	movwf	(??_Handle_Telegram+0)+0
  2859  0194  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2860  0195  084E               	movwf	(SetStopTime@Time10sec)
  2861  0196  00A0               	movf	0+(Handle_Telegram@ThisTelegram)+05h,w
  2862  0197  083E               	addlw	0D0h
  2863  0198  3ED0               	movwf	(??_Handle_Telegram+1)+0
  2864  0199  00CF               	movf	(??_Handle_Telegram+1)+0,w
  2865  019A  084F               	movwf	(SetStopTime@Time1sec)
  2866  019B  00A1               	movf	0+(Handle_Telegram@ThisTelegram)+06h,w
  2867  019C  083F               	addlw	0D0h
  2868  019D  3ED0               	movwf	(??_Handle_Telegram+2)+0
  2869  019E  00D0               	movf	(??_Handle_Telegram+2)+0,w
  2870  019F  0850               	movwf	(SetStopTime@Time100ms)
  2871  01A0  00A2               	movlw	(low(_Relay6StopTime|((0x0)<<8)))&0ffh
  2872  01A1  30DF               	fcall	_SetStopTime
  2873  01A2  118A  25DF  118A   	line	325
  2874                           ;Main.c: 325:                     break;
  2875                           	goto	l223
  2876  01A5  2A2E               	line	326
  2877                           	
  2878                           l2413:	
  2879  01A6                     ;Main.c: 326:             }
  2880                           	goto	l223
  2881  01A6  2A2E               	
  2882                           l206:	
  2883  01A7                     	
  2884                           l2415:	
  2885  01A7                     	bcf	status, 5	;RP0=0, select bank0
  2886  01A7  1283               	bcf	status, 6	;RP1=0, select bank0
  2887  01A8  1303               	movf	0+(Handle_Telegram@ThisTelegram)+01h,w
  2888  01A9  083A               	movwf	(??_Handle_Telegram+0)+0
  2889  01AA  00CE               	clrf	(??_Handle_Telegram+0)+0+1
  2890  01AB  01CF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2891                           ; Switch size 1, requested type "space"
  2892                           ; Number of cases is 1, Range of values is 0 to 0
  2893                           ; switch strategies available:
  2894                           ; Name         Instructions Cycles
  2895                           ; simple_byte            4     3 (average)
  2896                           ; direct_byte            9     7 (fixed)
  2897                           ; jumptable            260     6 (fixed)
  2898                           ;	Chosen strategy is simple_byte
  2899                           
  2900                           	movf 1+(??_Handle_Telegram+0)+0,w
  2901  01AC  084F               	opt asmopt_push
  2902                           	opt asmopt_off
  2903                           	xorlw	0^0	; case 0
  2904  01AD  3A00               	skipnz
  2905  01AE  1903               	goto	l2899
  2906  01AF  29B1               	goto	l223
  2907  01B0  2A2E               	opt asmopt_pop
  2908                           	
  2909                           l2899:	
  2910  01B1                     ; Switch size 1, requested type "space"
  2911                           ; Number of cases is 6, Range of values is 49 to 54
  2912                           ; switch strategies available:
  2913                           ; Name         Instructions Cycles
  2914                           ; simple_byte           19    10 (average)
  2915                           ; direct_byte           22    10 (fixed)
  2916                           ; jumptable            263     9 (fixed)
  2917                           ;	Chosen strategy is simple_byte
  2918                           
  2919                           	movf 0+(??_Handle_Telegram+0)+0,w
  2920  01B1  084E               	opt asmopt_push
  2921                           	opt asmopt_off
  2922                           	xorlw	49^0	; case 49
  2923  01B2  3A31               	skipnz
  2924  01B3  1903               	goto	l2389
  2925  01B4  28DC               	xorlw	50^49	; case 50
  2926  01B5  3A03               	skipnz
  2927  01B6  1903               	goto	l2393
  2928  01B7  28FC               	xorlw	51^50	; case 51
  2929  01B8  3A01               	skipnz
  2930  01B9  1903               	goto	l2397
  2931  01BA  291E               	xorlw	52^51	; case 52
  2932  01BB  3A07               	skipnz
  2933  01BC  1903               	goto	l2401
  2934  01BD  2940               	xorlw	53^52	; case 53
  2935  01BE  3A01               	skipnz
  2936  01BF  1903               	goto	l2405
  2937  01C0  2962               	xorlw	54^53	; case 54
  2938  01C1  3A03               	skipnz
  2939  01C2  1903               	goto	l2409
  2940  01C3  2984               	goto	l223
  2941  01C4  2A2E               	opt asmopt_pop
  2942                           
  2943                           	
  2944                           l208:	
  2945  01C5                     	line	327
  2946                           ;Main.c: 327:         }
  2947                           	goto	l223
  2948  01C5  2A2E               	line	328
  2949                           ;Main.c: 328:         else
  2950                           	
  2951                           l203:	
  2952  01C6                     	line	330
  2953                           ;Main.c: 329:         {;Main.c: 330:             switch (ThisTelegram.Address)
  2954                           	goto	l2443
  2955  01C6  2A10               	line	332
  2956                           ;Main.c: 331:             {;Main.c: 332:                 case '1':
  2957                           	
  2958                           l216:	
  2959  01C7                     	line	333
  2960                           	
  2961                           l2417:	
  2962  01C7                     ;Main.c: 333:                     Set_Relay(Relay1, state);
  2963                           	movf	(Handle_Telegram@state),w
  2964  01C7  0853               	movwf	(??_Handle_Telegram+0)+0
  2965  01C8  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2966  01C9  084E               	movwf	(Set_Relay@State)
  2967  01CA  00A0               	movlw	low(0)
  2968  01CB  3000               	fcall	_Set_Relay
  2969  01CC  118A  255F  118A   	line	334
  2970                           	
  2971                           l2419:	
  2972  01CF                     ;Main.c: 334:                     StopRelay1OnTime = 0;
  2973                           	bcf	status, 5	;RP0=0, select bank0
  2974  01CF  1283               	bcf	status, 6	;RP1=0, select bank0
  2975  01D0  1303               	clrf	(_StopRelay1OnTime)
  2976  01D1  01EB               	line	336
  2977                           ;Main.c: 336:                     break;
  2978                           	goto	l223
  2979  01D2  2A2E               	line	338
  2980                           ;Main.c: 338:                 case '2':
  2981                           	
  2982                           l218:	
  2983  01D3                     	line	339
  2984                           	
  2985                           l2421:	
  2986  01D3                     ;Main.c: 339:                     Set_Relay(Relay2, state);
  2987                           	movf	(Handle_Telegram@state),w
  2988  01D3  0853               	movwf	(??_Handle_Telegram+0)+0
  2989  01D4  00CE               	movf	(??_Handle_Telegram+0)+0,w
  2990  01D5  084E               	movwf	(Set_Relay@State)
  2991  01D6  00A0               	movlw	low(01h)
  2992  01D7  3001               	fcall	_Set_Relay
  2993  01D8  118A  255F  118A   	line	340
  2994                           	
  2995                           l2423:	
  2996  01DB                     ;Main.c: 340:                     StopRelay2OnTime = 0;
  2997                           	bcf	status, 5	;RP0=0, select bank0
  2998  01DB  1283               	bcf	status, 6	;RP1=0, select bank0
  2999  01DC  1303               	clrf	(_StopRelay2OnTime)
  3000  01DD  01EA               	line	341
  3001                           ;Main.c: 341:                     break;
  3002                           	goto	l223
  3003  01DE  2A2E               	line	343
  3004                           ;Main.c: 343:                 case '3':
  3005                           	
  3006                           l219:	
  3007  01DF                     	line	344
  3008                           	
  3009                           l2425:	
  3010  01DF                     ;Main.c: 344:                     Set_Relay(Relay3, state);
  3011                           	movf	(Handle_Telegram@state),w
  3012  01DF  0853               	movwf	(??_Handle_Telegram+0)+0
  3013  01E0  00CE               	movf	(??_Handle_Telegram+0)+0,w
  3014  01E1  084E               	movwf	(Set_Relay@State)
  3015  01E2  00A0               	movlw	low(02h)
  3016  01E3  3002               	fcall	_Set_Relay
  3017  01E4  118A  255F  118A   	line	345
  3018                           	
  3019                           l2427:	
  3020  01E7                     ;Main.c: 345:                     StopRelay3OnTime = 0;
  3021                           	bcf	status, 5	;RP0=0, select bank0
  3022  01E7  1283               	bcf	status, 6	;RP1=0, select bank0
  3023  01E8  1303               	clrf	(_StopRelay3OnTime)
  3024  01E9  01E9               	line	346
  3025                           ;Main.c: 346:                     break;
  3026                           	goto	l223
  3027  01EA  2A2E               	line	348
  3028                           ;Main.c: 348:                 case '4':
  3029                           	
  3030                           l220:	
  3031  01EB                     	line	349
  3032                           	
  3033                           l2429:	
  3034  01EB                     ;Main.c: 349:                     Set_Relay(Relay4, state);
  3035                           	movf	(Handle_Telegram@state),w
  3036  01EB  0853               	movwf	(??_Handle_Telegram+0)+0
  3037  01EC  00CE               	movf	(??_Handle_Telegram+0)+0,w
  3038  01ED  084E               	movwf	(Set_Relay@State)
  3039  01EE  00A0               	movlw	low(03h)
  3040  01EF  3003               	fcall	_Set_Relay
  3041  01F0  118A  255F  118A   	line	350
  3042                           	
  3043                           l2431:	
  3044  01F3                     ;Main.c: 350:                     StopRelay4OnTime = 0;
  3045                           	bcf	status, 5	;RP0=0, select bank0
  3046  01F3  1283               	bcf	status, 6	;RP1=0, select bank0
  3047  01F4  1303               	clrf	(_StopRelay4OnTime)
  3048  01F5  01E8               	line	351
  3049                           ;Main.c: 351:                     break;
  3050                           	goto	l223
  3051  01F6  2A2E               	line	353
  3052                           ;Main.c: 353:                 case '5':
  3053                           	
  3054                           l221:	
  3055  01F7                     	line	354
  3056                           	
  3057                           l2433:	
  3058  01F7                     ;Main.c: 354:                     Set_Relay(Relay5, state);
  3059                           	movf	(Handle_Telegram@state),w
  3060  01F7  0853               	movwf	(??_Handle_Telegram+0)+0
  3061  01F8  00CE               	movf	(??_Handle_Telegram+0)+0,w
  3062  01F9  084E               	movwf	(Set_Relay@State)
  3063  01FA  00A0               	movlw	low(04h)
  3064  01FB  3004               	fcall	_Set_Relay
  3065  01FC  118A  255F  118A   	line	355
  3066                           	
  3067                           l2435:	
  3068  01FF                     ;Main.c: 355:                     StopRelay5OnTime = 0;
  3069                           	bcf	status, 5	;RP0=0, select bank0
  3070  01FF  1283               	bcf	status, 6	;RP1=0, select bank0
  3071  0200  1303               	clrf	(_StopRelay5OnTime)
  3072  0201  01E7               	line	356
  3073                           ;Main.c: 356:                     break;
  3074                           	goto	l223
  3075  0202  2A2E               	line	358
  3076                           ;Main.c: 358:                 case '6':
  3077                           	
  3078                           l222:	
  3079  0203                     	line	359
  3080                           	
  3081                           l2437:	
  3082  0203                     ;Main.c: 359:                     Set_Relay(Relay6, state);
  3083                           	movf	(Handle_Telegram@state),w
  3084  0203  0853               	movwf	(??_Handle_Telegram+0)+0
  3085  0204  00CE               	movf	(??_Handle_Telegram+0)+0,w
  3086  0205  084E               	movwf	(Set_Relay@State)
  3087  0206  00A0               	movlw	low(05h)
  3088  0207  3005               	fcall	_Set_Relay
  3089  0208  118A  255F  118A   	line	360
  3090                           	
  3091                           l2439:	
  3092  020B                     ;Main.c: 360:                     StopRelay6OnTime = 0;
  3093                           	bcf	status, 5	;RP0=0, select bank0
  3094  020B  1283               	bcf	status, 6	;RP1=0, select bank0
  3095  020C  1303               	clrf	(_StopRelay6OnTime)
  3096  020D  01E6               	line	361
  3097                           ;Main.c: 361:                     break;
  3098                           	goto	l223
  3099  020E  2A2E               	line	363
  3100                           	
  3101                           l2441:	
  3102  020F                     ;Main.c: 363:             }
  3103                           	goto	l223
  3104  020F  2A2E               	
  3105                           l215:	
  3106  0210                     	
  3107                           l2443:	
  3108  0210                     	movf	0+(Handle_Telegram@ThisTelegram)+01h,w
  3109  0210  083A               	movwf	(??_Handle_Telegram+0)+0
  3110  0211  00CE               	clrf	(??_Handle_Telegram+0)+0+1
  3111  0212  01CF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3112                           ; Switch size 1, requested type "space"
  3113                           ; Number of cases is 1, Range of values is 0 to 0
  3114                           ; switch strategies available:
  3115                           ; Name         Instructions Cycles
  3116                           ; simple_byte            4     3 (average)
  3117                           ; direct_byte            9     7 (fixed)
  3118                           ; jumptable            260     6 (fixed)
  3119                           ;	Chosen strategy is simple_byte
  3120                           
  3121                           	movf 1+(??_Handle_Telegram+0)+0,w
  3122  0213  084F               	opt asmopt_push
  3123                           	opt asmopt_off
  3124                           	xorlw	0^0	; case 0
  3125  0214  3A00               	skipnz
  3126  0215  1903               	goto	l2901
  3127  0216  2A18               	goto	l223
  3128  0217  2A2E               	opt asmopt_pop
  3129                           	
  3130                           l2901:	
  3131  0218                     ; Switch size 1, requested type "space"
  3132                           ; Number of cases is 6, Range of values is 49 to 54
  3133                           ; switch strategies available:
  3134                           ; Name         Instructions Cycles
  3135                           ; simple_byte           19    10 (average)
  3136                           ; direct_byte           22    10 (fixed)
  3137                           ; jumptable            263     9 (fixed)
  3138                           ;	Chosen strategy is simple_byte
  3139                           
  3140                           	movf 0+(??_Handle_Telegram+0)+0,w
  3141  0218  084E               	opt asmopt_push
  3142                           	opt asmopt_off
  3143                           	xorlw	49^0	; case 49
  3144  0219  3A31               	skipnz
  3145  021A  1903               	goto	l2417
  3146  021B  29C7               	xorlw	50^49	; case 50
  3147  021C  3A03               	skipnz
  3148  021D  1903               	goto	l2421
  3149  021E  29D3               	xorlw	51^50	; case 51
  3150  021F  3A01               	skipnz
  3151  0220  1903               	goto	l2425
  3152  0221  29DF               	xorlw	52^51	; case 52
  3153  0222  3A07               	skipnz
  3154  0223  1903               	goto	l2429
  3155  0224  29EB               	xorlw	53^52	; case 53
  3156  0225  3A01               	skipnz
  3157  0226  1903               	goto	l2433
  3158  0227  29F7               	xorlw	54^53	; case 54
  3159  0228  3A03               	skipnz
  3160  0229  1903               	goto	l2437
  3161  022A  2A03               	goto	l223
  3162  022B  2A2E               	opt asmopt_pop
  3163                           
  3164                           	
  3165                           l217:	
  3166  022C                     	goto	l223
  3167  022C  2A2E               	line	365
  3168                           ;Main.c: 365:         }
  3169                           	
  3170                           l214:	
  3171  022D                     	goto	l223
  3172  022D  2A2E               	line	366
  3173                           ;Main.c: 366:     }
  3174                           	
  3175                           l202:	
  3176  022E                     	line	367
  3177                           	
  3178                           l223:	
  3179  022E                     	return
  3180  022E  0008               	opt stack 0
  3181                           GLOBAL	__end_of_Handle_Telegram
  3182                           	__end_of_Handle_Telegram:
  3183  022F                     	signat	_Handle_Telegram,4217
  3184                           	global	_SetStopTime
  3185                           
  3186 ;; *************** function _SetStopTime *****************
  3187 ;; Defined at:
  3188 ;;		line 187 in file "Main.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  RelayStopTim    1    wreg     PTR unsigned char 
  3191 ;;		 -> Relay6StopTime(3), Relay5StopTime(3), Relay4StopTime(3), Relay3StopTime(3), 
  3192 ;;		 -> Relay2StopTime(3), Relay1StopTime(3), 
  3193 ;;  Time10sec       1    0[BANK0 ] unsigned char 
  3194 ;;  Time1sec        1    1[BANK0 ] unsigned char 
  3195 ;;  Time100ms       1    2[BANK0 ] unsigned char 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  RelayStopTim    1    5[BANK0 ] PTR unsigned char 
  3198 ;;		 -> Relay6StopTime(3), Relay5StopTime(3), Relay4StopTime(3), Relay3StopTime(3), 
  3199 ;;		 -> Relay2StopTime(3), Relay1StopTime(3), 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3209 ;;      Params:         0       3       0       0
  3210 ;;      Locals:         0       1       0       0
  3211 ;;      Temps:          0       2       0       0
  3212 ;;      Totals:         0       6       0       0
  3213 ;;Total ram usage:        6 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    3
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_Handle_Telegram
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3223                           	line	187
  3224                           global __ptext9
  3225                           __ptext9:	;psect for function _SetStopTime
  3226  05DF                     psect	text9
  3227                           	file	"Main.c"
  3228                           	line	187
  3229                           	global	__size_of_SetStopTime
  3230                           	__size_of_SetStopTime	equ	__end_of_SetStopTime-_SetStopTime
  3231  0075                     	
  3232                           _SetStopTime:	
  3233  05DF                     ;incstack = 0
  3234                           	opt	stack 3
  3235                           ; Regs used in _SetStopTime: [wreg-fsr0h+status,2+status,0]
  3236                           ;SetStopTime@RelayStopTime stored from wreg
  3237                           	bcf	status, 5	;RP0=0, select bank0
  3238  05DF  1283               	bcf	status, 6	;RP1=0, select bank0
  3239  05E0  1303               	movwf	(SetStopTime@RelayStopTime)
  3240  05E1  00A5               	line	189
  3241                           	
  3242                           l2045:	
  3243  05E2                     ;Main.c: 187: void SetStopTime(unsigned char *RelayStopTime, unsigned char Time10sec, un
                                 signed char Time1sec, unsigned char Time100ms);Main.c: 188: {;Main.c: 189:     if (Count
                                 er_100ms + Time100ms >= 10)
  3244                           	movf	(SetStopTime@Time100ms),w
  3245  05E2  0822               	addwf	(_Counter_100ms),w
  3246  05E3  075C               	movwf	(??_SetStopTime+0)+0
  3247  05E4  00A3               	movf	(_Counter_100ms+1),w
  3248  05E5  085D               	skipnc
  3249  05E6  1803               	incf	(_Counter_100ms+1),w
  3250  05E7  0A5D               	movwf	((??_SetStopTime+0)+0)+1
  3251  05E8  00A4               	movlw	0
  3252  05E9  3000               	subwf	1+(??_SetStopTime+0)+0,w
  3253  05EA  0224               	movlw	0Ah
  3254  05EB  300A               	skipnz
  3255  05EC  1903               	subwf	0+(??_SetStopTime+0)+0,w
  3256  05ED  0223               	skipc
  3257  05EE  1C03               	goto	u1021
  3258  05EF  2DF1               	goto	u1020
  3259  05F0  2DF2               u1021:
  3260  05F1                     	goto	l2051
  3261  05F1  2E02               u1020:
  3262  05F2                     	line	191
  3263                           	
  3264                           l2047:	
  3265  05F2                     ;Main.c: 190:     {;Main.c: 191:         *(RelayStopTime + 2) = Counter_100ms + Time100m
                                 s - 10;
  3266                           	movf	(_Counter_100ms),w
  3267  05F2  085C               	addwf	(SetStopTime@Time100ms),w
  3268  05F3  0722               	addlw	0F6h
  3269  05F4  3EF6               	movwf	(??_SetStopTime+0)+0
  3270  05F5  00A3               	movf	(SetStopTime@RelayStopTime),w
  3271  05F6  0825               	addlw	02h
  3272  05F7  3E02               	movwf	fsr0
  3273  05F8  0084               	movf	(??_SetStopTime+0)+0,w
  3274  05F9  0823               	bcf	status, 7	;select IRP bank0
  3275  05FA  1383               	movwf	indf
  3276  05FB  0080               	line	193
  3277                           	
  3278                           l2049:	
  3279  05FC                     ;Main.c: 193:         Time1sec = Time1sec + 1;
  3280                           	movf	(SetStopTime@Time1sec),w
  3281  05FC  0821               	addlw	01h
  3282  05FD  3E01               	movwf	(??_SetStopTime+0)+0
  3283  05FE  00A3               	movf	(??_SetStopTime+0)+0,w
  3284  05FF  0823               	movwf	(SetStopTime@Time1sec)
  3285  0600  00A1               	line	194
  3286                           ;Main.c: 194:     }
  3287                           	goto	l2053
  3288  0601  2E0C               	line	195
  3289                           ;Main.c: 195:     else
  3290                           	
  3291                           l185:	
  3292  0602                     	line	197
  3293                           	
  3294                           l2051:	
  3295  0602                     ;Main.c: 196:     {;Main.c: 197:         *(RelayStopTime + 2) = Counter_100ms + Time100m
                                 s;
  3296                           	movf	(_Counter_100ms),w
  3297  0602  085C               	addwf	(SetStopTime@Time100ms),w
  3298  0603  0722               	movwf	(??_SetStopTime+0)+0
  3299  0604  00A3               	movf	(SetStopTime@RelayStopTime),w
  3300  0605  0825               	addlw	02h
  3301  0606  3E02               	movwf	fsr0
  3302  0607  0084               	movf	(??_SetStopTime+0)+0,w
  3303  0608  0823               	bcf	status, 7	;select IRP bank0
  3304  0609  1383               	movwf	indf
  3305  060A  0080               	goto	l2053
  3306  060B  2E0C               	line	198
  3307                           ;Main.c: 198:     }
  3308                           	
  3309                           l186:	
  3310  060C                     	line	200
  3311                           	
  3312                           l2053:	
  3313  060C                     ;Main.c: 200:     if (Counter_1sec + Time1sec >= 10)
  3314                           	movf	(SetStopTime@Time1sec),w
  3315  060C  0821               	addwf	(_Counter_1sec),w
  3316  060D  075A               	movwf	(??_SetStopTime+0)+0
  3317  060E  00A3               	movf	(_Counter_1sec+1),w
  3318  060F  085B               	skipnc
  3319  0610  1803               	incf	(_Counter_1sec+1),w
  3320  0611  0A5B               	movwf	((??_SetStopTime+0)+0)+1
  3321  0612  00A4               	movlw	0
  3322  0613  3000               	subwf	1+(??_SetStopTime+0)+0,w
  3323  0614  0224               	movlw	0Ah
  3324  0615  300A               	skipnz
  3325  0616  1903               	subwf	0+(??_SetStopTime+0)+0,w
  3326  0617  0223               	skipc
  3327  0618  1C03               	goto	u1031
  3328  0619  2E1B               	goto	u1030
  3329  061A  2E1C               u1031:
  3330  061B                     	goto	l2059
  3331  061B  2E2A               u1030:
  3332  061C                     	line	202
  3333                           	
  3334                           l2055:	
  3335  061C                     ;Main.c: 201:     {;Main.c: 202:         *(RelayStopTime + 1) = Counter_1sec + Time1sec 
                                 - 10;
  3336                           	movf	(_Counter_1sec),w
  3337  061C  085A               	addwf	(SetStopTime@Time1sec),w
  3338  061D  0721               	addlw	0F6h
  3339  061E  3EF6               	movwf	(??_SetStopTime+0)+0
  3340  061F  00A3               	incf	(SetStopTime@RelayStopTime),w
  3341  0620  0A25               	movwf	fsr0
  3342  0621  0084               	movf	(??_SetStopTime+0)+0,w
  3343  0622  0823               	movwf	indf
  3344  0623  0080               	line	204
  3345                           	
  3346                           l2057:	
  3347  0624                     ;Main.c: 204:         Time10sec = Time10sec + 1;
  3348                           	movf	(SetStopTime@Time10sec),w
  3349  0624  0820               	addlw	01h
  3350  0625  3E01               	movwf	(??_SetStopTime+0)+0
  3351  0626  00A3               	movf	(??_SetStopTime+0)+0,w
  3352  0627  0823               	movwf	(SetStopTime@Time10sec)
  3353  0628  00A0               	line	205
  3354                           ;Main.c: 205:     }
  3355                           	goto	l2061
  3356  0629  2E32               	line	206
  3357                           ;Main.c: 206:     else
  3358                           	
  3359                           l187:	
  3360  062A                     	line	208
  3361                           	
  3362                           l2059:	
  3363  062A                     ;Main.c: 207:     {;Main.c: 208:         *(RelayStopTime + 1) = Counter_1sec + Time1sec;
                                 
  3364                           	movf	(_Counter_1sec),w
  3365  062A  085A               	addwf	(SetStopTime@Time1sec),w
  3366  062B  0721               	movwf	(??_SetStopTime+0)+0
  3367  062C  00A3               	incf	(SetStopTime@RelayStopTime),w
  3368  062D  0A25               	movwf	fsr0
  3369  062E  0084               	movf	(??_SetStopTime+0)+0,w
  3370  062F  0823               	movwf	indf
  3371  0630  0080               	goto	l2061
  3372  0631  2E32               	line	209
  3373                           ;Main.c: 209:     }
  3374                           	
  3375                           l188:	
  3376  0632                     	line	211
  3377                           	
  3378                           l2061:	
  3379  0632                     ;Main.c: 211:     if (Counter_10sec + Time10sec >= 10)
  3380                           	movf	(SetStopTime@Time10sec),w
  3381  0632  0820               	addwf	(_Counter_10sec),w
  3382  0633  0758               	movwf	(??_SetStopTime+0)+0
  3383  0634  00A3               	movf	(_Counter_10sec+1),w
  3384  0635  0859               	skipnc
  3385  0636  1803               	incf	(_Counter_10sec+1),w
  3386  0637  0A59               	movwf	((??_SetStopTime+0)+0)+1
  3387  0638  00A4               	movlw	0
  3388  0639  3000               	subwf	1+(??_SetStopTime+0)+0,w
  3389  063A  0224               	movlw	0Ah
  3390  063B  300A               	skipnz
  3391  063C  1903               	subwf	0+(??_SetStopTime+0)+0,w
  3392  063D  0223               	skipc
  3393  063E  1C03               	goto	u1041
  3394  063F  2E41               	goto	u1040
  3395  0640  2E42               u1041:
  3396  0641                     	goto	l2065
  3397  0641  2E4B               u1040:
  3398  0642                     	line	213
  3399                           	
  3400                           l2063:	
  3401  0642                     ;Main.c: 212:     {;Main.c: 213:         *(RelayStopTime + 0) = Counter_10sec + Time10se
                                 c - 10;
  3402                           	movf	(_Counter_10sec),w
  3403  0642  0858               	addwf	(SetStopTime@Time10sec),w
  3404  0643  0720               	addlw	0F6h
  3405  0644  3EF6               	movwf	(??_SetStopTime+0)+0
  3406  0645  00A3               	movf	(SetStopTime@RelayStopTime),w
  3407  0646  0825               	movwf	fsr0
  3408  0647  0084               	movf	(??_SetStopTime+0)+0,w
  3409  0648  0823               	movwf	indf
  3410  0649  0080               	line	214
  3411                           ;Main.c: 214:     }
  3412                           	goto	l191
  3413  064A  2E53               	line	215
  3414                           ;Main.c: 215:     else
  3415                           	
  3416                           l189:	
  3417  064B                     	line	217
  3418                           	
  3419                           l2065:	
  3420  064B                     ;Main.c: 216:     {;Main.c: 217:         *(RelayStopTime + 0) = Counter_10sec + Time10se
                                 c;
  3421                           	movf	(_Counter_10sec),w
  3422  064B  0858               	addwf	(SetStopTime@Time10sec),w
  3423  064C  0720               	movwf	(??_SetStopTime+0)+0
  3424  064D  00A3               	movf	(SetStopTime@RelayStopTime),w
  3425  064E  0825               	movwf	fsr0
  3426  064F  0084               	movf	(??_SetStopTime+0)+0,w
  3427  0650  0823               	movwf	indf
  3428  0651  0080               	goto	l191
  3429  0652  2E53               	line	218
  3430                           ;Main.c: 218:     }
  3431                           	
  3432                           l190:	
  3433  0653                     	line	240
  3434                           	
  3435                           l191:	
  3436  0653                     	return
  3437  0653  0008               	opt stack 0
  3438                           GLOBAL	__end_of_SetStopTime
  3439                           	__end_of_SetStopTime:
  3440  0654                     	signat	_SetStopTime,16505
  3441                           	global	_SendTelegram
  3442                           
  3443 ;; *************** function _SendTelegram *****************
  3444 ;; Defined at:
  3445 ;;		line 56 in file "TelegramInterpreter.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  MyTelegram     21    2[BANK0 ] struct .
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  CommandCount    1   24[BANK0 ] unsigned char 
  3450 ;;  MacCounter      1    0        unsigned char 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3460 ;;      Params:         0      21       0       0
  3461 ;;      Locals:         0       1       0       0
  3462 ;;      Temps:          0       1       0       0
  3463 ;;      Totals:         0      23       0       0
  3464 ;;Total ram usage:       23 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    4
  3467 ;; This function calls:
  3468 ;;		_AddByteToBuffer
  3469 ;; This function is called by:
  3470 ;;		_Say_Hello
  3471 ;;		_Handle_Telegram
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3475                           	file	"TelegramInterpreter.c"
  3476                           	line	56
  3477                           global __ptext10
  3478                           __ptext10:	;psect for function _SendTelegram
  3479  0756                     psect	text10
  3480                           	file	"TelegramInterpreter.c"
  3481                           	line	56
  3482                           	global	__size_of_SendTelegram
  3483                           	__size_of_SendTelegram	equ	__end_of_SendTelegram-_SendTelegram
  3484  0039                     	
  3485                           _SendTelegram:	
  3486  0756                     ;incstack = 0
  3487                           	opt	stack 2
  3488                           ; Regs used in _SendTelegram: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3489                           	line	63
  3490                           	
  3491                           l1967:	
  3492  0756                     ;TelegramInterpreter.c: 56: void SendTelegram(TelegramType MyTelegram);TelegramInterpret
                                 er.c: 57: {;TelegramInterpreter.c: 60:     unsigned char MacCounter;;TelegramInterpreter
                                 .c: 61:     unsigned char CommandCounter;;TelegramInterpreter.c: 63:     AddByteToBuffer
                                 (MyTelegram.Start);
  3493                           	bcf	status, 5	;RP0=0, select bank0
  3494  0756  1283               	bcf	status, 6	;RP1=0, select bank0
  3495  0757  1303               	movf	(SendTelegram@MyTelegram),w
  3496  0758  0822               	fcall	_AddByteToBuffer
  3497  0759  158A  2794  118A   	line	65
  3498                           ;TelegramInterpreter.c: 65:     AddByteToBuffer(MyTelegram.Address);
  3499                           	bcf	status, 5	;RP0=0, select bank0
  3500  075C  1283               	bcf	status, 6	;RP1=0, select bank0
  3501  075D  1303               	movf	0+(SendTelegram@MyTelegram)+01h,w
  3502  075E  0823               	fcall	_AddByteToBuffer
  3503  075F  158A  2794  118A   	line	66
  3504                           ;TelegramInterpreter.c: 66:     AddByteToBuffer(MyTelegram.Commandlength + 48);
  3505                           	bcf	status, 5	;RP0=0, select bank0
  3506  0762  1283               	bcf	status, 6	;RP1=0, select bank0
  3507  0763  1303               	movf	0+(SendTelegram@MyTelegram)+02h,w
  3508  0764  0824               	addlw	030h
  3509  0765  3E30               	fcall	_AddByteToBuffer
  3510  0766  158A  2794  118A   	line	69
  3511                           	
  3512                           l1969:	
  3513  0769                     ;TelegramInterpreter.c: 69:     for (CommandCounter = 0; CommandCounter < MyTelegram.Com
                                 mandlength; CommandCounter ++)
  3514                           	bcf	status, 5	;RP0=0, select bank0
  3515  0769  1283               	bcf	status, 6	;RP1=0, select bank0
  3516  076A  1303               	clrf	(SendTelegram@CommandCounter)
  3517  076B  01B8               	goto	l1975
  3518  076C  2F7D               	
  3519                           l486:	
  3520  076D                     	line	71
  3521                           	
  3522                           l1971:	
  3523  076D                     ;TelegramInterpreter.c: 70:     {;TelegramInterpreter.c: 71:         AddByteToBuffer(MyT
                                 elegram.Command[CommandCounter]);
  3524                           	movf	(SendTelegram@CommandCounter),w
  3525  076D  0838               	addlw	03h
  3526  076E  3E03               	addlw	low(SendTelegram@MyTelegram|((0x0)<<8))&0ffh
  3527  076F  3E22               	movwf	fsr0
  3528  0770  0084               	bcf	status, 7	;select IRP bank0
  3529  0771  1383               	movf	indf,w
  3530  0772  0800               	fcall	_AddByteToBuffer
  3531  0773  158A  2794  118A   	line	72
  3532                           	
  3533                           l1973:	
  3534  0776                     ;TelegramInterpreter.c: 72:     }
  3535                           	movlw	low(01h)
  3536  0776  3001               	bcf	status, 5	;RP0=0, select bank0
  3537  0777  1283               	bcf	status, 6	;RP1=0, select bank0
  3538  0778  1303               	movwf	(??_SendTelegram+0)+0
  3539  0779  00B7               	movf	(??_SendTelegram+0)+0,w
  3540  077A  0837               	addwf	(SendTelegram@CommandCounter),f
  3541  077B  07B8               	goto	l1975
  3542  077C  2F7D               	
  3543                           l485:	
  3544  077D                     	
  3545                           l1975:	
  3546  077D                     	movf	0+(SendTelegram@MyTelegram)+02h,w
  3547  077D  0824               	subwf	(SendTelegram@CommandCounter),w
  3548  077E  0238               	skipc
  3549  077F  1C03               	goto	u891
  3550  0780  2F82               	goto	u890
  3551  0781  2F83               u891:
  3552  0782                     	goto	l1971
  3553  0782  2F6D               u890:
  3554  0783                     	goto	l1977
  3555  0783  2F84               	
  3556                           l487:	
  3557  0784                     	line	74
  3558                           	
  3559                           l1977:	
  3560  0784                     ;TelegramInterpreter.c: 74:     AddByteToBuffer(MyTelegram.End[0]);
  3561                           	movf	0+(SendTelegram@MyTelegram)+013h,w
  3562  0784  0835               	fcall	_AddByteToBuffer
  3563  0785  158A  2794  118A   	line	75
  3564                           ;TelegramInterpreter.c: 75:     AddByteToBuffer(MyTelegram.End[1]);
  3565                           	bcf	status, 5	;RP0=0, select bank0
  3566  0788  1283               	bcf	status, 6	;RP1=0, select bank0
  3567  0789  1303               	movf	0+(SendTelegram@MyTelegram)+014h,w
  3568  078A  0836               	fcall	_AddByteToBuffer
  3569  078B  158A  2794  118A   	line	77
  3570                           	
  3571                           l488:	
  3572  078E                     	return
  3573  078E  0008               	opt stack 0
  3574                           GLOBAL	__end_of_SendTelegram
  3575                           	__end_of_SendTelegram:
  3576  078F                     	signat	_SendTelegram,4217
  3577                           	global	_AddByteToBuffer
  3578                           
  3579 ;; *************** function _AddByteToBuffer *****************
  3580 ;; Defined at:
  3581 ;;		line 120 in file "Eusart.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  Byte            1    wreg     unsigned char 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  Byte            1    1[BANK0 ] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      void 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3595 ;;      Params:         0       0       0       0
  3596 ;;      Locals:         0       1       0       0
  3597 ;;      Temps:          0       1       0       0
  3598 ;;      Totals:         0       2       0       0
  3599 ;;Total ram usage:        2 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    3
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_main
  3606 ;;		_SendTelegram
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3610                           	file	"Eusart.c"
  3611                           	line	120
  3612                           global __ptext11
  3613                           __ptext11:	;psect for function _AddByteToBuffer
  3614  0F94                     psect	text11
  3615                           	file	"Eusart.c"
  3616                           	line	120
  3617                           	global	__size_of_AddByteToBuffer
  3618                           	__size_of_AddByteToBuffer	equ	__end_of_AddByteToBuffer-_AddByteToBuffer
  3619  001C                     	
  3620                           _AddByteToBuffer:	
  3621  0F94                     ;incstack = 0
  3622                           	opt	stack 2
  3623                           ; Regs used in _AddByteToBuffer: [wreg-fsr0h+status,2+status,0]
  3624                           ;AddByteToBuffer@Byte stored from wreg
  3625                           	bcf	status, 5	;RP0=0, select bank0
  3626  0F94  1283               	bcf	status, 6	;RP1=0, select bank0
  3627  0F95  1303               	movwf	(AddByteToBuffer@Byte)
  3628  0F96  00A1               	line	122
  3629                           	
  3630                           l1957:	
  3631  0F97                     ;Eusart.c: 120: void AddByteToBuffer (unsigned char Byte);Eusart.c: 121: {;Eusart.c: 122
                                 :     SendBuffer[BufferHead] = Byte;
  3632                           	movf	(AddByteToBuffer@Byte),w
  3633  0F97  0821               	movwf	(??_AddByteToBuffer+0)+0
  3634  0F98  00A0               	movf	(_BufferHead),w
  3635  0F99  087D               	addlw	low(_SendBuffer|((0x0)<<8))&0ffh
  3636  0F9A  3EA0               	movwf	fsr0
  3637  0F9B  0084               	movf	(??_AddByteToBuffer+0)+0,w
  3638  0F9C  0820               	bcf	status, 7	;select IRP bank1
  3639  0F9D  1383               	movwf	indf
  3640  0F9E  0080               	line	124
  3641                           	
  3642                           l1959:	
  3643  0F9F                     ;Eusart.c: 124:     if (BufferHead == 39)
  3644                           		movlw	39
  3645  0F9F  3027               	xorwf	((_BufferHead)),w
  3646  0FA0  067D               	btfss	status,2
  3647  0FA1  1D03               	goto	u881
  3648  0FA2  2FA4               	goto	u880
  3649  0FA3  2FA5               u881:
  3650  0FA4                     	goto	l1963
  3651  0FA4  2FA7               u880:
  3652  0FA5                     	line	126
  3653                           	
  3654                           l1961:	
  3655  0FA5                     ;Eusart.c: 125:     {;Eusart.c: 126:         BufferHead = 0;
  3656                           	clrf	(_BufferHead)
  3657  0FA5  01FD               	line	127
  3658                           ;Eusart.c: 127:     }
  3659                           	goto	l1965
  3660  0FA6  2FAC               	line	128
  3661                           ;Eusart.c: 128:     else
  3662                           	
  3663                           l320:	
  3664  0FA7                     	line	130
  3665                           	
  3666                           l1963:	
  3667  0FA7                     ;Eusart.c: 129:     {;Eusart.c: 130:         BufferHead++;
  3668                           	movlw	low(01h)
  3669  0FA7  3001               	movwf	(??_AddByteToBuffer+0)+0
  3670  0FA8  00A0               	movf	(??_AddByteToBuffer+0)+0,w
  3671  0FA9  0820               	addwf	(_BufferHead),f
  3672  0FAA  07FD               	goto	l1965
  3673  0FAB  2FAC               	line	131
  3674                           ;Eusart.c: 131:     }
  3675                           	
  3676                           l321:	
  3677  0FAC                     	line	134
  3678                           	
  3679                           l1965:	
  3680  0FAC                     ;Eusart.c: 134:     PIE1bits.TXIE = 1;
  3681                           	bsf	status, 5	;RP0=1, select bank1
  3682  0FAC  1683               	bcf	status, 6	;RP1=0, select bank1
  3683  0FAD  1303               	bsf	(140)^080h,1	;volatile
  3684  0FAE  148C               	line	136
  3685                           	
  3686                           l322:	
  3687  0FAF                     	return
  3688  0FAF  0008               	opt stack 0
  3689                           GLOBAL	__end_of_AddByteToBuffer
  3690                           	__end_of_AddByteToBuffer:
  3691  0FB0                     	signat	_AddByteToBuffer,4217
  3692                           	global	_Read_Relay
  3693                           
  3694 ;; *************** function _Read_Relay *****************
  3695 ;; Defined at:
  3696 ;;		line 161 in file "RelayControl.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  Relay           1    wreg     unsigned char 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  Relay           1    2[BANK0 ] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      unsigned char 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3710 ;;      Params:         0       0       0       0
  3711 ;;      Locals:         0       1       0       0
  3712 ;;      Temps:          0       2       0       0
  3713 ;;      Totals:         0       3       0       0
  3714 ;;Total ram usage:        3 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    3
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_Handle_Telegram
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3724                           	file	"RelayControl.c"
  3725                           	line	161
  3726                           global __ptext12
  3727                           __ptext12:	;psect for function _Read_Relay
  3728  078F                     psect	text12
  3729                           	file	"RelayControl.c"
  3730                           	line	161
  3731                           	global	__size_of_Read_Relay
  3732                           	__size_of_Read_Relay	equ	__end_of_Read_Relay-_Read_Relay
  3733  0038                     	
  3734                           _Read_Relay:	
  3735  078F                     ;incstack = 0
  3736                           	opt	stack 3
  3737                           ; Regs used in _Read_Relay: [wreg-fsr0h+status,2+status,0]
  3738                           ;Read_Relay@Relay stored from wreg
  3739                           	bcf	status, 5	;RP0=0, select bank0
  3740  078F  1283               	bcf	status, 6	;RP1=0, select bank0
  3741  0790  1303               	movwf	(Read_Relay@Relay)
  3742  0791  00A2               	line	163
  3743                           	
  3744                           l2067:	
  3745  0792                     ;RelayControl.c: 161: unsigned char Read_Relay (unsigned char Relay);RelayControl.c: 162
                                 :     {;RelayControl.c: 163:         switch (Relay)
  3746                           	goto	l2095
  3747  0792  2FB0               	line	165
  3748                           ;RelayControl.c: 164:         {;RelayControl.c: 165:             case Relay1:
  3749                           	
  3750                           l415:	
  3751  0793                     	line	166
  3752                           	
  3753                           l2069:	
  3754  0793                     ;RelayControl.c: 166:                 return PORTAbits.RA0;
  3755                           	movf	(5),w	;volatile
  3756  0793  0805               	andlw	(1<<1)-1
  3757  0794  3901               	goto	l416
  3758  0795  2FC6               	
  3759                           l2071:	
  3760  0796                     	goto	l416
  3761  0796  2FC6               	line	168
  3762                           ;RelayControl.c: 168:             case Relay2:
  3763                           	
  3764                           l417:	
  3765  0797                     	line	169
  3766                           	
  3767                           l2073:	
  3768  0797                     ;RelayControl.c: 169:                 return PORTAbits.RA1;
  3769                           	rrf	(5),w	;volatile
  3770  0797  0C05               	andlw	(1<<1)-1
  3771  0798  3901               	goto	l416
  3772  0799  2FC6               	
  3773                           l2075:	
  3774  079A                     	goto	l416
  3775  079A  2FC6               	line	171
  3776                           ;RelayControl.c: 171:             case Relay3:
  3777                           	
  3778                           l418:	
  3779  079B                     	line	172
  3780                           	
  3781                           l2077:	
  3782  079B                     ;RelayControl.c: 172:                 return PORTAbits.RA2;
  3783                           	rrf	(5),w	;volatile
  3784  079B  0C05               	movwf	(??_Read_Relay+0)+0
  3785  079C  00A0               	rrf	(??_Read_Relay+0)+0,w
  3786  079D  0C20               	andlw	(1<<1)-1
  3787  079E  3901               	goto	l416
  3788  079F  2FC6               	
  3789                           l2079:	
  3790  07A0                     	goto	l416
  3791  07A0  2FC6               	line	174
  3792                           ;RelayControl.c: 174:             case Relay4:
  3793                           	
  3794                           l419:	
  3795  07A1                     	line	175
  3796                           	
  3797                           l2081:	
  3798  07A1                     ;RelayControl.c: 175:                 return PORTCbits.RC0;
  3799                           	movf	(7),w	;volatile
  3800  07A1  0807               	andlw	(1<<1)-1
  3801  07A2  3901               	goto	l416
  3802  07A3  2FC6               	
  3803                           l2083:	
  3804  07A4                     	goto	l416
  3805  07A4  2FC6               	line	177
  3806                           ;RelayControl.c: 177:             case Relay5:
  3807                           	
  3808                           l420:	
  3809  07A5                     	line	178
  3810                           	
  3811                           l2085:	
  3812  07A5                     ;RelayControl.c: 178:                 return PORTCbits.RC1;
  3813                           	rrf	(7),w	;volatile
  3814  07A5  0C07               	andlw	(1<<1)-1
  3815  07A6  3901               	goto	l416
  3816  07A7  2FC6               	
  3817                           l2087:	
  3818  07A8                     	goto	l416
  3819  07A8  2FC6               	line	180
  3820                           ;RelayControl.c: 180:             case Relay6:
  3821                           	
  3822                           l421:	
  3823  07A9                     	line	181
  3824                           	
  3825                           l2089:	
  3826  07A9                     ;RelayControl.c: 181:                 return PORTCbits.RC2;
  3827                           	rrf	(7),w	;volatile
  3828  07A9  0C07               	movwf	(??_Read_Relay+0)+0
  3829  07AA  00A0               	rrf	(??_Read_Relay+0)+0,w
  3830  07AB  0C20               	andlw	(1<<1)-1
  3831  07AC  3901               	goto	l416
  3832  07AD  2FC6               	
  3833                           l2091:	
  3834  07AE                     	goto	l416
  3835  07AE  2FC6               	line	182
  3836                           	
  3837                           l2093:	
  3838  07AF                     ;RelayControl.c: 182:         }
  3839                           	goto	l2097
  3840  07AF  2FC4               	
  3841                           l414:	
  3842  07B0                     	
  3843                           l2095:	
  3844  07B0                     	movf	(Read_Relay@Relay),w
  3845  07B0  0822               	movwf	(??_Read_Relay+0)+0
  3846  07B1  00A0               	clrf	(??_Read_Relay+0)+0+1
  3847  07B2  01A1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3848                           ; Switch size 1, requested type "space"
  3849                           ; Number of cases is 1, Range of values is 0 to 0
  3850                           ; switch strategies available:
  3851                           ; Name         Instructions Cycles
  3852                           ; simple_byte            4     3 (average)
  3853                           ; direct_byte            9     7 (fixed)
  3854                           ; jumptable            260     6 (fixed)
  3855                           ;	Chosen strategy is simple_byte
  3856                           
  3857                           	movf 1+(??_Read_Relay+0)+0,w
  3858  07B3  0821               	opt asmopt_push
  3859                           	opt asmopt_off
  3860                           	xorlw	0^0	; case 0
  3861  07B4  3A00               	skipnz
  3862  07B5  1903               	goto	l2903
  3863  07B6  2FB8               	goto	l2097
  3864  07B7  2FC4               	opt asmopt_pop
  3865                           	
  3866                           l2903:	
  3867  07B8                     ; Switch size 1, requested type "space"
  3868                           ; Number of cases is 6, Range of values is 0 to 5
  3869                           ; switch strategies available:
  3870                           ; Name         Instructions Cycles
  3871                           ; direct_byte           19     7 (fixed)
  3872                           ; simple_byte           19    10 (average)
  3873                           ; jumptable            260     6 (fixed)
  3874                           ;	Chosen strategy is direct_byte
  3875                           
  3876                           	movf 0+(??_Read_Relay+0)+0,w
  3877  07B8  0820               	movwf fsr
  3878  07B9  0084               	movlw	6
  3879  07BA  3006               	subwf	fsr,w
  3880  07BB  0204               skipnc
  3881  07BC  1803               goto l2097
  3882  07BD  2FC4               movlw high(S2905)
  3883  07BE  3008               movwf pclath
  3884  07BF  008A               	clrc
  3885  07C0  1003               	rlf fsr,w
  3886  07C1  0D04               	addlw low(S2905)
  3887  07C2  3E00               	movwf pc
  3888  07C3  0082               psect	swtext1,local,class=CONST,delta=2
  3889                           global __pswtext1
  3890                           __pswtext1:
  3891  0800                     S2905:
  3892  0800                     	ljmp	l2069
  3893  0800  118A  2F93         	ljmp	l2073
  3894  0802  118A  2F97         	ljmp	l2077
  3895  0804  118A  2F9B         	ljmp	l2081
  3896  0806  118A  2FA1         	ljmp	l2085
  3897  0808  118A  2FA5         	ljmp	l2089
  3898  080A  118A  2FA9         psect	text12
  3899                           
  3900                           	
  3901                           l422:	
  3902  07C4                     	line	183
  3903                           	
  3904                           l2097:	
  3905  07C4                     ;RelayControl.c: 183:         return(255);
  3906                           	movlw	low(0FFh)
  3907  07C4  30FF               	goto	l416
  3908  07C5  2FC6               	
  3909                           l2099:	
  3910  07C6                     	line	184
  3911                           	
  3912                           l416:	
  3913  07C6                     	return
  3914  07C6  0008               	opt stack 0
  3915                           GLOBAL	__end_of_Read_Relay
  3916                           	__end_of_Read_Relay:
  3917  07C7                     	signat	_Read_Relay,4217
  3918                           	global	_CheckStopTime
  3919                           
  3920 ;; *************** function _CheckStopTime *****************
  3921 ;; Defined at:
  3922 ;;		line 148 in file "Main.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;		None
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;		None
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  1    wreg      void 
  3929 ;; Registers used:
  3930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3936 ;;      Params:         0       0       0       0
  3937 ;;      Locals:         0       0       0       0
  3938 ;;      Temps:          0       2       0       0
  3939 ;;      Totals:         0       2       0       0
  3940 ;;Total ram usage:        2 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    4
  3943 ;; This function calls:
  3944 ;;		_Set_Relay
  3945 ;; This function is called by:
  3946 ;;		_main
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3950                           	file	"Main.c"
  3951                           	line	148
  3952                           global __ptext13
  3953                           __ptext13:	;psect for function _CheckStopTime
  3954  022F                     psect	text13
  3955                           	file	"Main.c"
  3956                           	line	148
  3957                           	global	__size_of_CheckStopTime
  3958                           	__size_of_CheckStopTime	equ	__end_of_CheckStopTime-_CheckStopTime
  3959  017B                     	
  3960                           _CheckStopTime:	
  3961  022F                     ;incstack = 0
  3962                           	opt	stack 3
  3963                           ; Regs used in _CheckStopTime: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3964                           	line	150
  3965                           	
  3966                           l2269:	
  3967  022F                     ;Main.c: 150:     if (StopRelay1OnTime == 1 && Relay1StopTime[0] == Counter_10sec && Rel
                                 ay1StopTime[1] == Counter_1sec && Relay1StopTime[2] == Counter_100ms)
  3968                           	bcf	status, 5	;RP0=0, select bank0
  3969  022F  1283               	bcf	status, 6	;RP1=0, select bank0
  3970  0230  1303               		decf	((_StopRelay1OnTime)),w
  3971  0231  036B               	btfss	status,2
  3972  0232  1D03               	goto	u1221
  3973  0233  2A35               	goto	u1220
  3974  0234  2A36               u1221:
  3975  0235                     	goto	l2281
  3976  0235  2A64               u1220:
  3977  0236                     	
  3978                           l2271:	
  3979  0236                     	movf	(_Relay1StopTime),w
  3980  0236  086C               	movwf	(??_CheckStopTime+0)+0
  3981  0237  00A4               	clrf	(??_CheckStopTime+0)+0+1
  3982  0238  01A5               	movf	(_Counter_10sec+1),w
  3983  0239  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  3984  023A  0625               	skipz
  3985  023B  1D03               	goto	u1235
  3986  023C  2A3F               	movf	(_Counter_10sec),w
  3987  023D  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  3988  023E  0624               u1235:
  3989  023F                     
  3990                           	skipz
  3991  023F  1D03               	goto	u1231
  3992  0240  2A42               	goto	u1230
  3993  0241  2A43               u1231:
  3994  0242                     	goto	l2281
  3995  0242  2A64               u1230:
  3996  0243                     	
  3997                           l2273:	
  3998  0243                     	movf	0+(_Relay1StopTime)+01h,w
  3999  0243  086D               	movwf	(??_CheckStopTime+0)+0
  4000  0244  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4001  0245  01A5               	movf	(_Counter_1sec+1),w
  4002  0246  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4003  0247  0625               	skipz
  4004  0248  1D03               	goto	u1245
  4005  0249  2A4C               	movf	(_Counter_1sec),w
  4006  024A  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4007  024B  0624               u1245:
  4008  024C                     
  4009                           	skipz
  4010  024C  1D03               	goto	u1241
  4011  024D  2A4F               	goto	u1240
  4012  024E  2A50               u1241:
  4013  024F                     	goto	l2281
  4014  024F  2A64               u1240:
  4015  0250                     	
  4016                           l2275:	
  4017  0250                     	movf	0+(_Relay1StopTime)+02h,w
  4018  0250  086E               	movwf	(??_CheckStopTime+0)+0
  4019  0251  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4020  0252  01A5               	movf	(_Counter_100ms+1),w
  4021  0253  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4022  0254  0625               	skipz
  4023  0255  1D03               	goto	u1255
  4024  0256  2A59               	movf	(_Counter_100ms),w
  4025  0257  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4026  0258  0624               u1255:
  4027  0259                     
  4028                           	skipz
  4029  0259  1D03               	goto	u1251
  4030  025A  2A5C               	goto	u1250
  4031  025B  2A5D               u1251:
  4032  025C                     	goto	l2281
  4033  025C  2A64               u1250:
  4034  025D                     	line	152
  4035                           	
  4036                           l2277:	
  4037  025D                     ;Main.c: 151:     {;Main.c: 152:         StopRelay1OnTime = 0;
  4038                           	clrf	(_StopRelay1OnTime)
  4039  025D  01EB               	line	153
  4040                           	
  4041                           l2279:	
  4042  025E                     ;Main.c: 153:         Set_Relay(Relay1, Off);
  4043                           	clrf	(Set_Relay@State)
  4044  025E  01A0               	movlw	low(0)
  4045  025F  3000               	fcall	_Set_Relay
  4046  0260  118A  255F  118A   	goto	l2281
  4047  0263  2A64               	line	154
  4048                           ;Main.c: 154:     }
  4049                           	
  4050                           l176:	
  4051  0264                     	line	156
  4052                           	
  4053                           l2281:	
  4054  0264                     ;Main.c: 156:     if (StopRelay2OnTime == 1 && Relay2StopTime[0] == Counter_10sec && Rel
                                 ay2StopTime[1] == Counter_1sec && Relay2StopTime[2] == Counter_100ms)
  4055                           	bcf	status, 5	;RP0=0, select bank0
  4056  0264  1283               	bcf	status, 6	;RP1=0, select bank0
  4057  0265  1303               		decf	((_StopRelay2OnTime)),w
  4058  0266  036A               	btfss	status,2
  4059  0267  1D03               	goto	u1261
  4060  0268  2A6A               	goto	u1260
  4061  0269  2A6B               u1261:
  4062  026A                     	goto	l2293
  4063  026A  2AA5               u1260:
  4064  026B                     	
  4065                           l2283:	
  4066  026B                     	bsf	status, 5	;RP0=1, select bank1
  4067  026B  1683               	bcf	status, 6	;RP1=0, select bank1
  4068  026C  1303               	movf	(_Relay2StopTime)^080h,w
  4069  026D  086B               	bcf	status, 5	;RP0=0, select bank0
  4070  026E  1283               	bcf	status, 6	;RP1=0, select bank0
  4071  026F  1303               	movwf	(??_CheckStopTime+0)+0
  4072  0270  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4073  0271  01A5               	movf	(_Counter_10sec+1),w
  4074  0272  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4075  0273  0625               	skipz
  4076  0274  1D03               	goto	u1275
  4077  0275  2A78               	movf	(_Counter_10sec),w
  4078  0276  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4079  0277  0624               u1275:
  4080  0278                     
  4081                           	skipz
  4082  0278  1D03               	goto	u1271
  4083  0279  2A7B               	goto	u1270
  4084  027A  2A7C               u1271:
  4085  027B                     	goto	l2293
  4086  027B  2AA5               u1270:
  4087  027C                     	
  4088                           l2285:	
  4089  027C                     	bsf	status, 5	;RP0=1, select bank1
  4090  027C  1683               	bcf	status, 6	;RP1=0, select bank1
  4091  027D  1303               	movf	0+(_Relay2StopTime)^080h+01h,w
  4092  027E  086C               	bcf	status, 5	;RP0=0, select bank0
  4093  027F  1283               	bcf	status, 6	;RP1=0, select bank0
  4094  0280  1303               	movwf	(??_CheckStopTime+0)+0
  4095  0281  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4096  0282  01A5               	movf	(_Counter_1sec+1),w
  4097  0283  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4098  0284  0625               	skipz
  4099  0285  1D03               	goto	u1285
  4100  0286  2A89               	movf	(_Counter_1sec),w
  4101  0287  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4102  0288  0624               u1285:
  4103  0289                     
  4104                           	skipz
  4105  0289  1D03               	goto	u1281
  4106  028A  2A8C               	goto	u1280
  4107  028B  2A8D               u1281:
  4108  028C                     	goto	l2293
  4109  028C  2AA5               u1280:
  4110  028D                     	
  4111                           l2287:	
  4112  028D                     	bsf	status, 5	;RP0=1, select bank1
  4113  028D  1683               	bcf	status, 6	;RP1=0, select bank1
  4114  028E  1303               	movf	0+(_Relay2StopTime)^080h+02h,w
  4115  028F  086D               	bcf	status, 5	;RP0=0, select bank0
  4116  0290  1283               	bcf	status, 6	;RP1=0, select bank0
  4117  0291  1303               	movwf	(??_CheckStopTime+0)+0
  4118  0292  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4119  0293  01A5               	movf	(_Counter_100ms+1),w
  4120  0294  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4121  0295  0625               	skipz
  4122  0296  1D03               	goto	u1295
  4123  0297  2A9A               	movf	(_Counter_100ms),w
  4124  0298  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4125  0299  0624               u1295:
  4126  029A                     
  4127                           	skipz
  4128  029A  1D03               	goto	u1291
  4129  029B  2A9D               	goto	u1290
  4130  029C  2A9E               u1291:
  4131  029D                     	goto	l2293
  4132  029D  2AA5               u1290:
  4133  029E                     	line	158
  4134                           	
  4135                           l2289:	
  4136  029E                     ;Main.c: 157:     {;Main.c: 158:         StopRelay2OnTime = 0;
  4137                           	clrf	(_StopRelay2OnTime)
  4138  029E  01EA               	line	159
  4139                           	
  4140                           l2291:	
  4141  029F                     ;Main.c: 159:         Set_Relay(Relay2, Off);
  4142                           	clrf	(Set_Relay@State)
  4143  029F  01A0               	movlw	low(01h)
  4144  02A0  3001               	fcall	_Set_Relay
  4145  02A1  118A  255F  118A   	goto	l2293
  4146  02A4  2AA5               	line	160
  4147                           ;Main.c: 160:     }
  4148                           	
  4149                           l177:	
  4150  02A5                     	line	162
  4151                           	
  4152                           l2293:	
  4153  02A5                     ;Main.c: 162:     if (StopRelay3OnTime == 1 && Relay3StopTime[0] == Counter_10sec && Rel
                                 ay3StopTime[1] == Counter_1sec && Relay3StopTime[2] == Counter_100ms)
  4154                           	bcf	status, 5	;RP0=0, select bank0
  4155  02A5  1283               	bcf	status, 6	;RP1=0, select bank0
  4156  02A6  1303               		decf	((_StopRelay3OnTime)),w
  4157  02A7  0369               	btfss	status,2
  4158  02A8  1D03               	goto	u1301
  4159  02A9  2AAB               	goto	u1300
  4160  02AA  2AAC               u1301:
  4161  02AB                     	goto	l2305
  4162  02AB  2AE6               u1300:
  4163  02AC                     	
  4164                           l2295:	
  4165  02AC                     	bsf	status, 5	;RP0=1, select bank1
  4166  02AC  1683               	bcf	status, 6	;RP1=0, select bank1
  4167  02AD  1303               	movf	(_Relay3StopTime)^080h,w
  4168  02AE  0868               	bcf	status, 5	;RP0=0, select bank0
  4169  02AF  1283               	bcf	status, 6	;RP1=0, select bank0
  4170  02B0  1303               	movwf	(??_CheckStopTime+0)+0
  4171  02B1  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4172  02B2  01A5               	movf	(_Counter_10sec+1),w
  4173  02B3  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4174  02B4  0625               	skipz
  4175  02B5  1D03               	goto	u1315
  4176  02B6  2AB9               	movf	(_Counter_10sec),w
  4177  02B7  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4178  02B8  0624               u1315:
  4179  02B9                     
  4180                           	skipz
  4181  02B9  1D03               	goto	u1311
  4182  02BA  2ABC               	goto	u1310
  4183  02BB  2ABD               u1311:
  4184  02BC                     	goto	l2305
  4185  02BC  2AE6               u1310:
  4186  02BD                     	
  4187                           l2297:	
  4188  02BD                     	bsf	status, 5	;RP0=1, select bank1
  4189  02BD  1683               	bcf	status, 6	;RP1=0, select bank1
  4190  02BE  1303               	movf	0+(_Relay3StopTime)^080h+01h,w
  4191  02BF  0869               	bcf	status, 5	;RP0=0, select bank0
  4192  02C0  1283               	bcf	status, 6	;RP1=0, select bank0
  4193  02C1  1303               	movwf	(??_CheckStopTime+0)+0
  4194  02C2  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4195  02C3  01A5               	movf	(_Counter_1sec+1),w
  4196  02C4  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4197  02C5  0625               	skipz
  4198  02C6  1D03               	goto	u1325
  4199  02C7  2ACA               	movf	(_Counter_1sec),w
  4200  02C8  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4201  02C9  0624               u1325:
  4202  02CA                     
  4203                           	skipz
  4204  02CA  1D03               	goto	u1321
  4205  02CB  2ACD               	goto	u1320
  4206  02CC  2ACE               u1321:
  4207  02CD                     	goto	l2305
  4208  02CD  2AE6               u1320:
  4209  02CE                     	
  4210                           l2299:	
  4211  02CE                     	bsf	status, 5	;RP0=1, select bank1
  4212  02CE  1683               	bcf	status, 6	;RP1=0, select bank1
  4213  02CF  1303               	movf	0+(_Relay3StopTime)^080h+02h,w
  4214  02D0  086A               	bcf	status, 5	;RP0=0, select bank0
  4215  02D1  1283               	bcf	status, 6	;RP1=0, select bank0
  4216  02D2  1303               	movwf	(??_CheckStopTime+0)+0
  4217  02D3  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4218  02D4  01A5               	movf	(_Counter_100ms+1),w
  4219  02D5  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4220  02D6  0625               	skipz
  4221  02D7  1D03               	goto	u1335
  4222  02D8  2ADB               	movf	(_Counter_100ms),w
  4223  02D9  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4224  02DA  0624               u1335:
  4225  02DB                     
  4226                           	skipz
  4227  02DB  1D03               	goto	u1331
  4228  02DC  2ADE               	goto	u1330
  4229  02DD  2ADF               u1331:
  4230  02DE                     	goto	l2305
  4231  02DE  2AE6               u1330:
  4232  02DF                     	line	164
  4233                           	
  4234                           l2301:	
  4235  02DF                     ;Main.c: 163:     {;Main.c: 164:         StopRelay3OnTime = 0;
  4236                           	clrf	(_StopRelay3OnTime)
  4237  02DF  01E9               	line	165
  4238                           	
  4239                           l2303:	
  4240  02E0                     ;Main.c: 165:         Set_Relay(Relay3, Off);
  4241                           	clrf	(Set_Relay@State)
  4242  02E0  01A0               	movlw	low(02h)
  4243  02E1  3002               	fcall	_Set_Relay
  4244  02E2  118A  255F  118A   	goto	l2305
  4245  02E5  2AE6               	line	166
  4246                           ;Main.c: 166:     }
  4247                           	
  4248                           l178:	
  4249  02E6                     	line	168
  4250                           	
  4251                           l2305:	
  4252  02E6                     ;Main.c: 168:     if (StopRelay4OnTime == 1 && Relay4StopTime[0] == Counter_10sec && Rel
                                 ay4StopTime[1] == Counter_1sec && Relay4StopTime[2] == Counter_100ms)
  4253                           	bcf	status, 5	;RP0=0, select bank0
  4254  02E6  1283               	bcf	status, 6	;RP1=0, select bank0
  4255  02E7  1303               		decf	((_StopRelay4OnTime)),w
  4256  02E8  0368               	btfss	status,2
  4257  02E9  1D03               	goto	u1341
  4258  02EA  2AEC               	goto	u1340
  4259  02EB  2AED               u1341:
  4260  02EC                     	goto	l2317
  4261  02EC  2B27               u1340:
  4262  02ED                     	
  4263                           l2307:	
  4264  02ED                     	bsf	status, 5	;RP0=1, select bank1
  4265  02ED  1683               	bcf	status, 6	;RP1=0, select bank1
  4266  02EE  1303               	movf	(_Relay4StopTime)^080h,w
  4267  02EF  0865               	bcf	status, 5	;RP0=0, select bank0
  4268  02F0  1283               	bcf	status, 6	;RP1=0, select bank0
  4269  02F1  1303               	movwf	(??_CheckStopTime+0)+0
  4270  02F2  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4271  02F3  01A5               	movf	(_Counter_10sec+1),w
  4272  02F4  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4273  02F5  0625               	skipz
  4274  02F6  1D03               	goto	u1355
  4275  02F7  2AFA               	movf	(_Counter_10sec),w
  4276  02F8  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4277  02F9  0624               u1355:
  4278  02FA                     
  4279                           	skipz
  4280  02FA  1D03               	goto	u1351
  4281  02FB  2AFD               	goto	u1350
  4282  02FC  2AFE               u1351:
  4283  02FD                     	goto	l2317
  4284  02FD  2B27               u1350:
  4285  02FE                     	
  4286                           l2309:	
  4287  02FE                     	bsf	status, 5	;RP0=1, select bank1
  4288  02FE  1683               	bcf	status, 6	;RP1=0, select bank1
  4289  02FF  1303               	movf	0+(_Relay4StopTime)^080h+01h,w
  4290  0300  0866               	bcf	status, 5	;RP0=0, select bank0
  4291  0301  1283               	bcf	status, 6	;RP1=0, select bank0
  4292  0302  1303               	movwf	(??_CheckStopTime+0)+0
  4293  0303  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4294  0304  01A5               	movf	(_Counter_1sec+1),w
  4295  0305  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4296  0306  0625               	skipz
  4297  0307  1D03               	goto	u1365
  4298  0308  2B0B               	movf	(_Counter_1sec),w
  4299  0309  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4300  030A  0624               u1365:
  4301  030B                     
  4302                           	skipz
  4303  030B  1D03               	goto	u1361
  4304  030C  2B0E               	goto	u1360
  4305  030D  2B0F               u1361:
  4306  030E                     	goto	l2317
  4307  030E  2B27               u1360:
  4308  030F                     	
  4309                           l2311:	
  4310  030F                     	bsf	status, 5	;RP0=1, select bank1
  4311  030F  1683               	bcf	status, 6	;RP1=0, select bank1
  4312  0310  1303               	movf	0+(_Relay4StopTime)^080h+02h,w
  4313  0311  0867               	bcf	status, 5	;RP0=0, select bank0
  4314  0312  1283               	bcf	status, 6	;RP1=0, select bank0
  4315  0313  1303               	movwf	(??_CheckStopTime+0)+0
  4316  0314  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4317  0315  01A5               	movf	(_Counter_100ms+1),w
  4318  0316  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4319  0317  0625               	skipz
  4320  0318  1D03               	goto	u1375
  4321  0319  2B1C               	movf	(_Counter_100ms),w
  4322  031A  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4323  031B  0624               u1375:
  4324  031C                     
  4325                           	skipz
  4326  031C  1D03               	goto	u1371
  4327  031D  2B1F               	goto	u1370
  4328  031E  2B20               u1371:
  4329  031F                     	goto	l2317
  4330  031F  2B27               u1370:
  4331  0320                     	line	170
  4332                           	
  4333                           l2313:	
  4334  0320                     ;Main.c: 169:     {;Main.c: 170:         StopRelay4OnTime = 0;
  4335                           	clrf	(_StopRelay4OnTime)
  4336  0320  01E8               	line	171
  4337                           	
  4338                           l2315:	
  4339  0321                     ;Main.c: 171:         Set_Relay(Relay4, Off);
  4340                           	clrf	(Set_Relay@State)
  4341  0321  01A0               	movlw	low(03h)
  4342  0322  3003               	fcall	_Set_Relay
  4343  0323  118A  255F  118A   	goto	l2317
  4344  0326  2B27               	line	172
  4345                           ;Main.c: 172:     }
  4346                           	
  4347                           l179:	
  4348  0327                     	line	174
  4349                           	
  4350                           l2317:	
  4351  0327                     ;Main.c: 174:     if (StopRelay5OnTime == 1 && Relay5StopTime[0] == Counter_10sec && Rel
                                 ay5StopTime[1] == Counter_1sec && Relay5StopTime[2] == Counter_100ms)
  4352                           	bcf	status, 5	;RP0=0, select bank0
  4353  0327  1283               	bcf	status, 6	;RP1=0, select bank0
  4354  0328  1303               		decf	((_StopRelay5OnTime)),w
  4355  0329  0367               	btfss	status,2
  4356  032A  1D03               	goto	u1381
  4357  032B  2B2D               	goto	u1380
  4358  032C  2B2E               u1381:
  4359  032D                     	goto	l2329
  4360  032D  2B68               u1380:
  4361  032E                     	
  4362                           l2319:	
  4363  032E                     	bsf	status, 5	;RP0=1, select bank1
  4364  032E  1683               	bcf	status, 6	;RP1=0, select bank1
  4365  032F  1303               	movf	(_Relay5StopTime)^080h,w
  4366  0330  0862               	bcf	status, 5	;RP0=0, select bank0
  4367  0331  1283               	bcf	status, 6	;RP1=0, select bank0
  4368  0332  1303               	movwf	(??_CheckStopTime+0)+0
  4369  0333  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4370  0334  01A5               	movf	(_Counter_10sec+1),w
  4371  0335  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4372  0336  0625               	skipz
  4373  0337  1D03               	goto	u1395
  4374  0338  2B3B               	movf	(_Counter_10sec),w
  4375  0339  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4376  033A  0624               u1395:
  4377  033B                     
  4378                           	skipz
  4379  033B  1D03               	goto	u1391
  4380  033C  2B3E               	goto	u1390
  4381  033D  2B3F               u1391:
  4382  033E                     	goto	l2329
  4383  033E  2B68               u1390:
  4384  033F                     	
  4385                           l2321:	
  4386  033F                     	bsf	status, 5	;RP0=1, select bank1
  4387  033F  1683               	bcf	status, 6	;RP1=0, select bank1
  4388  0340  1303               	movf	0+(_Relay5StopTime)^080h+01h,w
  4389  0341  0863               	bcf	status, 5	;RP0=0, select bank0
  4390  0342  1283               	bcf	status, 6	;RP1=0, select bank0
  4391  0343  1303               	movwf	(??_CheckStopTime+0)+0
  4392  0344  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4393  0345  01A5               	movf	(_Counter_1sec+1),w
  4394  0346  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4395  0347  0625               	skipz
  4396  0348  1D03               	goto	u1405
  4397  0349  2B4C               	movf	(_Counter_1sec),w
  4398  034A  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4399  034B  0624               u1405:
  4400  034C                     
  4401                           	skipz
  4402  034C  1D03               	goto	u1401
  4403  034D  2B4F               	goto	u1400
  4404  034E  2B50               u1401:
  4405  034F                     	goto	l2329
  4406  034F  2B68               u1400:
  4407  0350                     	
  4408                           l2323:	
  4409  0350                     	bsf	status, 5	;RP0=1, select bank1
  4410  0350  1683               	bcf	status, 6	;RP1=0, select bank1
  4411  0351  1303               	movf	0+(_Relay5StopTime)^080h+02h,w
  4412  0352  0864               	bcf	status, 5	;RP0=0, select bank0
  4413  0353  1283               	bcf	status, 6	;RP1=0, select bank0
  4414  0354  1303               	movwf	(??_CheckStopTime+0)+0
  4415  0355  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4416  0356  01A5               	movf	(_Counter_100ms+1),w
  4417  0357  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4418  0358  0625               	skipz
  4419  0359  1D03               	goto	u1415
  4420  035A  2B5D               	movf	(_Counter_100ms),w
  4421  035B  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4422  035C  0624               u1415:
  4423  035D                     
  4424                           	skipz
  4425  035D  1D03               	goto	u1411
  4426  035E  2B60               	goto	u1410
  4427  035F  2B61               u1411:
  4428  0360                     	goto	l2329
  4429  0360  2B68               u1410:
  4430  0361                     	line	176
  4431                           	
  4432                           l2325:	
  4433  0361                     ;Main.c: 175:     {;Main.c: 176:         StopRelay5OnTime = 0;
  4434                           	clrf	(_StopRelay5OnTime)
  4435  0361  01E7               	line	177
  4436                           	
  4437                           l2327:	
  4438  0362                     ;Main.c: 177:         Set_Relay(Relay5, Off);
  4439                           	clrf	(Set_Relay@State)
  4440  0362  01A0               	movlw	low(04h)
  4441  0363  3004               	fcall	_Set_Relay
  4442  0364  118A  255F  118A   	goto	l2329
  4443  0367  2B68               	line	178
  4444                           ;Main.c: 178:     }
  4445                           	
  4446                           l180:	
  4447  0368                     	line	180
  4448                           	
  4449                           l2329:	
  4450  0368                     ;Main.c: 180:     if (StopRelay6OnTime == 1 && Relay6StopTime[0] == Counter_10sec && Rel
                                 ay6StopTime[1] == Counter_1sec && Relay6StopTime[2] == Counter_100ms)
  4451                           	bcf	status, 5	;RP0=0, select bank0
  4452  0368  1283               	bcf	status, 6	;RP1=0, select bank0
  4453  0369  1303               		decf	((_StopRelay6OnTime)),w
  4454  036A  0366               	btfss	status,2
  4455  036B  1D03               	goto	u1421
  4456  036C  2B6E               	goto	u1420
  4457  036D  2B6F               u1421:
  4458  036E                     	goto	l182
  4459  036E  2BA9               u1420:
  4460  036F                     	
  4461                           l2331:	
  4462  036F                     	bsf	status, 5	;RP0=1, select bank1
  4463  036F  1683               	bcf	status, 6	;RP1=0, select bank1
  4464  0370  1303               	movf	(_Relay6StopTime)^080h,w
  4465  0371  085F               	bcf	status, 5	;RP0=0, select bank0
  4466  0372  1283               	bcf	status, 6	;RP1=0, select bank0
  4467  0373  1303               	movwf	(??_CheckStopTime+0)+0
  4468  0374  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4469  0375  01A5               	movf	(_Counter_10sec+1),w
  4470  0376  0859               	xorwf	1+(??_CheckStopTime+0)+0,w
  4471  0377  0625               	skipz
  4472  0378  1D03               	goto	u1435
  4473  0379  2B7C               	movf	(_Counter_10sec),w
  4474  037A  0858               	xorwf	0+(??_CheckStopTime+0)+0,w
  4475  037B  0624               u1435:
  4476  037C                     
  4477                           	skipz
  4478  037C  1D03               	goto	u1431
  4479  037D  2B7F               	goto	u1430
  4480  037E  2B80               u1431:
  4481  037F                     	goto	l182
  4482  037F  2BA9               u1430:
  4483  0380                     	
  4484                           l2333:	
  4485  0380                     	bsf	status, 5	;RP0=1, select bank1
  4486  0380  1683               	bcf	status, 6	;RP1=0, select bank1
  4487  0381  1303               	movf	0+(_Relay6StopTime)^080h+01h,w
  4488  0382  0860               	bcf	status, 5	;RP0=0, select bank0
  4489  0383  1283               	bcf	status, 6	;RP1=0, select bank0
  4490  0384  1303               	movwf	(??_CheckStopTime+0)+0
  4491  0385  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4492  0386  01A5               	movf	(_Counter_1sec+1),w
  4493  0387  085B               	xorwf	1+(??_CheckStopTime+0)+0,w
  4494  0388  0625               	skipz
  4495  0389  1D03               	goto	u1445
  4496  038A  2B8D               	movf	(_Counter_1sec),w
  4497  038B  085A               	xorwf	0+(??_CheckStopTime+0)+0,w
  4498  038C  0624               u1445:
  4499  038D                     
  4500                           	skipz
  4501  038D  1D03               	goto	u1441
  4502  038E  2B90               	goto	u1440
  4503  038F  2B91               u1441:
  4504  0390                     	goto	l182
  4505  0390  2BA9               u1440:
  4506  0391                     	
  4507                           l2335:	
  4508  0391                     	bsf	status, 5	;RP0=1, select bank1
  4509  0391  1683               	bcf	status, 6	;RP1=0, select bank1
  4510  0392  1303               	movf	0+(_Relay6StopTime)^080h+02h,w
  4511  0393  0861               	bcf	status, 5	;RP0=0, select bank0
  4512  0394  1283               	bcf	status, 6	;RP1=0, select bank0
  4513  0395  1303               	movwf	(??_CheckStopTime+0)+0
  4514  0396  00A4               	clrf	(??_CheckStopTime+0)+0+1
  4515  0397  01A5               	movf	(_Counter_100ms+1),w
  4516  0398  085D               	xorwf	1+(??_CheckStopTime+0)+0,w
  4517  0399  0625               	skipz
  4518  039A  1D03               	goto	u1455
  4519  039B  2B9E               	movf	(_Counter_100ms),w
  4520  039C  085C               	xorwf	0+(??_CheckStopTime+0)+0,w
  4521  039D  0624               u1455:
  4522  039E                     
  4523                           	skipz
  4524  039E  1D03               	goto	u1451
  4525  039F  2BA1               	goto	u1450
  4526  03A0  2BA2               u1451:
  4527  03A1                     	goto	l182
  4528  03A1  2BA9               u1450:
  4529  03A2                     	line	182
  4530                           	
  4531                           l2337:	
  4532  03A2                     ;Main.c: 181:     {;Main.c: 182:         StopRelay6OnTime = 0;
  4533                           	clrf	(_StopRelay6OnTime)
  4534  03A2  01E6               	line	183
  4535                           	
  4536                           l2339:	
  4537  03A3                     ;Main.c: 183:         Set_Relay(Relay6, Off);
  4538                           	clrf	(Set_Relay@State)
  4539  03A3  01A0               	movlw	low(05h)
  4540  03A4  3005               	fcall	_Set_Relay
  4541  03A5  118A  255F  118A   	goto	l182
  4542  03A8  2BA9               	line	184
  4543                           ;Main.c: 184:     }
  4544                           	
  4545                           l181:	
  4546  03A9                     	line	185
  4547                           	
  4548                           l182:	
  4549  03A9                     	return
  4550  03A9  0008               	opt stack 0
  4551                           GLOBAL	__end_of_CheckStopTime
  4552                           	__end_of_CheckStopTime:
  4553  03AA                     	signat	_CheckStopTime,89
  4554                           	global	_Set_Relay
  4555                           
  4556 ;; *************** function _Set_Relay *****************
  4557 ;; Defined at:
  4558 ;;		line 64 in file "RelayControl.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  Relay           1    wreg     unsigned char 
  4561 ;;  State           1    0[BANK0 ] unsigned char 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  Relay           1    3[BANK0 ] unsigned char 
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  1    wreg      void 
  4566 ;; Registers used:
  4567 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4573 ;;      Params:         0       1       0       0
  4574 ;;      Locals:         0       1       0       0
  4575 ;;      Temps:          0       2       0       0
  4576 ;;      Totals:         0       4       0       0
  4577 ;;Total ram usage:        4 bytes
  4578 ;; Hardware stack levels used:    1
  4579 ;; Hardware stack levels required when called:    3
  4580 ;; This function calls:
  4581 ;;		Nothing
  4582 ;; This function is called by:
  4583 ;;		_CheckStopTime
  4584 ;;		_Handle_Telegram
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4588                           	file	"RelayControl.c"
  4589                           	line	64
  4590                           global __ptext14
  4591                           __ptext14:	;psect for function _Set_Relay
  4592  055F                     psect	text14
  4593                           	file	"RelayControl.c"
  4594                           	line	64
  4595                           	global	__size_of_Set_Relay
  4596                           	__size_of_Set_Relay	equ	__end_of_Set_Relay-_Set_Relay
  4597  0080                     	
  4598                           _Set_Relay:	
  4599  055F                     ;incstack = 0
  4600                           	opt	stack 3
  4601                           ; Regs used in _Set_Relay: [wreg-fsr0h+status,2+status,0]
  4602                           ;Set_Relay@Relay stored from wreg
  4603                           	bcf	status, 5	;RP0=0, select bank0
  4604  055F  1283               	bcf	status, 6	;RP1=0, select bank0
  4605  0560  1303               	movwf	(Set_Relay@Relay)
  4606  0561  00A3               	line	66
  4607                           	
  4608                           l1979:	
  4609  0562                     ;RelayControl.c: 64: void Set_Relay (unsigned char Relay, unsigned char State);RelayCont
                                 rol.c: 65: {;RelayControl.c: 66:     switch (Relay)
  4610                           	goto	l2031
  4611  0562  2DCA               	line	68
  4612                           ;RelayControl.c: 67:     {;RelayControl.c: 68:         case Relay1:
  4613                           	
  4614                           l380:	
  4615  0563                     	line	69
  4616                           	
  4617                           l1981:	
  4618  0563                     ;RelayControl.c: 69:         if (State == On)
  4619                           		decf	((Set_Relay@State)),w
  4620  0563  0320               	btfss	status,2
  4621  0564  1D03               	goto	u901
  4622  0565  2D67               	goto	u900
  4623  0566  2D68               u901:
  4624  0567                     	goto	l1985
  4625  0567  2D6A               u900:
  4626  0568                     	line	71
  4627                           	
  4628                           l1983:	
  4629  0568                     ;RelayControl.c: 70:         {;RelayControl.c: 71:             PORTAbits.RA0 = 1;
  4630                           	bsf	(5),0	;volatile
  4631  0568  1405               	line	72
  4632                           ;RelayControl.c: 72:         }
  4633                           	goto	l411
  4634  0569  2DDE               	line	73
  4635                           ;RelayControl.c: 73:         else if (State == Off)
  4636                           	
  4637                           l381:	
  4638  056A                     	
  4639                           l1985:	
  4640  056A                     	movf	((Set_Relay@State)),w
  4641  056A  0820               	btfss	status,2
  4642  056B  1D03               	goto	u911
  4643  056C  2D6E               	goto	u910
  4644  056D  2D6F               u911:
  4645  056E                     	goto	l411
  4646  056E  2DDE               u910:
  4647  056F                     	line	75
  4648                           	
  4649                           l1987:	
  4650  056F                     ;RelayControl.c: 74:         {;RelayControl.c: 75:             PORTAbits.RA0 = 0;
  4651                           	bcf	(5),0	;volatile
  4652  056F  1005               	line	76
  4653                           ;RelayControl.c: 76:         }
  4654                           	goto	l411
  4655  0570  2DDE               	line	77
  4656                           ;RelayControl.c: 77:         else
  4657                           	
  4658                           l383:	
  4659  0571                     	goto	l411
  4660  0571  2DDE               	line	80
  4661                           ;RelayControl.c: 78:         {;RelayControl.c: 80:         }
  4662                           	
  4663                           l384:	
  4664  0572                     	goto	l411
  4665  0572  2DDE               	
  4666                           l382:	
  4667  0573                     	line	81
  4668                           ;RelayControl.c: 81:         break;
  4669                           	goto	l411
  4670  0573  2DDE               	line	83
  4671                           ;RelayControl.c: 83:         case Relay2:
  4672                           	
  4673                           l386:	
  4674  0574                     	line	84
  4675                           	
  4676                           l1989:	
  4677  0574                     ;RelayControl.c: 84:         if (State == On)
  4678                           		decf	((Set_Relay@State)),w
  4679  0574  0320               	btfss	status,2
  4680  0575  1D03               	goto	u921
  4681  0576  2D78               	goto	u920
  4682  0577  2D79               u921:
  4683  0578                     	goto	l1993
  4684  0578  2D7B               u920:
  4685  0579                     	line	86
  4686                           	
  4687                           l1991:	
  4688  0579                     ;RelayControl.c: 85:         {;RelayControl.c: 86:             PORTAbits.RA1 = 1;
  4689                           	bsf	(5),1	;volatile
  4690  0579  1485               	line	87
  4691                           ;RelayControl.c: 87:         }
  4692                           	goto	l411
  4693  057A  2DDE               	line	88
  4694                           ;RelayControl.c: 88:         else if (State == Off)
  4695                           	
  4696                           l387:	
  4697  057B                     	
  4698                           l1993:	
  4699  057B                     	movf	((Set_Relay@State)),w
  4700  057B  0820               	btfss	status,2
  4701  057C  1D03               	goto	u931
  4702  057D  2D7F               	goto	u930
  4703  057E  2D80               u931:
  4704  057F                     	goto	l411
  4705  057F  2DDE               u930:
  4706  0580                     	line	90
  4707                           	
  4708                           l1995:	
  4709  0580                     ;RelayControl.c: 89:         {;RelayControl.c: 90:             PORTAbits.RA1 = 0;
  4710                           	bcf	(5),1	;volatile
  4711  0580  1085               	line	91
  4712                           ;RelayControl.c: 91:         }
  4713                           	goto	l411
  4714  0581  2DDE               	line	92
  4715                           ;RelayControl.c: 92:         else
  4716                           	
  4717                           l389:	
  4718  0582                     	goto	l411
  4719  0582  2DDE               	line	95
  4720                           ;RelayControl.c: 93:         {;RelayControl.c: 95:         }
  4721                           	
  4722                           l390:	
  4723  0583                     	goto	l411
  4724  0583  2DDE               	
  4725                           l388:	
  4726  0584                     	line	96
  4727                           ;RelayControl.c: 96:         break;
  4728                           	goto	l411
  4729  0584  2DDE               	line	98
  4730                           ;RelayControl.c: 98:         case Relay3:
  4731                           	
  4732                           l391:	
  4733  0585                     	line	99
  4734                           	
  4735                           l1997:	
  4736  0585                     ;RelayControl.c: 99:         if (State == On)
  4737                           		decf	((Set_Relay@State)),w
  4738  0585  0320               	btfss	status,2
  4739  0586  1D03               	goto	u941
  4740  0587  2D89               	goto	u940
  4741  0588  2D8A               u941:
  4742  0589                     	goto	l2001
  4743  0589  2D8C               u940:
  4744  058A                     	line	101
  4745                           	
  4746                           l1999:	
  4747  058A                     ;RelayControl.c: 100:         {;RelayControl.c: 101:             PORTAbits.RA2 = 1;
  4748                           	bsf	(5),2	;volatile
  4749  058A  1505               	line	102
  4750                           ;RelayControl.c: 102:         }
  4751                           	goto	l411
  4752  058B  2DDE               	line	103
  4753                           ;RelayControl.c: 103:         else if (State == Off)
  4754                           	
  4755                           l392:	
  4756  058C                     	
  4757                           l2001:	
  4758  058C                     	movf	((Set_Relay@State)),w
  4759  058C  0820               	btfss	status,2
  4760  058D  1D03               	goto	u951
  4761  058E  2D90               	goto	u950
  4762  058F  2D91               u951:
  4763  0590                     	goto	l411
  4764  0590  2DDE               u950:
  4765  0591                     	line	105
  4766                           	
  4767                           l2003:	
  4768  0591                     ;RelayControl.c: 104:         {;RelayControl.c: 105:             PORTAbits.RA2 = 0;
  4769                           	bcf	(5),2	;volatile
  4770  0591  1105               	line	106
  4771                           ;RelayControl.c: 106:         }
  4772                           	goto	l411
  4773  0592  2DDE               	line	107
  4774                           ;RelayControl.c: 107:         else
  4775                           	
  4776                           l394:	
  4777  0593                     	goto	l411
  4778  0593  2DDE               	line	110
  4779                           ;RelayControl.c: 108:         {;RelayControl.c: 110:         }
  4780                           	
  4781                           l395:	
  4782  0594                     	goto	l411
  4783  0594  2DDE               	
  4784                           l393:	
  4785  0595                     	line	111
  4786                           ;RelayControl.c: 111:         break;
  4787                           	goto	l411
  4788  0595  2DDE               	line	113
  4789                           ;RelayControl.c: 113:         case Relay4:
  4790                           	
  4791                           l396:	
  4792  0596                     	line	114
  4793                           	
  4794                           l2005:	
  4795  0596                     ;RelayControl.c: 114:         if (State == On)
  4796                           		decf	((Set_Relay@State)),w
  4797  0596  0320               	btfss	status,2
  4798  0597  1D03               	goto	u961
  4799  0598  2D9A               	goto	u960
  4800  0599  2D9B               u961:
  4801  059A                     	goto	l2009
  4802  059A  2D9D               u960:
  4803  059B                     	line	116
  4804                           	
  4805                           l2007:	
  4806  059B                     ;RelayControl.c: 115:         {;RelayControl.c: 116:             PORTCbits.RC0 = 1;
  4807                           	bsf	(7),0	;volatile
  4808  059B  1407               	line	117
  4809                           ;RelayControl.c: 117:         }
  4810                           	goto	l411
  4811  059C  2DDE               	line	118
  4812                           ;RelayControl.c: 118:         else if (State == Off)
  4813                           	
  4814                           l397:	
  4815  059D                     	
  4816                           l2009:	
  4817  059D                     	movf	((Set_Relay@State)),w
  4818  059D  0820               	btfss	status,2
  4819  059E  1D03               	goto	u971
  4820  059F  2DA1               	goto	u970
  4821  05A0  2DA2               u971:
  4822  05A1                     	goto	l411
  4823  05A1  2DDE               u970:
  4824  05A2                     	line	120
  4825                           	
  4826                           l2011:	
  4827  05A2                     ;RelayControl.c: 119:         {;RelayControl.c: 120:             PORTCbits.RC0 = 0;
  4828                           	bcf	(7),0	;volatile
  4829  05A2  1007               	line	121
  4830                           ;RelayControl.c: 121:         }
  4831                           	goto	l411
  4832  05A3  2DDE               	line	122
  4833                           ;RelayControl.c: 122:         else
  4834                           	
  4835                           l399:	
  4836  05A4                     	goto	l411
  4837  05A4  2DDE               	line	125
  4838                           ;RelayControl.c: 123:         {;RelayControl.c: 125:         }
  4839                           	
  4840                           l400:	
  4841  05A5                     	goto	l411
  4842  05A5  2DDE               	
  4843                           l398:	
  4844  05A6                     	line	126
  4845                           ;RelayControl.c: 126:         break;
  4846                           	goto	l411
  4847  05A6  2DDE               	line	128
  4848                           ;RelayControl.c: 128:         case Relay5:
  4849                           	
  4850                           l401:	
  4851  05A7                     	line	129
  4852                           	
  4853                           l2013:	
  4854  05A7                     ;RelayControl.c: 129:         if (State == On)
  4855                           		decf	((Set_Relay@State)),w
  4856  05A7  0320               	btfss	status,2
  4857  05A8  1D03               	goto	u981
  4858  05A9  2DAB               	goto	u980
  4859  05AA  2DAC               u981:
  4860  05AB                     	goto	l2017
  4861  05AB  2DAE               u980:
  4862  05AC                     	line	131
  4863                           	
  4864                           l2015:	
  4865  05AC                     ;RelayControl.c: 130:         {;RelayControl.c: 131:             PORTCbits.RC1 = 1;
  4866                           	bsf	(7),1	;volatile
  4867  05AC  1487               	line	132
  4868                           ;RelayControl.c: 132:         }
  4869                           	goto	l411
  4870  05AD  2DDE               	line	133
  4871                           ;RelayControl.c: 133:         else if (State == Off)
  4872                           	
  4873                           l402:	
  4874  05AE                     	
  4875                           l2017:	
  4876  05AE                     	movf	((Set_Relay@State)),w
  4877  05AE  0820               	btfss	status,2
  4878  05AF  1D03               	goto	u991
  4879  05B0  2DB2               	goto	u990
  4880  05B1  2DB3               u991:
  4881  05B2                     	goto	l411
  4882  05B2  2DDE               u990:
  4883  05B3                     	line	135
  4884                           	
  4885                           l2019:	
  4886  05B3                     ;RelayControl.c: 134:         {;RelayControl.c: 135:             PORTCbits.RC1 = 0;
  4887                           	bcf	(7),1	;volatile
  4888  05B3  1087               	line	136
  4889                           ;RelayControl.c: 136:         }
  4890                           	goto	l411
  4891  05B4  2DDE               	line	137
  4892                           ;RelayControl.c: 137:         else
  4893                           	
  4894                           l404:	
  4895  05B5                     	goto	l411
  4896  05B5  2DDE               	line	140
  4897                           ;RelayControl.c: 138:         {;RelayControl.c: 140:         }
  4898                           	
  4899                           l405:	
  4900  05B6                     	goto	l411
  4901  05B6  2DDE               	
  4902                           l403:	
  4903  05B7                     	line	141
  4904                           ;RelayControl.c: 141:         break;
  4905                           	goto	l411
  4906  05B7  2DDE               	line	143
  4907                           ;RelayControl.c: 143:         case Relay6:
  4908                           	
  4909                           l406:	
  4910  05B8                     	line	144
  4911                           	
  4912                           l2021:	
  4913  05B8                     ;RelayControl.c: 144:         if (State == On)
  4914                           		decf	((Set_Relay@State)),w
  4915  05B8  0320               	btfss	status,2
  4916  05B9  1D03               	goto	u1001
  4917  05BA  2DBC               	goto	u1000
  4918  05BB  2DBD               u1001:
  4919  05BC                     	goto	l2025
  4920  05BC  2DBF               u1000:
  4921  05BD                     	line	146
  4922                           	
  4923                           l2023:	
  4924  05BD                     ;RelayControl.c: 145:         {;RelayControl.c: 146:             PORTCbits.RC2 = 1;
  4925                           	bsf	(7),2	;volatile
  4926  05BD  1507               	line	147
  4927                           ;RelayControl.c: 147:         }
  4928                           	goto	l411
  4929  05BE  2DDE               	line	148
  4930                           ;RelayControl.c: 148:         else if (State == Off)
  4931                           	
  4932                           l407:	
  4933  05BF                     	
  4934                           l2025:	
  4935  05BF                     	movf	((Set_Relay@State)),w
  4936  05BF  0820               	btfss	status,2
  4937  05C0  1D03               	goto	u1011
  4938  05C1  2DC3               	goto	u1010
  4939  05C2  2DC4               u1011:
  4940  05C3                     	goto	l411
  4941  05C3  2DDE               u1010:
  4942  05C4                     	line	150
  4943                           	
  4944                           l2027:	
  4945  05C4                     ;RelayControl.c: 149:         {;RelayControl.c: 150:             PORTCbits.RC2 = 0;
  4946                           	bcf	(7),2	;volatile
  4947  05C4  1107               	line	151
  4948                           ;RelayControl.c: 151:         }
  4949                           	goto	l411
  4950  05C5  2DDE               	line	152
  4951                           ;RelayControl.c: 152:         else
  4952                           	
  4953                           l409:	
  4954  05C6                     	goto	l411
  4955  05C6  2DDE               	line	155
  4956                           ;RelayControl.c: 153:         {;RelayControl.c: 155:         }
  4957                           	
  4958                           l410:	
  4959  05C7                     	goto	l411
  4960  05C7  2DDE               	
  4961                           l408:	
  4962  05C8                     	line	156
  4963                           ;RelayControl.c: 156:         break;
  4964                           	goto	l411
  4965  05C8  2DDE               	line	157
  4966                           	
  4967                           l2029:	
  4968  05C9                     ;RelayControl.c: 157:     }
  4969                           	goto	l411
  4970  05C9  2DDE               	
  4971                           l379:	
  4972  05CA                     	
  4973                           l2031:	
  4974  05CA                     	movf	(Set_Relay@Relay),w
  4975  05CA  0823               	movwf	(??_Set_Relay+0)+0
  4976  05CB  00A1               	clrf	(??_Set_Relay+0)+0+1
  4977  05CC  01A2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4978                           ; Switch size 1, requested type "space"
  4979                           ; Number of cases is 1, Range of values is 0 to 0
  4980                           ; switch strategies available:
  4981                           ; Name         Instructions Cycles
  4982                           ; simple_byte            4     3 (average)
  4983                           ; direct_byte            9     7 (fixed)
  4984                           ; jumptable            260     6 (fixed)
  4985                           ;	Chosen strategy is simple_byte
  4986                           
  4987                           	movf 1+(??_Set_Relay+0)+0,w
  4988  05CD  0822               	opt asmopt_push
  4989                           	opt asmopt_off
  4990                           	xorlw	0^0	; case 0
  4991  05CE  3A00               	skipnz
  4992  05CF  1903               	goto	l2907
  4993  05D0  2DD2               	goto	l411
  4994  05D1  2DDE               	opt asmopt_pop
  4995                           	
  4996                           l2907:	
  4997  05D2                     ; Switch size 1, requested type "space"
  4998                           ; Number of cases is 6, Range of values is 0 to 5
  4999                           ; switch strategies available:
  5000                           ; Name         Instructions Cycles
  5001                           ; direct_byte           19     7 (fixed)
  5002                           ; simple_byte           19    10 (average)
  5003                           ; jumptable            260     6 (fixed)
  5004                           ;	Chosen strategy is direct_byte
  5005                           
  5006                           	movf 0+(??_Set_Relay+0)+0,w
  5007  05D2  0821               	movwf fsr
  5008  05D3  0084               	movlw	6
  5009  05D4  3006               	subwf	fsr,w
  5010  05D5  0204               skipnc
  5011  05D6  1803               goto l411
  5012  05D7  2DDE               movlw high(S2909)
  5013  05D8  3008               movwf pclath
  5014  05D9  008A               	clrc
  5015  05DA  1003               	rlf fsr,w
  5016  05DB  0D04               	addlw low(S2909)
  5017  05DC  3E0C               	movwf pc
  5018  05DD  0082               psect	swtext2,local,class=CONST,delta=2
  5019                           global __pswtext2
  5020                           __pswtext2:
  5021  080C                     S2909:
  5022  080C                     	ljmp	l1981
  5023  080C  118A  2D63         	ljmp	l1989
  5024  080E  118A  2D74         	ljmp	l1997
  5025  0810  118A  2D85         	ljmp	l2005
  5026  0812  118A  2D96         	ljmp	l2013
  5027  0814  118A  2DA7         	ljmp	l2021
  5028  0816  118A  2DB8         psect	text14
  5029                           
  5030                           	
  5031                           l385:	
  5032  05DE                     	line	159
  5033                           	
  5034                           l411:	
  5035  05DE                     	return
  5036  05DE  0008               	opt stack 0
  5037                           GLOBAL	__end_of_Set_Relay
  5038                           	__end_of_Set_Relay:
  5039  05DF                     	signat	_Set_Relay,8313
  5040                           	global	_Handle_Interrupts
  5041                           
  5042 ;; *************** function _Handle_Interrupts *****************
  5043 ;; Defined at:
  5044 ;;		line 440 in file "Main.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;		None
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  dummy           1   12[COMMON] unsigned char 
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  1    wreg      void 
  5051 ;; Registers used:
  5052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5058 ;;      Params:         0       0       0       0
  5059 ;;      Locals:         1       0       0       0
  5060 ;;      Temps:          5       0       0       0
  5061 ;;      Totals:         6       0       0       0
  5062 ;;Total ram usage:        6 bytes
  5063 ;; Hardware stack levels used:    1
  5064 ;; Hardware stack levels required when called:    2
  5065 ;; This function calls:
  5066 ;;		_HandleConfigByte
  5067 ;;		_HandleTelegramByte
  5068 ;;		_Timer_Interrupt
  5069 ;;		_WriteByteFromBuffer
  5070 ;; This function is called by:
  5071 ;;		Interrupt level 1
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5075                           	file	"Main.c"
  5076                           	line	440
  5077                           global __ptext15
  5078                           __ptext15:	;psect for function _Handle_Interrupts
  5079  06BD                     psect	text15
  5080                           	file	"Main.c"
  5081                           	line	440
  5082                           	global	__size_of_Handle_Interrupts
  5083                           	__size_of_Handle_Interrupts	equ	__end_of_Handle_Interrupts-_Handle_Interrupts
  5084  0056                     	
  5085                           _Handle_Interrupts:	
  5086  06BD                     ;incstack = 0
  5087                           	opt	stack 2
  5088                           ; Regs used in _Handle_Interrupts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5089                           psect	intentry,class=CODE,delta=2
  5090                           global __pintentry
  5091                           __pintentry:
  5092  0004                     global interrupt_function
  5093                           interrupt_function:
  5094  0004                     	global saved_w
  5095                           	saved_w	set	btemp+0
  5096  007E                     	movwf	saved_w
  5097  0004  00FE               	swapf	status,w
  5098  0005  0E03               	movwf	(??_Handle_Interrupts+2)
  5099  0006  00F9               	movf	fsr0,w
  5100  0007  0804               	movwf	(??_Handle_Interrupts+3)
  5101  0008  00FA               	movf	pclath,w
  5102  0009  080A               	movwf	(??_Handle_Interrupts+4)
  5103  000A  00FB               	ljmp	_Handle_Interrupts
  5104  000B  118A  2EBD         psect	text15
  5105                           	line	442
  5106                           	
  5107                           i1l2601:	
  5108  06BD                     ;Main.c: 442:     if (PIR1bits.TXIF)
  5109                           	bcf	status, 5	;RP0=0, select bank0
  5110  06BD  1283               	bcf	status, 6	;RP1=0, select bank0
  5111  06BE  1303               	btfss	(12),1	;volatile
  5112  06BF  1C8C               	goto	u171_21
  5113  06C0  2EC2               	goto	u171_20
  5114  06C1  2EC3               u171_21:
  5115  06C2                     	goto	i1l2605
  5116  06C2  2EC7               u171_20:
  5117  06C3                     	line	444
  5118                           	
  5119                           i1l2603:	
  5120  06C3                     ;Main.c: 443:     {;Main.c: 444:         WriteByteFromBuffer();
  5121                           	fcall	_WriteByteFromBuffer
  5122  06C3  158A  27D5  118A   	goto	i1l2605
  5123  06C6  2EC7               	line	445
  5124                           ;Main.c: 445:     }
  5125                           	
  5126                           i1l239:	
  5127  06C7                     	line	447
  5128                           	
  5129                           i1l2605:	
  5130  06C7                     ;Main.c: 447:     if (PIR1bits.RCIF)
  5131                           	bcf	status, 5	;RP0=0, select bank0
  5132  06C7  1283               	bcf	status, 6	;RP1=0, select bank0
  5133  06C8  1303               	btfss	(12),5	;volatile
  5134  06C9  1E8C               	goto	u172_21
  5135  06CA  2ECC               	goto	u172_20
  5136  06CB  2ECD               u172_21:
  5137  06CC                     	goto	i1l240
  5138  06CC  2EEA               u172_20:
  5139  06CD                     	goto	i1l2615
  5140  06CD  2ED8               	line	449
  5141                           	
  5142                           i1l2607:	
  5143  06CE                     ;Main.c: 448:     {;Main.c: 449:         switch (CurrentMode)
  5144                           	goto	i1l2615
  5145  06CE  2ED8               	line	451
  5146                           ;Main.c: 450:         {;Main.c: 451:             case Running:
  5147                           	
  5148                           i1l242:	
  5149  06CF                     	line	452
  5150                           	
  5151                           i1l2609:	
  5152  06CF                     ;Main.c: 452:                 HandleTelegramByte();
  5153                           	fcall	_HandleTelegramByte
  5154  06CF  118A  2440  118A   	line	453
  5155                           ;Main.c: 453:                 break;
  5156                           	goto	i1l240
  5157  06D2  2EEA               	line	455
  5158                           ;Main.c: 455:             case Config:
  5159                           	
  5160                           i1l244:	
  5161  06D3                     	line	456
  5162                           	
  5163                           i1l2611:	
  5164  06D3                     ;Main.c: 456:                 HandleConfigByte();
  5165                           	fcall	_HandleConfigByte
  5166  06D3  118A  24D4  118A   	line	457
  5167                           ;Main.c: 457:                 break;
  5168                           	goto	i1l240
  5169  06D6  2EEA               	line	458
  5170                           	
  5171                           i1l2613:	
  5172  06D7                     ;Main.c: 458:         }
  5173                           	goto	i1l240
  5174  06D7  2EEA               	
  5175                           i1l241:	
  5176  06D8                     	
  5177                           i1l2615:	
  5178  06D8                     	bcf	status, 5	;RP0=0, select bank0
  5179  06D8  1283               	bcf	status, 6	;RP1=0, select bank0
  5180  06D9  1303               	movf	(_CurrentMode),w
  5181  06DA  0865               	movwf	(??_Handle_Interrupts+0)+0
  5182  06DB  00F7               	clrf	(??_Handle_Interrupts+0)+0+1
  5183  06DC  01F8               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5184                           ; Switch size 1, requested type "space"
  5185                           ; Number of cases is 1, Range of values is 0 to 0
  5186                           ; switch strategies available:
  5187                           ; Name         Instructions Cycles
  5188                           ; simple_byte            4     3 (average)
  5189                           ; direct_byte            9     7 (fixed)
  5190                           ; jumptable            260     6 (fixed)
  5191                           ;	Chosen strategy is simple_byte
  5192                           
  5193                           	movf 1+(??_Handle_Interrupts+0)+0,w
  5194  06DD  0878               	opt asmopt_push
  5195                           	opt asmopt_off
  5196                           	xorlw	0^0	; case 0
  5197  06DE  3A00               	skipnz
  5198  06DF  1903               	goto	i1l2911
  5199  06E0  2EE2               	goto	i1l240
  5200  06E1  2EEA               	opt asmopt_pop
  5201                           	
  5202                           i1l2911:	
  5203  06E2                     ; Switch size 1, requested type "space"
  5204                           ; Number of cases is 2, Range of values is 0 to 1
  5205                           ; switch strategies available:
  5206                           ; Name         Instructions Cycles
  5207                           ; simple_byte            7     4 (average)
  5208                           ; direct_byte           11     7 (fixed)
  5209                           ; jumptable            260     6 (fixed)
  5210                           ;	Chosen strategy is simple_byte
  5211                           
  5212                           	movf 0+(??_Handle_Interrupts+0)+0,w
  5213  06E2  0877               	opt asmopt_push
  5214                           	opt asmopt_off
  5215                           	xorlw	0^0	; case 0
  5216  06E3  3A00               	skipnz
  5217  06E4  1903               	goto	i1l2609
  5218  06E5  2ECF               	xorlw	1^0	; case 1
  5219  06E6  3A01               	skipnz
  5220  06E7  1903               	goto	i1l2611
  5221  06E8  2ED3               	goto	i1l240
  5222  06E9  2EEA               	opt asmopt_pop
  5223                           
  5224                           	
  5225                           i1l243:	
  5226  06EA                     	line	460
  5227                           ;Main.c: 460:     }
  5228                           	
  5229                           i1l240:	
  5230  06EA                     	line	462
  5231                           ;Main.c: 462:     if (INTCONbits.RAIF)
  5232                           	btfss	(11),0	;volatile
  5233  06EA  1C0B               	goto	u173_21
  5234  06EB  2EED               	goto	u173_20
  5235  06EC  2EEE               u173_21:
  5236  06ED                     	goto	i1l2629
  5237  06ED  2EFF               u173_20:
  5238  06EE                     	line	465
  5239                           	
  5240                           i1l2617:	
  5241  06EE                     ;Main.c: 463:     {;Main.c: 465:         INTCONbits.RAIE = 0;
  5242                           	bcf	(11),3	;volatile
  5243  06EE  118B               	line	466
  5244                           	
  5245                           i1l2619:	
  5246  06EF                     ;Main.c: 466:         unsigned char dummy = PORTA;
  5247                           	bcf	status, 5	;RP0=0, select bank0
  5248  06EF  1283               	bcf	status, 6	;RP1=0, select bank0
  5249  06F0  1303               	movf	(5),w	;volatile
  5250  06F1  0805               	movwf	(??_Handle_Interrupts+0)+0
  5251  06F2  00F7               	movf	(??_Handle_Interrupts+0)+0,w
  5252  06F3  0877               	movwf	(Handle_Interrupts@dummy)
  5253  06F4  00FC               	line	467
  5254                           	
  5255                           i1l2621:	
  5256  06F5                     ;Main.c: 467:         INTCONbits.RAIF = 0;
  5257                           	bcf	(11),0	;volatile
  5258  06F5  100B               	line	470
  5259                           	
  5260                           i1l2623:	
  5261  06F6                     ;Main.c: 470:         CurrentMode = Config;
  5262                           	clrf	(_CurrentMode)
  5263  06F6  01E5               	incf	(_CurrentMode),f
  5264  06F7  0AE5               	line	473
  5265                           	
  5266                           i1l2625:	
  5267  06F8                     ;Main.c: 473:         TRISAbits.TRISA5 = 0;
  5268                           	bsf	status, 5	;RP0=1, select bank1
  5269  06F8  1683               	bcf	status, 6	;RP1=0, select bank1
  5270  06F9  1303               	bcf	(133)^080h,5	;volatile
  5271  06FA  1285               	line	475
  5272                           	
  5273                           i1l2627:	
  5274  06FB                     ;Main.c: 475:         PORTAbits.RA5 = 0;
  5275                           	bcf	status, 5	;RP0=0, select bank0
  5276  06FB  1283               	bcf	status, 6	;RP1=0, select bank0
  5277  06FC  1303               	bcf	(5),5	;volatile
  5278  06FD  1285               	goto	i1l2629
  5279  06FE  2EFF               	line	477
  5280                           ;Main.c: 477:     }
  5281                           	
  5282                           i1l245:	
  5283  06FF                     	line	479
  5284                           	
  5285                           i1l2629:	
  5286  06FF                     ;Main.c: 479:     if (PIR1bits.TMR1IF)
  5287                           	bcf	status, 5	;RP0=0, select bank0
  5288  06FF  1283               	bcf	status, 6	;RP1=0, select bank0
  5289  0700  1303               	btfss	(12),0	;volatile
  5290  0701  1C0C               	goto	u174_21
  5291  0702  2F04               	goto	u174_20
  5292  0703  2F05               u174_21:
  5293  0704                     	goto	i1l247
  5294  0704  2F0A               u174_20:
  5295  0705                     	line	481
  5296                           	
  5297                           i1l2631:	
  5298  0705                     ;Main.c: 480:     {;Main.c: 481:         PIR1bits.TMR1IF = 0;
  5299                           	bcf	(12),0	;volatile
  5300  0705  100C               	line	482
  5301                           	
  5302                           i1l2633:	
  5303  0706                     ;Main.c: 482:         Timer_Interrupt();
  5304                           	fcall	_Timer_Interrupt
  5305  0706  118A  27C7  118A   	goto	i1l247
  5306  0709  2F0A               	line	484
  5307                           ;Main.c: 484:     }
  5308                           	
  5309                           i1l246:	
  5310  070A                     	line	485
  5311                           	
  5312                           i1l247:	
  5313  070A                     	movf	(??_Handle_Interrupts+4),w
  5314  070A  087B               	movwf	pclath
  5315  070B  008A               	movf	(??_Handle_Interrupts+3),w
  5316  070C  087A               	movwf	fsr0
  5317  070D  0084               	swapf	(??_Handle_Interrupts+2)^0FFFFFF80h,w
  5318  070E  0E79               	movwf	status
  5319  070F  0083               	swapf	saved_w,f
  5320  0710  0EFE               	swapf	saved_w,w
  5321  0711  0E7E               	retfie
  5322  0712  0009               	opt stack 0
  5323                           GLOBAL	__end_of_Handle_Interrupts
  5324                           	__end_of_Handle_Interrupts:
  5325  0713                     	signat	_Handle_Interrupts,89
  5326                           	global	_WriteByteFromBuffer
  5327                           
  5328 ;; *************** function _WriteByteFromBuffer *****************
  5329 ;; Defined at:
  5330 ;;		line 138 in file "Eusart.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;		None
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;		None
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  1    wreg      void 
  5337 ;; Registers used:
  5338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5344 ;;      Params:         0       0       0       0
  5345 ;;      Locals:         0       0       0       0
  5346 ;;      Temps:          1       0       0       0
  5347 ;;      Totals:         1       0       0       0
  5348 ;;Total ram usage:        1 bytes
  5349 ;; Hardware stack levels used:    1
  5350 ;; Hardware stack levels required when called:    1
  5351 ;; This function calls:
  5352 ;;		_Write_Byte
  5353 ;; This function is called by:
  5354 ;;		_Handle_Interrupts
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5358                           	file	"Eusart.c"
  5359                           	line	138
  5360                           global __ptext16
  5361                           __ptext16:	;psect for function _WriteByteFromBuffer
  5362  0FD5                     psect	text16
  5363                           	file	"Eusart.c"
  5364                           	line	138
  5365                           	global	__size_of_WriteByteFromBuffer
  5366                           	__size_of_WriteByteFromBuffer	equ	__end_of_WriteByteFromBuffer-_WriteByteFromBuffer
  5367  002B                     	
  5368                           _WriteByteFromBuffer:	
  5369  0FD5                     ;incstack = 0
  5370                           	opt	stack 2
  5371                           ; Regs used in _WriteByteFromBuffer: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5372                           	line	140
  5373                           	
  5374                           i1l2513:	
  5375  0FD5                     ;Eusart.c: 140:     if (BufferHead != BufferTail)
  5376                           	movf	(_BufferHead),w
  5377  0FD5  087D               	bcf	status, 5	;RP0=0, select bank0
  5378  0FD6  1283               	bcf	status, 6	;RP1=0, select bank0
  5379  0FD7  1303               	xorwf	(_BufferTail),w
  5380  0FD8  0663               	skipnz
  5381  0FD9  1903               	goto	u157_21
  5382  0FDA  2FDC               	goto	u157_20
  5383  0FDB  2FDD               u157_21:
  5384  0FDC                     	goto	i1l2523
  5385  0FDC  2FF5               u157_20:
  5386  0FDD                     	line	142
  5387                           	
  5388                           i1l2515:	
  5389  0FDD                     ;Eusart.c: 141:     {;Eusart.c: 142:         Write_Byte(SendBuffer[BufferTail]);
  5390                           	movf	(_BufferTail),w
  5391  0FDD  0863               	addlw	low(_SendBuffer|((0x0)<<8))&0ffh
  5392  0FDE  3EA0               	movwf	fsr0
  5393  0FDF  0084               	bcf	status, 7	;select IRP bank1
  5394  0FE0  1383               	movf	indf,w
  5395  0FE1  0800               	fcall	_Write_Byte
  5396  0FE2  158A  271F  158A   	line	144
  5397                           	
  5398                           i1l2517:	
  5399  0FE5                     ;Eusart.c: 144:         if (BufferTail == 39)
  5400                           		movlw	39
  5401  0FE5  3027               	bcf	status, 5	;RP0=0, select bank0
  5402  0FE6  1283               	bcf	status, 6	;RP1=0, select bank0
  5403  0FE7  1303               	xorwf	((_BufferTail)),w
  5404  0FE8  0663               	btfss	status,2
  5405  0FE9  1D03               	goto	u158_21
  5406  0FEA  2FEC               	goto	u158_20
  5407  0FEB  2FED               u158_21:
  5408  0FEC                     	goto	i1l2521
  5409  0FEC  2FEF               u158_20:
  5410  0FED                     	line	146
  5411                           	
  5412                           i1l2519:	
  5413  0FED                     ;Eusart.c: 145:         {;Eusart.c: 146:             BufferTail = 0;
  5414                           	clrf	(_BufferTail)
  5415  0FED  01E3               	line	147
  5416                           ;Eusart.c: 147:         }
  5417                           	goto	i1l2523
  5418  0FEE  2FF5               	line	148
  5419                           ;Eusart.c: 148:         else
  5420                           	
  5421                           i1l326:	
  5422  0FEF                     	line	150
  5423                           	
  5424                           i1l2521:	
  5425  0FEF                     ;Eusart.c: 149:         {;Eusart.c: 150:             BufferTail++;
  5426                           	movlw	low(01h)
  5427  0FEF  3001               	movwf	(??_WriteByteFromBuffer+0)+0
  5428  0FF0  00F1               	movf	(??_WriteByteFromBuffer+0)+0,w
  5429  0FF1  0871               	addwf	(_BufferTail),f
  5430  0FF2  07E3               	goto	i1l2523
  5431  0FF3  2FF5               	line	151
  5432                           ;Eusart.c: 151:         }
  5433                           	
  5434                           i1l327:	
  5435  0FF4                     	goto	i1l2523
  5436  0FF4  2FF5               	line	153
  5437                           ;Eusart.c: 153:     }
  5438                           	
  5439                           i1l325:	
  5440  0FF5                     	line	155
  5441                           	
  5442                           i1l2523:	
  5443  0FF5                     ;Eusart.c: 155:     if (BufferHead == BufferTail)
  5444                           	movf	(_BufferHead),w
  5445  0FF5  087D               	xorwf	(_BufferTail),w
  5446  0FF6  0663               	skipz
  5447  0FF7  1D03               	goto	u159_21
  5448  0FF8  2FFA               	goto	u159_20
  5449  0FF9  2FFB               u159_21:
  5450  0FFA                     	goto	i1l329
  5451  0FFA  2FFF               u159_20:
  5452  0FFB                     	line	157
  5453                           	
  5454                           i1l2525:	
  5455  0FFB                     ;Eusart.c: 156:     {;Eusart.c: 157:         PIE1bits.TXIE = 0;
  5456                           	bsf	status, 5	;RP0=1, select bank1
  5457  0FFB  1683               	bcf	status, 6	;RP1=0, select bank1
  5458  0FFC  1303               	bcf	(140)^080h,1	;volatile
  5459  0FFD  108C               	goto	i1l329
  5460  0FFE  2FFF               	line	158
  5461                           ;Eusart.c: 158:     }
  5462                           	
  5463                           i1l328:	
  5464  0FFF                     	line	160
  5465                           	
  5466                           i1l329:	
  5467  0FFF                     	return
  5468  0FFF  0008               	opt stack 0
  5469                           GLOBAL	__end_of_WriteByteFromBuffer
  5470                           	__end_of_WriteByteFromBuffer:
  5471  1000                     	signat	_WriteByteFromBuffer,89
  5472                           	global	_Write_Byte
  5473                           
  5474 ;; *************** function _Write_Byte *****************
  5475 ;; Defined at:
  5476 ;;		line 113 in file "Eusart.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  Data            1    wreg     unsigned char 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;  Data            1    0[COMMON] unsigned char 
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		wreg
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5490 ;;      Params:         0       0       0       0
  5491 ;;      Locals:         1       0       0       0
  5492 ;;      Temps:          0       0       0       0
  5493 ;;      Totals:         1       0       0       0
  5494 ;;Total ram usage:        1 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; This function calls:
  5497 ;;		Nothing
  5498 ;; This function is called by:
  5499 ;;		_WriteByteFromBuffer
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5503                           	line	113
  5504                           global __ptext17
  5505                           __ptext17:	;psect for function _Write_Byte
  5506  0F1F                     psect	text17
  5507                           	file	"Eusart.c"
  5508                           	line	113
  5509                           	global	__size_of_Write_Byte
  5510                           	__size_of_Write_Byte	equ	__end_of_Write_Byte-_Write_Byte
  5511  0006                     	
  5512                           _Write_Byte:	
  5513  0F1F                     ;incstack = 0
  5514                           	opt	stack 2
  5515                           ; Regs used in _Write_Byte: [wreg]
  5516                           ;Write_Byte@Data stored from wreg
  5517                           	movwf	(Write_Byte@Data)
  5518  0F1F  00F0               	line	117
  5519                           	
  5520                           i1l2117:	
  5521  0F20                     ;Eusart.c: 113: void Write_Byte (unsigned char Data);Eusart.c: 114: {;Eusart.c: 117:    
                                  TXREG = Data;
  5522                           	movf	(Write_Byte@Data),w
  5523  0F20  0870               	bcf	status, 5	;RP0=0, select bank0
  5524  0F21  1283               	bcf	status, 6	;RP1=0, select bank0
  5525  0F22  1303               	movwf	(21)	;volatile
  5526  0F23  0095               	line	118
  5527                           	
  5528                           i1l317:	
  5529  0F24                     	return
  5530  0F24  0008               	opt stack 0
  5531                           GLOBAL	__end_of_Write_Byte
  5532                           	__end_of_Write_Byte:
  5533  0F25                     	signat	_Write_Byte,4217
  5534                           	global	_Timer_Interrupt
  5535                           
  5536 ;; *************** function _Timer_Interrupt *****************
  5537 ;; Defined at:
  5538 ;;		line 74 in file "Timer.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;		None
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;		None
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  1    wreg      void 
  5545 ;; Registers used:
  5546 ;;		wreg, status,2, status,0
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5552 ;;      Params:         0       0       0       0
  5553 ;;      Locals:         0       0       0       0
  5554 ;;      Temps:          0       0       0       0
  5555 ;;      Totals:         0       0       0       0
  5556 ;;Total ram usage:        0 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; This function calls:
  5559 ;;		Nothing
  5560 ;; This function is called by:
  5561 ;;		_Handle_Interrupts
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5565                           	file	"Timer.c"
  5566                           	line	74
  5567                           global __ptext18
  5568                           __ptext18:	;psect for function _Timer_Interrupt
  5569  07C7                     psect	text18
  5570                           	file	"Timer.c"
  5571                           	line	74
  5572                           	global	__size_of_Timer_Interrupt
  5573                           	__size_of_Timer_Interrupt	equ	__end_of_Timer_Interrupt-_Timer_Interrupt
  5574  0037                     	
  5575                           _Timer_Interrupt:	
  5576  07C7                     ;incstack = 0
  5577                           	opt	stack 3
  5578                           ; Regs used in _Timer_Interrupt: [wreg+status,2+status,0]
  5579                           	line	76
  5580                           	
  5581                           i1l2213:	
  5582  07C7                     ;Timer.c: 76:     TMR1H = 160;
  5583                           	movlw	low(0A0h)
  5584  07C7  30A0               	bcf	status, 5	;RP0=0, select bank0
  5585  07C8  1283               	bcf	status, 6	;RP1=0, select bank0
  5586  07C9  1303               	movwf	(15)	;volatile
  5587  07CA  008F               	line	77
  5588                           ;Timer.c: 77:     TMR1L = 138;
  5589                           	movlw	low(08Ah)
  5590  07CB  308A               	movwf	(14)	;volatile
  5591  07CC  008E               	line	78
  5592                           ;Timer.c: 78:     Counter_100ms++;
  5593                           	movlw	01h
  5594  07CD  3001               	addwf	(_Counter_100ms),f
  5595  07CE  07DC               	skipnc
  5596  07CF  1803               	incf	(_Counter_100ms+1),f
  5597  07D0  0ADD               	movlw	0
  5598  07D1  3000               	addwf	(_Counter_100ms+1),f
  5599  07D2  07DD               	line	82
  5600                           	
  5601                           i1l2215:	
  5602  07D3                     ;Timer.c: 82:     if (Counter_100ms == 10)
  5603                           		movlw	10
  5604  07D3  300A               	xorwf	((_Counter_100ms)),w
  5605  07D4  065C               iorwf	((_Counter_100ms+1)),w
  5606  07D5  045D               	btfss	status,2
  5607  07D6  1D03               	goto	u118_21
  5608  07D7  2FD9               	goto	u118_20
  5609  07D8  2FDA               u118_21:
  5610  07D9                     	goto	i1l63
  5611  07D9  2FFD               u118_20:
  5612  07DA                     	line	85
  5613                           	
  5614                           i1l2217:	
  5615  07DA                     ;Timer.c: 83:     {;Timer.c: 85:         Counter_100ms = 0;
  5616                           	clrf	(_Counter_100ms)
  5617  07DA  01DC               	clrf	(_Counter_100ms+1)
  5618  07DB  01DD               	line	86
  5619                           	
  5620                           i1l2219:	
  5621  07DC                     ;Timer.c: 86:         Counter_1sec ++;
  5622                           	movlw	01h
  5623  07DC  3001               	addwf	(_Counter_1sec),f
  5624  07DD  07DA               	skipnc
  5625  07DE  1803               	incf	(_Counter_1sec+1),f
  5626  07DF  0ADB               	movlw	0
  5627  07E0  3000               	addwf	(_Counter_1sec+1),f
  5628  07E1  07DB               	line	88
  5629                           	
  5630                           i1l2221:	
  5631  07E2                     ;Timer.c: 88:         if (Counter_1sec == 10)
  5632                           		movlw	10
  5633  07E2  300A               	xorwf	((_Counter_1sec)),w
  5634  07E3  065A               iorwf	((_Counter_1sec+1)),w
  5635  07E4  045B               	btfss	status,2
  5636  07E5  1D03               	goto	u119_21
  5637  07E6  2FE8               	goto	u119_20
  5638  07E7  2FE9               u119_21:
  5639  07E8                     	goto	i1l63
  5640  07E8  2FFD               u119_20:
  5641  07E9                     	line	91
  5642                           	
  5643                           i1l2223:	
  5644  07E9                     ;Timer.c: 89:         {;Timer.c: 91:             Counter_1sec = 0;
  5645                           	clrf	(_Counter_1sec)
  5646  07E9  01DA               	clrf	(_Counter_1sec+1)
  5647  07EA  01DB               	line	92
  5648                           	
  5649                           i1l2225:	
  5650  07EB                     ;Timer.c: 92:             Counter_10sec ++;
  5651                           	movlw	01h
  5652  07EB  3001               	addwf	(_Counter_10sec),f
  5653  07EC  07D8               	skipnc
  5654  07ED  1803               	incf	(_Counter_10sec+1),f
  5655  07EE  0AD9               	movlw	0
  5656  07EF  3000               	addwf	(_Counter_10sec+1),f
  5657  07F0  07D9               	line	94
  5658                           	
  5659                           i1l2227:	
  5660  07F1                     ;Timer.c: 94:             if (Counter_10sec == 10)
  5661                           		movlw	10
  5662  07F1  300A               	xorwf	((_Counter_10sec)),w
  5663  07F2  0658               iorwf	((_Counter_10sec+1)),w
  5664  07F3  0459               	btfss	status,2
  5665  07F4  1D03               	goto	u120_21
  5666  07F5  2FF7               	goto	u120_20
  5667  07F6  2FF8               u120_21:
  5668  07F7                     	goto	i1l63
  5669  07F7  2FFD               u120_20:
  5670  07F8                     	line	97
  5671                           	
  5672                           i1l2229:	
  5673  07F8                     ;Timer.c: 95:             {;Timer.c: 97:                 Counter_10sec = 0;
  5674                           	clrf	(_Counter_10sec)
  5675  07F8  01D8               	clrf	(_Counter_10sec+1)
  5676  07F9  01D9               	goto	i1l63
  5677  07FA  2FFD               	line	98
  5678                           ;Timer.c: 98:             }
  5679                           	
  5680                           i1l62:	
  5681  07FB                     	goto	i1l63
  5682  07FB  2FFD               	line	100
  5683                           ;Timer.c: 100:         }
  5684                           	
  5685                           i1l61:	
  5686  07FC                     	goto	i1l63
  5687  07FC  2FFD               	line	102
  5688                           ;Timer.c: 102:     }
  5689                           	
  5690                           i1l60:	
  5691  07FD                     	line	103
  5692                           	
  5693                           i1l63:	
  5694  07FD                     	return
  5695  07FD  0008               	opt stack 0
  5696                           GLOBAL	__end_of_Timer_Interrupt
  5697                           	__end_of_Timer_Interrupt:
  5698  07FE                     	signat	_Timer_Interrupt,89
  5699                           	global	_HandleTelegramByte
  5700                           
  5701 ;; *************** function _HandleTelegramByte *****************
  5702 ;; Defined at:
  5703 ;;		line 3 in file "TelegramInterpreter.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;		None
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;  Byte            1    4[COMMON] unsigned char 
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  1    wreg      void 
  5710 ;; Registers used:
  5711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5717 ;;      Params:         0       0       0       0
  5718 ;;      Locals:         1       0       0       0
  5719 ;;      Temps:          2       0       0       0
  5720 ;;      Totals:         3       0       0       0
  5721 ;;Total ram usage:        3 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    1
  5724 ;; This function calls:
  5725 ;;		_Read_Byte
  5726 ;; This function is called by:
  5727 ;;		_Handle_Interrupts
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5731                           	file	"TelegramInterpreter.c"
  5732                           	line	3
  5733                           global __ptext19
  5734                           __ptext19:	;psect for function _HandleTelegramByte
  5735  0440                     psect	text19
  5736                           	file	"TelegramInterpreter.c"
  5737                           	line	3
  5738                           	global	__size_of_HandleTelegramByte
  5739                           	__size_of_HandleTelegramByte	equ	__end_of_HandleTelegramByte-_HandleTelegramByte
  5740  0094                     	
  5741                           _HandleTelegramByte:	
  5742  0440                     ;incstack = 0
  5743                           	opt	stack 2
  5744                           ; Regs used in _HandleTelegramByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5745                           	line	10
  5746                           	
  5747                           i1l2527:	
  5748  0440                     ;TelegramInterpreter.c: 5:     unsigned char Byte;;TelegramInterpreter.c: 6:     static 
                                 unsigned char ByteCounter = Idle;;TelegramInterpreter.c: 7:     static unsigned char Com
                                 mandCounter = 0;;TelegramInterpreter.c: 8:     static unsigned char Lenght;;TelegramInte
                                 rpreter.c: 10:     Byte = Read_Byte();
  5749                           	fcall	_Read_Byte
  5750  0440  158A  272D  118A   	movwf	(??_HandleTelegramByte+0)+0
  5751  0443  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5752  0444  0872               	movwf	(HandleTelegramByte@Byte)
  5753  0445  00F4               	line	12
  5754                           	
  5755                           i1l2529:	
  5756  0446                     ;TelegramInterpreter.c: 12:     if (Byte == ':')
  5757                           		movlw	58
  5758  0446  303A               	xorwf	((HandleTelegramByte@Byte)),w
  5759  0447  0674               	btfss	status,2
  5760  0448  1D03               	goto	u160_21
  5761  0449  2C4B               	goto	u160_20
  5762  044A  2C4C               u160_21:
  5763  044B                     	goto	i1l2533
  5764  044B  2C59               u160_20:
  5765  044C                     	line	14
  5766                           	
  5767                           i1l2531:	
  5768  044C                     ;TelegramInterpreter.c: 13:     {;TelegramInterpreter.c: 14:         Telegram.Start = By
                                 te;
  5769                           	movf	(HandleTelegramByte@Byte),w
  5770  044C  0874               	movwf	(??_HandleTelegramByte+0)+0
  5771  044D  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5772  044E  0872               	bsf	status, 5	;RP0=1, select bank1
  5773  044F  1683               	bcf	status, 6	;RP1=0, select bank1
  5774  0450  1303               	movwf	(_Telegram)^080h
  5775  0451  00C8               	line	15
  5776                           ;TelegramInterpreter.c: 15:         ByteCounter = Address;
  5777                           	movlw	low(02h)
  5778  0452  3002               	movwf	(??_HandleTelegramByte+0)+0
  5779  0453  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5780  0454  0872               	bcf	status, 5	;RP0=0, select bank0
  5781  0455  1283               	bcf	status, 6	;RP1=0, select bank0
  5782  0456  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5783  0457  00E2               	line	16
  5784                           ;TelegramInterpreter.c: 16:     }
  5785                           	goto	i1l482
  5786  0458  2CD3               	line	17
  5787                           ;TelegramInterpreter.c: 17:     else if (ByteCounter > Start)
  5788                           	
  5789                           i1l471:	
  5790  0459                     	
  5791                           i1l2533:	
  5792  0459                     	movlw	low(02h)
  5793  0459  3002               	bcf	status, 5	;RP0=0, select bank0
  5794  045A  1283               	bcf	status, 6	;RP1=0, select bank0
  5795  045B  1303               	subwf	(HandleTelegramByte@ByteCounter),w
  5796  045C  0262               	skipc
  5797  045D  1C03               	goto	u161_21
  5798  045E  2C60               	goto	u161_20
  5799  045F  2C61               u161_21:
  5800  0460                     	goto	i1l482
  5801  0460  2CD3               u161_20:
  5802  0461                     	goto	i1l2561
  5803  0461  2CB8               	line	19
  5804                           	
  5805                           i1l2535:	
  5806  0462                     ;TelegramInterpreter.c: 18:     {;TelegramInterpreter.c: 19:         switch (ByteCounter
                                 )
  5807                           	goto	i1l2561
  5808  0462  2CB8               	line	21
  5809                           ;TelegramInterpreter.c: 20:         {;TelegramInterpreter.c: 21:             case Addres
                                 s:
  5810                           	
  5811                           i1l475:	
  5812  0463                     	line	22
  5813                           	
  5814                           i1l2537:	
  5815  0463                     ;TelegramInterpreter.c: 22:                 Telegram.Address = Byte;
  5816                           	movf	(HandleTelegramByte@Byte),w
  5817  0463  0874               	movwf	(??_HandleTelegramByte+0)+0
  5818  0464  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5819  0465  0872               	bsf	status, 5	;RP0=1, select bank1
  5820  0466  1683               	bcf	status, 6	;RP1=0, select bank1
  5821  0467  1303               	movwf	0+(_Telegram)^080h+01h
  5822  0468  00C9               	line	23
  5823                           ;TelegramInterpreter.c: 23:                 ByteCounter = Commandlength;
  5824                           	movlw	low(03h)
  5825  0469  3003               	movwf	(??_HandleTelegramByte+0)+0
  5826  046A  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5827  046B  0872               	bcf	status, 5	;RP0=0, select bank0
  5828  046C  1283               	bcf	status, 6	;RP1=0, select bank0
  5829  046D  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5830  046E  00E2               	line	24
  5831                           ;TelegramInterpreter.c: 24:                 break;
  5832                           	goto	i1l482
  5833  046F  2CD3               	line	26
  5834                           ;TelegramInterpreter.c: 26:             case Commandlength:
  5835                           	
  5836                           i1l477:	
  5837  0470                     	line	27
  5838                           	
  5839                           i1l2539:	
  5840  0470                     ;TelegramInterpreter.c: 27:                 Telegram.Commandlength = Byte - 48;
  5841                           	movf	(HandleTelegramByte@Byte),w
  5842  0470  0874               	addlw	0D0h
  5843  0471  3ED0               	movwf	(??_HandleTelegramByte+0)+0
  5844  0472  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5845  0473  0872               	bsf	status, 5	;RP0=1, select bank1
  5846  0474  1683               	bcf	status, 6	;RP1=0, select bank1
  5847  0475  1303               	movwf	0+(_Telegram)^080h+02h
  5848  0476  00CA               	line	28
  5849                           	
  5850                           i1l2541:	
  5851  0477                     ;TelegramInterpreter.c: 28:                 ByteCounter = Command;
  5852                           	movlw	low(04h)
  5853  0477  3004               	movwf	(??_HandleTelegramByte+0)+0
  5854  0478  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5855  0479  0872               	bcf	status, 5	;RP0=0, select bank0
  5856  047A  1283               	bcf	status, 6	;RP1=0, select bank0
  5857  047B  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5858  047C  00E2               	line	29
  5859                           	
  5860                           i1l2543:	
  5861  047D                     ;TelegramInterpreter.c: 29:                 CommandCounter = 0;
  5862                           	clrf	(HandleTelegramByte@CommandCounter)
  5863  047D  01E1               	line	30
  5864                           ;TelegramInterpreter.c: 30:                 break;
  5865                           	goto	i1l482
  5866  047E  2CD3               	line	32
  5867                           ;TelegramInterpreter.c: 32:             case Command:
  5868                           	
  5869                           i1l478:	
  5870  047F                     	line	33
  5871                           	
  5872                           i1l2545:	
  5873  047F                     ;TelegramInterpreter.c: 33:                 Telegram.Command[CommandCounter] = Byte;
  5874                           	movf	(HandleTelegramByte@Byte),w
  5875  047F  0874               	movwf	(??_HandleTelegramByte+0)+0
  5876  0480  00F2               	movf	(HandleTelegramByte@CommandCounter),w
  5877  0481  0861               	addlw	low(_Telegram|((0x0)<<8)+03h)&0ffh
  5878  0482  3ECB               	movwf	fsr0
  5879  0483  0084               	movf	(??_HandleTelegramByte+0)+0,w
  5880  0484  0872               	bcf	status, 7	;select IRP bank1
  5881  0485  1383               	movwf	indf
  5882  0486  0080               	line	34
  5883                           	
  5884                           i1l2547:	
  5885  0487                     ;TelegramInterpreter.c: 34:                 CommandCounter ++;
  5886                           	movlw	low(01h)
  5887  0487  3001               	movwf	(??_HandleTelegramByte+0)+0
  5888  0488  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5889  0489  0872               	addwf	(HandleTelegramByte@CommandCounter),f
  5890  048A  07E1               	line	35
  5891                           	
  5892                           i1l2549:	
  5893  048B                     ;TelegramInterpreter.c: 35:                 if (CommandCounter >= Telegram.Commandlength
                                 )
  5894                           	bsf	status, 5	;RP0=1, select bank1
  5895  048B  1683               	bcf	status, 6	;RP1=0, select bank1
  5896  048C  1303               	movf	0+(_Telegram)^080h+02h,w
  5897  048D  084A               	bcf	status, 5	;RP0=0, select bank0
  5898  048E  1283               	bcf	status, 6	;RP1=0, select bank0
  5899  048F  1303               	subwf	(HandleTelegramByte@CommandCounter),w
  5900  0490  0261               	skipc
  5901  0491  1C03               	goto	u162_21
  5902  0492  2C94               	goto	u162_20
  5903  0493  2C95               u162_21:
  5904  0494                     	goto	i1l482
  5905  0494  2CD3               u162_20:
  5906  0495                     	line	37
  5907                           	
  5908                           i1l2551:	
  5909  0495                     ;TelegramInterpreter.c: 36:                 {;TelegramInterpreter.c: 37:                
                                      ByteCounter = End1;
  5910                           	movlw	low(05h)
  5911  0495  3005               	movwf	(??_HandleTelegramByte+0)+0
  5912  0496  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5913  0497  0872               	movwf	(HandleTelegramByte@ByteCounter)
  5914  0498  00E2               	goto	i1l482
  5915  0499  2CD3               	line	38
  5916                           ;TelegramInterpreter.c: 38:                 }
  5917                           	
  5918                           i1l479:	
  5919  049A                     	line	39
  5920                           ;TelegramInterpreter.c: 39:                 break;
  5921                           	goto	i1l482
  5922  049A  2CD3               	line	41
  5923                           ;TelegramInterpreter.c: 41:             case End1:
  5924                           	
  5925                           i1l480:	
  5926  049B                     	line	42
  5927                           	
  5928                           i1l2553:	
  5929  049B                     ;TelegramInterpreter.c: 42:                 Telegram.End[0] = Byte;
  5930                           	movf	(HandleTelegramByte@Byte),w
  5931  049B  0874               	movwf	(??_HandleTelegramByte+0)+0
  5932  049C  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5933  049D  0872               	bsf	status, 5	;RP0=1, select bank1
  5934  049E  1683               	bcf	status, 6	;RP1=0, select bank1
  5935  049F  1303               	movwf	0+(_Telegram)^080h+013h
  5936  04A0  00DB               	line	43
  5937                           ;TelegramInterpreter.c: 43:                 ByteCounter = End2;
  5938                           	movlw	low(06h)
  5939  04A1  3006               	movwf	(??_HandleTelegramByte+0)+0
  5940  04A2  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5941  04A3  0872               	bcf	status, 5	;RP0=0, select bank0
  5942  04A4  1283               	bcf	status, 6	;RP1=0, select bank0
  5943  04A5  1303               	movwf	(HandleTelegramByte@ByteCounter)
  5944  04A6  00E2               	line	44
  5945                           ;TelegramInterpreter.c: 44:                 break;
  5946                           	goto	i1l482
  5947  04A7  2CD3               	line	46
  5948                           ;TelegramInterpreter.c: 46:             case End2:
  5949                           	
  5950                           i1l481:	
  5951  04A8                     	line	47
  5952                           	
  5953                           i1l2555:	
  5954  04A8                     ;TelegramInterpreter.c: 47:                 Telegram.End[1] = Byte;
  5955                           	movf	(HandleTelegramByte@Byte),w
  5956  04A8  0874               	movwf	(??_HandleTelegramByte+0)+0
  5957  04A9  00F2               	movf	(??_HandleTelegramByte+0)+0,w
  5958  04AA  0872               	bsf	status, 5	;RP0=1, select bank1
  5959  04AB  1683               	bcf	status, 6	;RP1=0, select bank1
  5960  04AC  1303               	movwf	0+(_Telegram)^080h+014h
  5961  04AD  00DC               	line	48
  5962                           	
  5963                           i1l2557:	
  5964  04AE                     ;TelegramInterpreter.c: 48:                 ByteCounter = Start;
  5965                           	bcf	status, 5	;RP0=0, select bank0
  5966  04AE  1283               	bcf	status, 6	;RP1=0, select bank0
  5967  04AF  1303               	clrf	(HandleTelegramByte@ByteCounter)
  5968  04B0  01E2               	incf	(HandleTelegramByte@ByteCounter),f
  5969  04B1  0AE2               	line	50
  5970                           ;TelegramInterpreter.c: 50:                 TelegramReadyFlag = 1;
  5971                           	movlw	01h
  5972  04B2  3001               	movwf	(_TelegramReadyFlag)
  5973  04B3  00DE               	movlw	0
  5974  04B4  3000               	movwf	((_TelegramReadyFlag))+1
  5975  04B5  00DF               	line	51
  5976                           ;TelegramInterpreter.c: 51:                 break;
  5977                           	goto	i1l482
  5978  04B6  2CD3               	line	52
  5979                           	
  5980                           i1l2559:	
  5981  04B7                     ;TelegramInterpreter.c: 52:         }
  5982                           	goto	i1l482
  5983  04B7  2CD3               	
  5984                           i1l474:	
  5985  04B8                     	
  5986                           i1l2561:	
  5987  04B8                     	movf	(HandleTelegramByte@ByteCounter),w
  5988  04B8  0862               	movwf	(??_HandleTelegramByte+0)+0
  5989  04B9  00F2               	clrf	(??_HandleTelegramByte+0)+0+1
  5990  04BA  01F3               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5991                           ; Switch size 1, requested type "space"
  5992                           ; Number of cases is 1, Range of values is 0 to 0
  5993                           ; switch strategies available:
  5994                           ; Name         Instructions Cycles
  5995                           ; simple_byte            4     3 (average)
  5996                           ; direct_byte            9     7 (fixed)
  5997                           ; jumptable            260     6 (fixed)
  5998                           ;	Chosen strategy is simple_byte
  5999                           
  6000                           	movf 1+(??_HandleTelegramByte+0)+0,w
  6001  04BB  0873               	opt asmopt_push
  6002                           	opt asmopt_off
  6003                           	xorlw	0^0	; case 0
  6004  04BC  3A00               	skipnz
  6005  04BD  1903               	goto	i1l2913
  6006  04BE  2CC0               	goto	i1l482
  6007  04BF  2CD3               	opt asmopt_pop
  6008                           	
  6009                           i1l2913:	
  6010  04C0                     ; Switch size 1, requested type "space"
  6011                           ; Number of cases is 5, Range of values is 2 to 6
  6012                           ; switch strategies available:
  6013                           ; Name         Instructions Cycles
  6014                           ; simple_byte           16     9 (average)
  6015                           ; direct_byte           20    10 (fixed)
  6016                           ; jumptable            263     9 (fixed)
  6017                           ;	Chosen strategy is simple_byte
  6018                           
  6019                           	movf 0+(??_HandleTelegramByte+0)+0,w
  6020  04C0  0872               	opt asmopt_push
  6021                           	opt asmopt_off
  6022                           	xorlw	2^0	; case 2
  6023  04C1  3A02               	skipnz
  6024  04C2  1903               	goto	i1l2537
  6025  04C3  2C63               	xorlw	3^2	; case 3
  6026  04C4  3A01               	skipnz
  6027  04C5  1903               	goto	i1l2539
  6028  04C6  2C70               	xorlw	4^3	; case 4
  6029  04C7  3A07               	skipnz
  6030  04C8  1903               	goto	i1l2545
  6031  04C9  2C7F               	xorlw	5^4	; case 5
  6032  04CA  3A01               	skipnz
  6033  04CB  1903               	goto	i1l2553
  6034  04CC  2C9B               	xorlw	6^5	; case 6
  6035  04CD  3A03               	skipnz
  6036  04CE  1903               	goto	i1l2555
  6037  04CF  2CA8               	goto	i1l482
  6038  04D0  2CD3               	opt asmopt_pop
  6039                           
  6040                           	
  6041                           i1l476:	
  6042  04D1                     	goto	i1l482
  6043  04D1  2CD3               	line	53
  6044                           ;TelegramInterpreter.c: 53:     }
  6045                           	
  6046                           i1l473:	
  6047  04D2                     	goto	i1l482
  6048  04D2  2CD3               	
  6049                           i1l472:	
  6050  04D3                     	line	54
  6051                           	
  6052                           i1l482:	
  6053  04D3                     	return
  6054  04D3  0008               	opt stack 0
  6055                           GLOBAL	__end_of_HandleTelegramByte
  6056                           	__end_of_HandleTelegramByte:
  6057  04D4                     	signat	_HandleTelegramByte,89
  6058                           	global	_HandleConfigByte
  6059                           
  6060 ;; *************** function _HandleConfigByte *****************
  6061 ;; Defined at:
  6062 ;;		line 369 in file "Main.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;		None
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  Byte            1    6[COMMON] unsigned char 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  1    wreg      void 
  6069 ;; Registers used:
  6070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6076 ;;      Params:         0       0       0       0
  6077 ;;      Locals:         1       0       0       0
  6078 ;;      Temps:          2       0       0       0
  6079 ;;      Totals:         3       0       0       0
  6080 ;;Total ram usage:        3 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; Hardware stack levels required when called:    1
  6083 ;; This function calls:
  6084 ;;		_Read_Byte
  6085 ;;		i1_AddByteToBuffer
  6086 ;;		i1_Set_Relay
  6087 ;; This function is called by:
  6088 ;;		_Handle_Interrupts
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6092                           	file	"Main.c"
  6093                           	line	369
  6094                           global __ptext20
  6095                           __ptext20:	;psect for function _HandleConfigByte
  6096  04D4                     psect	text20
  6097                           	file	"Main.c"
  6098                           	line	369
  6099                           	global	__size_of_HandleConfigByte
  6100                           	__size_of_HandleConfigByte	equ	__end_of_HandleConfigByte-_HandleConfigByte
  6101  008B                     	
  6102                           _HandleConfigByte:	
  6103  04D4                     ;incstack = 0
  6104                           	opt	stack 2
  6105                           ; Regs used in _HandleConfigByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6106                           	line	374
  6107                           	
  6108                           i1l2453:	
  6109  04D4                     ;Main.c: 371:     static unsigned char ByteCounter = 0;;Main.c: 373:     unsigned char B
                                 yte;;Main.c: 374:     Byte = Read_Byte();
  6110                           	fcall	_Read_Byte
  6111  04D4  158A  272D  118A   	movwf	(??_HandleConfigByte+0)+0
  6112  04D7  00F4               	movf	(??_HandleConfigByte+0)+0,w
  6113  04D8  0874               	movwf	(HandleConfigByte@Byte)
  6114  04D9  00F6               	line	376
  6115                           	
  6116                           i1l2455:	
  6117  04DA                     ;Main.c: 376:     if (Byte == '>')
  6118                           		movlw	62
  6119  04DA  303E               	xorwf	((HandleConfigByte@Byte)),w
  6120  04DB  0676               	btfss	status,2
  6121  04DC  1D03               	goto	u156_21
  6122  04DD  2CDF               	goto	u156_20
  6123  04DE  2CE0               u156_21:
  6124  04DF                     	goto	i1l234
  6125  04DF  2D5E               u156_20:
  6126  04E0                     	goto	i1l2507
  6127  04E0  2D48               	line	378
  6128                           	
  6129                           i1l2457:	
  6130  04E1                     ;Main.c: 377:     {;Main.c: 378:         switch (ByteCounter)
  6131                           	goto	i1l2507
  6132  04E1  2D48               	line	380
  6133                           ;Main.c: 379:         {;Main.c: 380:             case 0:
  6134                           	
  6135                           i1l230:	
  6136  04E2                     	line	381
  6137                           	
  6138                           i1l2459:	
  6139  04E2                     ;Main.c: 381:                 ByteCounter = ByteCounter + 1;
  6140                           	bcf	status, 5	;RP0=0, select bank0
  6141  04E2  1283               	bcf	status, 6	;RP1=0, select bank0
  6142  04E3  1303               	movf	(HandleConfigByte@ByteCounter),w
  6143  04E4  0864               	addlw	01h
  6144  04E5  3E01               	movwf	(??_HandleConfigByte+0)+0
  6145  04E6  00F4               	movf	(??_HandleConfigByte+0)+0,w
  6146  04E7  0874               	movwf	(HandleConfigByte@ByteCounter)
  6147  04E8  00E4               	line	385
  6148                           	
  6149                           i1l2461:	
  6150  04E9                     ;Main.c: 385:                 PORTAbits.RA5 = 1;
  6151                           	bsf	(5),5	;volatile
  6152  04E9  1685               	line	386
  6153                           	
  6154                           i1l2463:	
  6155  04EA                     ;Main.c: 386:                 TRISAbits.TRISA5 = 1;
  6156                           	bsf	status, 5	;RP0=1, select bank1
  6157  04EA  1683               	bcf	status, 6	;RP1=0, select bank1
  6158  04EB  1303               	bsf	(133)^080h,5	;volatile
  6159  04EC  1685               	line	389
  6160                           	
  6161                           i1l2465:	
  6162  04ED                     ;Main.c: 389:                 AddByteToBuffer('M');
  6163                           	movlw	low(04Dh)
  6164  04ED  304D               	fcall	i1_AddByteToBuffer
  6165  04EE  158A  277A  118A   	line	390
  6166                           ;Main.c: 390:                 break;
  6167                           	goto	i1l234
  6168  04F1  2D5E               	line	392
  6169                           ;Main.c: 392:             case 1:
  6170                           	
  6171                           i1l232:	
  6172  04F2                     	line	393
  6173                           	
  6174                           i1l2467:	
  6175  04F2                     ;Main.c: 393:                 ByteCounter = ByteCounter + 1;
  6176                           	bcf	status, 5	;RP0=0, select bank0
  6177  04F2  1283               	bcf	status, 6	;RP1=0, select bank0
  6178  04F3  1303               	movf	(HandleConfigByte@ByteCounter),w
  6179  04F4  0864               	addlw	01h
  6180  04F5  3E01               	movwf	(??_HandleConfigByte+0)+0
  6181  04F6  00F4               	movf	(??_HandleConfigByte+0)+0,w
  6182  04F7  0874               	movwf	(HandleConfigByte@ByteCounter)
  6183  04F8  00E4               	line	396
  6184                           	
  6185                           i1l2469:	
  6186  04F9                     ;Main.c: 396:                 AddByteToBuffer(0x31);
  6187                           	movlw	low(031h)
  6188  04F9  3031               	fcall	i1_AddByteToBuffer
  6189  04FA  158A  277A  118A   	line	397
  6190                           	
  6191                           i1l2471:	
  6192  04FD                     ;Main.c: 397:                 AddByteToBuffer(0x01);
  6193                           	movlw	low(01h)
  6194  04FD  3001               	fcall	i1_AddByteToBuffer
  6195  04FE  158A  277A  118A   	line	400
  6196                           	
  6197                           i1l2473:	
  6198  0501                     ;Main.c: 400:                 AddByteToBuffer(0x32);
  6199                           	movlw	low(032h)
  6200  0501  3032               	fcall	i1_AddByteToBuffer
  6201  0502  158A  277A  118A   	line	401
  6202                           	
  6203                           i1l2475:	
  6204  0505                     ;Main.c: 401:                 AddByteToBuffer(0x00);
  6205                           	movlw	low(0)
  6206  0505  3000               	fcall	i1_AddByteToBuffer
  6207  0506  158A  277A  118A   	line	404
  6208                           	
  6209                           i1l2477:	
  6210  0509                     ;Main.c: 404:                 AddByteToBuffer(0x33);
  6211                           	movlw	low(033h)
  6212  0509  3033               	fcall	i1_AddByteToBuffer
  6213  050A  158A  277A  118A   	line	405
  6214                           	
  6215                           i1l2479:	
  6216  050D                     ;Main.c: 405:                 AddByteToBuffer(0x00);
  6217                           	movlw	low(0)
  6218  050D  3000               	fcall	i1_AddByteToBuffer
  6219  050E  158A  277A  118A   	line	408
  6220                           	
  6221                           i1l2481:	
  6222  0511                     ;Main.c: 408:                 AddByteToBuffer(0x34);
  6223                           	movlw	low(034h)
  6224  0511  3034               	fcall	i1_AddByteToBuffer
  6225  0512  158A  277A  118A   	line	409
  6226                           	
  6227                           i1l2483:	
  6228  0515                     ;Main.c: 409:                 AddByteToBuffer(0x00);
  6229                           	movlw	low(0)
  6230  0515  3000               	fcall	i1_AddByteToBuffer
  6231  0516  158A  277A  118A   	line	412
  6232                           	
  6233                           i1l2485:	
  6234  0519                     ;Main.c: 412:                 AddByteToBuffer(0xFF);
  6235                           	movlw	low(0FFh)
  6236  0519  30FF               	fcall	i1_AddByteToBuffer
  6237  051A  158A  277A  118A   	line	413
  6238                           ;Main.c: 413:                 break;
  6239                           	goto	i1l234
  6240  051D  2D5E               	line	415
  6241                           ;Main.c: 415:             case 2:
  6242                           	
  6243                           i1l233:	
  6244  051E                     	line	417
  6245                           	
  6246                           i1l2487:	
  6247  051E                     ;Main.c: 417:                 ByteCounter = 0;
  6248                           	bcf	status, 5	;RP0=0, select bank0
  6249  051E  1283               	bcf	status, 6	;RP1=0, select bank0
  6250  051F  1303               	clrf	(HandleConfigByte@ByteCounter)
  6251  0520  01E4               	line	420
  6252                           	
  6253                           i1l2489:	
  6254  0521                     ;Main.c: 420:                 AddByteToBuffer('X');
  6255                           	movlw	low(058h)
  6256  0521  3058               	fcall	i1_AddByteToBuffer
  6257  0522  158A  277A  118A   	line	422
  6258                           	
  6259                           i1l2491:	
  6260  0525                     ;Main.c: 422:                 Set_Relay(Relay1, Off);
  6261                           	clrf	(i1Set_Relay@State)
  6262  0525  01F0               	movlw	low(0)
  6263  0526  3000               	fcall	i1_Set_Relay
  6264  0527  118A  23AA  118A   	line	423
  6265                           	
  6266                           i1l2493:	
  6267  052A                     ;Main.c: 423:                 Set_Relay(Relay2, Off);
  6268                           	clrf	(i1Set_Relay@State)
  6269  052A  01F0               	movlw	low(01h)
  6270  052B  3001               	fcall	i1_Set_Relay
  6271  052C  118A  23AA  118A   	line	424
  6272                           	
  6273                           i1l2495:	
  6274  052F                     ;Main.c: 424:                 Set_Relay(Relay3, Off);
  6275                           	clrf	(i1Set_Relay@State)
  6276  052F  01F0               	movlw	low(02h)
  6277  0530  3002               	fcall	i1_Set_Relay
  6278  0531  118A  23AA  118A   	line	425
  6279                           	
  6280                           i1l2497:	
  6281  0534                     ;Main.c: 425:                 Set_Relay(Relay4, Off);
  6282                           	clrf	(i1Set_Relay@State)
  6283  0534  01F0               	movlw	low(03h)
  6284  0535  3003               	fcall	i1_Set_Relay
  6285  0536  118A  23AA  118A   	line	426
  6286                           	
  6287                           i1l2499:	
  6288  0539                     ;Main.c: 426:                 Set_Relay(Relay5, Off);
  6289                           	clrf	(i1Set_Relay@State)
  6290  0539  01F0               	movlw	low(04h)
  6291  053A  3004               	fcall	i1_Set_Relay
  6292  053B  118A  23AA  118A   	line	427
  6293                           	
  6294                           i1l2501:	
  6295  053E                     ;Main.c: 427:                 Set_Relay(Relay6, Off);
  6296                           	clrf	(i1Set_Relay@State)
  6297  053E  01F0               	movlw	low(05h)
  6298  053F  3005               	fcall	i1_Set_Relay
  6299  0540  118A  23AA  118A   	line	429
  6300                           	
  6301                           i1l2503:	
  6302  0543                     ;Main.c: 429:                 CurrentMode = Running;
  6303                           	bcf	status, 5	;RP0=0, select bank0
  6304  0543  1283               	bcf	status, 6	;RP1=0, select bank0
  6305  0544  1303               	clrf	(_CurrentMode)
  6306  0545  01E5               	line	432
  6307                           	
  6308                           i1l2505:	
  6309  0546                     ;Main.c: 432:                 INTCONbits.RAIE = 1;
  6310                           	bsf	(11),3	;volatile
  6311  0546  158B               	line	434
  6312                           ;Main.c: 434:         }
  6313                           	goto	i1l234
  6314  0547  2D5E               	
  6315                           i1l229:	
  6316  0548                     	
  6317                           i1l2507:	
  6318  0548                     	bcf	status, 5	;RP0=0, select bank0
  6319  0548  1283               	bcf	status, 6	;RP1=0, select bank0
  6320  0549  1303               	movf	(HandleConfigByte@ByteCounter),w
  6321  054A  0864               	movwf	(??_HandleConfigByte+0)+0
  6322  054B  00F4               	clrf	(??_HandleConfigByte+0)+0+1
  6323  054C  01F5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6324                           ; Switch size 1, requested type "space"
  6325                           ; Number of cases is 1, Range of values is 0 to 0
  6326                           ; switch strategies available:
  6327                           ; Name         Instructions Cycles
  6328                           ; simple_byte            4     3 (average)
  6329                           ; direct_byte            9     7 (fixed)
  6330                           ; jumptable            260     6 (fixed)
  6331                           ;	Chosen strategy is simple_byte
  6332                           
  6333                           	movf 1+(??_HandleConfigByte+0)+0,w
  6334  054D  0875               	opt asmopt_push
  6335                           	opt asmopt_off
  6336                           	xorlw	0^0	; case 0
  6337  054E  3A00               	skipnz
  6338  054F  1903               	goto	i1l2915
  6339  0550  2D52               	goto	i1l234
  6340  0551  2D5E               	opt asmopt_pop
  6341                           	
  6342                           i1l2915:	
  6343  0552                     ; Switch size 1, requested type "space"
  6344                           ; Number of cases is 3, Range of values is 0 to 2
  6345                           ; switch strategies available:
  6346                           ; Name         Instructions Cycles
  6347                           ; simple_byte           10     6 (average)
  6348                           ; direct_byte           13     7 (fixed)
  6349                           ; jumptable            260     6 (fixed)
  6350                           ;	Chosen strategy is simple_byte
  6351                           
  6352                           	movf 0+(??_HandleConfigByte+0)+0,w
  6353  0552  0874               	opt asmopt_push
  6354                           	opt asmopt_off
  6355                           	xorlw	0^0	; case 0
  6356  0553  3A00               	skipnz
  6357  0554  1903               	goto	i1l2459
  6358  0555  2CE2               	xorlw	1^0	; case 1
  6359  0556  3A01               	skipnz
  6360  0557  1903               	goto	i1l2467
  6361  0558  2CF2               	xorlw	2^1	; case 2
  6362  0559  3A03               	skipnz
  6363  055A  1903               	goto	i1l2487
  6364  055B  2D1E               	goto	i1l234
  6365  055C  2D5E               	opt asmopt_pop
  6366                           
  6367                           	
  6368                           i1l231:	
  6369  055D                     	goto	i1l234
  6370  055D  2D5E               	line	436
  6371                           ;Main.c: 436:     }
  6372                           	
  6373                           i1l228:	
  6374  055E                     	line	438
  6375                           	
  6376                           i1l234:	
  6377  055E                     	return
  6378  055E  0008               	opt stack 0
  6379                           GLOBAL	__end_of_HandleConfigByte
  6380                           	__end_of_HandleConfigByte:
  6381  055F                     	signat	_HandleConfigByte,89
  6382                           	global	i1_Set_Relay
  6383                           
  6384 ;; *************** function i1_Set_Relay *****************
  6385 ;; Defined at:
  6386 ;;		line 64 in file "RelayControl.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;  Relay           1    wreg     unsigned char 
  6389 ;;  State           1    0[COMMON] unsigned char 
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;  Relay           1    3[COMMON] unsigned char 
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  1    wreg      void 
  6394 ;; Registers used:
  6395 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6401 ;;      Params:         1       0       0       0
  6402 ;;      Locals:         1       0       0       0
  6403 ;;      Temps:          2       0       0       0
  6404 ;;      Totals:         4       0       0       0
  6405 ;;Total ram usage:        4 bytes
  6406 ;; Hardware stack levels used:    1
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_HandleConfigByte
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6414                           	file	"RelayControl.c"
  6415                           	line	64
  6416                           global __ptext21
  6417                           __ptext21:	;psect for function i1_Set_Relay
  6418  03AA                     psect	text21
  6419                           	file	"RelayControl.c"
  6420                           	line	64
  6421                           	global	__size_ofi1_Set_Relay
  6422                           	__size_ofi1_Set_Relay	equ	__end_ofi1_Set_Relay-i1_Set_Relay
  6423  0096                     	
  6424                           i1_Set_Relay:	
  6425  03AA                     ;incstack = 0
  6426                           	opt	stack 2
  6427                           ; Regs used in i1_Set_Relay: [wreg-fsr0h+status,2+status,0]
  6428                           ;i1Set_Relay@Relay stored from wreg
  6429                           	movwf	(i1Set_Relay@Relay)
  6430  03AA  00F3               	line	66
  6431                           	
  6432                           i1l2129:	
  6433  03AB                     ;RelayControl.c: 64: void Set_Relay (unsigned char Relay, unsigned char State);RelayCont
                                 rol.c: 65: {;RelayControl.c: 66:     switch (Relay)
  6434                           	goto	i1l2181
  6435  03AB  2C2B               	line	68
  6436                           ;RelayControl.c: 67:     {;RelayControl.c: 68:         case Relay1:
  6437                           	
  6438                           i1l380:	
  6439  03AC                     	line	69
  6440                           	
  6441                           i1l2131:	
  6442  03AC                     ;RelayControl.c: 69:         if (State == On)
  6443                           		decf	((i1Set_Relay@State)),w
  6444  03AC  0370               	btfss	status,2
  6445  03AD  1D03               	goto	u106_21
  6446  03AE  2BB0               	goto	u106_20
  6447  03AF  2BB1               u106_21:
  6448  03B0                     	goto	i1l2135
  6449  03B0  2BB5               u106_20:
  6450  03B1                     	line	71
  6451                           	
  6452                           i1l2133:	
  6453  03B1                     ;RelayControl.c: 70:         {;RelayControl.c: 71:             PORTAbits.RA0 = 1;
  6454                           	bcf	status, 5	;RP0=0, select bank0
  6455  03B1  1283               	bcf	status, 6	;RP1=0, select bank0
  6456  03B2  1303               	bsf	(5),0	;volatile
  6457  03B3  1405               	line	72
  6458                           ;RelayControl.c: 72:         }
  6459                           	goto	i1l411
  6460  03B4  2C3F               	line	73
  6461                           ;RelayControl.c: 73:         else if (State == Off)
  6462                           	
  6463                           i1l381:	
  6464  03B5                     	
  6465                           i1l2135:	
  6466  03B5                     	movf	((i1Set_Relay@State)),w
  6467  03B5  0870               	btfss	status,2
  6468  03B6  1D03               	goto	u107_21
  6469  03B7  2BB9               	goto	u107_20
  6470  03B8  2BBA               u107_21:
  6471  03B9                     	goto	i1l411
  6472  03B9  2C3F               u107_20:
  6473  03BA                     	line	75
  6474                           	
  6475                           i1l2137:	
  6476  03BA                     ;RelayControl.c: 74:         {;RelayControl.c: 75:             PORTAbits.RA0 = 0;
  6477                           	bcf	status, 5	;RP0=0, select bank0
  6478  03BA  1283               	bcf	status, 6	;RP1=0, select bank0
  6479  03BB  1303               	bcf	(5),0	;volatile
  6480  03BC  1005               	line	76
  6481                           ;RelayControl.c: 76:         }
  6482                           	goto	i1l411
  6483  03BD  2C3F               	line	77
  6484                           ;RelayControl.c: 77:         else
  6485                           	
  6486                           i1l383:	
  6487  03BE                     	goto	i1l411
  6488  03BE  2C3F               	line	80
  6489                           ;RelayControl.c: 78:         {;RelayControl.c: 80:         }
  6490                           	
  6491                           i1l384:	
  6492  03BF                     	goto	i1l411
  6493  03BF  2C3F               	
  6494                           i1l382:	
  6495  03C0                     	line	81
  6496                           ;RelayControl.c: 81:         break;
  6497                           	goto	i1l411
  6498  03C0  2C3F               	line	83
  6499                           ;RelayControl.c: 83:         case Relay2:
  6500                           	
  6501                           i1l386:	
  6502  03C1                     	line	84
  6503                           	
  6504                           i1l2139:	
  6505  03C1                     ;RelayControl.c: 84:         if (State == On)
  6506                           		decf	((i1Set_Relay@State)),w
  6507  03C1  0370               	btfss	status,2
  6508  03C2  1D03               	goto	u108_21
  6509  03C3  2BC5               	goto	u108_20
  6510  03C4  2BC6               u108_21:
  6511  03C5                     	goto	i1l2143
  6512  03C5  2BCA               u108_20:
  6513  03C6                     	line	86
  6514                           	
  6515                           i1l2141:	
  6516  03C6                     ;RelayControl.c: 85:         {;RelayControl.c: 86:             PORTAbits.RA1 = 1;
  6517                           	bcf	status, 5	;RP0=0, select bank0
  6518  03C6  1283               	bcf	status, 6	;RP1=0, select bank0
  6519  03C7  1303               	bsf	(5),1	;volatile
  6520  03C8  1485               	line	87
  6521                           ;RelayControl.c: 87:         }
  6522                           	goto	i1l411
  6523  03C9  2C3F               	line	88
  6524                           ;RelayControl.c: 88:         else if (State == Off)
  6525                           	
  6526                           i1l387:	
  6527  03CA                     	
  6528                           i1l2143:	
  6529  03CA                     	movf	((i1Set_Relay@State)),w
  6530  03CA  0870               	btfss	status,2
  6531  03CB  1D03               	goto	u109_21
  6532  03CC  2BCE               	goto	u109_20
  6533  03CD  2BCF               u109_21:
  6534  03CE                     	goto	i1l411
  6535  03CE  2C3F               u109_20:
  6536  03CF                     	line	90
  6537                           	
  6538                           i1l2145:	
  6539  03CF                     ;RelayControl.c: 89:         {;RelayControl.c: 90:             PORTAbits.RA1 = 0;
  6540                           	bcf	status, 5	;RP0=0, select bank0
  6541  03CF  1283               	bcf	status, 6	;RP1=0, select bank0
  6542  03D0  1303               	bcf	(5),1	;volatile
  6543  03D1  1085               	line	91
  6544                           ;RelayControl.c: 91:         }
  6545                           	goto	i1l411
  6546  03D2  2C3F               	line	92
  6547                           ;RelayControl.c: 92:         else
  6548                           	
  6549                           i1l389:	
  6550  03D3                     	goto	i1l411
  6551  03D3  2C3F               	line	95
  6552                           ;RelayControl.c: 93:         {;RelayControl.c: 95:         }
  6553                           	
  6554                           i1l390:	
  6555  03D4                     	goto	i1l411
  6556  03D4  2C3F               	
  6557                           i1l388:	
  6558  03D5                     	line	96
  6559                           ;RelayControl.c: 96:         break;
  6560                           	goto	i1l411
  6561  03D5  2C3F               	line	98
  6562                           ;RelayControl.c: 98:         case Relay3:
  6563                           	
  6564                           i1l391:	
  6565  03D6                     	line	99
  6566                           	
  6567                           i1l2147:	
  6568  03D6                     ;RelayControl.c: 99:         if (State == On)
  6569                           		decf	((i1Set_Relay@State)),w
  6570  03D6  0370               	btfss	status,2
  6571  03D7  1D03               	goto	u110_21
  6572  03D8  2BDA               	goto	u110_20
  6573  03D9  2BDB               u110_21:
  6574  03DA                     	goto	i1l2151
  6575  03DA  2BDF               u110_20:
  6576  03DB                     	line	101
  6577                           	
  6578                           i1l2149:	
  6579  03DB                     ;RelayControl.c: 100:         {;RelayControl.c: 101:             PORTAbits.RA2 = 1;
  6580                           	bcf	status, 5	;RP0=0, select bank0
  6581  03DB  1283               	bcf	status, 6	;RP1=0, select bank0
  6582  03DC  1303               	bsf	(5),2	;volatile
  6583  03DD  1505               	line	102
  6584                           ;RelayControl.c: 102:         }
  6585                           	goto	i1l411
  6586  03DE  2C3F               	line	103
  6587                           ;RelayControl.c: 103:         else if (State == Off)
  6588                           	
  6589                           i1l392:	
  6590  03DF                     	
  6591                           i1l2151:	
  6592  03DF                     	movf	((i1Set_Relay@State)),w
  6593  03DF  0870               	btfss	status,2
  6594  03E0  1D03               	goto	u111_21
  6595  03E1  2BE3               	goto	u111_20
  6596  03E2  2BE4               u111_21:
  6597  03E3                     	goto	i1l411
  6598  03E3  2C3F               u111_20:
  6599  03E4                     	line	105
  6600                           	
  6601                           i1l2153:	
  6602  03E4                     ;RelayControl.c: 104:         {;RelayControl.c: 105:             PORTAbits.RA2 = 0;
  6603                           	bcf	status, 5	;RP0=0, select bank0
  6604  03E4  1283               	bcf	status, 6	;RP1=0, select bank0
  6605  03E5  1303               	bcf	(5),2	;volatile
  6606  03E6  1105               	line	106
  6607                           ;RelayControl.c: 106:         }
  6608                           	goto	i1l411
  6609  03E7  2C3F               	line	107
  6610                           ;RelayControl.c: 107:         else
  6611                           	
  6612                           i1l394:	
  6613  03E8                     	goto	i1l411
  6614  03E8  2C3F               	line	110
  6615                           ;RelayControl.c: 108:         {;RelayControl.c: 110:         }
  6616                           	
  6617                           i1l395:	
  6618  03E9                     	goto	i1l411
  6619  03E9  2C3F               	
  6620                           i1l393:	
  6621  03EA                     	line	111
  6622                           ;RelayControl.c: 111:         break;
  6623                           	goto	i1l411
  6624  03EA  2C3F               	line	113
  6625                           ;RelayControl.c: 113:         case Relay4:
  6626                           	
  6627                           i1l396:	
  6628  03EB                     	line	114
  6629                           	
  6630                           i1l2155:	
  6631  03EB                     ;RelayControl.c: 114:         if (State == On)
  6632                           		decf	((i1Set_Relay@State)),w
  6633  03EB  0370               	btfss	status,2
  6634  03EC  1D03               	goto	u112_21
  6635  03ED  2BEF               	goto	u112_20
  6636  03EE  2BF0               u112_21:
  6637  03EF                     	goto	i1l2159
  6638  03EF  2BF4               u112_20:
  6639  03F0                     	line	116
  6640                           	
  6641                           i1l2157:	
  6642  03F0                     ;RelayControl.c: 115:         {;RelayControl.c: 116:             PORTCbits.RC0 = 1;
  6643                           	bcf	status, 5	;RP0=0, select bank0
  6644  03F0  1283               	bcf	status, 6	;RP1=0, select bank0
  6645  03F1  1303               	bsf	(7),0	;volatile
  6646  03F2  1407               	line	117
  6647                           ;RelayControl.c: 117:         }
  6648                           	goto	i1l411
  6649  03F3  2C3F               	line	118
  6650                           ;RelayControl.c: 118:         else if (State == Off)
  6651                           	
  6652                           i1l397:	
  6653  03F4                     	
  6654                           i1l2159:	
  6655  03F4                     	movf	((i1Set_Relay@State)),w
  6656  03F4  0870               	btfss	status,2
  6657  03F5  1D03               	goto	u113_21
  6658  03F6  2BF8               	goto	u113_20
  6659  03F7  2BF9               u113_21:
  6660  03F8                     	goto	i1l411
  6661  03F8  2C3F               u113_20:
  6662  03F9                     	line	120
  6663                           	
  6664                           i1l2161:	
  6665  03F9                     ;RelayControl.c: 119:         {;RelayControl.c: 120:             PORTCbits.RC0 = 0;
  6666                           	bcf	status, 5	;RP0=0, select bank0
  6667  03F9  1283               	bcf	status, 6	;RP1=0, select bank0
  6668  03FA  1303               	bcf	(7),0	;volatile
  6669  03FB  1007               	line	121
  6670                           ;RelayControl.c: 121:         }
  6671                           	goto	i1l411
  6672  03FC  2C3F               	line	122
  6673                           ;RelayControl.c: 122:         else
  6674                           	
  6675                           i1l399:	
  6676  03FD                     	goto	i1l411
  6677  03FD  2C3F               	line	125
  6678                           ;RelayControl.c: 123:         {;RelayControl.c: 125:         }
  6679                           	
  6680                           i1l400:	
  6681  03FE                     	goto	i1l411
  6682  03FE  2C3F               	
  6683                           i1l398:	
  6684  03FF                     	line	126
  6685                           ;RelayControl.c: 126:         break;
  6686                           	goto	i1l411
  6687  03FF  2C3F               	line	128
  6688                           ;RelayControl.c: 128:         case Relay5:
  6689                           	
  6690                           i1l401:	
  6691  0400                     	line	129
  6692                           	
  6693                           i1l2163:	
  6694  0400                     ;RelayControl.c: 129:         if (State == On)
  6695                           		decf	((i1Set_Relay@State)),w
  6696  0400  0370               	btfss	status,2
  6697  0401  1D03               	goto	u114_21
  6698  0402  2C04               	goto	u114_20
  6699  0403  2C05               u114_21:
  6700  0404                     	goto	i1l2167
  6701  0404  2C09               u114_20:
  6702  0405                     	line	131
  6703                           	
  6704                           i1l2165:	
  6705  0405                     ;RelayControl.c: 130:         {;RelayControl.c: 131:             PORTCbits.RC1 = 1;
  6706                           	bcf	status, 5	;RP0=0, select bank0
  6707  0405  1283               	bcf	status, 6	;RP1=0, select bank0
  6708  0406  1303               	bsf	(7),1	;volatile
  6709  0407  1487               	line	132
  6710                           ;RelayControl.c: 132:         }
  6711                           	goto	i1l411
  6712  0408  2C3F               	line	133
  6713                           ;RelayControl.c: 133:         else if (State == Off)
  6714                           	
  6715                           i1l402:	
  6716  0409                     	
  6717                           i1l2167:	
  6718  0409                     	movf	((i1Set_Relay@State)),w
  6719  0409  0870               	btfss	status,2
  6720  040A  1D03               	goto	u115_21
  6721  040B  2C0D               	goto	u115_20
  6722  040C  2C0E               u115_21:
  6723  040D                     	goto	i1l411
  6724  040D  2C3F               u115_20:
  6725  040E                     	line	135
  6726                           	
  6727                           i1l2169:	
  6728  040E                     ;RelayControl.c: 134:         {;RelayControl.c: 135:             PORTCbits.RC1 = 0;
  6729                           	bcf	status, 5	;RP0=0, select bank0
  6730  040E  1283               	bcf	status, 6	;RP1=0, select bank0
  6731  040F  1303               	bcf	(7),1	;volatile
  6732  0410  1087               	line	136
  6733                           ;RelayControl.c: 136:         }
  6734                           	goto	i1l411
  6735  0411  2C3F               	line	137
  6736                           ;RelayControl.c: 137:         else
  6737                           	
  6738                           i1l404:	
  6739  0412                     	goto	i1l411
  6740  0412  2C3F               	line	140
  6741                           ;RelayControl.c: 138:         {;RelayControl.c: 140:         }
  6742                           	
  6743                           i1l405:	
  6744  0413                     	goto	i1l411
  6745  0413  2C3F               	
  6746                           i1l403:	
  6747  0414                     	line	141
  6748                           ;RelayControl.c: 141:         break;
  6749                           	goto	i1l411
  6750  0414  2C3F               	line	143
  6751                           ;RelayControl.c: 143:         case Relay6:
  6752                           	
  6753                           i1l406:	
  6754  0415                     	line	144
  6755                           	
  6756                           i1l2171:	
  6757  0415                     ;RelayControl.c: 144:         if (State == On)
  6758                           		decf	((i1Set_Relay@State)),w
  6759  0415  0370               	btfss	status,2
  6760  0416  1D03               	goto	u116_21
  6761  0417  2C19               	goto	u116_20
  6762  0418  2C1A               u116_21:
  6763  0419                     	goto	i1l2175
  6764  0419  2C1E               u116_20:
  6765  041A                     	line	146
  6766                           	
  6767                           i1l2173:	
  6768  041A                     ;RelayControl.c: 145:         {;RelayControl.c: 146:             PORTCbits.RC2 = 1;
  6769                           	bcf	status, 5	;RP0=0, select bank0
  6770  041A  1283               	bcf	status, 6	;RP1=0, select bank0
  6771  041B  1303               	bsf	(7),2	;volatile
  6772  041C  1507               	line	147
  6773                           ;RelayControl.c: 147:         }
  6774                           	goto	i1l411
  6775  041D  2C3F               	line	148
  6776                           ;RelayControl.c: 148:         else if (State == Off)
  6777                           	
  6778                           i1l407:	
  6779  041E                     	
  6780                           i1l2175:	
  6781  041E                     	movf	((i1Set_Relay@State)),w
  6782  041E  0870               	btfss	status,2
  6783  041F  1D03               	goto	u117_21
  6784  0420  2C22               	goto	u117_20
  6785  0421  2C23               u117_21:
  6786  0422                     	goto	i1l411
  6787  0422  2C3F               u117_20:
  6788  0423                     	line	150
  6789                           	
  6790                           i1l2177:	
  6791  0423                     ;RelayControl.c: 149:         {;RelayControl.c: 150:             PORTCbits.RC2 = 0;
  6792                           	bcf	status, 5	;RP0=0, select bank0
  6793  0423  1283               	bcf	status, 6	;RP1=0, select bank0
  6794  0424  1303               	bcf	(7),2	;volatile
  6795  0425  1107               	line	151
  6796                           ;RelayControl.c: 151:         }
  6797                           	goto	i1l411
  6798  0426  2C3F               	line	152
  6799                           ;RelayControl.c: 152:         else
  6800                           	
  6801                           i1l409:	
  6802  0427                     	goto	i1l411
  6803  0427  2C3F               	line	155
  6804                           ;RelayControl.c: 153:         {;RelayControl.c: 155:         }
  6805                           	
  6806                           i1l410:	
  6807  0428                     	goto	i1l411
  6808  0428  2C3F               	
  6809                           i1l408:	
  6810  0429                     	line	156
  6811                           ;RelayControl.c: 156:         break;
  6812                           	goto	i1l411
  6813  0429  2C3F               	line	157
  6814                           	
  6815                           i1l2179:	
  6816  042A                     ;RelayControl.c: 157:     }
  6817                           	goto	i1l411
  6818  042A  2C3F               	
  6819                           i1l379:	
  6820  042B                     	
  6821                           i1l2181:	
  6822  042B                     	movf	(i1Set_Relay@Relay),w
  6823  042B  0873               	movwf	(??i1_Set_Relay+0)+0
  6824  042C  00F1               	clrf	(??i1_Set_Relay+0)+0+1
  6825  042D  01F2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6826                           ; Switch size 1, requested type "space"
  6827                           ; Number of cases is 1, Range of values is 0 to 0
  6828                           ; switch strategies available:
  6829                           ; Name         Instructions Cycles
  6830                           ; simple_byte            4     3 (average)
  6831                           ; direct_byte            9     7 (fixed)
  6832                           ; jumptable            260     6 (fixed)
  6833                           ;	Chosen strategy is simple_byte
  6834                           
  6835                           	movf 1+(??i1_Set_Relay+0)+0,w
  6836  042E  0872               	opt asmopt_push
  6837                           	opt asmopt_off
  6838                           	xorlw	0^0	; case 0
  6839  042F  3A00               	skipnz
  6840  0430  1903               	goto	i1l2917
  6841  0431  2C33               	goto	i1l411
  6842  0432  2C3F               	opt asmopt_pop
  6843                           	
  6844                           i1l2917:	
  6845  0433                     ; Switch size 1, requested type "space"
  6846                           ; Number of cases is 6, Range of values is 0 to 5
  6847                           ; switch strategies available:
  6848                           ; Name         Instructions Cycles
  6849                           ; direct_byte           19     7 (fixed)
  6850                           ; simple_byte           19    10 (average)
  6851                           ; jumptable            260     6 (fixed)
  6852                           ;	Chosen strategy is direct_byte
  6853                           
  6854                           	movf 0+(??i1_Set_Relay+0)+0,w
  6855  0433  0871               	movwf fsr
  6856  0434  0084               	movlw	6
  6857  0435  3006               	subwf	fsr,w
  6858  0436  0204               skipnc
  6859  0437  1803               goto i1l411
  6860  0438  2C3F               movlw high(i1S2919)
  6861  0439  3008               movwf pclath
  6862  043A  008A               	clrc
  6863  043B  1003               	rlf fsr,w
  6864  043C  0D04               	addlw low(i1S2919)
  6865  043D  3E18               	movwf pc
  6866  043E  0082               psect	swtext3,local,class=CONST,delta=2
  6867                           global __pswtext3
  6868                           __pswtext3:
  6869  0818                     i1S2919:
  6870  0818                     	ljmp	i1l2131
  6871  0818  118A  2BAC         	ljmp	i1l2139
  6872  081A  118A  2BC1         	ljmp	i1l2147
  6873  081C  118A  2BD6         	ljmp	i1l2155
  6874  081E  118A  2BEB         	ljmp	i1l2163
  6875  0820  118A  2C00         	ljmp	i1l2171
  6876  0822  118A  2C15         psect	text21
  6877                           
  6878                           	
  6879                           i1l385:	
  6880  043F                     	line	159
  6881                           	
  6882                           i1l411:	
  6883  043F                     	return
  6884  043F  0008               	opt stack 0
  6885                           GLOBAL	__end_ofi1_Set_Relay
  6886                           	__end_ofi1_Set_Relay:
  6887  0440                     	signat	i1_Set_Relay,89
  6888                           	global	i1_AddByteToBuffer
  6889                           
  6890 ;; *************** function i1_AddByteToBuffer *****************
  6891 ;; Defined at:
  6892 ;;		line 120 in file "Eusart.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  Byte            1    wreg     unsigned char 
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;  Byte            1    1[COMMON] unsigned char 
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  1    wreg      void 
  6899 ;; Registers used:
  6900 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6906 ;;      Params:         0       0       0       0
  6907 ;;      Locals:         1       0       0       0
  6908 ;;      Temps:          1       0       0       0
  6909 ;;      Totals:         2       0       0       0
  6910 ;;Total ram usage:        2 bytes
  6911 ;; Hardware stack levels used:    1
  6912 ;; This function calls:
  6913 ;;		Nothing
  6914 ;; This function is called by:
  6915 ;;		_HandleConfigByte
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6919                           	file	"Eusart.c"
  6920                           	line	120
  6921                           global __ptext22
  6922                           __ptext22:	;psect for function i1_AddByteToBuffer
  6923  0F7A                     psect	text22
  6924                           	file	"Eusart.c"
  6925                           	line	120
  6926                           	global	__size_ofi1_AddByteToBuffer
  6927                           	__size_ofi1_AddByteToBuffer	equ	__end_ofi1_AddByteToBuffer-i1_AddByteToBuffer
  6928  001A                     	
  6929                           i1_AddByteToBuffer:	
  6930  0F7A                     ;incstack = 0
  6931                           	opt	stack 2
  6932                           ; Regs used in i1_AddByteToBuffer: [wreg-fsr0h+status,2+status,0]
  6933                           ;i1AddByteToBuffer@Byte stored from wreg
  6934                           	movwf	(i1AddByteToBuffer@Byte)
  6935  0F7A  00F1               	line	122
  6936                           	
  6937                           i1l2119:	
  6938  0F7B                     ;Eusart.c: 120: void AddByteToBuffer (unsigned char Byte);Eusart.c: 121: {;Eusart.c: 122
                                 :     SendBuffer[BufferHead] = Byte;
  6939                           	movf	(i1AddByteToBuffer@Byte),w
  6940  0F7B  0871               	movwf	(??i1_AddByteToBuffer+0)+0
  6941  0F7C  00F0               	movf	(_BufferHead),w
  6942  0F7D  087D               	addlw	low(_SendBuffer|((0x0)<<8))&0ffh
  6943  0F7E  3EA0               	movwf	fsr0
  6944  0F7F  0084               	movf	(??i1_AddByteToBuffer+0)+0,w
  6945  0F80  0870               	bcf	status, 7	;select IRP bank1
  6946  0F81  1383               	movwf	indf
  6947  0F82  0080               	line	124
  6948                           	
  6949                           i1l2121:	
  6950  0F83                     ;Eusart.c: 124:     if (BufferHead == 39)
  6951                           		movlw	39
  6952  0F83  3027               	xorwf	((_BufferHead)),w
  6953  0F84  067D               	btfss	status,2
  6954  0F85  1D03               	goto	u105_21
  6955  0F86  2F88               	goto	u105_20
  6956  0F87  2F89               u105_21:
  6957  0F88                     	goto	i1l2125
  6958  0F88  2F8B               u105_20:
  6959  0F89                     	line	126
  6960                           	
  6961                           i1l2123:	
  6962  0F89                     ;Eusart.c: 125:     {;Eusart.c: 126:         BufferHead = 0;
  6963                           	clrf	(_BufferHead)
  6964  0F89  01FD               	line	127
  6965                           ;Eusart.c: 127:     }
  6966                           	goto	i1l2127
  6967  0F8A  2F90               	line	128
  6968                           ;Eusart.c: 128:     else
  6969                           	
  6970                           i1l320:	
  6971  0F8B                     	line	130
  6972                           	
  6973                           i1l2125:	
  6974  0F8B                     ;Eusart.c: 129:     {;Eusart.c: 130:         BufferHead++;
  6975                           	movlw	low(01h)
  6976  0F8B  3001               	movwf	(??i1_AddByteToBuffer+0)+0
  6977  0F8C  00F0               	movf	(??i1_AddByteToBuffer+0)+0,w
  6978  0F8D  0870               	addwf	(_BufferHead),f
  6979  0F8E  07FD               	goto	i1l2127
  6980  0F8F  2F90               	line	131
  6981                           ;Eusart.c: 131:     }
  6982                           	
  6983                           i1l321:	
  6984  0F90                     	line	134
  6985                           	
  6986                           i1l2127:	
  6987  0F90                     ;Eusart.c: 134:     PIE1bits.TXIE = 1;
  6988                           	bsf	status, 5	;RP0=1, select bank1
  6989  0F90  1683               	bcf	status, 6	;RP1=0, select bank1
  6990  0F91  1303               	bsf	(140)^080h,1	;volatile
  6991  0F92  148C               	line	136
  6992                           	
  6993                           i1l322:	
  6994  0F93                     	return
  6995  0F93  0008               	opt stack 0
  6996                           GLOBAL	__end_ofi1_AddByteToBuffer
  6997                           	__end_ofi1_AddByteToBuffer:
  6998  0F94                     	signat	i1_AddByteToBuffer,89
  6999                           	global	_Read_Byte
  7000                           
  7001 ;; *************** function _Read_Byte *****************
  7002 ;; Defined at:
  7003 ;;		line 106 in file "Eusart.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;		None
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  Data            1    1[COMMON] unsigned char 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  1    wreg      unsigned char 
  7010 ;; Registers used:
  7011 ;;		wreg
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7017 ;;      Params:         0       0       0       0
  7018 ;;      Locals:         1       0       0       0
  7019 ;;      Temps:          1       0       0       0
  7020 ;;      Totals:         2       0       0       0
  7021 ;;Total ram usage:        2 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_HandleConfigByte
  7027 ;;		_HandleTelegramByte
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  7031                           	line	106
  7032                           global __ptext23
  7033                           __ptext23:	;psect for function _Read_Byte
  7034  0F2D                     psect	text23
  7035                           	file	"Eusart.c"
  7036                           	line	106
  7037                           	global	__size_of_Read_Byte
  7038                           	__size_of_Read_Byte	equ	__end_of_Read_Byte-_Read_Byte
  7039  0009                     	
  7040                           _Read_Byte:	
  7041  0F2D                     ;incstack = 0
  7042                           	opt	stack 2
  7043                           ; Regs used in _Read_Byte: [wreg]
  7044                           	line	108
  7045                           	
  7046                           i1l2113:	
  7047  0F2D                     ;Eusart.c: 108:     unsigned char Data = RCREG;
  7048                           	bcf	status, 5	;RP0=0, select bank0
  7049  0F2D  1283               	bcf	status, 6	;RP1=0, select bank0
  7050  0F2E  1303               	movf	(20),w	;volatile
  7051  0F2F  0814               	movwf	(??_Read_Byte+0)+0
  7052  0F30  00F0               	movf	(??_Read_Byte+0)+0,w
  7053  0F31  0870               	movwf	(Read_Byte@Data)
  7054  0F32  00F1               	line	110
  7055                           ;Eusart.c: 110:     return Data;
  7056                           	movf	(Read_Byte@Data),w
  7057  0F33  0871               	goto	i1l314
  7058  0F34  2F35               	
  7059                           i1l2115:	
  7060  0F35                     	line	111
  7061                           	
  7062                           i1l314:	
  7063  0F35                     	return
  7064  0F35  0008               	opt stack 0
  7065                           GLOBAL	__end_of_Read_Byte
  7066                           	__end_of_Read_Byte:
  7067  0F36                     	signat	_Read_Byte,89
  7068                           global	___latbits
  7069                           ___latbits	equ	1
  7070  0001                     	global	btemp
  7071                           	btemp set 07Eh
  7072  007E                     
  7073                           	DABS	1,126,2	;btemp
  7074                           	global	wtemp0
  7075                           	wtemp0 set btemp+0
  7076  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     56      79
    BANK1            80      0      78
    BANK2            80      0       0

Pointer List with Targets:

    SetStopTime@RelayStopTime	PTR unsigned char  size(1) Largest target is 3
		 -> Relay6StopTime(BANK1[3]), Relay5StopTime(BANK1[3]), Relay4StopTime(BANK1[3]), Relay3StopTime(BANK1[3]), 
		 -> Relay2StopTime(BANK1[3]), Relay1StopTime(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handle_Interrupts in COMMON

    _Handle_Interrupts->_HandleConfigByte
    _WriteByteFromBuffer->_Write_Byte
    _HandleTelegramByte->_Read_Byte
    _HandleConfigByte->i1_Set_Relay

Critical Paths under _main in BANK0

    _main->_Handle_Telegram
    _Say_Hello->_SendTelegram
    _Handle_Telegram->_SendTelegram
    _SendTelegram->_AddByteToBuffer
    _CheckStopTime->_Set_Relay

Critical Paths under _Handle_Interrupts in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handle_Interrupts in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Handle_Interrupts in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8191
                                             52 BANK0      4     4      0
                    _AddByteToBuffer
                      _CheckStopTime
                    _Handle_Telegram
                         _Init_Ports
                      _Init_Receiver
                        _Init_Relays
                         _Init_Timer
                   _Init_Transmitter
                          _Say_Hello
                        _Start_Timer
 ---------------------------------------------------------------------------------
 (1) _Start_Timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Say_Hello                                           25    25      0     619
                                             25 BANK0     25    25      0
                       _SendTelegram
 ---------------------------------------------------------------------------------
 (1) _Init_Transmitter                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Relays                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Receiver                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Handle_Telegram                                     27     6     21    5596
                                             25 BANK0     27     6     21
                         _Read_Relay
                       _SendTelegram
                        _SetStopTime
                          _Set_Relay
 ---------------------------------------------------------------------------------
 (2) _SetStopTime                                          6     3      3    1942
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _SendTelegram                                        24     3     21     380
                                              2 BANK0     23     2     21
                    _AddByteToBuffer
 ---------------------------------------------------------------------------------
 (3) _AddByteToBuffer                                      2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Read_Relay                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CheckStopTime                                        2     2      0    1954
                                              4 BANK0      2     2      0
                          _Set_Relay
 ---------------------------------------------------------------------------------
 (2) _Set_Relay                                            4     3      1    1954
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Handle_Interrupts                                    6     6      0     711
                                              7 COMMON     6     6      0
                   _HandleConfigByte
                 _HandleTelegramByte
                    _Timer_Interrupt
                _WriteByteFromBuffer
 ---------------------------------------------------------------------------------
 (5) _WriteByteFromBuffer                                  1     1      0      22
                                              1 COMMON     1     1      0
                         _Write_Byte
 ---------------------------------------------------------------------------------
 (6) _Write_Byte                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Timer_Interrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _HandleTelegramByte                                   3     3      0     178
                                              2 COMMON     3     3      0
                          _Read_Byte
 ---------------------------------------------------------------------------------
 (5) _HandleConfigByte                                     3     3      0     510
                                              4 COMMON     3     3      0
                          _Read_Byte
                  i1_AddByteToBuffer
                        i1_Set_Relay
 ---------------------------------------------------------------------------------
 (6) i1_Set_Relay                                          4     3      1     442
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) i1_AddByteToBuffer                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _Read_Byte                                            2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AddByteToBuffer
   _CheckStopTime
     _Set_Relay
   _Handle_Telegram
     _Read_Relay
     _SendTelegram
       _AddByteToBuffer
     _SetStopTime
     _Set_Relay
   _Init_Ports
   _Init_Receiver
   _Init_Relays
   _Init_Timer
   _Init_Transmitter
   _Say_Hello
     _SendTelegram
       _AddByteToBuffer
   _Start_Timer

 _Handle_Interrupts (ROOT)
   _HandleConfigByte
     _Read_Byte
     i1_AddByteToBuffer
     i1_Set_Relay
   _HandleTelegramByte
     _Read_Byte
   _Timer_Interrupt
   _WriteByteFromBuffer
     _Write_Byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     38      4F       3       98.8%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      AB       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      AB      10        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Jan 21 20:08:53 2019

                               pc 0002                                l51 0F4C                                l54 0F40  
                 Read_Relay@Relay 0022                                fsr 0004          __size_of_Handle_Telegram 020F  
     __end_of_WriteByteFromBuffer 1000                               l200 009C                               l201 00A1  
                             l202 022E                               l210 011E                               l203 01C6  
                             l211 0140                               l220 01EB                               l212 0162  
                             l221 01F7                               l213 0184                               l205 00DB  
                             l214 022D                               l222 0203                               l206 01A7  
                             l215 0210                               l207 00DC                               l223 022E  
                             l311 0F65                               l400 05A5                               l320 0FA7  
                             l216 01C7                               l208 01C5                               l160 0671  
                             l401 05A7                               l321 0FAC                               l217 022C  
                             l209 00FC                               l161 0696                               l410 05C7  
                             l402 05AE                               l322 0FAF                               l218 01D3  
                             l170 0755                               l403 05B7                               l411 05DE  
                             l219 01DF                               l163 0692                               l404 05B5  
                             l180 0368                               l420 07A5                               l308 0F58  
                             l164 06B9                               l405 05B6                               l181 03A9  
                             l421 07A9                               l173 0F79                               l165 06BA  
                             l406 05B8                               l182 03A9                               l422 07C4  
                             l414 07B0                               l190 0653                               l166 06BB  
                             l407 05BF                               l415 0793                               l191 0653  
                             l167 06BB                               l408 05C8                               l176 0264  
                             l416 07C6                               l409 05C6                               l177 02A5  
                             l417 0797                               l185 0602                               l178 02E6  
                             l418 079B                               l186 060C                               l194 0030  
                             l179 0327                               l419 07A1                               l187 062A  
                             l195 00A4                               l380 0563                               l188 0632  
                             l196 0038                               l381 056A                               l189 064B  
                             l197 00A3                               l390 0583                               l382 0573  
                             l198 0085                               l391 0585                               l383 0571  
                             l199 00A2                               l392 058C                               l384 0572  
                             l376 0FD4                               l385 05DE                               l393 0595  
                             l394 0593                               l386 0574                               l379 05CA  
                             l395 0594                               l387 057B                               l396 0596  
                             l388 0584                               l397 059D                               l389 0582  
                             l485 077D                               l398 05A6                               l486 076D  
                             l399 05A4                               l487 0784                               l488 078E  
                             u900 0568                               u901 0567                               u910 056F  
                             u911 056E                               u920 0579                               u921 0578  
                             u930 0580                               u931 057F                               u940 058A  
                             u941 0589                               u950 0591                               u951 0590  
                             u960 059B                               u880 0FA5                               u961 059A  
                             u881 0FA4                               u970 05A2                               u890 0783  
                             u971 05A1                               u891 0782                               u980 05AC  
                             u981 05AB                               u990 05B3                               u991 05B2  
                             fsr0 0004                               indf 0000                              S2905 0800  
                            S2909 080C  HandleTelegramByte@CommandCounter 0061                              l2001 058C  
                            l2011 05A2                              l2003 0591                              l2021 05B8  
                            l2013 05A7                              l2005 0596                              l2023 05BD  
                            l2015 05AC                              l2007 059B                              l2031 05CA  
                            l2025 05BF                              l2017 05AE                              l2009 059D  
                            l2201 0F49                              l2027 05C4                              l2019 05B3  
                            l2051 0602                              l2211 0F3F                              l2203 0F36  
                            l2029 05C9                              l2301 02DF                              l2061 0632  
                            l2053 060C                              l2045 05E2                              l2205 0F39  
                            l2311 030F                              l2303 02E0                              l2071 0796  
                            l2063 0642                              l2055 061C                              l2047 05F2  
                            l2231 0F66                              l2207 0F3B                              l2321 033F  
                            l2313 0320                              l2305 02E6                              l2081 07A1  
                            l2073 0797                              l2065 064B                              l2057 0624  
                            l2049 05FC                              l2401 0140                              l2241 0F75  
                            l2233 0F6C                              l2209 0F3D                              l2331 036F  
                            l2323 0350                              l2315 0321                              l2307 02ED  
                            l2091 07AE                              l2083 07A4                              l2075 079A  
                            l2067 0792                              l2059 062A                              l2411 018E  
                            l2403 014A                              l2243 0F76                              l2235 0F70  
                            l2251 0F4D                              l2333 0380                              l2325 0361  
                            l2309 02FE                              l2317 0327                              l2093 07AF  
                            l2085 07A5                              l2077 079B                              l2069 0793  
                            l2421 01D3                              l2413 01A6                              l2405 0162  
                            l2341 0020                              l2245 0F77                              l2237 0F73  
                            l2261 0F61                              l2253 0F54                              l2335 0391  
                            l2327 0362                              l2319 032E                              l2271 0236  
                            l2087 07A8                              l2079 07A0                              l2095 07B0  
                            l2431 01F3                              l2423 01DB                              l2407 016C  
                            l2415 01A7                              l2351 0036                              l2343 0026  
                            l2247 0F78                              l2239 0F74                              l2263 0F64  
                            l2191 0F41                              l2255 0F56                              l2337 03A2  
                            l2329 0368                              l2273 0243                              l2281 0264  
                            l2097 07C4                              l2089 07A9                              l2441 020F  
                            l2433 01F7                              l2425 01DF                              l2417 01C7  
                            l2409 0184                              l2361 005A                              l2353 0038  
                            l2345 0027                              l2249 0FB0                              l2193 0F45  
                            l2257 0F57                              l2265 0713                              l2339 03A3  
                            l2291 029F                              l2283 026B                              l2275 0250  
                            l2099 07C6                              l2435 01FF                              l2427 01E7  
                            l2419 01CF                              l2443 0210                              l2363 0064  
                            l2355 003E                              l2371 0085                              l2347 002D  
                            l2259 0F59                              l2195 0F46                              l2267 073D  
                            l2285 027C                              l2293 02A5                              l2277 025D  
                            l2269 022F                              l2437 0203                              l2429 01EB  
                            l2381 00C3                              l2373 008B                              l2365 006E  
                            l2357 0046                              l2349 0030                              l2197 0F47  
                            l2295 02AC                              l2287 028D                              l2279 025E  
                            l2439 020B                              l2391 00E4                              l2383 00C8  
                            l2375 009C                              l2367 0078                              l2359 0050  
                            l2199 0F48                              l2297 02BD                              l2289 029E  
                            l2393 00FC                              l2385 00CE                              l2369 0082  
                            l2377 00A4                              l2299 02CE                              l2395 0106  
                            l2387 00D4                              l2379 00BC                              l2571 065D  
                            l2901 0218                              l2397 011E                              l2389 00DC  
                            l2581 0671                              l2573 0663                              l2903 07B8  
                            l2399 0128                              l2591 068C                              l2583 0678  
                            l2575 0666                              l2567 0654                              l1961 0FA5  
                            l2585 067D                              l2593 0692                              l2577 066A  
                            l2569 065A                              l2907 05D2                              l1963 0FA7  
                            l1971 076D                              l2595 0696                              l2587 0682  
                            l2579 066D                              l1981 0563                              l1965 0FAC  
                            l1957 0F97                              l1973 0776                              l2597 069E  
                            l2589 0687                              l1991 0579                              l1983 0568  
                            l1959 0F9F                              l1975 077D                              l1967 0756  
                            l2599 06A0                              l1993 057B                              l1985 056A  
                            l1977 0784                              l1969 0769                              l1995 0580  
                            l1987 056F                              l1979 0562                              l1997 0585  
                            l1989 0574                              l1999 058A                              l2899 01B1  
                            u1000 05BD                              u1001 05BC                              u1010 05C4  
                            u1011 05C3                              u1020 05F2                              u1021 05F1  
                            u1030 061C                              u1031 061B                              u1040 0642  
                            u1041 0641                              u1210 0745                              u1300 02AC  
                            u1220 0236                              u1301 02AB                              u1221 0235  
                            u1310 02BD                              u1230 0243                              u1311 02BC  
                            u1231 0242                              u1400 0350                              u1320 02CE  
                            u1240 0250                              u1401 034F                              u1321 02CD  
                            u1241 024F                              u1410 0361                              u1330 02DF  
                            u1250 025D                              u1411 0360                              u1331 02DE  
                            u1315 02B9                              u1251 025C                              u1235 023F  
                            u1420 036F                              u1340 02ED                              u1260 026B  
                            u1500 00AC                              u1421 036E                              u1405 034C  
                            u1341 02EC                              u1325 02CA                              u1261 026A  
                            u1245 024C                              u1430 0380                              u1350 02FE  
                            u1270 027C                              u1510 00C3                              u1431 037F  
                            u1415 035D                              u1351 02FD                              u1335 02DB  
                            u1271 027B                              u1255 0259                              u1511 00C2  
                            u1440 0391                              u1360 030F                              u1280 028D  
                            u1520 00C8                              u1441 0390                              u1361 030E  
                            u1281 028C                              u1521 00C7                              u1450 03A2  
                            u1370 0320                              u1290 029E                              u1530 00CE  
                            u1451 03A1                              u1435 037C                              u1371 031F  
                            u1355 02FA                              u1291 029D                              u1275 0278  
                            u1531 00CD                              u1380 032E                              u1540 00D4  
                            u1460 002D                              u1700 06A8                              u1445 038D  
                            u1381 032D                              u1365 030B                              u1285 0289  
                            u1541 00D3                              u1461 002C                              u1390 033F  
                            u1550 00DA                              u1470 0036                              u1630 0678  
                            u1455 039E                              u1391 033E                              u1375 031C  
                            u1295 029A                              u1551 00D9                              u1471 0035  
                            u1631 0677                              u1480 003E                              u1640 067D  
                            u1481 003D                              u1641 067C                              u1490 008B  
                            u1650 0682                              u1395 033B                              u1491 008A  
                            u1651 0681                              u1660 0687                              u1661 0686  
                            u1670 068C                              u1671 068B                              u1680 0691  
                            u1681 0690                              u1690 069E                              u1691 069D  
                            i1l60 07FD                              i1l61 07FC                              i1l62 07FB  
                            i1l63 07FD          __end_of_Init_Transmitter 0F59                 i1_AddByteToBuffer 0F7A  
                            _main 0654                              btemp 007E                ?i1_AddByteToBuffer 0070  
                            start 000D          __size_of_AddByteToBuffer 001C                     ??_Init_Relays 0020  
             ??i1_AddByteToBuffer 0070                     _Init_Receiver 0F59                             ?_main 0070  
                   __CFG_WDTE$OFF 0000                             _ANSEL 0091                             i1l230 04E2  
                           i1l231 055D                             i1l320 0F8B                             i1l400 03FE  
                           i1l232 04F2                             i1l240 06EA                             i1l321 0F90  
                           i1l401 0400                             i1l233 051E                             i1l241 06D8  
                           i1l314 0F35                             i1l322 0F93                             i1l410 0428  
                           i1l402 0409                             i1l234 055E                             i1l242 06CF  
                           i1l403 0414                             i1l411 043F                             i1l243 06EA  
                           i1l404 0412                             i1l228 055E                             i1l244 06D3  
                           i1l405 0413                             i1l229 0548                             i1l317 0F24  
                           i1l325 0FF5                             i1l245 06FF                             i1l406 0415  
                           i1l326 0FEF                             i1l246 070A                             i1l407 041E  
                           i1l327 0FF4                             i1l247 070A                             i1l239 06C7  
                           i1l408 0429                             i1l328 0FFF                             i1l409 0427  
                           i1l329 0FFF                             i1l380 03AC                             i1l381 03B5  
                           i1l390 03D4                             i1l382 03C0                             i1l391 03D6  
                           i1l383 03BE                             i1l471 0459                             i1l392 03DF  
                           i1l384 03BF                             i1l472 04D3                             i1l480 049B  
                           i1l385 043F                             i1l393 03EA                             i1l473 04D2  
                           i1l481 04A8                             i1l394 03E8                             i1l386 03C1  
                           i1l474 04B8                             i1l482 04D3                             i1l379 042B  
                           i1l395 03E9                             i1l387 03CA                             i1l475 0463  
                           i1l396 03EB                             i1l388 03D5                             i1l476 04D1  
                           i1l397 03F4                             i1l389 03D3                             i1l477 0470  
                           i1l398 03FF                             i1l478 047F                             i1l399 03FD  
                           i1l479 049A                             _RCREG 0014                        _BufferHead 007D  
                           _TMR1H 000F                             _TMR1L 000E                             _SPBRG 0013  
                           _PORTA 0005                        _BufferTail 0063             Say_Hello@ThisTelegram 003D  
                           _TXREG 0015         __end_ofi1_AddByteToBuffer 0F94                             pclath 000A  
                           status 0003                             wtemp0 007E                  _StopRelay1OnTime 006B  
                _StopRelay2OnTime 006A                  _StopRelay3OnTime 0069                  _StopRelay4OnTime 0068  
                _StopRelay5OnTime 0067                  _StopRelay6OnTime 0066                    __CFG_MCLRE$OFF 0000  
                 __initialization 000F                        _Init_Timer 0F41                        _Init_Ports 0F66  
                    __end_of_main 06BD                        _Read_Relay 078F                    ?_Init_Receiver 0070  
                          ??_main 0054               __end_of_Init_Relays 0FD5                 ??_Handle_Telegram 004E  
                      _SendBuffer 00A0                            i1S2919 0818                     ??_SetStopTime 0023  
                          u110_20 03DB                            u110_21 03DA                            u111_20 03E4  
                          i1l2113 0F2D                            i1l2121 0F83                            u111_21 03E3  
                          i1l2115 0F35                            i1l2123 0F89                            i1l2131 03AC  
                          i1l2125 0F8B                            i1l2141 03C6                            i1l2133 03B1  
                          i1l2221 07E2                            i1l2213 07C7                            i1l2117 0F20  
                          i1l2127 0F90                            i1l2119 0F7B                            i1l2151 03DF  
                          i1l2143 03CA                            i1l2135 03B5                            i1l2223 07E9  
                          i1l2215 07D3                            u112_20 03F0                            u120_20 07F8  
                          i1l2161 03F9                            u112_21 03EF                            i1l2153 03E4  
                          i1l2145 03CF                            i1l2137 03BA                            i1l2129 03AB  
                          u120_21 07F7                            i1l2225 07EB                            i1l2217 07DA  
                          i1l2171 0415                            i1l2163 0400                            i1l2155 03EB  
                          i1l2147 03D6                            i1l2139 03C1                            i1l2227 07F1  
                          i1l2219 07DC                            i1l2173 041A                            i1l2165 0405  
                          i1l2157 03F0                            i1l2149 03DB                            i1l2181 042B  
                          i1l2501 053E                            i1l2229 07F8                            i1l2175 041E  
                          i1l2167 0409                            i1l2159 03F4                            i1l2503 0543  
                          u105_20 0F89                            u113_20 03F9                            u105_21 0F88  
                          i1l2177 0423                            i1l2169 040E                            u113_21 03F8  
                          i1l2505 0546                            i1l2521 0FEF                            i1l2513 0FD5  
                          i1l2601 06BD                            i1l2179 042A                            i1l2507 0548  
                          i1l2531 044C                            i1l2515 0FDD                            i1l2523 0FF5  
                          i1l2611 06D3                            i1l2603 06C3                            i1l2461 04E9  
                          i1l2453 04D4                            i1l2541 0477                            i1l2533 0459  
                          i1l2525 0FFB                            i1l2517 0FE5                            i1l2621 06F5  
                          i1l2613 06D7                            i1l2605 06C7                            i1l2471 04FD  
                          i1l2463 04EA                            i1l2455 04DA                            i1l2551 0495  
                          i1l2543 047D                            i1l2535 0462                            i1l2527 0440  
                          i1l2519 0FED                            i1l2631 0705                            i1l2623 06F6  
                          i1l2607 06CE                            i1l2615 06D8                            u114_20 0405  
                          u106_20 03B1                            u114_21 0404                            u106_21 03B0  
                          i1l2481 0511                            i1l2473 0501                            i1l2465 04ED  
                          i1l2457 04E1                            i1l2553 049B                            i1l2545 047F  
                          i1l2537 0463                            i1l2561 04B8                            i1l2529 0446  
                          i1l2633 0706                            i1l2625 06F8                            i1l2617 06EE  
                          i1l2609 06CF                            i1l2491 0525                            i1l2483 0515  
                          i1l2475 0505                            i1l2467 04F2                            i1l2459 04E2  
                          i1l2555 04A8                            i1l2547 0487                            i1l2539 0470  
                          i1l2627 06FB                            i1l2619 06EF                            i1l2493 052A  
                          i1l2485 0519                            i1l2477 0509                            i1l2469 04F9  
                          i1l2557 04AE                            i1l2549 048B                            i1l2629 06FF  
                          i1l2495 052F                            i1l2487 051E                            i1l2479 050D  
                          i1l2559 04B7                            i1l2911 06E2                            u115_20 040E  
                          u107_20 03BA                            u115_21 040D                            u107_21 03B9  
                          i1l2497 0534                            i1l2489 0521                            i1l2913 04C0  
                          i1l2915 0552                            i1l2499 0539                            i1l2917 0433  
                          u116_20 041A                            u108_20 03C6                            u116_21 0419  
                          u108_21 03C5                            u117_20 0423                            u109_20 03CF  
                          u117_21 0422                            u109_21 03CE                            u118_20 07DA  
                          u118_21 07D9                            u119_20 07E9                            u119_21 07E8  
                          u160_20 044C                            u160_21 044B                            u161_20 0461  
                          u161_21 0460                            u162_20 0495                            u162_21 0494  
                          u171_20 06C3                            u171_21 06C2                            u156_20 04E0  
                          u172_20 06CD                            u156_21 04DF                            u172_21 06CC  
                          u157_20 0FDD                            u173_20 06EE                            u157_21 0FDC  
                          u173_21 06ED                            u158_20 0FED                            u174_20 0705  
                          u158_21 0FEC                            u174_21 0704                            u159_20 0FFB  
                          u159_21 0FFA                __size_of_Read_Byte 0009                __size_of_Say_Hello 0043  
     HandleConfigByte@ByteCounter 0064                __size_of_Set_Relay 0080                 ??_AddByteToBuffer 0020  
               ?_HandleConfigByte 0070                ??_HandleConfigByte 0074                            saved_w 007E  
                   ?_SendTelegram 0022            __size_of_CheckStopTime 017B                _HandleTelegramByte 0440  
      __size_ofi1_AddByteToBuffer 001A                      ?i1_Set_Relay 0070           __end_of__initialization 001D  
             ?_HandleTelegramByte 0070               __end_of_SetStopTime 0654                    __pcstackCOMMON 0070  
                     ?_Init_Timer 0070                   ??_Init_Receiver 0020                       ?_Init_Ports 0070  
                     _Init_Relays 0FB0                       ?_Read_Relay 0070                        _Write_Byte 0F1F  
                   ??_Start_Timer 0020              HandleConfigByte@Byte 0076                       _CurrentMode 0065  
            ??_HandleTelegramByte 0072                 __end_of_Read_Byte 0F36                    ??_SendTelegram 0037  
                  Write_Byte@Data 0070                 __end_of_Say_Hello 0756                 __end_of_Set_Relay 05DF  
                      __pbssBANK0 0058                        __pbssBANK1 00A0                 ?_Init_Transmitter 0070  
              ??_Init_Transmitter 0020                        __pmaintext 0654                     _CheckStopTime 022F  
                      __pintentry 0004                    Set_Relay@Relay 0023                    Set_Relay@State 0020  
        __size_of_Timer_Interrupt 0037               __end_of_Start_Timer 0F41      __size_of_WriteByteFromBuffer 002B  
             __size_of_Init_Timer 000C               __size_of_Init_Ports 0014               __size_of_Read_Relay 0038  
                     _SetStopTime 05DF             i1AddByteToBuffer@Byte 0071                    ?_CheckStopTime 0070  
                     ?_Write_Byte 0070                   _Handle_Telegram 0020                           __ptext1 0F36  
                         __ptext2 0713                           __ptext3 0F4D                           __ptext4 0F41  
                         __ptext5 0FB0                           __ptext6 0F59                           __ptext7 0F66  
                         __ptext8 0020                           __ptext9 05DF                         _T1CONbits 0010  
     Handle_Telegram@ThisTelegram 0039                           clrloop0 0F26              end_of_initialization 001D  
            __size_ofi1_Set_Relay 0096                   _AddByteToBuffer 0F94              __end_of_SendTelegram 078F  
                       _RCSTAbits 0017                     Read_Byte@Data 0071                       _Start_Timer 0F36  
          SendTelegram@MyTelegram 0022                         _PORTAbits 0005                         _PORTCbits 0007  
                    _Counter_1sec 005A                 ??_Timer_Interrupt 0070                         _TRISAbits 0085  
                       _TRISCbits 0087         __size_of_HandleConfigByte 008B               __size_of_Write_Byte 0006  
                       _TXSTAbits 0016                   ??_CheckStopTime 0024           __end_of_Handle_Telegram 022F  
                    ??_Init_Timer 0020                      ??_Init_Ports 0020                      ?_Init_Relays 0070  
                    ??_Read_Relay 0020                       _BAUDCTLbits 0011               start_initialization 000F  
                       _Read_Byte 0F2D     HandleTelegramByte@ByteCounter 0062           __end_of_AddByteToBuffer 0FB0  
              __end_of_Init_Timer 0F4D                __end_of_Init_Ports 0F7A                __end_of_Read_Relay 07C7  
                       _Say_Hello 0713                         _Set_Relay 055F               _WriteByteFromBuffer 0FD5  
           __end_of_Init_Receiver 0F66         __size_of_Init_Transmitter 000C                    _Relay1StopTime 006C  
               _Handle_Interrupts 06BD                    _Relay2StopTime 00EB                    _Relay3StopTime 00E8  
     __size_of_HandleTelegramByte 0094                ?_Handle_Interrupts 0070                    _Relay4StopTime 00E5  
                     __pbssCOMMON 007D                         ___latbits 0001                _Stop_Ignition_Flag 00DD  
                  _Relay5StopTime 00E2                     __pcstackBANK0 0020                        ?_Read_Byte 0070  
                  _Relay6StopTime 00DF              ?_WriteByteFromBuffer 0070                  i1Set_Relay@Relay 0073  
             ??_Handle_Interrupts 0077                  i1Set_Relay@State 0070                      ?_SetStopTime 0020  
               _TelegramReadyFlag 005E                        ?_Say_Hello 0070             __size_of_SendTelegram 0039  
                      ?_Set_Relay 0020                  ?_Handle_Telegram 0039                      ??_Write_Byte 0070  
       __end_of_Handle_Interrupts 0713                         __pswtext1 0800                         __pswtext2 080C  
                       __pswtext3 0818            Handle_Interrupts@dummy 007C             ??_WriteByteFromBuffer 0071  
                    _SendTelegram 0756                  ?_AddByteToBuffer 0070                  _HandleConfigByte 04D4  
              __end_of_Write_Byte 0F25                 interrupt_function 0004                          _IOCAbits 0096  
                       clear_ram0 0F25                          _PIE1bits 008C                          _PIR1bits 000C  
                 _Timer_Interrupt 07C7                      ?_Start_Timer 0070              __size_of_Init_Relays 0025  
                     ??_Read_Byte 0070                     ??i1_Set_Relay 0071                       ??_Say_Hello 0039  
                     ??_Set_Relay 0021        SendTelegram@CommandCounter 0038                          _Telegram 00C8  
                      _CMCON0bits 0019        __size_of_Handle_Interrupts 0056                  _Init_Transmitter 0F4D  
                        __ptext10 0756                          __ptext11 0F94                          __ptext20 04D4  
                        __ptext12 078F                          __ptext21 03AA                          __ptext13 022F  
                        __ptext22 0F7A                          __ptext14 055F                          __ptext23 0F2D  
                        __ptext15 06BD                          __ptext16 0FD5                          __ptext17 0F1F  
                        __ptext18 07C7                          __ptext19 0440                     __size_of_main 0069  
            __size_of_SetStopTime 0075               __end_ofi1_Set_Relay 0440           __end_of_Timer_Interrupt 07FE  
           __end_of_CheckStopTime 03AA              Handle_Telegram@error 0052          SetStopTime@RelayStopTime 0025  
            Handle_Telegram@state 0053          HandleTelegramByte@Lenght 0060                        _INTCONbits 000B  
                        intlevel1 0000               AddByteToBuffer@Byte 0021              SetStopTime@Time100ms 0022  
            SetStopTime@Time10sec 0020                        _OSCCONbits 008F          __end_of_HandleConfigByte 055F  
      __end_of_HandleTelegramByte 04D4              __size_of_Start_Timer 000B               SetStopTime@Time1sec 0021  
          HandleTelegramByte@Byte 0074                       i1_Set_Relay 03AA                     _Counter_100ms 005C  
              __CFG_FOSC$INTOSCIO 0000                     _Counter_10sec 0058            __size_of_Init_Receiver 000D  
                ?_Timer_Interrupt 0070  
